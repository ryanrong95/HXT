@{
    ViewBag.Title = "付汇详情";
    Layout = "~/Views/Shared/_LayoutCenter.cshtml";
    ViewBag.navid = "MyApplies";
}
<style>
    .el-message {
        top: 250px;
        min-width: 150px;
    }

    .el-message__content {
        font-size: 16px;
    }

    .el-message .el-icon-error {
        font-size: 16px;
    }
</style>
<div id="applyinfo" v-cloak class="center_right backshow fl applyinfo">
    <div class="breaklist">
        <span class="fl first_title">付汇详情</span>
        <span class="fl second_title" v-on:click="history.back(-1)">返回</span>
    </div>
    <div class="content">
        @*产品明细*@
        <div class="products">
            <table border="0" cellspacing="0" cellpadding="0" style="word-wrap:break-word; word-break:break-all;">
                <tr>
                    <th class="first_th" style="width:22px;">#</th>
                    <th style="width:79px;">订单编号</th>
                    <th style="width:100px;">币种</th>
                    <th style="width:100px;">报关总价</th>
                    <th style="width:100px;">付汇金额</th>
                </tr>
                <tr v-for="(item,index) in items">
                    <td>{{index+1}}</td>
                    <td>{{item.OrderID}}</td>
                    <td>{{item.Currency}}</td>
                    <td>{{toFixed(2,item.DeclarePrice)}}</td>
                    <td>{{item.Amount}}</td>
                </tr>
            </table>
        </div>
        @*付款信息*@
        <div class="information">
            <span class="name mb16">付款信息</span>
            <div class="overhide">
                <div class="fl  first">
                    <span>供应商公司全称(英文)：{{form.SupplierEnglishName}}</span>
                    <span>供应商银行名称(英文)：{{form.BankName}}</span>
                    <span>银行地址：{{form.BankAddress}}</span>
                    <span>银行账号：{{form.BankAccount}}</span>
                    <span>银行代码：{{form.BankCode}}</span>
                    <span>付款方式：{{form.PaymentType}}</span>
                    <span>付汇日期：{{form.PayDate}}</span>
                    <span>其他相关资料：{{form.Others}}</span>
                    <span>备注：{{form.Summary}}</span>
                </div>
                <div class="fl">
                    <span>币种：{{form.Currency}}</span>
                    <span>汇率：{{form.ExchangeRateType}}&nbsp; <span class="tips">{{form.ExchangeRate}}</span></span>
                    <span>应付金额：<span class="tips">{{toFixed(2,form.TotalMoney)}} 元（人民币）</span></span><br />
                    <span>请于{{form.SettlementDate}}前向我司以下账号汇款：</span>
                    <span>开户行：{{form.Account}}</span>
                    <span>开户名：{{form.AgentName}}</span>
                    <span>账&nbsp;&nbsp;&nbsp;号：{{form.AccountID}}</span>
                </div>
            </div>
        </div>
        <div class="files overhide">
            <div class="invoice fl">
                <div class="overhide">
                    <span class="name fl"><i class="icon_hui_fujian mr6"></i>合同发票(INVOICE LIST)</span>
                </div>
                <a class="fl no_upload_tips" v-if="isVisiableUpload">提示：未上传</a>
                <div class="PI_files overhide mt16" v-if="!isVisiableUpload">
                    <ul class="fl mr80">
                        <li class="overhide" v-for="item in PIFiles">
                            <i class="icon_wenjian fl mr10"></i>
                            <span class="fl">
                                <span class="file_name">{{item.FileName}}</span>
                                <a :href="item.URL" target="_blank">预览</a>
                            </span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="AgentProxy fl">
                <div class="overhide">
                    <span class="name fl"><i class="icon_hui_fujian mr6"></i>付汇委托书</span>
                </div>
                <a class="fl no_upload_tips" v-if="fileUrl==null">提示：未上传</a>
                <div class="AgentProxyFile mt16">
                    <div v-if="fileUrl!=null">
                        <i class="icon_wenjian fl mr6"></i>
                        <span class="fl">
                            <span class="file_name">{{fileName}} ({{fileStatus}})</span>
                            <a :href="fileUrl" target="_blank">预览</a>
                        </span>
                    </div>
                </div>
                <div v-if="form.IsUpload" class="AgentProxy_btn overhide mb8">
                    <div class="fl">
                        <el-button v-on:click="download_file" class="el-icon-ump-xiazai">导出</el-button>
                        <a id="exportInfoForm" style="display:none" download><span id="ex-li" style="display:none"></span></a>
                    </div>
                    <div class="fl">
                        <el-upload action="/PayExchanges/UploadOrderFile"
                                   :http-request="httpRequest"
                                   :show-file-list="false"
                                   accept="image/jpg, image/bmp, image/jpeg, image/gif, image/png, application/pdf">
                            <el-button class="el-icon-ump-upload" size="small">上传</el-button>
                        </el-upload>
                    </div>
                </div>
                <div v-if="form.IsUpload" class="file_tip">仅限图片或PDF文件，且文件不超过3M</div>
            </div>
        </div>
    </div>
</div>
<script>
    var applyinfo = new Vue({
        el: "#applyinfo",
        data: function () {
            return {
                items: @Html.Raw(Json.Encode(Model.ApplyItems)),
                form: @Html.Raw(Json.Encode(Model)),
                PIFiles: @Html.Raw(Json.Encode(Model.PIFiles)),
                isVisiableUpload: false,
                fileUrl: "",
                URL: "",
                fileName: "",
                fileFormat: "",
                fileStatus: "未审核",
            }
        },
        mounted: function () {
            this.$nextTick(function() {
                if (applyinfo.PIFiles.length> 0){
                    applyinfo.isVisiableUpload = false;
                } else {
                    applyinfo.isVisiableUpload = true;
                }
                if (applyinfo.form.AgentTrustInstrumentURL != "") {
                    applyinfo.fileUrl = applyinfo.form.AgentTrustInstrumentURL;
                    applyinfo.fileName = applyinfo.form.AgentTrustInstrumentName;
                }
                if (!this.form.IsUpload) {
                    this.fileStatus = "已审核";
                }
            })
        },
        methods: {
            httpRequest: function (options) {
                var that = this;
                var file = options.file;
                var size = file.size / 1024;
                var imgArr = ["image/jpg", "image/bmp", "image/jpeg", "image/gif", "image/png"];
                let config = {
                    headers: { 'Content-Type': 'multipart/form-data' }
                };
                if (imgArr.indexOf(file.type) > -1 && size > 500) { //大于500kb的图片压缩
                    photoCompress(file, { quality: 0.8 }, function (base64Codes) {
                        var bl = convertBase64UrlToBlob(base64Codes);
                        var form = new FormData(); // FormData 对象
                        form.append("file", bl, "file_" + Date.parse(new Date()) + ".jpg"); // 文件对象
                        //添加请求头
                        axios.post('/Orders/UploadOrderFile', form, config)
                            .then(function (response) {
                                var file = JSON.parse(response.data.data);
                                if (response.data.type != "error") {
                                    that.fileUrl = file.fullURL;
                                    that.URL = file.URL;
                                    that.fileName = file.name;
                                    that.fileFormat = file.fileFormat;
                                    that.saveFile();
                                }
                            });
                    });
                } else if (imgArr.indexOf(file.type) <= -1 && size > 1024*3) {
                    that.onAlert("error", "上传的文件大小不能大于3M");
                    return;
                } else {
                    var form = new FormData(); // FormData 对象
                    form.append("file", file); // 文件对象
                    //添加请求头
                    axios.post('/Orders/UploadOrderFile', form, config)
                        .then(function (response) {
                            var file = JSON.parse(response.data.data);
                            if (response.data.type != "error") {
                                that.fileUrl = file.fullURL;
                                that.URL = file.URL;
                                that.fileName = file.name;
                                that.fileFormat = file.fileFormat;
                                that.saveFile();
                            }
                        });
                }
            },
            saveFile: function () {
                var that = this;
                axios({
                    url: "/PayExchanges/SavePayProxy",
                    method: "post",
                    data: {
                        id: that.form.ID,
                        url: that.URL,
                        filename: that.fileName,
                        ext: that.fileFormat,
                    },
                }).then(function (response) {
                    that.onAlert(response.data.type, response.data.msg);
                }).catch(function (error) {
                    that.onAlert("warning", error);
                });
            },
            download_file: function () {
                axios({
                    url: "/PayExchanges/DownloadPayProxy",
                    method: "post",
                    data: {
                        id: this.form.ID,
                    },
                }).then(function (response) {
                    if (response.data.type == "error") {
                        applyinfo.onAlert(response.data.type, response.data.msg);
                    } else {
                        $('#exportInfoForm').attr("href", response.data.data);
                        $('#exportInfoForm').attr("target", "_blank");
                        $('#ex-li').trigger("click");
                    }
                }).catch(function (error) {
                    applyinfo.onAlert("warning", error);
                });
            },
            //返回我的付汇申请
            return_MyApplylies: function () {
                location.href = "/PayExchanges/MyApplies";
            },
            toFixed: function (num, val) {
                return val.toFixed(num);
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type,
                });
            },
        }
    });
</script>

