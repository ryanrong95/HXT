
<template id="mypartialproduct" v-cloak>
    <div class="mypartialproduct">
        <el-checkbox v-model="allChecked" v-on:change="allCheck">全选</el-checkbox>
        <el-button type="primary" class="join" v-on:click="onClickMe">
            加  入
        </el-button>
        <el-table style="width: 100%;"
                  :data="dataList.slice((pageIndex-1)*pageSize,pageIndex*pageSize)">
            <el-table-column width="55">
                <template slot-scope="scope">
                    <el-checkbox v-model="scope.row.IsCheck" v-on:change="singlecheck(scope.row)"></el-checkbox>
                </template>
            </el-table-column>
            <el-table-column label="序号" type="index" width="48">
            </el-table-column>
            <el-table-column label="品名" prop="Name">
            </el-table-column>
            <el-table-column label="型号" prop="Model">
            </el-table-column>
            <el-table-column label="品牌" prop="Manufacturer">
            </el-table-column>
            <el-table-column label="批号" prop="Batch">
            </el-table-column>
        </el-table>
        <div class="overhide">
            <el-pagination class="fr" style="margin-top:20px;margin-bottom:30px" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="pageIndex"
                           :page-sizes="[5, 10, 20, 40]"
                           :page-size="pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="dataList.length">
            </el-pagination>
        </div>
    </div>
</template>
<script>
    Vue.component(
        'myproduct',
        {
            template: "#mypartialproduct",
            props: ["message"],
            data: function () {
                return {
                    pageIndex: 1, //初始页
                    pageSize: 10,    //每页的数据
                    userList: @Html.Raw(Json.Encode(Model)),
                    dataList:@Html.Raw(Json.Encode(Model)),  //表格真实数据
                    allChecked: false,
                    message: "",
                }
            },
            watch: {
                //当前页
                pageIndex: function (value) {
                    this.isAllcheck();
                },
                pageSize: function (value) {
                    this.isAllcheck();
                },
            },
            methods: {
                onClickMe: function () {
                    var list = this.userList.filter(function (value) {
                        if (value.IsCheck) {
                            return value;
                        }

                    });
                    this.$emit('child-say', list);
                },
                singlecheck: function (row) {
                    this.userList.filter(function (data) {
                        if (data.ID == row.ID) {
                            data.IsCheck = row.IsCheck;
                        }
                    });
                    this.isAllcheck();
                },
                allCheck: function () {
                    var that = this;
                    this.userList.forEach(function (val, index) {
                        if (index >= (that.pageIndex - 1) * that.pageSize && index < (that.pageIndex * that.pageSize)) {
                            val.IsCheck = that.allChecked;
                        }
                    });
                    this.dataList.forEach(function (val, index) {
                        if (index >= (that.pageIndex - 1) * that.pageSize && index < (that.pageIndex * that.pageSize)) {
                            val.IsCheck = that.allChecked;
                        }
                    });
                },
                //是否全选
                isAllcheck: function () {
                    var that = this;
                    var flag = true;
                    this.dataList.forEach(function (val, index) {
                        if (index >= (that.pageIndex - 1) * that.pageSize && index < (that.pageIndex * that.pageSize)) {
                            if (!val.IsCheck) {
                                flag = false;
                            }
                        }
                    });
                    that.allChecked = flag;
                },
                // 初始页currentPage、初始每页数据数pagesize和数据data
                handleSizeChange: function (size) {
                    this.pageSize = size;
                },
                handleCurrentChange: function (currentPage) {
                    this.pageIndex = currentPage;
                },
            }
        });
</script>



