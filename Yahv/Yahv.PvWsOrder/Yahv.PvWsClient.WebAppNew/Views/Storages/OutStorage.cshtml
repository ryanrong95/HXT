@{
    ViewBag.title = "出库单";
}
<div id="vInStorage" v-cloak class="tab_content">
    <div class="query_wrap clearfix">
        <div class="clearfix">
            <div class="fl">
                <div class="fl">
                    <span class="title label-style">型号:</span>
                    <el-input class="input-style" style="width:180px;" size="mini" v-model="PartNumber" @@keyup.enter.native="queryData"></el-input>
                </div>
                <div class="fl ml11">
                    <span class="title label-style">订单号:</span>
                    <el-input class="input-style" style="width:200px;" size="mini" v-model="OrderID" @@keyup.enter.native="queryData"></el-input>
                </div>
                <div class="fl ml11">
                    <span class="title label-style-5word">收货方名称:</span>
                    <el-input style="width: 180px;" size="mini" v-model="ConsigneeName" @@keyup.enter.native="queryData"></el-input>
                </div>
            </div>

            <div class="fr">
                <button v-on:click="queryData" class="btn btn1">查询</button>
                <button v-on:click="clearData" class="btn btn2 ml14">重置</button>
            </div>
        </div>
        <div class="clearfix mt20">
            <div class="fl">
                <span class="title label-style">库房:</span>
                <el-select class="mr16 input-style" size="small" v-model="WarehouseID" filterable clearable>
                    <el-option v-for="item in WareHouseOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="fl ml11">
                <span class="title label-style">订单类型:</span>
                <el-select class="mr16 input-style" size="small" v-model="OrderType" filterable clearable>
                    <el-option v-for="item in OrderTypeOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="fl ml11">
                <span class="title label-style-5word">出库时间:</span>
                <date-picker-daterange ref="datePickerDaterange" class="fl"></date-picker-daterange>
            </div>
        </div>
        <div class="clearfix mt20">
            <button class="btn btn1" v-on:click="importExcel">导出</button>
            <a id="exportInfoForm" style="display:none" download><span id="ex-li" style="display:none"></span></a>
        </div>
    </div>
    <div class="tb_wrap" v-loading="loading">
        <table border="0" cellspacing="0" cellpadding="0" class="common_tb1 mt30">
            <tr>
                <th width="36px"><el-checkbox v-model="allChecked" v-on:change="allCheck"></el-checkbox></th>
                <th>出库时间</th>
                <th>出库单号</th>
                <th>型号</th>
                <th>品牌</th>
                <th>币种</th>
                <th>单价</th>
                <th>数量</th>
                <th>金额</th>
                <th>库房</th>
                <th>订单号</th>
                <th>订单类型</th>
            </tr>
            <tr v-for="(item,index) in indexData.dataList">
                <td><el-checkbox v-model="item.IsChecked"></el-checkbox></td>
                <td>{{item.CreateDateDateString}}</td>
                <td>{{item.ID}}</td>
                <td>{{item.PartNumber}}</td>
                <td>{{item.Manufacturer}}</td>
                <td>{{item.Currency}}</td>
                <td>{{item.UnitPrice}}</td>
                <td>{{item.Quantity}}</td>
                <td>{{item.TotalPrice}}</td>
                <td>{{item.WareHouseName}}</td>
                <td>{{item.OrderID}}</td>
                <td>{{item.OrderType}}</td>
            </tr>
            <tr v-if="indexData.dataList.length==0"><td colspan="12">暂无数据</td></tr>
        </table>
        <div class="foot">
            <el-pagination class="fr" style="margin-top:20px;" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="indexData.pageIndex"
                           :page-sizes="[5, 10, 20, 40]"
                           :page-size="indexData.pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="indexData.total">
            </el-pagination>
        </div>
    </div>
</div>
<style>
    .label-style-2word {
        width: 32px;
        float: left;
        margin-top: 5px;
    }

    .label-style-5word {
        width: 70px;
        float: left;
        margin-top: 5px;
    }

    .label-style {
        width: 60px;
        float: left;
        margin-top: 5px;
    }

    .input-style {
        width: 180px !important;
    }
</style>
@{Html.RenderAction("_DatePickerDateRange", "Home");}
<script>
    var vInStorage = new Vue({
        el: "#vInStorage",
        data: function () {
            return {
                indexData: {
                    pageIndex: 1, //初始页
                    pageSize: 10,    //每页的数据
                    total: 0,
                    scrollTop: 0, //滚动条位置
                    dataList:[],
                },
                loading: true,
                dataValue: "",
                startDate: "",
                endDate: "",
                OrderID: "",
                PartNumber:"",
                WarehouseID: "",
                OrderType:"",
                ConsigneeName:"",
                WareHouseOptions: [],
                OrderTypeOptions: [],
                allChecked: false,//全选按钮
            }
        },
        mounted: function () {
            this.WareHouseOptions = @Html.Raw(Json.Encode(@ViewBag.WareHouseOptions));
            this.OrderTypeOptions = @Html.Raw(Json.Encode(@ViewBag.OrderTypeOptions));
            this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('7天');
            this.queryData(); // this.paging();
        },
        methods: {
            //导出excel
            importExcel: function () {
                var that = this;
                var ids = [];
                var list = this.indexData.dataList;
                for (var i = 0; i < list.length; i++) {
                    if (list[i].IsChecked) {
                        ids.push(list[i].ID);
                    }
                }
                if (ids.length == 0) {
                    this.onAlert("error", "请选择出库单！");
                    return;
                }
                axios({
                    url: "/Files/ExportOutstorage",
                    method: "post",
                    data: {
                        ids: JSON.stringify(ids)
                    }
                }).then(function (response) {
                    if (response.data.type == "error") {
                        that.onAlert(response.data.type, response.data.msg);
                    } else {
                        $('#exportInfoForm').attr("href", response.data.data);
                        $('#exportInfoForm').attr("target", "_blank");
                        $('#ex-li').trigger("click");
                    }
                }).catch(function (error) {
                    that.onAlert("warning", error);
                });
            },
            allCheck: function () {
                var that = this;
                this.indexData.dataList.forEach(function (val, index) {
                    val.IsChecked = that.allChecked;
                });
            },
            //查询数据
            queryData: function () {
                this.dataValue = this.$refs.datePickerDaterange.getDataValue();
                if (this.dataValue != "" && this.dataValue != null) {
                    var start = new Date(this.dataValue[0]);
                    var startDate = start.getFullYear() + '-' + (start.getMonth() + 1) + '-' + start.getDate();
                    var end = new Date(this.dataValue[1]);
                    var endDate = end.getFullYear() + '-' + (end.getMonth() + 1) + '-' + end.getDate();
                    this.startDate = startDate;
                    this.endDate = endDate;
                } else {
                    this.startDate = "";
                    this.endDate = "";
                }
                this.indexData.pageIndex = 1;
                this.paging();
            },
            //重置数据
            clearData: function () {
                this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('7天');
                // this.dataValue = "";
                this.startDate = "";
                this.endDate = "";
                this.OrderID = "";
                this.PartNumber = "";
                this.WarehouseID = "";
                this.OrderType = "";
                this.ConsigneeName = "";
                this.indexData.pageIndex = 1;
                this.indexData.pageSize = 10;
                this.queryData(); // this.paging();
            },
            // 初始页currentPage、初始每页数据数pagesize和数据data
            handleSizeChange: function (size) {
                this.indexData.pageSize = size;
                this.paging();
            },
            handleCurrentChange: function (currentPage) {
                this.indexData.pageIndex = currentPage
                this.paging();
            },
            paging: function () {
                var that = this;
                that.loading = true;
                axios({
                    url: "/Storages/GetOutStorage",
                    method: "post",
                    data: {
                        page: this.indexData.pageIndex,
                        rows: this.indexData.pageSize,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        PartNumber: this.PartNumber,
                        OrderID: this.OrderID,
                        OrderType: this.OrderType,
                        WarehouseID: this.WarehouseID,
                        ConsigneeName: this.ConsigneeName,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [function (data) {
                        var ret = ''
                        for (var it in data) {
                            ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'
                        }
                        return ret;
                    }],
                }).then(function (response) {
                    that.allChecked = false;
                    var data = JSON.parse(response.data.data);
                    that.indexData.dataList = data.list;
                    that.indexData.total = data.total;
                    that.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type
                });
            },
        }
    });
</script>
