@{
    ViewBag.subTitle = "仓位租赁订单";
}
<link href="~/Content/css/tab.css" rel="stylesheet" />
<!-- tab start-->
<div class="clearfix tab_switch">
    <ul>
        <li>
            <a href="/Orders/ReceivedList">收货订单<i></i></a>
        </li>
        @*<li>
            <a href="/Orders/ReceivedApplyList">代付款申请<i></i></a>
        </li>*@
        <li>
            <a href="/Orders/DeliveryList">发货订单<i></i></a>
        </li>
        @*<li>
            <a href="/Orders/DeliveryApplyList">代收款申请<i></i></a>
        </li>*@
        <li class="active">
            <a href="/LsOrders/List">仓位租赁订单<i></i></a>
        </li>
    </ul>
</div>
<!-- tab end -->
<div id="vLsOrderList" v-cloak class="tab_content">
    <div class="query_wrap clearfix" ref="viewBox1" v-on:scroll="ss('viewBox1')">
        <div class="clearfix">
            <div class="fl">
                <span class="title">订单号:</span>
                <el-input style="width:180px;" size="mini" v-model="orderID" @@keyup.enter.native="queryData"></el-input>
            </div>
            <div class="fr">
                <button v-on:click="queryData" class="btn btn1">查询</button>
                <button v-on:click="clearData" class="btn btn2 ml12">重置</button>
            </div>
        </div>
    </div>
    <div class="tb_wrap" v-loading="loading">
        <table class="common_tb1 mt30">
            <tr>
                <th width="36px">序号</th>
                <th>订单号</th>
                <th>开始日期</th>
                <th>结束日期</th>
                <th>申请日期</th>
                <th>库位类型</th>
                <th>库位编号</th>
                <th>数量</th>
                <th>租期</th>
                <th>单价</th>
                <th>总金额</th>
                <th>订单状态</th>
                <th>操作</th>
            </tr>
            <tr v-for="(item,index) in indexData.dataList">
                <td>{{(indexData.pageIndex-1)*indexData.pageSize+index+1}}</td>
                <td>{{item.ID}}</td>
                <td>{{item.StartDate}}</td>
                <td>{{item.EndDate}}</td>
                <td>{{item.CreateDate}}</td>
                <td>{{item.SpecID}}</td>
                <td></td>
                <td>{{item.Quantity}}</td>
                <td>{{item.Month}}</td>
                <td>{{item.UnitPrice}}</td>
                <td>{{item.TotalPrice}}</td>
                <td>{{item.Status}}</td>
                <td class="operate">
                    @*<a v-if="item.IsUpload">上传合同</a>*@
                    <a v-on:click="edit(item.ID)">查看</a>
                    <a v-if="item.IsCancel" v-on:click="cancel(item.ItemID)">取消</a>
                    <a v-if="item.Inherit" v-on:click="Renewal(item.ID)">续租</a>
                </td>
            </tr>
            <tr v-if="indexData.dataList.length==0"><td colspan="12">暂无数据</td></tr>
        </table>
        <div class="foot">
            <el-pagination class="fr" style="margin-top:20px;" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="indexData.pageIndex"
                           :page-sizes="[5, 10, 20, 40]"
                           :page-size="indexData.pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="indexData.total">
            </el-pagination>
        </div>
    </div>
</div>
<script>
    var vLsOrderList = new Vue({
        el: "#vLsOrderList",
        data: function () {
            return {
                indexData: {
                    pageIndex: 1, //初始页
                    pageSize: 10,    //每页的数据
                    total: 0,
                    scrollTop: 0, //滚动条位置
                    dataList:[]
                },
                loading: false,
                orderID: ""
            }
        },
        mounted: function () {
            this.init();
        },
        methods: {
            cancel: function (id) {
                var that = this;
                this.$confirm('是否取消订单?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning',
                    lockScroll: false
                }).then(function () {
                    axios({
                        url: "/LsOrders/LsOrderCancel",
                        method: "post",
                        data: {
                            ItemID: id
                        }
                    }).then(function (response) {
                        that.paging();
                        var data = response.data;
                        that.onAlert(data.type, data.msg);
                    }).catch(function (error) {
                        that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                    });
                }).catch(function () {
                });
            },
            init: function () {
                var that = this;
                var userJsonStr = sessionStorage.getItem('vLsOrderList');
                var userEntity = JSON.parse(userJsonStr);
                if (userEntity == null) {
                    that.paging();
                } else {
                    that.indexData = userEntity;
                    that.paging();
                    that.$nextTick(function() {
                        that.$refs['viewBox1'].scrollTop = that.indexData.scrollTop;
                    });
                    sessionStorage.removeItem('vLsOrderList');
                }
            },
            ss: function (ref) {
                // 监听这个dom的scroll事件
                var that = this;
                this.$refs[ref].addEventListener('scroll',
                    function() {
                        that.indexData.scrollTop = that.$refs[ref].scrollTop;
                    },
                    false);
            },
            edit: function (id) {
                commonSkipUrl(id, '/LsOrders/Detail',"/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                   + "/" + "@(ViewContext.RouteData.Values["action"].ToString())");
            },
            Renewal: function (id) {
                commonSkipUrl(id, '/LsOrders/Renewal',"/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                    + "/" + "@(ViewContext.RouteData.Values["action"].ToString())");
            },
            //查询数据
            queryData: function () {
                this.indexData.pageIndex = 1;
                this.paging();
            },
            //重置数据
            clearData: function () {
                this.orderID = "";
                this.indexData.pageIndex = 1;
                this.indexData.pageSize = 10;
                this.paging();
            },
            // 初始页currentPage、初始每页数据数pagesize和数据data
            handleSizeChange: function (size) {
                this.indexData.pageSize = size;
                this.paging();
            },
            handleCurrentChange: function (currentPage) {
                this.indexData.pageIndex = currentPage;
                this.paging();
            },
            paging: function () {
                var that = this;
                that.loading = true;
                axios({
                    url: "/LsOrders/GetList",
                    method: "post",
                    data: {
                        page: this.indexData.pageIndex,
                        rows: this.indexData.pageSize,
                        OrderID: this.orderID
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [function (data) {
                        var ret = '';
                        for (var it in data) {
                            ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';
                        }
                        return ret;
                    }],
                }).then(function (response) {
                    var data = JSON.parse(response.data.data);
                    that.indexData.dataList = data.list;
                    that.indexData.total = data.total;
                    that.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type
                });
            },
        }
    });
</script>

