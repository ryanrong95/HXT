@{
    ViewBag.subTitle = "代付款申请";
}
<link href="~/Content/css/tab.css" rel="stylesheet" />
<!-- tab start-->
<div class="clearfix tab_switch">
    <ul>
        <li class="active">
            <a href="/Orders/ReceivedApplyList">代付款申请<i></i></a>
        </li>
        <li>
            <a href="/Orders/PrePayApplyList">我的代付款<i></i></a>
        </li>
    </ul>
</div>
<!-- tab end -->
<div id="vReceivedList" v-cloak class="tab_content">
    <div class="query_wrap" ref="viewBox1" v-on:scroll="ss('viewBox1')">
        <div class="clearfix">
            <div class="fl">
                <div class="title label-style">订单号:</div>
                <el-input class="input-style" style="width: 180px;" size="mini" v-model="OrderID" @@keyup.enter.native="queryData"></el-input>
            </div>
            <div class="fl ml20">
                <div class="title label-style">供应商:</div>
                <el-input class="input-style" style="width: 180px;" size="mini" v-model="Supplier" @@keyup.enter.native="queryData"></el-input>
            </div>
            <div class="fl ml20">
                <div class="title label-style">下单日期:</div>
                <date-picker-daterange ref="datePickerDaterange" class="fl"></date-picker-daterange>
            </div>

            <div class="fr">
                <button v-on:click="queryData" class="btn btn1">查询</button>
                <button v-on:click="clearData" class="btn btn2 ml12">重置</button>
            </div>
        </div>
        <div class="clearfix mt20">
            <div class="fl">
                <div class="title label-style">订单状态:</div>
                <el-select style="width: 110px;" class="mr16 input-style" size="small" v-model="OrderStatus" filterable clearable>
                    <el-option v-for="item in OrderStatusOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
        </div>
    </div>
    <div class="all_check mt20">
        <button class="btn_all" v-on:click="applyOrders">
            批量代付款申请
        </button>
        <span class="txt_tip ml12"></span>
    </div>
    <div class="tb_wrap" v-loading="loading">
        <table class="common_tb1 mt30">
            <tr>
                <th width="36px">
                    <el-checkbox v-model="allChecked" v-on:change="allCheck"></el-checkbox>
                </th>
                <th>下单日期</th>
                <th>订单编号</th>
                <th>供应商</th>
                <th>订单类型</th>
                <th>交易币种</th>
                <th>金额</th>
                <th>订单状态</th>
                <th>操作</th>
            </tr>
            <tr v-for="(item,index) in indexData.dataList">
                <td>
                    <el-checkbox v-model="item.IsChecked"></el-checkbox>
                </td>
                @*<td>{{(indexData.pageIndex-1)*indexData.pageSize+index+1}}</td>*@
                <td>{{item.CreateDateDateString}}</td>
                <td>{{item.ID}}</td>
                <td>{{item.SupplierName}}</td>
                <td>{{item.Type}}</td>
                <td>{{item.Currency}}</td>
                <td>{{item.TotalPrice}}</td>
                <td>{{item.OrderStatus}}</td>
                <td class="operate">
                    <a v-on:click="detail(item)">查看</a>
                </td>
            </tr>
            <tr v-if="indexData.dataList.length==0">
                <td colspan="9">暂无数据</td>
            </tr>
        </table>
        <div class="foot">
            <el-pagination class="fr" style="margin-top: 20px;" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="indexData.pageIndex"
                           :page-sizes="[5, 10, 20, 40]"
                           :page-size="indexData.pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="indexData.total">
            </el-pagination>
        </div>
    </div>
</div>
<style>
    .label-style {
        width: 60px;
        float: left;
        margin-top: 5px;
    }

    .input-style {
        width: 180px !important;
    }
</style>
@{Html.RenderAction("_DatePickerDateRange", "Home");}
<script>
    var vReceivedList = new Vue({
        el: "#vReceivedList",
        data: function() {
            return {
                indexData: {
                    pageIndex: 1, //初始页
                    pageSize: 10, //每页的数据
                    total: 0,
                    scrollTop: 0, //滚动条位置
                    dataList: []
                },
                allChecked: false,
                dataValue: "",
                startDate: "",
                endDate: "",
                OrderStatus: "",
                OrderID: "",
                Supplier: "",
                OrderStatusOptions: [],
                loading: false
            }
        },
        mounted: function() {
            this.OrderStatusOptions = @Html.Raw(Json.Encode(@ViewBag.OrderStatusOptions));
            this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('7天');
            this.init();
        },
        methods: {
            init: function() {
                var that = this;
                var userJsonStr = sessionStorage.getItem('vReceivedList');
                userEntity = JSON.parse(userJsonStr);
                if (userEntity == null) {
                    that.queryData(); // that.paging();
                } else {
                    that.indexData = userEntity;
                    that.queryData(); // that.paging();
                    that.$nextTick(function() {
                        that.$refs['viewBox1'].scrollTop = that.indexData.scrollTop;
                    });
                    sessionStorage.removeItem('vReceivedList');
                }
            },
            allCheck: function() {
                var that = this;
                this.indexData.dataList.forEach(function(val, index) {
                    val.IsChecked = that.allChecked;
                });
            },
            //多选代付款申请
            applyOrders: function() {
                var ids = [];
                var curency = [];
                var supplier = [];
                for (var i = 0; i < this.indexData.dataList.length; i++) {
                    if (this.indexData.dataList[i].IsChecked) {
                        ids.push(this.indexData.dataList[i].ID);
                        curency.push(this.indexData.dataList[i].Currency);
                        supplier.push(new Array(this.indexData.dataList[i].SupplierID));
                    }
                }
                if (ids.length == 0) {
                    this.onAlert("error", "请选择订单！");
                    return;
                }
                //货币去重
                var uniqueCurrency = curency.filter(function(element, index, self) {
                    return self.indexOf(element) === index;
                });
                if (uniqueCurrency.length != 1) {
                    this.onAlert("error", "请选择相同的交易币种！");
                    return;
                }
                var intersection = []; //供应商交集
                for (var i = 0; i < supplier.length; i++) {
                    if (i == 0) {
                        intersection = supplier[i];
                    } else {
                        intersection = intersection.filter(function(v) {
                            if (supplier[i].includes(v)) {
                                return v;
                            }
                        });
                        if (intersection.length == 0) {
                            this.onAlert("error", "请选择相同的供应商。");
                            return;
                        }
                    }
                }
                this.applyOrder(ids.join(','));
            },
            applyOrder: function(orderID) {
                sessionStorage.setItem('ReceivedApplyList', JSON.stringify(this.indexData));
                commonSkipUrl(orderID, '/Orders/PrePayApply', "/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                            + "/" + "@(ViewContext.RouteData.Values["action"].ToString())");
            },
            ss: function(ref) {
                // 监听这个dom的scroll事件
                var that = this;
                this.$refs[ref].addEventListener('scroll',
                    function() {
                        that.indexData.scrollTop = that.$refs[ref].scrollTop;
                    },
                    false);
            },
            //收货订单详情
            detail: function(item) {
                //是否为转运
                if (item.IsTransfer) {
                    commonSkipUrl(item.ID, '/Orders/StorageTransDetail', "/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                                       + "/" + "@(ViewContext.RouteData.Values["action"].ToString())");
                } else {
                    commonSkipUrl(item.ID, '/Orders/StorageDetail', "/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                                  + "/" + "@(ViewContext.RouteData.Values["action"].ToString())");
                }
            },
            //查询数据
            queryData: function () {
                this.dataValue = this.$refs.datePickerDaterange.getDataValue();
                if (this.dataValue != "" && this.dataValue != null) {
                    var start = new Date(this.dataValue[0]);
                    var startDate = start.getFullYear() + '-' + (start.getMonth() + 1) + '-' + start.getDate();
                    var end = new Date(this.dataValue[1]);
                    var endDate = end.getFullYear() + '-' + (end.getMonth() + 1) + '-' + end.getDate();
                    this.startDate = startDate;
                    this.endDate = endDate;
                } else {
                    this.startDate = "";
                    this.endDate = "";
                }
                this.indexData.pageIndex = 1;
                this.paging();
            },
            //重置数据
            clearData: function () {
                this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('7天');
                // this.dataValue = "";
                this.startDate = "";
                this.endDate = "";
                this.OrderStatus = "";
                this.OrderID = "";
                this.Supplier = "";
                this.indexData.pageIndex = 1;
                this.indexData.pageSize = 10;
                this.queryData(); // this.paging();
            },
            //初始页currentPage、初始每页数据数pagesize和数据data
            handleSizeChange: function(size) {
                this.indexData.pageSize = size;
                this.paging();
            },
            handleCurrentChange: function(currentPage) {
                this.indexData.pageIndex = currentPage;
                this.paging();
            },
            paging: function() {
                var that = this;
                that.loading = true;
                axios({
                    url: "/Orders/GetReceivedApplyList",
                    method: "post",
                    data: {
                        page: this.indexData.pageIndex,
                        rows: this.indexData.pageSize,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        OrderStatus: this.OrderStatus,
                        OrderID: this.OrderID,
                        Supplier: this.Supplier
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [
                        function(data) {
                            var ret = '';
                            for (var it in data) {
                                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';
                            }
                            return ret;
                        }
                    ]
                }).then(function(response) {
                    var data = JSON.parse(response.data.data);
                    that.indexData.dataList = data.list;
                    that.indexData.total = data.total;
                    that.loading = false;
                }).catch(function(error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function(type, message) {
                this.$message({
                    message: message,
                    type: type,
                    offset: 100
                });
            }
        }
    });
</script>