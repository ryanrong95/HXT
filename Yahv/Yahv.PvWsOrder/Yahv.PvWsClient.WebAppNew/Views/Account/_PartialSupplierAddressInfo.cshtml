<template id="addressinfo">
    <el-form :model="form1" :rules="rules" status-icon ref="form1" label-width="140px">
        <el-form-item v-if="IsSupplier" label="供应商：" prop="SupplierID" :rules="[{ required: true, message: '请选择供应商', trigger: 'change' }]">
            <el-select size="mini" v-model="form1.SupplierID" style="width: 90%;" filterable clearable placeholder="请选择">
                <el-option v-for="item in SupplierOptions"
                           :key="item.value"
                           :label="item.text"
                           :value="item.value">
                </el-option>
            </el-select>
        </el-form-item>
        <el-form-item label="联系人名称：" prop="Name" :rules="[{ required: true, message: '请输入联系人名称', trigger: 'blur' },{max:150, message: '联系人名称长度超过限制', trigger: 'blur' }]">
            <el-input style="width: 90%;" size="mini" v-model="form1.Name" placeholder="请输入联系人名称" auto-complete="off"></el-input>
        </el-form-item>
        @*<el-form-item label="手机号：" prop="Mobile">
            <el-input style="width: 90%;" size="mini" v-model="form1.Mobile" placeholder="请输入手机号" auto-complete="off"></el-input>
        </el-form-item>*@
        <el-form-item label="联系电话：" prop="Tel">
            <el-input style="width: 90%;" size="mini" v-model="form1.Tel" placeholder="请输入联系电话" auto-complete="off"></el-input>
        </el-form-item>
        @*<el-form-item label="邮编：" prop="Postzip" :rules="[{max:10, message: '邮编长度超过限制', trigger: 'blur' }]">
            <el-input style="width: 90%;" size="mini" v-model="form1.Postzip" placeholder="请输入邮编" auto-complete="off"></el-input>
        </el-form-item>*@
        <el-form-item label="地址" prop="Address" :rules="[{required: true, message: '请输入详细地址', trigger: 'blur'},{max:200, message: '详细地址长度超过限制', trigger: 'blur' }]">
            <el-input style="width: 90%;" size="mini" v-model="form1.Address" type="textarea" placeholder="请输入详细的道路、楼宇、区号等名称"></el-input>
        </el-form-item>
        <el-form-item label="设为默认提货地址：">
            <el-checkbox v-model="form1.IsDefault"></el-checkbox>
        </el-form-item>
    </el-form>
</template>
<script src="~/Scripts/areaData.js"></script>
<script>
    Vue.component(
        'my-address',
        {
            template: "#addressinfo",
            data: function() {
                //验证数字
                var validateNumber = function(rule, value, callback) {
                    if (value != '' && value != null) {
                        if (!/^([0-9-]+)$/.test(value)) {
                            callback(new Error('请输入数字'));
                        }
                    }
                    callback();
                };
                return {
                    form1: @Html.Raw(Json.Encode(Model)),
                    AddressLists: $.pccData[0].s.filter(function(data) {
                        if (data.n == "香港") {
                            return data
                        }
                    }), //省市区三级联动数据
                    cascaderConfig: {
                        label: 'n',
                        value: 'n',
                        children: 's'
                    },
                    rules: {
                        Tel: [
                            { required: true, message: '请输入联系电话', trigger: 'blur'},
                            { validator: validateNumber, trigger: 'blur' },
                            { max: 50, message: '电话长度超过限制', trigger: 'blur' }
                        ],
                        //Mobile: [
                        //    { required: true, message: '请输入手机号', trigger: 'blur' },
                        //    { max: 20, message: '手机号超过限制', trigger: 'blur' },
                        //    { validator: validateNumber, trigger: 'blur' }
                        //]
                    },
                    SupplierOptions: [],
                    IsSupplier: true,
                }
            },
            methods: {
                //消息提示框
                onAlert: function(type, message) {
                    this.$message({
                        message: message,
                        type: type
                    });
                },
            },
            mounted: function() {
                this.SupplierOptions = @Html.Raw(Json.Encode(@ViewBag.SupplierOptions)); //加载基础数据
            },
        });
</script>