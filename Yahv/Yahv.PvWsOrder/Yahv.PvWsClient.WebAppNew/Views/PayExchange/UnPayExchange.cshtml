
<link href="~/Content/css/tab.css" rel="stylesheet" />

<div id="vUnPay" v-cloak class="tab_content">
    <div class="query_wrap">
        <div class="clearfix">
            <div class="fl">
                <el-input style="width:120px;" size="mini" v-model="supplierName" @@keyup.enter.native="queryData" placeholder="供应商"></el-input>
            </div>
            <div class="fl ml8">
                <el-input style="width:120px; " size="mini" v-model="orderID" @@keyup.enter.native="queryData" placeholder="订单号"></el-input>
            </div>
            <div class="fl ml8">
                <date-picker-daterange ref="datePickerDaterange" class="fl"></date-picker-daterange>
            </div>
            <div class="fl ml8">
                <el-select style="width:200px;" class="mr16" size="small" v-model="payStatuses" multiple filterable clearable placeholder="付汇状态">
                    <el-option v-for="item in ApplyStatusOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="fr">
                <button v-on:click="queryData" class="btn btn1">查询</button>
                <button v-on:click="clearData" class="btn btn2 ml12">重置</button>
            </div>
        </div>
    </div>
    <div class="all_check mt10 query_wrap">
        <button class="btn btn3" v-on:click="applyOrders">申请付汇</button>
        @*<span class="txt_tip ml12">如何选择?多个订单一起付汇，需要选择相同交易币种及供应商订单</span>*@
    </div>
    <div class="tb_wrap" v-loading="loading">
        <div class="tb_over_wrap mt20">
            <table class="common_tb1">
                <tr>
                    <th width="36px"><el-checkbox v-model="allChecked" v-on:change="allCheck"></el-checkbox></th>
                    <th width="76px">下单日期</th>
                    <th width="120px">订单编号</th>
                    @*<th width="160px">子订单</th>*@
                    <th width="76px">报关日期</th>
                    <th  width="180px">供应商名称</th>
                    <th width="70px">付汇状态</th>
                    <th width="38px">币种</th>
                    <th width="80px">订单金额</th>
                    <th width="70px">已付汇</th>
                    <th width="70px">未付汇</th>
                    <th width="70px">操作</th>
                </tr>
                <template v-for="(item,index) in indexData.dataList">
                    <tr v-for="(m,i) in item.Tiny">
                        <td><el-checkbox v-model="m.IsChecked"></el-checkbox></td>
                        <td v-if="i==0" :rowspan="item.Tiny.length">{{item.CreateDateDateString}}</td>
                        <td v-if="i==0" :rowspan="item.Tiny.length">{{item.MainOrderID}}<br /><a v-on:click="detail(item)">查看详情</a></td>
                        @*<td>{{m.ID}}</td>*@
                        <td>{{m.DDate}}</td>
                        <td><p v-for="supply in m.SuppliersName">{{supply}}</p></td>
                        <td v-if="i==0" :rowspan="item.Tiny.length">{{item.PayExchangeStatus}}</td>
                        <td v-if="i==0" :rowspan="item.Tiny.length">{{item.Currency}}</td>
                        <td>{{m.DeclarePrice}}</td>
                        <td>{{m.PaidExchangeAmount}}<br /><a v-if="m.PaidExchangeAmount>0" v-on:click="payDetails(m.ID)">查看</a></td>
                        <td>{{m.UnPaidExchangeAmount}}</td>
                        <td><a v-on:click="applyOrder(m.ID)">申请付汇</a></td>
                    </tr>
                </template>
                <tr v-if="indexData.dataList.length==0"><td colspan="8" style="height:500px"><img src="/Content/hxt_img/list_nodata.png" style="height:64px;width:87px;" /><label style="display: block; color: currentcolor;">暂无数据</label></td></tr>
                @*11*@
            </table>
        </div>

        <div class="foot">
            <el-pagination class="fr" style="margin-top:20px;" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="indexData.pageIndex"
                           :page-sizes="[10, 20, 50, 100]"
                           :page-size="indexData.pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="indexData.total">
            </el-pagination>
        </div>
    </div>
    <el-dialog title="付汇记录" :lock-scroll="false" width="600px" :visible.sync="dialogFormVisible" :close-on-click-modal="false">

        <table class="common_tb1 mt10 common_tb wp100">
            <tr>
                <th width="36px">序号</th>
                <th>申请时间</th>
                <th>供应商</th>
                <th>付汇金额</th>
                <th>状态</th>
            </tr>
            <tr v-for="(item,index) in tableData">
                <td>{{index+1}}</td>
                <td>{{item.ApplyTime}}</td>
                <td>{{item.SupplierName}}</td>
                <td>{{item.Amount}}</td>
                <td>{{item.Status}}</td>
            </tr>
        </table>

    </el-dialog>
</div>
<style>
    .label-style-2word {
        width: 32px;
        float: left;
        margin-top: 5px;
    }

    .label-style {
        width: 60px;
        float: left;
        margin-top: 5px;
    }

    .input-style {
        width: 120px !important;
    }
</style>
@{Html.RenderAction("_DatePickerDateRange", "Home");}
<script>
    var vUnPay = new Vue({
        el: "#vUnPay",
        data: function () {
            return {
                indexData: {
                    pageIndex: 1, //初始页
                    pageSize: 10,    //每页的数据
                    total: 0,
                    scrollTop: 0, //滚动条位置
                    dataList: [],
                },
                allChecked: false,//全选按钮
                loading:false,
                dataValue: "",
                ApplyStatusOptions: [],
                payStatus: "",
                payStatuses: [],
                startDate: "",
                endDate: "",
                orderID: "",
                supplierName: "",
                tableData: [],
                dialogFormVisible:false,
            }
        },
        mounted: function () {
            this.ApplyStatusOptions = @Html.Raw(Json.Encode(@ViewBag.ApplyStatusOptions));
            this.payStatuses = @Html.Raw(Json.Encode(@ViewBag.DefaultPayStatuses));
            this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('全部');
            this.queryData();
        },
        methods: {
            //付汇记录
            payDetails: function (id) {
                var that = this;
                that.tableData = [];
                axios({
                    url: "/PayExchange/GetPayRecord",
                    method: "post",
                    data: { id: id }
                }).then(function (res) {
                    if (res.data.type == "success") {
                        that.tableData = JSON.parse(res.data.data);
                        that.dialogFormVisible = true;
                    }
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //订单详情
            detail: function (item) {
                sessionStorage.setItem('UnPayExchangeList', JSON.stringify(this.indexData));
                if (item.Type == "4") {
                    commonSkipUrl(item.MainOrderID, '/Declare/TransDecDetail', "/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                                             + "/" + "@(ViewContext.RouteData.Values["action"].ToString())")
                } else {
                    commonSkipUrl(item.MainOrderID, '/Declare/DeclareDetail', "/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                                            + "/" + "@(ViewContext.RouteData.Values["action"].ToString())")
                }
            },
            //申请付汇
            applyOrder: function (orderID) {
                sessionStorage.setItem('UnPayExchangeList', JSON.stringify(this.indexData));
                commonSkipUrl(orderID, '/PayExchange/Apply',"/" + "@(ViewContext.RouteData.Values["controller"].ToString())"
                                                          + "/" + "@(ViewContext.RouteData.Values["action"].ToString())")
            },
            //多选申请付汇
            applyOrders: function () {
                var ids = [];
                var curency = [];
                var supplier = [];
                var exceed = "";
                for (var i = 0; i < this.indexData.dataList.length; i++) {
                    for (var j = 0; j < this.indexData.dataList[i].Tiny.length; j++) {
                        if (this.indexData.dataList[i].Tiny[j].IsChecked) {
                            ids.push(this.indexData.dataList[i].Tiny[j].ID);
                            curency.push(this.indexData.dataList[i].Currency);
                            supplier.push(this.indexData.dataList[i].Tiny[j].SuppliersID);
                            if (this.exceedOneYear(this.indexData.dataList[i].Tiny[j].DDate)) {
                                exceed += this.indexData.dataList[i].Tiny[j].ID + " ";
                            }
                        }
                    }
                }
                if (ids.length == 0) {
                    this.onAlert("error", "请选择订单！");
                    return;
                }
                //货币去重
                var uniqueCurrency = curency.filter(function (element, index, self) {
                    return self.indexOf(element) === index;
                });
                if (uniqueCurrency.length != 1) {
                    this.onAlert("error", "请选择相同的交易币种！");
                    return;
                }
                //if (exceed != "") {
                //    this.onAlert("error", exceed + "订单已报关超过一年，无法申请付汇！");
                //    return;
                //}
                var intersection = []; //供应商交集
                for (var i = 0; i < supplier.length; i++) {
                    if (i == 0) {
                        intersection = supplier[i];
                    } else {
                        intersection = intersection.filter(function (v) {
                            if (supplier[i].includes(v)) {
                                return v;
                            }
                        });
                        if (intersection.length == 0) {
                            this.onAlert("error", "请选择相同的供应商。");
                            return;
                        }
                    }
                }
                this.applyOrder(ids.join(','));
            },
            allCheck: function () {
                var that = this;
                this.indexData.dataList.forEach(function (val, index) {
                    val.Tiny.forEach(function (order, index) {
                        order.IsChecked = that.allChecked;
                    });
                });
            },
            //查询数据
            queryData: function () {
                this.dataValue = this.$refs.datePickerDaterange.getDataValue();
                if (this.dataValue != "" && this.dataValue != null) {
                    var start = new Date(this.dataValue[0]);
                    var startDate = start.getFullYear() + '-' + (start.getMonth() + 1) + '-' + start.getDate();
                    var end = new Date(this.dataValue[1]);
                    var endDate = end.getFullYear() + '-' + (end.getMonth() + 1) + '-' + end.getDate();
                    this.startDate = startDate;
                    this.endDate = endDate;
                } else {
                    this.startDate = "";
                    this.endDate = "";
                }
                this.indexData.pageIndex = 1;
                this.paging();
            },
            //重置数据
            clearData: function () {
                this.$refs.datePickerDaterange.orderDateSimpleBtnClicked('全部');
                // this.dataValue = "";
                this.payStatus = "";
                this.payStatuses = [];
                this.startDate = "";
                this.endDate = "";
                this.orderID = "";
                this.supplierName = "";
                this.indexData.pageIndex = 1;
                this.indexData.pageSize = 10;
                this.queryData(); // this.paging();
            },
            // 初始页currentPage、初始每页数据数pagesize和数据data
            handleSizeChange: function (size) {
                this.indexData.pageSize = size;
                this.paging();
            },
            handleCurrentChange: function (currentPage) {
                this.indexData.pageIndex = currentPage;
                this.paging();
            },
            paging: function () {
                var that = this;
                that.loading = true;
                axios({
                    url: "/PayExchange/GetUnPayExchangeList",
                    method: "post",
                    data: {
                        page: this.indexData.pageIndex,
                        rows: this.indexData.pageSize,
                        payStatus: this.payStatus,
                        payStatuses: this.payStatuses,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        supplierName: this.supplierName,
                        orderID: this.orderID,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [function (data) {
                        var ret = ''
                        for (var it in data) {
                            ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'
                        }
                        return ret;
                    }],
                }).then(function (response) {
                    that.allChecked = false;
                    var data = JSON.parse(response.data.data);
                    that.indexData.dataList = data.list;
                    that.indexData.total = data.total;
                    that.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type,
                    offset:100,
                });
            },
            //是否超过一年
            exceedOneYear: function (DDate) {
                if (DDate == "-") {
                    return false;
                }
                var DDateTime = new Date(DDate);
                var day = (new Date() - DDateTime) / (24 * 60 * 60 * 1000);
                if (day > 365) {
                    return true;
                }
                else {
                    return false;
                }

            },
        }
    });
</script>
