
@{
    Layout = "~/Views/Shared/_LayoutOrder.cshtml";
    ViewBag.navid = "MyLeaseList";
}
<div v-cloak id="vLeaseAdd" class="backshow">
    <h2>新增库位租赁</h2>
    <div class="lease_content">
        <table class="tb_1" border="0" cellspacing="0" cellpadding="0">
            <tr>
                <th>库位</th>
                <th>承重(kg)</th>
                <th>容积(cm³)</th>
                <th>租赁价格</th>
                <th>库位剩余个数</th>
                <th>备注</th>
                <th width="150px;">操作</th>
            </tr>
            <tr v-for="item in Product">
                <td>{{item.SpecID}}</td>
                <td>{{item.Load}}</td>
                <td>{{item.Volume}}</td>
                <td><p v-for="entity in item.Price">{{entity.Month}}个月 {{entity.UnitPrice}}元/月</p></td>
                <td>{{item.Quantity}}</td>
                <td>{{item.Summary}}</td>
                <td><button class="apply" v-if="item.isVisiable&&item.Quantity>0" v-on:click="apply(item)">加入</button></td>
            </tr>
        </table>
        <p class="title mt50 mb24">我的申请</p>
        <el-form ref="ruleForm" :model="formData" :rules="rules" label-width="100px">
            <div class="overhide">
                <el-form-item class="fl" label="开始时间:" :rules="[{ type: 'date', required: true, message: '请选择开始时间', trigger: 'change' }]" prop="StartDate">
                    <el-date-picker type="date" v-model="formData.StartDate" :picker-options="pickerOptions1" v-on:blur="getTotalPrice" placeholder="开始时间" style="width:180px;"></el-date-picker>
                </el-form-item>
                <el-form-item class="fl ml70" label="租赁期限:" prop="MonthNum">
                    <el-input placeholder="租赁期限" v-model="formData.MonthNum" style="width:80px;" v-on:blur="getTotalPrice" auto-complete="off"></el-input><span class="ml10">个月</span>
                </el-form-item>
            </div>
            <div class="btn_list overhide">
                <el-button class="down_file fl mr60" type="primary" v-on:click="downoad_temp"><i></i>导出合同模板</el-button>
                <el-upload class="upload fl"
                           :http-request="httpRequestContractFile"
                           ref="contractUpload"
                           action="/Orders/UploadPickUpFile"
                           :file-list="formData.ContractFile"
                           accept="application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                           :show-file-list="false">
                    <el-button type="primary" class=" fl"><i></i>上传合同</el-button>
                </el-upload>
                <div v-if="fileName!=''"  class="fl file_information">
                    <span class="f_name">{{fileName}}</span>
                    <a v-on:click="delete_file">删除</a>
                </div>
            </div>
            <table class="tb_2" border="0" cellspacing="0" cellpadding="0">
                <tr>
                    <th>库位</th>
                    <th>承重(kg)</th>
                    <th>容积(cm³)</th>
                    <th>个数</th>
                    <th>单价(元/月)</th>
                    <th>操作</th>
                </tr>
                <tr v-for="(item,index) in selectedData">
                    <td>{{item.SpecID}}</td>
                    <td>{{item.Load}}</td>
                    <td>{{item.Volume}}</td>
                    <td width="100px" style="padding:0 16px"><el-input v-model="item.Num" v-on:input="validNum(item)"></el-input></td>
                    <td>{{item.UnitPrice}}</td>
                    <td width="150px"><span v-on:click="delete_item(index,item)" class="btn_link">删除</span></td>
                </tr>
                <tr class="total">
                    <td colspan="6">合计：<span class="txt1">{{totalPrice}}</span>元</td>
                </tr>
            </table>
        </el-form>
        <button v-on:click="onSubmit" class="submit">提交申请</button>
    </div>
    <el-dialog class="successdialog" title="申请提交成功" :lock-scroll="false" width="520px" :visible.sync="dialogSuccessVisible" :close-on-click-modal="false">
        <div class="content">
            <p>申请提交成功</p>
            <div class="no_text mt6">
                <span>订单编号：</span><span class="red">{{orderid}}</span>
            </div>
            @*<div class="clientcode"><span>您的入仓号为：</span><span class="red">{{clientcode}}</span><span>，请务必将此编号填写到快递单或送货单上，否则将加收100元人民币的代理费。</span></div>*@
        </div>
        <div class="dialog_foot">
            <el-button type="primary" class="ml150" v-on:click="btn_back">返回</el-button>
        </div>
    </el-dialog>
</div>

<script>
    var vLeaseAdd = new Vue({
        el: "#vLeaseAdd",
        data: function () {
            var validateMonth = function (rule, value, callback) {
                if (value != '' && value != null) {
                    if (!ValidNumber(value)) {
                        callback(new Error('请输入数字'));
                    } else if (value == 0) {
                        callback(new Error('月数至少是1'));
                    }
                    callback();
                } else {
                    callback(new Error('请输入月数'));
                }
            };
            return {
                dialogSuccessVisible:false,
                formData: @Html.Raw(Json.Encode(Model)),  //表单数据
                pickerOptions1: {
                    disabledDate: function (time) {
                        var myDate = new Date();
                        myDate.setDate(myDate.getDate() + 6);
                        var today = new Date();
                        today.setDate(today.getDate() - 1);
                        return time > myDate || time < today;
                    },
                },
                orderid:"",
                Product:@Html.Raw(Json.Encode(@ViewBag.Product)),
                //验证规则
                rules: {
                    MonthNum: [{ required: true, validator: validateMonth, trigger: 'blur' }],
                },
                selectedData: [],
                totalPrice: 0,
                fileName:"",
            }
        },
        watch: {
            StartDate: function (val) {
                if (val != null && val != "") {
                    this.formData.StartDateStr = this.dateToString(val);
                }
            },
        },
        computed: {
            StartDate: function () {
                return this.formData.StartDate;
            },
        },
        methods: {
            delete_file: function () {
                this.formData.ContractFile = [];
                this.fileName = "";
            },
            httpRequestContractFile: function (options) {
                var that = this;
                var file = options.file;
                let config = {
                    headers: { 'Content-Type': 'multipart/form-data' }
                };
                if (file.type != "application/vnd.openxmlformats-officedocument.wordprocessingml.document" && file.type != "application/msword") {
                    that.formData.ContractFile = [];
                    that.fileName = "";
                    that.onAlert("error", "请上传Word文件");
                    return;
                }
                that.formData.ContractFile = [];
                var form = new FormData(); // FormData 对象
                form.append("file", file); // 文件对象
                //添加请求头
                axios.post("/Orders/UploadPickUpFile", form, config)
                    .then(function (response) {
                        if (response.data.type != "error") {
                            var data = JSON.parse(response.data.data);
                            that.formData.ContractFile.push(data);
                            that.fileName = data.name;
                        } else {
                            that.fileName = "";
                            that.onAlert(response.data.type, response.data.msg);
                            return;
                        }
                    });
            },
            downoad_temp: function () {
                location.href = "/Template/服务协议模板(书签).docx";
            },
            getTotalPrice: function () {
                var that = this;
                var sum = 0;
                if ((this.formData.MonthNum != null || this.formData.MonthNum != "") && ValidNumber(this.formData.MonthNum)) {
                    var arr = this.selectedData.map(function (v, i) {
                        v.UnitPrice = that.getUnitPrice(v.Price, that.formData.MonthNum);
                        sum += v.UnitPrice * v.Num * that.formData.MonthNum;
                        return v;
                    });
                    that.totalPrice = sum;
                }
            },
            //验证整数
            validNum: function (item) {
                this.$forceUpdate()
                if (item.Num != '' && item.Num != null) {
                    if (!ValidNumber(item.Num)) {
                        item.Num = 1;
                    }
                }
                this.getTotalPrice();
            },
            btn_back: function () {
                window.location.href = "/Orders/MyLeaseList";
            },
            orderDetails: function () {

            },
            transferData: function () {
                var arr = [];
                var data = this.selectedData;
                for (var i = 0; i < data.length; i++) {
                    var obj = {
                        ID: "",
                        ProductID: data[i].ID,
                        Num: data[i].Num,
                        UnitPrice:data[i].UnitPrice
                    }
                    arr.push(obj);
                }
                this.formData.LeaseData = arr;
            },
            ValidSubmitData: function () {
                if (this.selectedData.length == 0) {
                    this.onAlert("error", "申请库位个数必须大于1");
                    return false;
                } else {
                    var flag = true;
                    this.selectedData.map(function (v, i) {
                        if (v.Num == 0 || v.Num == "") {
                            flag = false;
                        }
                    });
                    if (!flag) {
                        this.onAlert("error", "申请库位个数必须大于1");
                    }
                    return flag;
                }
            },
            onSubmit: function () {
                var that = this;
                if (that.ValidSubmitData()) {
                    that.$refs.ruleForm.validate(function (valid) {
                        if (valid) {
                            const loading = that.$loading({
                                lock: false,
                                text: 'Loading',
                                spinner: 'el-icon-loading',
                                background: 'rgba(0, 0, 0, 0.7)'
                            });
                            that.transferData();
                            axios({
                                url: "/Orders/LsOrderSubmit",
                                method: "post",
                                data: {
                                    data: JSON.stringify(that.formData),
                                },
                            }).then(function (response) {
                                loading.close();
                                if (response.data.type == "error") {
                                    that.onAlert(response.data.type, response.data.msg);
                                } else {
                                    that.orderid = response.data.data;
                                    that.dialogSuccessVisible = true;
                                }
                            }).catch(function (error) {
                                that.onAlert("warning", error);
                            });
                        }
                    });
                }
            },
            delete_item: function (index,item) {
                this.selectedData.splice(index, 1);
                var arr = this.Product.map(function (v, i) {
                    if (v.ID == item.ID) {
                        v.isVisiable = true;
                    }
                    return v;
                });
                this.Product = arr;
                this.getTotalPrice();
            },
            apply: function (item) {
                item.isVisiable = false;
                item.Num = 1;
                this.selectedData.push(item);
                this.getTotalPrice();
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type,
                    offset:300,
                });
            },
            dateToString: function (date) {
                var year = date.getFullYear();
                var month = (date.getMonth() + 1).toString();
                var day = (date.getDate()).toString();
                if (month.length == 1) {
                    month = "0" + month;
                }
                if (day.length == 1) {
                    day = "0" + day;
                }
                var dateTime = year + "-" + month + "-" + day;
                return dateTime;
            },
            //获取单价
            getUnitPrice:function(arr,month) {
                var price = 0;
                var c_month = 0;
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i].Month <= month && arr[i].Month>=c_month) {
                        c_month = arr[i].Month;
                        price = arr[i].UnitPrice;
                    }
                }
                return price;
            }
        },
    });
</script>