
@{
    Layout = "~/Views/Shared/_LayoutOrder.cshtml";
    ViewBag.navid = "MyOrdersList";
}

<div v-cloak id="vMyOrders" class="backshow">
    <h2>全部订单</h2>
    <div class="order_list_view">
        <div class="query_div queryData">
            <div class="clearfix mb10">
                <span class="title fl">快速筛选:</span>
                <div class="buttonlist fl">
                    <button v-on:click="queryBtn('all','',0)" :class="[{active:selectedBtn.length==0}]">全部</button>
                    @*<button v-on:click="queryBtn('orderPaymentStatus','2',1)" :class="[{active:selectedBtn.indexOf(1)>-1}]">待确认</button>*@
                    <button v-on:click="queryBtn('orderPaymentStatus','3',2)" :class="[{active:selectedBtn.indexOf(2)>-1}]">待支付</button>
                    <button v-on:click="queryBtn('orderMainStatus1','3',3)" :class="[{active:selectedBtn.indexOf(3)>-1}]">挂起</button>
                    <button v-on:click="queryBtn('orderInvoiceStatus1','1',4)" :class="[{active:selectedBtn.indexOf(4)>-1}]">待开票</button>
                    @*<button v-on:click="queryBtn('orderRemittanceStatus','1',5)" :class="[{active:selectedBtn.indexOf(5)>-1}]">待付货款</button>*@
                    <button v-on:click="queryBtn('excuteStatus','1',6)" :class="[{active:selectedBtn.indexOf(6)>-1}]">待收货</button>
                </div>
            </div>
            <div>
                <span class="title">更多条件:</span>
                <el-input class="mr16"  size="small" auto-complete="off" placeholder="订单编号" v-model="orderID"></el-input>
                <el-select class="mr16" size="small" v-model="orderMainStatus2" filterable clearable placeholder="选择订单状态">
                    <el-option v-for="item in baseData.OrderStatusOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
                <el-select class="mr16" size="small" v-model="orderInvoiceStatus2" filterable clearable placeholder="选择开票状态">
                    <el-option v-for="item in baseData.InvoiceOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
                <el-date-picker size="small" v-model="dataValue"
                                type="daterange"
                                range-separator="至"
                                start-placeholder="下单开始日期"
                                end-placeholder="下单结束日期">
                </el-date-picker>
            </div>
            <button v-on:click="queryData" class="btn_qry">查询</button>
        </div>
        <div class="orderlist mt20" ref="viewBox1" v-on:scroll="ss('viewBox1')">
            <div class="title">
                <ul class="overhide">
                    <li class="fl" style="width:325px">
                        <span>订单编号</span>
                    </li>
                    <li class="fl" style="width:173px">
                        <span>订单状态</span>
                    </li>
                    <li class="fl" style="width:176px">
                        <span>开票状态</span>
                    </li>
                    <li class="fl" style="width:240px">
                        <span>操作</span>
                    </li>
                </ul>
            </div>
            <div class="orderWrap" v-loading="indexData.loading">
                <div class="order" v-if="!indexData.loading">
                    <table class="myorder" border="0" cellspacing="0" cellpadding="0" v-for="item of indexData.curItems">
                        <tr>
                            <th class="overhide" colspan="6">
                                <div class="fl">
                                    <span class="lignt_text">
                                        订单号：
                                    </span>
                                    <span>{{item.ID}}</span>
                                </div>
                                <div class="fl txtdate">
                                    <span class="lignt_text">{{item.CreateDate}}</span>
                                    <span class="ml14 order_type" v-bind:class="{'state_color1':item.Type=='1','state_color2':item.Type=='2','state_color3':item.Type=='3','state_color4':item.Type=='4','state_color5':item.Type=='5'}">{{item.TypeName}}</span>
                                </div>
                                <div class="fr detail">
                                    <a v-if="item.IsBill" v-on:click="confirmBill(item.ID,item.Type)">对账单</a>
                                    <a class="a_detail ml16" v-on:click="info(item.Type,item.ID)">订单详情</a>
                                </div>
                            </th>
                        </tr>
                        <tr class="cell">
                            <td style="width:215px;text-align:left">
                                <div style="padding-left:60px;">
                                    <p>交易币种 {{item.Currency}}</p>
                                    @*<p>报关总价 11.00</p>*@
                                </div>

                            </td>
                            <td style="width:114px">
                                <span>{{item.MainStatus}}</span><br />
                                <a>订单跟踪</a>
                            </td>
                            <td style="width:116px">
                                <p>{{item.InvoiceStatus}}</p>
                                <a v-on:click="invoice(item.ID)">查看发票</a>
                            </td>
                            <td style="width:158px;padding:12px 0px" class="myOrderTd"></td>
                        </tr>
                    </table>
                    <div class="mb54" v-if="indexData.curItems.length==0">
                        <div class="nodata-container">
                            <el-row class="nodata-row1">
                                <img src="~/Content/img/nodata.png" />
                            </el-row>
                            <el-row class="nodata-row2">
                                <span class="nodata-info">暂无数据！</span>
                            </el-row>
                        </div>
                    </div>
                </div>
                <div class="foot" v-if="(!indexData.loading) && indexData.curItems.length>0">
                    <el-pagination style="float:right" v-on:size-change="handleSizeChange"
                                   v-on:current-change="handleCurrentChange"
                                   :current-page="indexData.pageIndex"
                                   :page-sizes="[5, 10, 20, 40]"
                                   :page-size="indexData.pageSize"
                                   layout="total, sizes, prev, pager, next, jumper"
                                   :total="indexData.Total">
                    </el-pagination>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var vMyOrders = new Vue({
        el: "#vMyOrders",
        data: function () {
            return {
                indexData: {
                    loading: true,
                    curItems: [],
                    pageIndex: 1, //初始页
                    pageSize: 5,    //每页的数据
                    Total: 0,
                    scrollTop: 0, //滚动条位置              
                },
                baseData: {},
                selectedBtn:[],
                //btnIndex: 0,
                orderPaymentStatus: "",//支付状态
                orderMainStatus1: "",//订单主状态
                orderMainStatus2: "",//订单主状态
                orderInvoiceStatus1: "",//开票状态
                orderInvoiceStatus2: "",//开票状态
                orderRemittanceStatus: "",//付汇状态
                excuteStatus: "",//执行状态
                startDate: "",
                endDate: "",
                dataValue: "",
                orderID:"",
            }
        },
        mounted: function () {
            var that = this;
            var userJsonStr = sessionStorage.getItem('vMyOrdersList');
            userEntity = JSON.parse(userJsonStr);
            if (userEntity == null) {
                that.paging();
            } else {
                that.indexData = userEntity;
                that.paging();
                that.$nextTick(function () {
                    that.$refs['viewBox1'].scrollTop = that.indexData.scrollTop;
                })
                sessionStorage.removeItem('vMyOrdersList');
            }
            var options = @Html.Raw(Json.Encode(@ViewBag.Options)); //加载基础数据
            this.baseData = options;
        },
        methods: {
            //查询数据
            queryData: function () {
                if (this.dataValue != "" && this.dataValue != null) {
                    var start = new Date(this.dataValue[0]);
                    var startDate = start.getFullYear() + '-' + (start.getMonth() + 1) + '-' + start.getDate();
                    var end = new Date(this.dataValue[1]);
                    var endDate = end.getFullYear() + '-' + (end.getMonth() + 1) + '-' + end.getDate();
                    this.startDate = startDate;
                    this.endDate = endDate;
                } else {
                    this.startDate = "";
                    this.endDate = "";
                }
                this.paging();
            },
            //订单状态查询
            queryBtn: function (column, value, index) {
                if (index == 0) {
                    this.selectedBtn = [];
                    this.resetBtnQuery();
                }
                else {
                    var i = this.selectedBtn.indexOf(index);
                    if (i > -1) {
                        this.selectedBtn.splice(i, 1);
                        this[column] = "";
                    } else {
                        this.selectedBtn.push(index);
                        this[column] = value;
                    }
                }
                this.paging();
            },
            resetBtnQuery: function () {
                this.orderPaymentStatus = "";
                this.orderMainStatus1 = "";
                this.orderInvoiceStatus1 = "";
                this.orderRemittanceStatus = "";
                this.excuteStatus = "";
            },
            confirmBill: function (id,type) {
                sessionStorage.setItem('vMyOrdersList', JSON.stringify(this.indexData));
                if (type == 1 || type == 2 || type == 3) {
                    commonSkip(id, '/Bill/BillList', 'MyOrdersList');
                } else {
                    commonSkip(id, '/Declare/DeclareBill', 'MyOrdersList');
                }
            },
            invoice: function (id) {
                sessionStorage.setItem('vMyOrdersList', JSON.stringify(this.indexData));
                commonSkip(id, '/Declare/DeclareInvoice', 'MyOrdersList')
            },
            info: function (type,id) {
                sessionStorage.setItem('vMyOrdersList', JSON.stringify(this.indexData));
                if (type == "1") {
                    var action = "/Orders/StorageDetail";
                } else if (type == "2") {
                    var action = "/Orders/TransportDetail";
                } else if (type == "3") {
                    var action = "/Orders/DeliveryDetail";
                } else if (type == "4") {
                    var action = "/Orders/TransportDetail";
                } else if (type == "5") {
                    var action = "/Declare/DeclareDetail";
                }
                commonSkip(id, action, 'MyOrdersList')
            },
            ss: function (ref) {
                // 监听这个dom的scroll事件
                var that = this;
                this.$refs[ref].addEventListener('scroll', function () {
                    that.indexData.scrollTop = that.$refs[ref].scrollTop;
                }, false)
            },
            // 初始页currentPage、初始每页数据数pagesize和数据data
            handleSizeChange: function (size) {
                this.indexData.pageSize = size;
                this.paging();
            },
            handleCurrentChange: function (currentPage) {
                this.indexData.pageIndex = currentPage;
                this.paging();
            },
            paging: function () {
                var that = this;
                that.indexData.loading = true;
                axios({
                    url: "/Orders/GetMyOrdersList",
                    method: "post",
                    data: {
                        page: this.indexData.pageIndex,
                        rows: this.indexData.pageSize,
                        orderPaymentStatus: this.orderPaymentStatus,
                        orderMainStatus1: this.orderMainStatus1,
                        orderMainStatus2: this.orderMainStatus2,
                        orderInvoiceStatus1: this.orderInvoiceStatus1,
                        orderInvoiceStatus2: this.orderInvoiceStatus2,
                        orderRemittanceStatus: this.orderRemittanceStatus,
                        excuteStatus: this.excuteStatus,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        orderID: this.orderID,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [function (data) {
                        var ret = ''
                        for (var it in data) {
                            ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'
                        }
                        return ret;
                    }],
                }).then(function (response) {
                    var data = JSON.parse(response.data.data);
                    that.indexData.curItems = data.list;
                    that.indexData.Total = data.total;
                    that.indexData.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type,
                });
            },
        }
    });
</script>
