#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layers.Data.Sqls.ScCustoms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="foricScCustoms")]
	public partial class sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCompanies(Companies instance);
    partial void UpdateCompanies(Companies instance);
    partial void DeleteCompanies(Companies instance);
    partial void InsertClientConsignees(ClientConsignees instance);
    partial void UpdateClientConsignees(ClientConsignees instance);
    partial void DeleteClientConsignees(ClientConsignees instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertClientInvoices(ClientInvoices instance);
    partial void UpdateClientInvoices(ClientInvoices instance);
    partial void DeleteClientInvoices(ClientInvoices instance);
    partial void InsertClientInvoiceConsignees(ClientInvoiceConsignees instance);
    partial void UpdateClientInvoiceConsignees(ClientInvoiceConsignees instance);
    partial void DeleteClientInvoiceConsignees(ClientInvoiceConsignees instance);
    partial void InsertClientSupplierAddresses(ClientSupplierAddresses instance);
    partial void UpdateClientSupplierAddresses(ClientSupplierAddresses instance);
    partial void DeleteClientSupplierAddresses(ClientSupplierAddresses instance);
    partial void InsertDecHeads(DecHeads instance);
    partial void UpdateDecHeads(DecHeads instance);
    partial void DeleteDecHeads(DecHeads instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertDecLists(DecLists instance);
    partial void UpdateDecLists(DecLists instance);
    partial void DeleteDecLists(DecLists instance);
    partial void InsertDecTaxFlows(DecTaxFlows instance);
    partial void UpdateDecTaxFlows(DecTaxFlows instance);
    partial void DeleteDecTaxFlows(DecTaxFlows instance);
    partial void InsertBaseCurrencies(BaseCurrencies instance);
    partial void UpdateBaseCurrencies(BaseCurrencies instance);
    partial void DeleteBaseCurrencies(BaseCurrencies instance);
    partial void InsertOrderItemCategories(OrderItemCategories instance);
    partial void UpdateOrderItemCategories(OrderItemCategories instance);
    partial void DeleteOrderItemCategories(OrderItemCategories instance);
    partial void InsertOrderItems(OrderItems instance);
    partial void UpdateOrderItems(OrderItems instance);
    partial void DeleteOrderItems(OrderItems instance);
    partial void InsertDecTaxs(DecTaxs instance);
    partial void UpdateDecTaxs(DecTaxs instance);
    partial void DeleteDecTaxs(DecTaxs instance);
    partial void InsertClientFeeSettlements(ClientFeeSettlements instance);
    partial void UpdateClientFeeSettlements(ClientFeeSettlements instance);
    partial void DeleteClientFeeSettlements(ClientFeeSettlements instance);
    partial void InsertPreProductCategories(PreProductCategories instance);
    partial void UpdatePreProductCategories(PreProductCategories instance);
    partial void DeletePreProductCategories(PreProductCategories instance);
    partial void InsertOrderPayExchangeSuppliers(OrderPayExchangeSuppliers instance);
    partial void UpdateOrderPayExchangeSuppliers(OrderPayExchangeSuppliers instance);
    partial void DeleteOrderPayExchangeSuppliers(OrderPayExchangeSuppliers instance);
    partial void InsertMainOrders(MainOrders instance);
    partial void UpdateMainOrders(MainOrders instance);
    partial void DeleteMainOrders(MainOrders instance);
    partial void InsertMainOrderFiles(MainOrderFiles instance);
    partial void UpdateMainOrderFiles(MainOrderFiles instance);
    partial void DeleteMainOrderFiles(MainOrderFiles instance);
    partial void InsertPayExchangeApplyFiles(PayExchangeApplyFiles instance);
    partial void UpdatePayExchangeApplyFiles(PayExchangeApplyFiles instance);
    partial void DeletePayExchangeApplyFiles(PayExchangeApplyFiles instance);
    partial void InsertPayExchangeApplyItems(PayExchangeApplyItems instance);
    partial void UpdatePayExchangeApplyItems(PayExchangeApplyItems instance);
    partial void DeletePayExchangeApplyItems(PayExchangeApplyItems instance);
    partial void InsertProductSupplierMap(ProductSupplierMap instance);
    partial void UpdateProductSupplierMap(ProductSupplierMap instance);
    partial void DeleteProductSupplierMap(ProductSupplierMap instance);
    partial void InsertPayExchangeApplyLogs(PayExchangeApplyLogs instance);
    partial void UpdatePayExchangeApplyLogs(PayExchangeApplyLogs instance);
    partial void DeletePayExchangeApplyLogs(PayExchangeApplyLogs instance);
    partial void InsertPayExchangeSensitiveAreas(PayExchangeSensitiveAreas instance);
    partial void UpdatePayExchangeSensitiveAreas(PayExchangeSensitiveAreas instance);
    partial void DeletePayExchangeSensitiveAreas(PayExchangeSensitiveAreas instance);
    partial void InsertPayExchangeSensitiveWords(PayExchangeSensitiveWords instance);
    partial void UpdatePayExchangeSensitiveWords(PayExchangeSensitiveWords instance);
    partial void DeletePayExchangeSensitiveWords(PayExchangeSensitiveWords instance);
    partial void InsertOrderTraces(OrderTraces instance);
    partial void UpdateOrderTraces(OrderTraces instance);
    partial void DeleteOrderTraces(OrderTraces instance);
    partial void InsertSwapNoticeItems(SwapNoticeItems instance);
    partial void UpdateSwapNoticeItems(SwapNoticeItems instance);
    partial void DeleteSwapNoticeItems(SwapNoticeItems instance);
    partial void InsertServiceApplies(ServiceApplies instance);
    partial void UpdateServiceApplies(ServiceApplies instance);
    partial void DeleteServiceApplies(ServiceApplies instance);
    partial void InsertOrderConsignees(OrderConsignees instance);
    partial void UpdateOrderConsignees(OrderConsignees instance);
    partial void DeleteOrderConsignees(OrderConsignees instance);
    partial void InsertSuggestions(Suggestions instance);
    partial void UpdateSuggestions(Suggestions instance);
    partial void DeleteSuggestions(Suggestions instance);
    partial void InsertClientSupplierBanks(ClientSupplierBanks instance);
    partial void UpdateClientSupplierBanks(ClientSupplierBanks instance);
    partial void DeleteClientSupplierBanks(ClientSupplierBanks instance);
    partial void InsertDecHeadFiles(DecHeadFiles instance);
    partial void UpdateDecHeadFiles(DecHeadFiles instance);
    partial void DeleteDecHeadFiles(DecHeadFiles instance);
    partial void InsertPreProducts(PreProducts instance);
    partial void UpdatePreProducts(PreProducts instance);
    partial void DeletePreProducts(PreProducts instance);
    partial void InsertBaseCountries(BaseCountries instance);
    partial void UpdateBaseCountries(BaseCountries instance);
    partial void DeleteBaseCountries(BaseCountries instance);
    partial void InsertClientSuppliers(ClientSuppliers instance);
    partial void UpdateClientSuppliers(ClientSuppliers instance);
    partial void DeleteClientSuppliers(ClientSuppliers instance);
    partial void InsertAdvanceMoneyApplies(AdvanceMoneyApplies instance);
    partial void UpdateAdvanceMoneyApplies(AdvanceMoneyApplies instance);
    partial void DeleteAdvanceMoneyApplies(AdvanceMoneyApplies instance);
    partial void InsertAdvanceRecords(AdvanceRecords instance);
    partial void UpdateAdvanceRecords(AdvanceRecords instance);
    partial void DeleteAdvanceRecords(AdvanceRecords instance);
    partial void InsertClientAdmins(ClientAdmins instance);
    partial void UpdateClientAdmins(ClientAdmins instance);
    partial void DeleteClientAdmins(ClientAdmins instance);
    partial void InsertOrderReceipts(OrderReceipts instance);
    partial void UpdateOrderReceipts(OrderReceipts instance);
    partial void DeleteOrderReceipts(OrderReceipts instance);
    partial void InsertInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void UpdateInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void DeleteInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void InsertInvoiceNotices(InvoiceNotices instance);
    partial void UpdateInvoiceNotices(InvoiceNotices instance);
    partial void DeleteInvoiceNotices(InvoiceNotices instance);
    partial void InsertExchangeRates(ExchangeRates instance);
    partial void UpdateExchangeRates(ExchangeRates instance);
    partial void DeleteExchangeRates(ExchangeRates instance);
    partial void InsertExchangeRateLogs(ExchangeRateLogs instance);
    partial void UpdateExchangeRateLogs(ExchangeRateLogs instance);
    partial void DeleteExchangeRateLogs(ExchangeRateLogs instance);
    partial void InsertPayExchangeApplies(PayExchangeApplies instance);
    partial void UpdatePayExchangeApplies(PayExchangeApplies instance);
    partial void DeletePayExchangeApplies(PayExchangeApplies instance);
    partial void InsertLogs(Logs instance);
    partial void UpdateLogs(Logs instance);
    partial void DeleteLogs(Logs instance);
    partial void InsertNoticeBoard(NoticeBoard instance);
    partial void UpdateNoticeBoard(NoticeBoard instance);
    partial void DeleteNoticeBoard(NoticeBoard instance);
    partial void InsertFinanceReceipts(FinanceReceipts instance);
    partial void UpdateFinanceReceipts(FinanceReceipts instance);
    partial void DeleteFinanceReceipts(FinanceReceipts instance);
    partial void InsertReceiptNotices(ReceiptNotices instance);
    partial void UpdateReceiptNotices(ReceiptNotices instance);
    partial void DeleteReceiptNotices(ReceiptNotices instance);
    partial void InsertSendBaseInfo(SendBaseInfo instance);
    partial void UpdateSendBaseInfo(SendBaseInfo instance);
    partial void DeleteSendBaseInfo(SendBaseInfo instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertMobileLogs(MobileLogs instance);
    partial void UpdateMobileLogs(MobileLogs instance);
    partial void DeleteMobileLogs(MobileLogs instance);
    partial void InsertUserTokens(UserTokens instance);
    partial void UpdateUserTokens(UserTokens instance);
    partial void DeleteUserTokens(UserTokens instance);
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    partial void InsertClientAgreements(ClientAgreements instance);
    partial void UpdateClientAgreements(ClientAgreements instance);
    partial void DeleteClientAgreements(ClientAgreements instance);
        #endregion
        public sqlDataContext() :
                base(global::Layers.Data.Properties.Settings.Default.foricScCustomsConnectionString10, mappingSource)
        {
            OnCreated();
        }
        
        public sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Companies> Companies
		{
			get
			{
				return this.GetTable<Companies>();
			}
		}
		
		public System.Data.Linq.Table<ClientConsignees> ClientConsignees
		{
			get
			{
				return this.GetTable<ClientConsignees>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<ClientInvoices> ClientInvoices
		{
			get
			{
				return this.GetTable<ClientInvoices>();
			}
		}
		
		public System.Data.Linq.Table<ClientInvoiceConsignees> ClientInvoiceConsignees
		{
			get
			{
				return this.GetTable<ClientInvoiceConsignees>();
			}
		}
		
		public System.Data.Linq.Table<ClientSupplierAddresses> ClientSupplierAddresses
		{
			get
			{
				return this.GetTable<ClientSupplierAddresses>();
			}
		}
		
		public System.Data.Linq.Table<DecHeads> DecHeads
		{
			get
			{
				return this.GetTable<DecHeads>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<DecLists> DecLists
		{
			get
			{
				return this.GetTable<DecLists>();
			}
		}
		
		public System.Data.Linq.Table<DecTaxFlows> DecTaxFlows
		{
			get
			{
				return this.GetTable<DecTaxFlows>();
			}
		}
		
		public System.Data.Linq.Table<BaseCurrencies> BaseCurrencies
		{
			get
			{
				return this.GetTable<BaseCurrencies>();
			}
		}
		
		public System.Data.Linq.Table<OrderItemCategories> OrderItemCategories
		{
			get
			{
				return this.GetTable<OrderItemCategories>();
			}
		}
		
		public System.Data.Linq.Table<OrderItems> OrderItems
		{
			get
			{
				return this.GetTable<OrderItems>();
			}
		}
		
		public System.Data.Linq.Table<OrderItemRateView> OrderItemRateView
		{
			get
			{
				return this.GetTable<OrderItemRateView>();
			}
		}
		
		public System.Data.Linq.Table<DecTaxs> DecTaxs
		{
			get
			{
				return this.GetTable<DecTaxs>();
			}
		}
		
		public System.Data.Linq.Table<ClientFeeSettlements> ClientFeeSettlements
		{
			get
			{
				return this.GetTable<ClientFeeSettlements>();
			}
		}
		
		public System.Data.Linq.Table<PreProductCategories> PreProductCategories
		{
			get
			{
				return this.GetTable<PreProductCategories>();
			}
		}
		
		public System.Data.Linq.Table<OrderPayExchangeSuppliers> OrderPayExchangeSuppliers
		{
			get
			{
				return this.GetTable<OrderPayExchangeSuppliers>();
			}
		}
		
		public System.Data.Linq.Table<OrderPayExchangeSuppliersView> OrderPayExchangeSuppliersView
		{
			get
			{
				return this.GetTable<OrderPayExchangeSuppliersView>();
			}
		}
		
		public System.Data.Linq.Table<MainOrders> MainOrders
		{
			get
			{
				return this.GetTable<MainOrders>();
			}
		}
		
		public System.Data.Linq.Table<MainOrderFiles> MainOrderFiles
		{
			get
			{
				return this.GetTable<MainOrderFiles>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeApplyFiles> PayExchangeApplyFiles
		{
			get
			{
				return this.GetTable<PayExchangeApplyFiles>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeApplyItems> PayExchangeApplyItems
		{
			get
			{
				return this.GetTable<PayExchangeApplyItems>();
			}
		}
		
		public System.Data.Linq.Table<ProductSupplierMap> ProductSupplierMap
		{
			get
			{
				return this.GetTable<ProductSupplierMap>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeApplyLogs> PayExchangeApplyLogs
		{
			get
			{
				return this.GetTable<PayExchangeApplyLogs>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeSensitiveAreas> PayExchangeSensitiveAreas
		{
			get
			{
				return this.GetTable<PayExchangeSensitiveAreas>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeSensitiveWords> PayExchangeSensitiveWords
		{
			get
			{
				return this.GetTable<PayExchangeSensitiveWords>();
			}
		}
		
		public System.Data.Linq.Table<OrderTraces> OrderTraces
		{
			get
			{
				return this.GetTable<OrderTraces>();
			}
		}
		
		public System.Data.Linq.Table<SwapNoticeItems> SwapNoticeItems
		{
			get
			{
				return this.GetTable<SwapNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<ServiceApplies> ServiceApplies
		{
			get
			{
				return this.GetTable<ServiceApplies>();
			}
		}
		
		public System.Data.Linq.Table<OrderConsignees> OrderConsignees
		{
			get
			{
				return this.GetTable<OrderConsignees>();
			}
		}
		
		public System.Data.Linq.Table<OrderInovieInfoView> OrderInovieInfoView
		{
			get
			{
				return this.GetTable<OrderInovieInfoView>();
			}
		}
		
		public System.Data.Linq.Table<OrderInvoiceTopView> OrderInvoiceTopView
		{
			get
			{
				return this.GetTable<OrderInvoiceTopView>();
			}
		}
		
		public System.Data.Linq.Table<Suggestions> Suggestions
		{
			get
			{
				return this.GetTable<Suggestions>();
			}
		}
		
		public System.Data.Linq.Table<ClientSupplierBanks> ClientSupplierBanks
		{
			get
			{
				return this.GetTable<ClientSupplierBanks>();
			}
		}
		
		public System.Data.Linq.Table<DecHeadFiles> DecHeadFiles
		{
			get
			{
				return this.GetTable<DecHeadFiles>();
			}
		}
		
		public System.Data.Linq.Table<PreProducts> PreProducts
		{
			get
			{
				return this.GetTable<PreProducts>();
			}
		}
		
		public System.Data.Linq.Table<OrderAgreementTopView> OrderAgreementTopView
		{
			get
			{
				return this.GetTable<OrderAgreementTopView>();
			}
		}
		
		public System.Data.Linq.Table<BaseCountries> BaseCountries
		{
			get
			{
				return this.GetTable<BaseCountries>();
			}
		}
		
		public System.Data.Linq.Table<ClientSuppliers> ClientSuppliers
		{
			get
			{
				return this.GetTable<ClientSuppliers>();
			}
		}
		
		public System.Data.Linq.Table<AdvanceMoneyApplies> AdvanceMoneyApplies
		{
			get
			{
				return this.GetTable<AdvanceMoneyApplies>();
			}
		}
		
		public System.Data.Linq.Table<AdvanceRecords> AdvanceRecords
		{
			get
			{
				return this.GetTable<AdvanceRecords>();
			}
		}
		
		public System.Data.Linq.Table<ClientAdmins> ClientAdmins
		{
			get
			{
				return this.GetTable<ClientAdmins>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView2> AdminsTopView2
		{
			get
			{
				return this.GetTable<AdminsTopView2>();
			}
		}
		
		public System.Data.Linq.Table<OrderInvoiceTopViewRight> OrderInvoiceTopViewRight
		{
			get
			{
				return this.GetTable<OrderInvoiceTopViewRight>();
			}
		}
		
		public System.Data.Linq.Table<PvWsOrderBaseOrderView> PvWsOrderBaseOrderView
		{
			get
			{
				return this.GetTable<PvWsOrderBaseOrderView>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceipts> OrderReceipts
		{
			get
			{
				return this.GetTable<OrderReceipts>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeItems> InvoiceNoticeItems
		{
			get
			{
				return this.GetTable<InvoiceNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNotices> InvoiceNotices
		{
			get
			{
				return this.GetTable<InvoiceNotices>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeRates> ExchangeRates
		{
			get
			{
				return this.GetTable<ExchangeRates>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeRateLogs> ExchangeRateLogs
		{
			get
			{
				return this.GetTable<ExchangeRateLogs>();
			}
		}
		
		public System.Data.Linq.Table<PayExchangeApplies> PayExchangeApplies
		{
			get
			{
				return this.GetTable<PayExchangeApplies>();
			}
		}
		
		public System.Data.Linq.Table<Logs> Logs
		{
			get
			{
				return this.GetTable<Logs>();
			}
		}
		
		public System.Data.Linq.Table<NoticeBoard> NoticeBoard
		{
			get
			{
				return this.GetTable<NoticeBoard>();
			}
		}
		
		public System.Data.Linq.Table<FinanceReceipts> FinanceReceipts
		{
			get
			{
				return this.GetTable<FinanceReceipts>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptNotices> ReceiptNotices
		{
			get
			{
				return this.GetTable<ReceiptNotices>();
			}
		}
		
		public System.Data.Linq.Table<SendBaseInfo> SendBaseInfo
		{
			get
			{
				return this.GetTable<SendBaseInfo>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<MobileLogs> MobileLogs
		{
			get
			{
				return this.GetTable<MobileLogs>();
			}
		}
		
		public System.Data.Linq.Table<UserTokens> UserTokens
		{
			get
			{
				return this.GetTable<UserTokens>();
			}
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
		
		public System.Data.Linq.Table<ClientAgreements> ClientAgreements
		{
			get
			{
				return this.GetTable<ClientAgreements>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ContactID;
		
		private string _Name;
		
		private string _Code;
		
		private string _CustomsCode;
		
		private string _Corporate;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Clients> _Clients;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCustomsCodeChanging(string value);
    partial void OnCustomsCodeChanged();
    partial void OnCorporateChanging(string value);
    partial void OnCorporateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Companies()
		{
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsCode", DbType="VarChar(50)")]
		public string CustomsCode
		{
			get
			{
				return this._CustomsCode;
			}
			set
			{
				if ((this._CustomsCode != value))
				{
					this.OnCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomsCode = value;
					this.SendPropertyChanged("CustomsCode");
					this.OnCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporate", DbType="NVarChar(150)")]
		public string Corporate
		{
			get
			{
				return this._Corporate;
			}
			set
			{
				if ((this._Corporate != value))
				{
					this.OnCorporateChanging(value);
					this.SendPropertyChanging();
					this._Corporate = value;
					this.SendPropertyChanged("Corporate");
					this.OnCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Clients", Storage="_Clients", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Companies", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientConsignees")]
	public partial class ClientConsignees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _Name;
		
		private string _ContactID;
		
		private string _Address;
		
		private bool _IsDefault;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientConsignees()
		{
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientConsignees", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientConsignees.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientConsignees.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Fax;
		
		private string _QQ;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntitySet<Companies> _Companies;
		
		private EntitySet<ClientSupplierAddresses> _ClientSupplierAddresses;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnQQChanging(string value);
    partial void OnQQChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Contacts()
		{
			this._Companies = new EntitySet<Companies>(new Action<Companies>(this.attach_Companies), new Action<Companies>(this.detach_Companies));
			this._ClientSupplierAddresses = new EntitySet<ClientSupplierAddresses>(new Action<ClientSupplierAddresses>(this.attach_ClientSupplierAddresses), new Action<ClientSupplierAddresses>(this.detach_ClientSupplierAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQ", DbType="VarChar(50)")]
		public string QQ
		{
			get
			{
				return this._QQ;
			}
			set
			{
				if ((this._QQ != value))
				{
					this.OnQQChanging(value);
					this.SendPropertyChanging();
					this._QQ = value;
					this.SendPropertyChanged("QQ");
					this.OnQQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Companies", Storage="_Companies", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Companies> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_ClientSupplierAddresses", Storage="_ClientSupplierAddresses", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<ClientSupplierAddresses> ClientSupplierAddresses
		{
			get
			{
				return this._ClientSupplierAddresses;
			}
			set
			{
				this._ClientSupplierAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Companies entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Companies(Companies entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_ClientSupplierAddresses(ClientSupplierAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_ClientSupplierAddresses(ClientSupplierAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientInvoices")]
	public partial class ClientInvoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _Title;
		
		private string _TaxCode;
		
		private string _Address;
		
		private string _Tel;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private int _DeliveryType;
		
		private System.Nullable<int> _InvoiceStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<InvoiceNotices> _InvoiceNotices;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnInvoiceStatusChanging(System.Nullable<int> value);
    partial void OnInvoiceStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientInvoices()
		{
			this._InvoiceNotices = new EntitySet<InvoiceNotices>(new Action<InvoiceNotices>(this.attach_InvoiceNotices), new Action<InvoiceNotices>(this.detach_InvoiceNotices));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="Int")]
		public System.Nullable<int> InvoiceStatus
		{
			get
			{
				return this._InvoiceStatus;
			}
			set
			{
				if ((this._InvoiceStatus != value))
				{
					this.OnInvoiceStatusChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStatus = value;
					this.SendPropertyChanged("InvoiceStatus");
					this.OnInvoiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientInvoices_InvoiceNotices", Storage="_InvoiceNotices", ThisKey="ID", OtherKey="ClientInvoiceID")]
		public EntitySet<InvoiceNotices> InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices;
			}
			set
			{
				this._InvoiceNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientInvoices", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientInvoices.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientInvoices.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceNotices(InvoiceNotices entity)
		{
			this.SendPropertyChanging();
			entity.ClientInvoices = this;
		}
		
		private void detach_InvoiceNotices(InvoiceNotices entity)
		{
			this.SendPropertyChanging();
			entity.ClientInvoices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientInvoiceConsignees")]
	public partial class ClientInvoiceConsignees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Tel;
		
		private string _Email;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientInvoiceConsignees()
		{
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientInvoiceConsignees", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientInvoiceConsignees.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientInvoiceConsignees.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSupplierAddresses")]
	public partial class ClientSupplierAddresses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientSupplierID;
		
		private string _ContactID;
		
		private bool _IsDefault;
		
		private string _Address;
		
		private string _ZipCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Contacts> _Contacts;
		
		private EntityRef<ClientSuppliers> _ClientSuppliers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientSupplierIDChanging(string value);
    partial void OnClientSupplierIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientSupplierAddresses()
		{
			this._Contacts = default(EntityRef<Contacts>);
			this._ClientSuppliers = default(EntityRef<ClientSuppliers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientSupplierID
		{
			get
			{
				return this._ClientSupplierID;
			}
			set
			{
				if ((this._ClientSupplierID != value))
				{
					if (this._ClientSuppliers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._ClientSupplierID = value;
					this.SendPropertyChanged("ClientSupplierID");
					this.OnClientSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_ClientSupplierAddresses", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.ClientSupplierAddresses.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.ClientSupplierAddresses.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_ClientSupplierAddresses", Storage="_ClientSuppliers", ThisKey="ClientSupplierID", OtherKey="ID", IsForeignKey=true)]
		public ClientSuppliers ClientSuppliers
		{
			get
			{
				return this._ClientSuppliers.Entity;
			}
			set
			{
				ClientSuppliers previousValue = this._ClientSuppliers.Entity;
				if (((previousValue != value) 
							|| (this._ClientSuppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientSuppliers.Entity = null;
						previousValue.ClientSupplierAddresses.Remove(this);
					}
					this._ClientSuppliers.Entity = value;
					if ((value != null))
					{
						value.ClientSupplierAddresses.Add(this);
						this._ClientSupplierID = value.ID;
					}
					else
					{
						this._ClientSupplierID = default(string);
					}
					this.SendPropertyChanged("ClientSuppliers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DecHeads")]
	public partial class DecHeads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _OrderID;
		
		private string _CustomMaster;
		
		private string _CusDecStatus;
		
		private string _SeqNo;
		
		private string _PreEntryId;
		
		private string _EntryId;
		
		private string _IEPort;
		
		private string _ManualNo;
		
		private string _ContrNo;
		
		private string _IEDate;
		
		private System.Nullable<System.DateTime> _DDate;
		
		private string _ConsigneeName;
		
		private string _ConsigneeScc;
		
		private string _ConsigneeCusCode;
		
		private string _ConsigneeCiqCode;
		
		private string _ConsignorName;
		
		private string _ConsignorCode;
		
		private string _OwnerName;
		
		private string _OwnerScc;
		
		private string _OwnerCusCode;
		
		private string _OwnerCiqCode;
		
		private string _AgentName;
		
		private string _AgentScc;
		
		private string _AgentCusCode;
		
		private string _AgentCiqCode;
		
		private string _TrafMode;
		
		private string _TrafName;
		
		private string _VoyNo;
		
		private string _BillNo;
		
		private string _TradeMode;
		
		private string _CutMode;
		
		private string _LicenseNo;
		
		private string _TradeCountry;
		
		private string _DistinatePort;
		
		private int _TransMode;
		
		private string _FeeCurr;
		
		private System.Nullable<int> _FeeMark;
		
		private System.Nullable<decimal> _FeeRate;
		
		private string _InsurCurr;
		
		private System.Nullable<int> _InsurMark;
		
		private System.Nullable<decimal> _InsurRate;
		
		private string _OtherCurr;
		
		private System.Nullable<int> _OtherMark;
		
		private System.Nullable<decimal> _OtherRate;
		
		private int _PackNo;
		
		private string _WrapType;
		
		private decimal _GrossWt;
		
		private decimal _NetWt;
		
		private string _TradeAreaCode;
		
		private string _EntyPortCode;
		
		private string _GoodsPlace;
		
		private string _DespPortCode;
		
		private string _EntryType;
		
		private string _NoteS;
		
		private string _MarkNo;
		
		private string _PromiseItmes;
		
		private System.Nullable<int> _ChkSurety;
		
		private string _Type;
		
		private string _ApprNo;
		
		private int _DeclTrnRel;
		
		private System.Nullable<int> _BillType;
		
		private System.Nullable<decimal> _CustomsExchangeRate;
		
		private bool _IsInspection;
		
		private System.Nullable<bool> _IsQuarantine;
		
		private string _DeclareName;
		
		private string _TypistNo;
		
		private string _InputerID;
		
		private string _OrgCode;
		
		private string _VsaOrgCode;
		
		private string _InspOrgCode;
		
		private string _PurpOrgCode;
		
		private string _DespDate;
		
		private string _BLNo;
		
		private string _CorrelationNo;
		
		private string _CorrelationReasonFlag;
		
		private string _OrigBoxFlag;
		
		private string _SpecDeclFlag;
		
		private string _UseOrgPersonCode;
		
		private string _UseOrgPersonTel;
		
		private string _DomesticConsigneeEname;
		
		private string _OverseasConsignorCname;
		
		private string _OverseasConsignorAddr;
		
		private string _CmplDschrgDt;
		
		private System.DateTime _CreateTime;
		
		private string _MarkingUrl;
		
		private int _SwapStatus;
		
		private System.Nullable<bool> _IsSuccess;
		
		private EntitySet<DecLists> _DecLists;
		
		private EntityRef<DecTaxs> _DecTaxs;
		
		private EntitySet<DecHeadFiles> _DecHeadFiles;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnCustomMasterChanging(string value);
    partial void OnCustomMasterChanged();
    partial void OnCusDecStatusChanging(string value);
    partial void OnCusDecStatusChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnPreEntryIdChanging(string value);
    partial void OnPreEntryIdChanged();
    partial void OnEntryIdChanging(string value);
    partial void OnEntryIdChanged();
    partial void OnIEPortChanging(string value);
    partial void OnIEPortChanged();
    partial void OnManualNoChanging(string value);
    partial void OnManualNoChanged();
    partial void OnContrNoChanging(string value);
    partial void OnContrNoChanged();
    partial void OnIEDateChanging(string value);
    partial void OnIEDateChanged();
    partial void OnDDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDDateChanged();
    partial void OnConsigneeNameChanging(string value);
    partial void OnConsigneeNameChanged();
    partial void OnConsigneeSccChanging(string value);
    partial void OnConsigneeSccChanged();
    partial void OnConsigneeCusCodeChanging(string value);
    partial void OnConsigneeCusCodeChanged();
    partial void OnConsigneeCiqCodeChanging(string value);
    partial void OnConsigneeCiqCodeChanged();
    partial void OnConsignorNameChanging(string value);
    partial void OnConsignorNameChanged();
    partial void OnConsignorCodeChanging(string value);
    partial void OnConsignorCodeChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnOwnerSccChanging(string value);
    partial void OnOwnerSccChanged();
    partial void OnOwnerCusCodeChanging(string value);
    partial void OnOwnerCusCodeChanged();
    partial void OnOwnerCiqCodeChanging(string value);
    partial void OnOwnerCiqCodeChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    partial void OnAgentSccChanging(string value);
    partial void OnAgentSccChanged();
    partial void OnAgentCusCodeChanging(string value);
    partial void OnAgentCusCodeChanged();
    partial void OnAgentCiqCodeChanging(string value);
    partial void OnAgentCiqCodeChanged();
    partial void OnTrafModeChanging(string value);
    partial void OnTrafModeChanged();
    partial void OnTrafNameChanging(string value);
    partial void OnTrafNameChanged();
    partial void OnVoyNoChanging(string value);
    partial void OnVoyNoChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnTradeModeChanging(string value);
    partial void OnTradeModeChanged();
    partial void OnCutModeChanging(string value);
    partial void OnCutModeChanged();
    partial void OnLicenseNoChanging(string value);
    partial void OnLicenseNoChanged();
    partial void OnTradeCountryChanging(string value);
    partial void OnTradeCountryChanged();
    partial void OnDistinatePortChanging(string value);
    partial void OnDistinatePortChanged();
    partial void OnTransModeChanging(int value);
    partial void OnTransModeChanged();
    partial void OnFeeCurrChanging(string value);
    partial void OnFeeCurrChanged();
    partial void OnFeeMarkChanging(System.Nullable<int> value);
    partial void OnFeeMarkChanged();
    partial void OnFeeRateChanging(System.Nullable<decimal> value);
    partial void OnFeeRateChanged();
    partial void OnInsurCurrChanging(string value);
    partial void OnInsurCurrChanged();
    partial void OnInsurMarkChanging(System.Nullable<int> value);
    partial void OnInsurMarkChanged();
    partial void OnInsurRateChanging(System.Nullable<decimal> value);
    partial void OnInsurRateChanged();
    partial void OnOtherCurrChanging(string value);
    partial void OnOtherCurrChanged();
    partial void OnOtherMarkChanging(System.Nullable<int> value);
    partial void OnOtherMarkChanged();
    partial void OnOtherRateChanging(System.Nullable<decimal> value);
    partial void OnOtherRateChanged();
    partial void OnPackNoChanging(int value);
    partial void OnPackNoChanged();
    partial void OnWrapTypeChanging(string value);
    partial void OnWrapTypeChanged();
    partial void OnGrossWtChanging(decimal value);
    partial void OnGrossWtChanged();
    partial void OnNetWtChanging(decimal value);
    partial void OnNetWtChanged();
    partial void OnTradeAreaCodeChanging(string value);
    partial void OnTradeAreaCodeChanged();
    partial void OnEntyPortCodeChanging(string value);
    partial void OnEntyPortCodeChanged();
    partial void OnGoodsPlaceChanging(string value);
    partial void OnGoodsPlaceChanged();
    partial void OnDespPortCodeChanging(string value);
    partial void OnDespPortCodeChanged();
    partial void OnEntryTypeChanging(string value);
    partial void OnEntryTypeChanged();
    partial void OnNoteSChanging(string value);
    partial void OnNoteSChanged();
    partial void OnMarkNoChanging(string value);
    partial void OnMarkNoChanged();
    partial void OnPromiseItmesChanging(string value);
    partial void OnPromiseItmesChanged();
    partial void OnChkSuretyChanging(System.Nullable<int> value);
    partial void OnChkSuretyChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnApprNoChanging(string value);
    partial void OnApprNoChanged();
    partial void OnDeclTrnRelChanging(int value);
    partial void OnDeclTrnRelChanged();
    partial void OnBillTypeChanging(System.Nullable<int> value);
    partial void OnBillTypeChanged();
    partial void OnCustomsExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnCustomsExchangeRateChanged();
    partial void OnIsInspectionChanging(bool value);
    partial void OnIsInspectionChanged();
    partial void OnIsQuarantineChanging(System.Nullable<bool> value);
    partial void OnIsQuarantineChanged();
    partial void OnDeclareNameChanging(string value);
    partial void OnDeclareNameChanged();
    partial void OnTypistNoChanging(string value);
    partial void OnTypistNoChanged();
    partial void OnInputerIDChanging(string value);
    partial void OnInputerIDChanged();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnVsaOrgCodeChanging(string value);
    partial void OnVsaOrgCodeChanged();
    partial void OnInspOrgCodeChanging(string value);
    partial void OnInspOrgCodeChanged();
    partial void OnPurpOrgCodeChanging(string value);
    partial void OnPurpOrgCodeChanged();
    partial void OnDespDateChanging(string value);
    partial void OnDespDateChanged();
    partial void OnBLNoChanging(string value);
    partial void OnBLNoChanged();
    partial void OnCorrelationNoChanging(string value);
    partial void OnCorrelationNoChanged();
    partial void OnCorrelationReasonFlagChanging(string value);
    partial void OnCorrelationReasonFlagChanged();
    partial void OnOrigBoxFlagChanging(string value);
    partial void OnOrigBoxFlagChanged();
    partial void OnSpecDeclFlagChanging(string value);
    partial void OnSpecDeclFlagChanged();
    partial void OnUseOrgPersonCodeChanging(string value);
    partial void OnUseOrgPersonCodeChanged();
    partial void OnUseOrgPersonTelChanging(string value);
    partial void OnUseOrgPersonTelChanged();
    partial void OnDomesticConsigneeEnameChanging(string value);
    partial void OnDomesticConsigneeEnameChanged();
    partial void OnOverseasConsignorCnameChanging(string value);
    partial void OnOverseasConsignorCnameChanged();
    partial void OnOverseasConsignorAddrChanging(string value);
    partial void OnOverseasConsignorAddrChanged();
    partial void OnCmplDschrgDtChanging(string value);
    partial void OnCmplDschrgDtChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnMarkingUrlChanging(string value);
    partial void OnMarkingUrlChanged();
    partial void OnSwapStatusChanging(int value);
    partial void OnSwapStatusChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    #endregion
		
		public DecHeads()
		{
			this._DecLists = new EntitySet<DecLists>(new Action<DecLists>(this.attach_DecLists), new Action<DecLists>(this.detach_DecLists));
			this._DecTaxs = default(EntityRef<DecTaxs>);
			this._DecHeadFiles = new EntitySet<DecHeadFiles>(new Action<DecHeadFiles>(this.attach_DecHeadFiles), new Action<DecHeadFiles>(this.detach_DecHeadFiles));
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomMaster", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string CustomMaster
		{
			get
			{
				return this._CustomMaster;
			}
			set
			{
				if ((this._CustomMaster != value))
				{
					this.OnCustomMasterChanging(value);
					this.SendPropertyChanging();
					this._CustomMaster = value;
					this.SendPropertyChanged("CustomMaster");
					this.OnCustomMasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusDecStatus", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string CusDecStatus
		{
			get
			{
				return this._CusDecStatus;
			}
			set
			{
				if ((this._CusDecStatus != value))
				{
					this.OnCusDecStatusChanging(value);
					this.SendPropertyChanging();
					this._CusDecStatus = value;
					this.SendPropertyChanged("CusDecStatus");
					this.OnCusDecStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreEntryId", DbType="VarChar(50)")]
		public string PreEntryId
		{
			get
			{
				return this._PreEntryId;
			}
			set
			{
				if ((this._PreEntryId != value))
				{
					this.OnPreEntryIdChanging(value);
					this.SendPropertyChanging();
					this._PreEntryId = value;
					this.SendPropertyChanged("PreEntryId");
					this.OnPreEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryId", DbType="VarChar(50)")]
		public string EntryId
		{
			get
			{
				return this._EntryId;
			}
			set
			{
				if ((this._EntryId != value))
				{
					this.OnEntryIdChanging(value);
					this.SendPropertyChanging();
					this._EntryId = value;
					this.SendPropertyChanged("EntryId");
					this.OnEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IEPort", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IEPort
		{
			get
			{
				return this._IEPort;
			}
			set
			{
				if ((this._IEPort != value))
				{
					this.OnIEPortChanging(value);
					this.SendPropertyChanging();
					this._IEPort = value;
					this.SendPropertyChanged("IEPort");
					this.OnIEPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualNo", DbType="VarChar(12)")]
		public string ManualNo
		{
			get
			{
				return this._ManualNo;
			}
			set
			{
				if ((this._ManualNo != value))
				{
					this.OnManualNoChanging(value);
					this.SendPropertyChanging();
					this._ManualNo = value;
					this.SendPropertyChanged("ManualNo");
					this.OnManualNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrNo", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ContrNo
		{
			get
			{
				return this._ContrNo;
			}
			set
			{
				if ((this._ContrNo != value))
				{
					this.OnContrNoChanging(value);
					this.SendPropertyChanging();
					this._ContrNo = value;
					this.SendPropertyChanged("ContrNo");
					this.OnContrNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IEDate", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string IEDate
		{
			get
			{
				return this._IEDate;
			}
			set
			{
				if ((this._IEDate != value))
				{
					this.OnIEDateChanging(value);
					this.SendPropertyChanging();
					this._IEDate = value;
					this.SendPropertyChanged("IEDate");
					this.OnIEDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDate
		{
			get
			{
				return this._DDate;
			}
			set
			{
				if ((this._DDate != value))
				{
					this.OnDDateChanging(value);
					this.SendPropertyChanging();
					this._DDate = value;
					this.SendPropertyChanged("DDate");
					this.OnDDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string ConsigneeName
		{
			get
			{
				return this._ConsigneeName;
			}
			set
			{
				if ((this._ConsigneeName != value))
				{
					this.OnConsigneeNameChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeName = value;
					this.SendPropertyChanged("ConsigneeName");
					this.OnConsigneeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeScc", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string ConsigneeScc
		{
			get
			{
				return this._ConsigneeScc;
			}
			set
			{
				if ((this._ConsigneeScc != value))
				{
					this.OnConsigneeSccChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeScc = value;
					this.SendPropertyChanged("ConsigneeScc");
					this.OnConsigneeSccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeCusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ConsigneeCusCode
		{
			get
			{
				return this._ConsigneeCusCode;
			}
			set
			{
				if ((this._ConsigneeCusCode != value))
				{
					this.OnConsigneeCusCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeCusCode = value;
					this.SendPropertyChanged("ConsigneeCusCode");
					this.OnConsigneeCusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeCiqCode", DbType="VarChar(10)")]
		public string ConsigneeCiqCode
		{
			get
			{
				return this._ConsigneeCiqCode;
			}
			set
			{
				if ((this._ConsigneeCiqCode != value))
				{
					this.OnConsigneeCiqCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeCiqCode = value;
					this.SendPropertyChanged("ConsigneeCiqCode");
					this.OnConsigneeCiqCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignorName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ConsignorName
		{
			get
			{
				return this._ConsignorName;
			}
			set
			{
				if ((this._ConsignorName != value))
				{
					this.OnConsignorNameChanging(value);
					this.SendPropertyChanging();
					this._ConsignorName = value;
					this.SendPropertyChanged("ConsignorName");
					this.OnConsignorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignorCode", DbType="NVarChar(50)")]
		public string ConsignorCode
		{
			get
			{
				return this._ConsignorCode;
			}
			set
			{
				if ((this._ConsignorCode != value))
				{
					this.OnConsignorCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsignorCode = value;
					this.SendPropertyChanged("ConsignorCode");
					this.OnConsignorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerScc", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string OwnerScc
		{
			get
			{
				return this._OwnerScc;
			}
			set
			{
				if ((this._OwnerScc != value))
				{
					this.OnOwnerSccChanging(value);
					this.SendPropertyChanging();
					this._OwnerScc = value;
					this.SendPropertyChanged("OwnerScc");
					this.OnOwnerSccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string OwnerCusCode
		{
			get
			{
				return this._OwnerCusCode;
			}
			set
			{
				if ((this._OwnerCusCode != value))
				{
					this.OnOwnerCusCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCusCode = value;
					this.SendPropertyChanged("OwnerCusCode");
					this.OnOwnerCusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCiqCode", DbType="VarChar(10)")]
		public string OwnerCiqCode
		{
			get
			{
				return this._OwnerCiqCode;
			}
			set
			{
				if ((this._OwnerCiqCode != value))
				{
					this.OnOwnerCiqCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCiqCode = value;
					this.SendPropertyChanged("OwnerCiqCode");
					this.OnOwnerCiqCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentScc", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string AgentScc
		{
			get
			{
				return this._AgentScc;
			}
			set
			{
				if ((this._AgentScc != value))
				{
					this.OnAgentSccChanging(value);
					this.SendPropertyChanging();
					this._AgentScc = value;
					this.SendPropertyChanged("AgentScc");
					this.OnAgentSccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AgentCusCode
		{
			get
			{
				return this._AgentCusCode;
			}
			set
			{
				if ((this._AgentCusCode != value))
				{
					this.OnAgentCusCodeChanging(value);
					this.SendPropertyChanging();
					this._AgentCusCode = value;
					this.SendPropertyChanged("AgentCusCode");
					this.OnAgentCusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCiqCode", DbType="VarChar(10)")]
		public string AgentCiqCode
		{
			get
			{
				return this._AgentCiqCode;
			}
			set
			{
				if ((this._AgentCiqCode != value))
				{
					this.OnAgentCiqCodeChanging(value);
					this.SendPropertyChanging();
					this._AgentCiqCode = value;
					this.SendPropertyChanged("AgentCiqCode");
					this.OnAgentCiqCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TrafMode
		{
			get
			{
				return this._TrafMode;
			}
			set
			{
				if ((this._TrafMode != value))
				{
					this.OnTrafModeChanging(value);
					this.SendPropertyChanging();
					this._TrafMode = value;
					this.SendPropertyChanged("TrafMode");
					this.OnTrafModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafName", DbType="VarChar(50)")]
		public string TrafName
		{
			get
			{
				return this._TrafName;
			}
			set
			{
				if ((this._TrafName != value))
				{
					this.OnTrafNameChanging(value);
					this.SendPropertyChanging();
					this._TrafName = value;
					this.SendPropertyChanged("TrafName");
					this.OnTrafNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoyNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoyNo
		{
			get
			{
				return this._VoyNo;
			}
			set
			{
				if ((this._VoyNo != value))
				{
					this.OnVoyNoChanging(value);
					this.SendPropertyChanging();
					this._VoyNo = value;
					this.SendPropertyChanged("VoyNo");
					this.OnVoyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeMode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string TradeMode
		{
			get
			{
				return this._TradeMode;
			}
			set
			{
				if ((this._TradeMode != value))
				{
					this.OnTradeModeChanging(value);
					this.SendPropertyChanging();
					this._TradeMode = value;
					this.SendPropertyChanged("TradeMode");
					this.OnTradeModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutMode", DbType="VarChar(3)")]
		public string CutMode
		{
			get
			{
				return this._CutMode;
			}
			set
			{
				if ((this._CutMode != value))
				{
					this.OnCutModeChanging(value);
					this.SendPropertyChanging();
					this._CutMode = value;
					this.SendPropertyChanged("CutMode");
					this.OnCutModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="VarChar(20)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this.OnLicenseNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseNo = value;
					this.SendPropertyChanged("LicenseNo");
					this.OnLicenseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeCountry", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string TradeCountry
		{
			get
			{
				return this._TradeCountry;
			}
			set
			{
				if ((this._TradeCountry != value))
				{
					this.OnTradeCountryChanging(value);
					this.SendPropertyChanging();
					this._TradeCountry = value;
					this.SendPropertyChanged("TradeCountry");
					this.OnTradeCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistinatePort", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string DistinatePort
		{
			get
			{
				return this._DistinatePort;
			}
			set
			{
				if ((this._DistinatePort != value))
				{
					this.OnDistinatePortChanging(value);
					this.SendPropertyChanging();
					this._DistinatePort = value;
					this.SendPropertyChanged("DistinatePort");
					this.OnDistinatePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMode", DbType="Int NOT NULL")]
		public int TransMode
		{
			get
			{
				return this._TransMode;
			}
			set
			{
				if ((this._TransMode != value))
				{
					this.OnTransModeChanging(value);
					this.SendPropertyChanging();
					this._TransMode = value;
					this.SendPropertyChanged("TransMode");
					this.OnTransModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeCurr", DbType="VarChar(3)")]
		public string FeeCurr
		{
			get
			{
				return this._FeeCurr;
			}
			set
			{
				if ((this._FeeCurr != value))
				{
					this.OnFeeCurrChanging(value);
					this.SendPropertyChanging();
					this._FeeCurr = value;
					this.SendPropertyChanged("FeeCurr");
					this.OnFeeCurrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeMark", DbType="Int")]
		public System.Nullable<int> FeeMark
		{
			get
			{
				return this._FeeMark;
			}
			set
			{
				if ((this._FeeMark != value))
				{
					this.OnFeeMarkChanging(value);
					this.SendPropertyChanging();
					this._FeeMark = value;
					this.SendPropertyChanged("FeeMark");
					this.OnFeeMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeRate", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> FeeRate
		{
			get
			{
				return this._FeeRate;
			}
			set
			{
				if ((this._FeeRate != value))
				{
					this.OnFeeRateChanging(value);
					this.SendPropertyChanging();
					this._FeeRate = value;
					this.SendPropertyChanged("FeeRate");
					this.OnFeeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurCurr", DbType="VarChar(3)")]
		public string InsurCurr
		{
			get
			{
				return this._InsurCurr;
			}
			set
			{
				if ((this._InsurCurr != value))
				{
					this.OnInsurCurrChanging(value);
					this.SendPropertyChanging();
					this._InsurCurr = value;
					this.SendPropertyChanged("InsurCurr");
					this.OnInsurCurrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurMark", DbType="Int")]
		public System.Nullable<int> InsurMark
		{
			get
			{
				return this._InsurMark;
			}
			set
			{
				if ((this._InsurMark != value))
				{
					this.OnInsurMarkChanging(value);
					this.SendPropertyChanging();
					this._InsurMark = value;
					this.SendPropertyChanged("InsurMark");
					this.OnInsurMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurRate", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> InsurRate
		{
			get
			{
				return this._InsurRate;
			}
			set
			{
				if ((this._InsurRate != value))
				{
					this.OnInsurRateChanging(value);
					this.SendPropertyChanging();
					this._InsurRate = value;
					this.SendPropertyChanged("InsurRate");
					this.OnInsurRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCurr", DbType="VarChar(3)")]
		public string OtherCurr
		{
			get
			{
				return this._OtherCurr;
			}
			set
			{
				if ((this._OtherCurr != value))
				{
					this.OnOtherCurrChanging(value);
					this.SendPropertyChanging();
					this._OtherCurr = value;
					this.SendPropertyChanged("OtherCurr");
					this.OnOtherCurrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMark", DbType="Int")]
		public System.Nullable<int> OtherMark
		{
			get
			{
				return this._OtherMark;
			}
			set
			{
				if ((this._OtherMark != value))
				{
					this.OnOtherMarkChanging(value);
					this.SendPropertyChanging();
					this._OtherMark = value;
					this.SendPropertyChanged("OtherMark");
					this.OnOtherMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherRate", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> OtherRate
		{
			get
			{
				return this._OtherRate;
			}
			set
			{
				if ((this._OtherRate != value))
				{
					this.OnOtherRateChanging(value);
					this.SendPropertyChanging();
					this._OtherRate = value;
					this.SendPropertyChanged("OtherRate");
					this.OnOtherRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackNo", DbType="Int NOT NULL")]
		public int PackNo
		{
			get
			{
				return this._PackNo;
			}
			set
			{
				if ((this._PackNo != value))
				{
					this.OnPackNoChanging(value);
					this.SendPropertyChanging();
					this._PackNo = value;
					this.SendPropertyChanged("PackNo");
					this.OnPackNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrapType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string WrapType
		{
			get
			{
				return this._WrapType;
			}
			set
			{
				if ((this._WrapType != value))
				{
					this.OnWrapTypeChanging(value);
					this.SendPropertyChanging();
					this._WrapType = value;
					this.SendPropertyChanged("WrapType");
					this.OnWrapTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWt", DbType="Decimal(19,5) NOT NULL")]
		public decimal GrossWt
		{
			get
			{
				return this._GrossWt;
			}
			set
			{
				if ((this._GrossWt != value))
				{
					this.OnGrossWtChanging(value);
					this.SendPropertyChanging();
					this._GrossWt = value;
					this.SendPropertyChanged("GrossWt");
					this.OnGrossWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWt", DbType="Decimal(19,5) NOT NULL")]
		public decimal NetWt
		{
			get
			{
				return this._NetWt;
			}
			set
			{
				if ((this._NetWt != value))
				{
					this.OnNetWtChanging(value);
					this.SendPropertyChanging();
					this._NetWt = value;
					this.SendPropertyChanged("NetWt");
					this.OnNetWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeAreaCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string TradeAreaCode
		{
			get
			{
				return this._TradeAreaCode;
			}
			set
			{
				if ((this._TradeAreaCode != value))
				{
					this.OnTradeAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._TradeAreaCode = value;
					this.SendPropertyChanged("TradeAreaCode");
					this.OnTradeAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntyPortCode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string EntyPortCode
		{
			get
			{
				return this._EntyPortCode;
			}
			set
			{
				if ((this._EntyPortCode != value))
				{
					this.OnEntyPortCodeChanging(value);
					this.SendPropertyChanging();
					this._EntyPortCode = value;
					this.SendPropertyChanged("EntyPortCode");
					this.OnEntyPortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsPlace", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GoodsPlace
		{
			get
			{
				return this._GoodsPlace;
			}
			set
			{
				if ((this._GoodsPlace != value))
				{
					this.OnGoodsPlaceChanging(value);
					this.SendPropertyChanging();
					this._GoodsPlace = value;
					this.SendPropertyChanged("GoodsPlace");
					this.OnGoodsPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespPortCode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string DespPortCode
		{
			get
			{
				return this._DespPortCode;
			}
			set
			{
				if ((this._DespPortCode != value))
				{
					this.OnDespPortCodeChanging(value);
					this.SendPropertyChanging();
					this._DespPortCode = value;
					this.SendPropertyChanged("DespPortCode");
					this.OnDespPortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string EntryType
		{
			get
			{
				return this._EntryType;
			}
			set
			{
				if ((this._EntryType != value))
				{
					this.OnEntryTypeChanging(value);
					this.SendPropertyChanging();
					this._EntryType = value;
					this.SendPropertyChanged("EntryType");
					this.OnEntryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteS", DbType="NVarChar(255)")]
		public string NoteS
		{
			get
			{
				return this._NoteS;
			}
			set
			{
				if ((this._NoteS != value))
				{
					this.OnNoteSChanging(value);
					this.SendPropertyChanging();
					this._NoteS = value;
					this.SendPropertyChanged("NoteS");
					this.OnNoteSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkNo", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string MarkNo
		{
			get
			{
				return this._MarkNo;
			}
			set
			{
				if ((this._MarkNo != value))
				{
					this.OnMarkNoChanging(value);
					this.SendPropertyChanging();
					this._MarkNo = value;
					this.SendPropertyChanged("MarkNo");
					this.OnMarkNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromiseItmes", DbType="VarChar(32)")]
		public string PromiseItmes
		{
			get
			{
				return this._PromiseItmes;
			}
			set
			{
				if ((this._PromiseItmes != value))
				{
					this.OnPromiseItmesChanging(value);
					this.SendPropertyChanging();
					this._PromiseItmes = value;
					this.SendPropertyChanged("PromiseItmes");
					this.OnPromiseItmesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChkSurety", DbType="Int")]
		public System.Nullable<int> ChkSurety
		{
			get
			{
				return this._ChkSurety;
			}
			set
			{
				if ((this._ChkSurety != value))
				{
					this.OnChkSuretyChanging(value);
					this.SendPropertyChanging();
					this._ChkSurety = value;
					this.SendPropertyChanged("ChkSurety");
					this.OnChkSuretyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprNo", DbType="VarChar(50)")]
		public string ApprNo
		{
			get
			{
				return this._ApprNo;
			}
			set
			{
				if ((this._ApprNo != value))
				{
					this.OnApprNoChanging(value);
					this.SendPropertyChanging();
					this._ApprNo = value;
					this.SendPropertyChanged("ApprNo");
					this.OnApprNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclTrnRel", DbType="Int NOT NULL")]
		public int DeclTrnRel
		{
			get
			{
				return this._DeclTrnRel;
			}
			set
			{
				if ((this._DeclTrnRel != value))
				{
					this.OnDeclTrnRelChanging(value);
					this.SendPropertyChanging();
					this._DeclTrnRel = value;
					this.SendPropertyChanged("DeclTrnRel");
					this.OnDeclTrnRelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillType", DbType="Int")]
		public System.Nullable<int> BillType
		{
			get
			{
				return this._BillType;
			}
			set
			{
				if ((this._BillType != value))
				{
					this.OnBillTypeChanging(value);
					this.SendPropertyChanging();
					this._BillType = value;
					this.SendPropertyChanged("BillType");
					this.OnBillTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CustomsExchangeRate
		{
			get
			{
				return this._CustomsExchangeRate;
			}
			set
			{
				if ((this._CustomsExchangeRate != value))
				{
					this.OnCustomsExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._CustomsExchangeRate = value;
					this.SendPropertyChanged("CustomsExchangeRate");
					this.OnCustomsExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInspection", DbType="Bit NOT NULL")]
		public bool IsInspection
		{
			get
			{
				return this._IsInspection;
			}
			set
			{
				if ((this._IsInspection != value))
				{
					this.OnIsInspectionChanging(value);
					this.SendPropertyChanging();
					this._IsInspection = value;
					this.SendPropertyChanged("IsInspection");
					this.OnIsInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuarantine", DbType="Bit")]
		public System.Nullable<bool> IsQuarantine
		{
			get
			{
				return this._IsQuarantine;
			}
			set
			{
				if ((this._IsQuarantine != value))
				{
					this.OnIsQuarantineChanging(value);
					this.SendPropertyChanging();
					this._IsQuarantine = value;
					this.SendPropertyChanged("IsQuarantine");
					this.OnIsQuarantineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareName", DbType="NVarChar(50)")]
		public string DeclareName
		{
			get
			{
				return this._DeclareName;
			}
			set
			{
				if ((this._DeclareName != value))
				{
					this.OnDeclareNameChanging(value);
					this.SendPropertyChanging();
					this._DeclareName = value;
					this.SendPropertyChanged("DeclareName");
					this.OnDeclareNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypistNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypistNo
		{
			get
			{
				return this._TypistNo;
			}
			set
			{
				if ((this._TypistNo != value))
				{
					this.OnTypistNoChanging(value);
					this.SendPropertyChanging();
					this._TypistNo = value;
					this.SendPropertyChanged("TypistNo");
					this.OnTypistNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InputerID
		{
			get
			{
				return this._InputerID;
			}
			set
			{
				if ((this._InputerID != value))
				{
					this.OnInputerIDChanging(value);
					this.SendPropertyChanging();
					this._InputerID = value;
					this.SendPropertyChanged("InputerID");
					this.OnInputerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VsaOrgCode", DbType="VarChar(10)")]
		public string VsaOrgCode
		{
			get
			{
				return this._VsaOrgCode;
			}
			set
			{
				if ((this._VsaOrgCode != value))
				{
					this.OnVsaOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._VsaOrgCode = value;
					this.SendPropertyChanged("VsaOrgCode");
					this.OnVsaOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspOrgCode", DbType="VarChar(10)")]
		public string InspOrgCode
		{
			get
			{
				return this._InspOrgCode;
			}
			set
			{
				if ((this._InspOrgCode != value))
				{
					this.OnInspOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._InspOrgCode = value;
					this.SendPropertyChanged("InspOrgCode");
					this.OnInspOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurpOrgCode", DbType="VarChar(10)")]
		public string PurpOrgCode
		{
			get
			{
				return this._PurpOrgCode;
			}
			set
			{
				if ((this._PurpOrgCode != value))
				{
					this.OnPurpOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._PurpOrgCode = value;
					this.SendPropertyChanged("PurpOrgCode");
					this.OnPurpOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespDate", DbType="VarChar(8)")]
		public string DespDate
		{
			get
			{
				return this._DespDate;
			}
			set
			{
				if ((this._DespDate != value))
				{
					this.OnDespDateChanging(value);
					this.SendPropertyChanging();
					this._DespDate = value;
					this.SendPropertyChanged("DespDate");
					this.OnDespDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLNo", DbType="VarChar(50)")]
		public string BLNo
		{
			get
			{
				return this._BLNo;
			}
			set
			{
				if ((this._BLNo != value))
				{
					this.OnBLNoChanging(value);
					this.SendPropertyChanging();
					this._BLNo = value;
					this.SendPropertyChanged("BLNo");
					this.OnBLNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrelationNo", DbType="NVarChar(500)")]
		public string CorrelationNo
		{
			get
			{
				return this._CorrelationNo;
			}
			set
			{
				if ((this._CorrelationNo != value))
				{
					this.OnCorrelationNoChanging(value);
					this.SendPropertyChanging();
					this._CorrelationNo = value;
					this.SendPropertyChanged("CorrelationNo");
					this.OnCorrelationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrelationReasonFlag", DbType="VarChar(2)")]
		public string CorrelationReasonFlag
		{
			get
			{
				return this._CorrelationReasonFlag;
			}
			set
			{
				if ((this._CorrelationReasonFlag != value))
				{
					this.OnCorrelationReasonFlagChanging(value);
					this.SendPropertyChanging();
					this._CorrelationReasonFlag = value;
					this.SendPropertyChanged("CorrelationReasonFlag");
					this.OnCorrelationReasonFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigBoxFlag", DbType="VarChar(1)")]
		public string OrigBoxFlag
		{
			get
			{
				return this._OrigBoxFlag;
			}
			set
			{
				if ((this._OrigBoxFlag != value))
				{
					this.OnOrigBoxFlagChanging(value);
					this.SendPropertyChanging();
					this._OrigBoxFlag = value;
					this.SendPropertyChanged("OrigBoxFlag");
					this.OnOrigBoxFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecDeclFlag", DbType="VarChar(10)")]
		public string SpecDeclFlag
		{
			get
			{
				return this._SpecDeclFlag;
			}
			set
			{
				if ((this._SpecDeclFlag != value))
				{
					this.OnSpecDeclFlagChanging(value);
					this.SendPropertyChanging();
					this._SpecDeclFlag = value;
					this.SendPropertyChanged("SpecDeclFlag");
					this.OnSpecDeclFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOrgPersonCode", DbType="NVarChar(50)")]
		public string UseOrgPersonCode
		{
			get
			{
				return this._UseOrgPersonCode;
			}
			set
			{
				if ((this._UseOrgPersonCode != value))
				{
					this.OnUseOrgPersonCodeChanging(value);
					this.SendPropertyChanging();
					this._UseOrgPersonCode = value;
					this.SendPropertyChanged("UseOrgPersonCode");
					this.OnUseOrgPersonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOrgPersonTel", DbType="VarChar(20)")]
		public string UseOrgPersonTel
		{
			get
			{
				return this._UseOrgPersonTel;
			}
			set
			{
				if ((this._UseOrgPersonTel != value))
				{
					this.OnUseOrgPersonTelChanging(value);
					this.SendPropertyChanging();
					this._UseOrgPersonTel = value;
					this.SendPropertyChanged("UseOrgPersonTel");
					this.OnUseOrgPersonTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticConsigneeEname", DbType="VarChar(400)")]
		public string DomesticConsigneeEname
		{
			get
			{
				return this._DomesticConsigneeEname;
			}
			set
			{
				if ((this._DomesticConsigneeEname != value))
				{
					this.OnDomesticConsigneeEnameChanging(value);
					this.SendPropertyChanging();
					this._DomesticConsigneeEname = value;
					this.SendPropertyChanged("DomesticConsigneeEname");
					this.OnDomesticConsigneeEnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverseasConsignorCname", DbType="NVarChar(150)")]
		public string OverseasConsignorCname
		{
			get
			{
				return this._OverseasConsignorCname;
			}
			set
			{
				if ((this._OverseasConsignorCname != value))
				{
					this.OnOverseasConsignorCnameChanging(value);
					this.SendPropertyChanging();
					this._OverseasConsignorCname = value;
					this.SendPropertyChanged("OverseasConsignorCname");
					this.OnOverseasConsignorCnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverseasConsignorAddr", DbType="NVarChar(100)")]
		public string OverseasConsignorAddr
		{
			get
			{
				return this._OverseasConsignorAddr;
			}
			set
			{
				if ((this._OverseasConsignorAddr != value))
				{
					this.OnOverseasConsignorAddrChanging(value);
					this.SendPropertyChanging();
					this._OverseasConsignorAddr = value;
					this.SendPropertyChanged("OverseasConsignorAddr");
					this.OnOverseasConsignorAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmplDschrgDt", DbType="VarChar(8)")]
		public string CmplDschrgDt
		{
			get
			{
				return this._CmplDschrgDt;
			}
			set
			{
				if ((this._CmplDschrgDt != value))
				{
					this.OnCmplDschrgDtChanging(value);
					this.SendPropertyChanging();
					this._CmplDschrgDt = value;
					this.SendPropertyChanged("CmplDschrgDt");
					this.OnCmplDschrgDtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingUrl", DbType="VarChar(200)")]
		public string MarkingUrl
		{
			get
			{
				return this._MarkingUrl;
			}
			set
			{
				if ((this._MarkingUrl != value))
				{
					this.OnMarkingUrlChanging(value);
					this.SendPropertyChanging();
					this._MarkingUrl = value;
					this.SendPropertyChanged("MarkingUrl");
					this.OnMarkingUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapStatus", DbType="Int NOT NULL")]
		public int SwapStatus
		{
			get
			{
				return this._SwapStatus;
			}
			set
			{
				if ((this._SwapStatus != value))
				{
					this.OnSwapStatusChanging(value);
					this.SendPropertyChanging();
					this._SwapStatus = value;
					this.SendPropertyChanged("SwapStatus");
					this.OnSwapStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecLists", Storage="_DecLists", ThisKey="ID", OtherKey="DeclarationID")]
		public EntitySet<DecLists> DecLists
		{
			get
			{
				return this._DecLists;
			}
			set
			{
				this._DecLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecTaxs", Storage="_DecTaxs", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public DecTaxs DecTaxs
		{
			get
			{
				return this._DecTaxs.Entity;
			}
			set
			{
				DecTaxs previousValue = this._DecTaxs.Entity;
				if (((previousValue != value) 
							|| (this._DecTaxs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecTaxs.Entity = null;
						previousValue.DecHeads = null;
					}
					this._DecTaxs.Entity = value;
					if ((value != null))
					{
						value.DecHeads = this;
					}
					this.SendPropertyChanged("DecTaxs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecHeadFiles", Storage="_DecHeadFiles", ThisKey="ID", OtherKey="DecHeadID")]
		public EntitySet<DecHeadFiles> DecHeadFiles
		{
			get
			{
				return this._DecHeadFiles;
			}
			set
			{
				this._DecHeadFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_DecHeads", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.DecHeads.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.DecHeads.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DecLists(DecLists entity)
		{
			this.SendPropertyChanging();
			entity.DecHeads = this;
		}
		
		private void detach_DecLists(DecLists entity)
		{
			this.SendPropertyChanging();
			entity.DecHeads = null;
		}
		
		private void attach_DecHeadFiles(DecHeadFiles entity)
		{
			this.SendPropertyChanging();
			entity.DecHeads = this;
		}
		
		private void detach_DecHeadFiles(DecHeadFiles entity)
		{
			this.SendPropertyChanging();
			entity.DecHeads = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _AdminID;
		
		private string _UserID;
		
		private string _ClientID;
		
		private string _ClientAgreementID;
		
		private string _Currency;
		
		private System.Nullable<decimal> _CustomsExchangeRate;
		
		private System.Nullable<decimal> _RealExchangeRate;
		
		private bool _IsFullVehicle;
		
		private bool _IsLoan;
		
		private System.Nullable<int> _PackNo;
		
		private string _WarpType;
		
		private decimal _DeclarePrice;
		
		private int _InvoiceStatus;
		
		private decimal _PaidExchangeAmount;
		
		private bool _IsHangUp;
		
		private int _OrderStatus;
		
		private string _MainOrderId;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<DecHeads> _DecHeads;
		
		private EntitySet<DecLists> _DecLists;
		
		private EntitySet<OrderItems> _OrderItems;
		
		private EntitySet<OrderPayExchangeSuppliers> _OrderPayExchangeSuppliers;
		
		private EntitySet<OrderTraces> _OrderTraces;
		
		private EntitySet<OrderConsignees> _OrderConsignees;
		
		private EntitySet<OrderReceipts> _OrderReceipts;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<ClientAgreements> _ClientAgreements;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientAgreementIDChanging(string value);
    partial void OnClientAgreementIDChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCustomsExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnCustomsExchangeRateChanged();
    partial void OnRealExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnRealExchangeRateChanged();
    partial void OnIsFullVehicleChanging(bool value);
    partial void OnIsFullVehicleChanged();
    partial void OnIsLoanChanging(bool value);
    partial void OnIsLoanChanged();
    partial void OnPackNoChanging(System.Nullable<int> value);
    partial void OnPackNoChanged();
    partial void OnWarpTypeChanging(string value);
    partial void OnWarpTypeChanged();
    partial void OnDeclarePriceChanging(decimal value);
    partial void OnDeclarePriceChanged();
    partial void OnInvoiceStatusChanging(int value);
    partial void OnInvoiceStatusChanged();
    partial void OnPaidExchangeAmountChanging(decimal value);
    partial void OnPaidExchangeAmountChanged();
    partial void OnIsHangUpChanging(bool value);
    partial void OnIsHangUpChanged();
    partial void OnOrderStatusChanging(int value);
    partial void OnOrderStatusChanged();
    partial void OnMainOrderIdChanging(string value);
    partial void OnMainOrderIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Orders()
		{
			this._DecHeads = new EntitySet<DecHeads>(new Action<DecHeads>(this.attach_DecHeads), new Action<DecHeads>(this.detach_DecHeads));
			this._DecLists = new EntitySet<DecLists>(new Action<DecLists>(this.attach_DecLists), new Action<DecLists>(this.detach_DecLists));
			this._OrderItems = new EntitySet<OrderItems>(new Action<OrderItems>(this.attach_OrderItems), new Action<OrderItems>(this.detach_OrderItems));
			this._OrderPayExchangeSuppliers = new EntitySet<OrderPayExchangeSuppliers>(new Action<OrderPayExchangeSuppliers>(this.attach_OrderPayExchangeSuppliers), new Action<OrderPayExchangeSuppliers>(this.detach_OrderPayExchangeSuppliers));
			this._OrderTraces = new EntitySet<OrderTraces>(new Action<OrderTraces>(this.attach_OrderTraces), new Action<OrderTraces>(this.detach_OrderTraces));
			this._OrderConsignees = new EntitySet<OrderConsignees>(new Action<OrderConsignees>(this.attach_OrderConsignees), new Action<OrderConsignees>(this.detach_OrderConsignees));
			this._OrderReceipts = new EntitySet<OrderReceipts>(new Action<OrderReceipts>(this.attach_OrderReceipts), new Action<OrderReceipts>(this.detach_OrderReceipts));
			this._Clients = default(EntityRef<Clients>);
			this._ClientAgreements = default(EntityRef<ClientAgreements>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAgreementID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientAgreementID
		{
			get
			{
				return this._ClientAgreementID;
			}
			set
			{
				if ((this._ClientAgreementID != value))
				{
					if (this._ClientAgreements.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientAgreementIDChanging(value);
					this.SendPropertyChanging();
					this._ClientAgreementID = value;
					this.SendPropertyChanged("ClientAgreementID");
					this.OnClientAgreementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CustomsExchangeRate
		{
			get
			{
				return this._CustomsExchangeRate;
			}
			set
			{
				if ((this._CustomsExchangeRate != value))
				{
					this.OnCustomsExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._CustomsExchangeRate = value;
					this.SendPropertyChanged("CustomsExchangeRate");
					this.OnCustomsExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> RealExchangeRate
		{
			get
			{
				return this._RealExchangeRate;
			}
			set
			{
				if ((this._RealExchangeRate != value))
				{
					this.OnRealExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._RealExchangeRate = value;
					this.SendPropertyChanged("RealExchangeRate");
					this.OnRealExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullVehicle", DbType="Bit NOT NULL")]
		public bool IsFullVehicle
		{
			get
			{
				return this._IsFullVehicle;
			}
			set
			{
				if ((this._IsFullVehicle != value))
				{
					this.OnIsFullVehicleChanging(value);
					this.SendPropertyChanging();
					this._IsFullVehicle = value;
					this.SendPropertyChanged("IsFullVehicle");
					this.OnIsFullVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoan", DbType="Bit NOT NULL")]
		public bool IsLoan
		{
			get
			{
				return this._IsLoan;
			}
			set
			{
				if ((this._IsLoan != value))
				{
					this.OnIsLoanChanging(value);
					this.SendPropertyChanging();
					this._IsLoan = value;
					this.SendPropertyChanged("IsLoan");
					this.OnIsLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackNo", DbType="Int")]
		public System.Nullable<int> PackNo
		{
			get
			{
				return this._PackNo;
			}
			set
			{
				if ((this._PackNo != value))
				{
					this.OnPackNoChanging(value);
					this.SendPropertyChanging();
					this._PackNo = value;
					this.SendPropertyChanged("PackNo");
					this.OnPackNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarpType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string WarpType
		{
			get
			{
				return this._WarpType;
			}
			set
			{
				if ((this._WarpType != value))
				{
					this.OnWarpTypeChanging(value);
					this.SendPropertyChanging();
					this._WarpType = value;
					this.SendPropertyChanged("WarpType");
					this.OnWarpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarePrice", DbType="Decimal(18,4) NOT NULL")]
		public decimal DeclarePrice
		{
			get
			{
				return this._DeclarePrice;
			}
			set
			{
				if ((this._DeclarePrice != value))
				{
					this.OnDeclarePriceChanging(value);
					this.SendPropertyChanging();
					this._DeclarePrice = value;
					this.SendPropertyChanged("DeclarePrice");
					this.OnDeclarePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="Int NOT NULL")]
		public int InvoiceStatus
		{
			get
			{
				return this._InvoiceStatus;
			}
			set
			{
				if ((this._InvoiceStatus != value))
				{
					this.OnInvoiceStatusChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStatus = value;
					this.SendPropertyChanged("InvoiceStatus");
					this.OnInvoiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidExchangeAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal PaidExchangeAmount
		{
			get
			{
				return this._PaidExchangeAmount;
			}
			set
			{
				if ((this._PaidExchangeAmount != value))
				{
					this.OnPaidExchangeAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidExchangeAmount = value;
					this.SendPropertyChanged("PaidExchangeAmount");
					this.OnPaidExchangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHangUp", DbType="Bit NOT NULL")]
		public bool IsHangUp
		{
			get
			{
				return this._IsHangUp;
			}
			set
			{
				if ((this._IsHangUp != value))
				{
					this.OnIsHangUpChanging(value);
					this.SendPropertyChanging();
					this._IsHangUp = value;
					this.SendPropertyChanged("IsHangUp");
					this.OnIsHangUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Int NOT NULL")]
		public int OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainOrderId", DbType="VarChar(50)")]
		public string MainOrderId
		{
			get
			{
				return this._MainOrderId;
			}
			set
			{
				if ((this._MainOrderId != value))
				{
					this.OnMainOrderIdChanging(value);
					this.SendPropertyChanging();
					this._MainOrderId = value;
					this.SendPropertyChanged("MainOrderId");
					this.OnMainOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_DecHeads", Storage="_DecHeads", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<DecHeads> DecHeads
		{
			get
			{
				return this._DecHeads;
			}
			set
			{
				this._DecHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_DecLists", Storage="_DecLists", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<DecLists> DecLists
		{
			get
			{
				return this._DecLists;
			}
			set
			{
				this._DecLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItems", Storage="_OrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderItems> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderPayExchangeSuppliers", Storage="_OrderPayExchangeSuppliers", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderPayExchangeSuppliers> OrderPayExchangeSuppliers
		{
			get
			{
				return this._OrderPayExchangeSuppliers;
			}
			set
			{
				this._OrderPayExchangeSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderTraces", Storage="_OrderTraces", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderTraces> OrderTraces
		{
			get
			{
				return this._OrderTraces;
			}
			set
			{
				this._OrderTraces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderConsignees", Storage="_OrderConsignees", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderConsignees> OrderConsignees
		{
			get
			{
				return this._OrderConsignees;
			}
			set
			{
				this._OrderConsignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderReceipts", Storage="_OrderReceipts", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderReceipts> OrderReceipts
		{
			get
			{
				return this._OrderReceipts;
			}
			set
			{
				this._OrderReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Orders", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientAgreements_Orders", Storage="_ClientAgreements", ThisKey="ClientAgreementID", OtherKey="ID", IsForeignKey=true)]
		public ClientAgreements ClientAgreements
		{
			get
			{
				return this._ClientAgreements.Entity;
			}
			set
			{
				ClientAgreements previousValue = this._ClientAgreements.Entity;
				if (((previousValue != value) 
							|| (this._ClientAgreements.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientAgreements.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._ClientAgreements.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ClientAgreementID = value.ID;
					}
					else
					{
						this._ClientAgreementID = default(string);
					}
					this.SendPropertyChanged("ClientAgreements");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DecHeads(DecHeads entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_DecHeads(DecHeads entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_DecLists(DecLists entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_DecLists(DecLists entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderPayExchangeSuppliers(OrderPayExchangeSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderPayExchangeSuppliers(OrderPayExchangeSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderTraces(OrderTraces entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderTraces(OrderTraces entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderConsignees(OrderConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderConsignees(OrderConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderReceipts(OrderReceipts entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderReceipts(OrderReceipts entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DecLists")]
	public partial class DecLists : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationID;
		
		private string _DeclarationNoticeItemID;
		
		private string _OrderID;
		
		private string _OrderItemID;
		
		private int _CusDecStatus;
		
		private int _GNo;
		
		private string _CodeTS;
		
		private System.Nullable<decimal> _ContrItem;
		
		private string _CiqCode;
		
		private string _GName;
		
		private string _GModel;
		
		private decimal _GQty;
		
		private string _GUnit;
		
		private string _FirstUnit;
		
		private System.Nullable<decimal> _FirstQty;
		
		private string _SecondUnit;
		
		private System.Nullable<decimal> _SecondQty;
		
		private decimal _DeclPrice;
		
		private decimal _DeclTotal;
		
		private string _TradeCurr;
		
		private string _OriginCountry;
		
		private string _OrigPlaceCode;
		
		private string _DestinationCountry;
		
		private string _DestCode;
		
		private string _DistrictCode;
		
		private int _DutyMode;
		
		private string _GoodsSpec;
		
		private string _GoodsModel;
		
		private string _GoodsBrand;
		
		private string _CaseNo;
		
		private System.Nullable<decimal> _NetWt;
		
		private System.Nullable<decimal> _GrossWt;
		
		private string _Purpose;
		
		private string _GoodsAttr;
		
		private string _GoodsBatch;
		
		private string _CiqName;
		
		private EntityRef<DecHeads> _DecHeads;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationIDChanging(string value);
    partial void OnDeclarationIDChanged();
    partial void OnDeclarationNoticeItemIDChanging(string value);
    partial void OnDeclarationNoticeItemIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnCusDecStatusChanging(int value);
    partial void OnCusDecStatusChanged();
    partial void OnGNoChanging(int value);
    partial void OnGNoChanged();
    partial void OnCodeTSChanging(string value);
    partial void OnCodeTSChanged();
    partial void OnContrItemChanging(System.Nullable<decimal> value);
    partial void OnContrItemChanged();
    partial void OnCiqCodeChanging(string value);
    partial void OnCiqCodeChanged();
    partial void OnGNameChanging(string value);
    partial void OnGNameChanged();
    partial void OnGModelChanging(string value);
    partial void OnGModelChanged();
    partial void OnGQtyChanging(decimal value);
    partial void OnGQtyChanged();
    partial void OnGUnitChanging(string value);
    partial void OnGUnitChanged();
    partial void OnFirstUnitChanging(string value);
    partial void OnFirstUnitChanged();
    partial void OnFirstQtyChanging(System.Nullable<decimal> value);
    partial void OnFirstQtyChanged();
    partial void OnSecondUnitChanging(string value);
    partial void OnSecondUnitChanged();
    partial void OnSecondQtyChanging(System.Nullable<decimal> value);
    partial void OnSecondQtyChanged();
    partial void OnDeclPriceChanging(decimal value);
    partial void OnDeclPriceChanged();
    partial void OnDeclTotalChanging(decimal value);
    partial void OnDeclTotalChanged();
    partial void OnTradeCurrChanging(string value);
    partial void OnTradeCurrChanged();
    partial void OnOriginCountryChanging(string value);
    partial void OnOriginCountryChanged();
    partial void OnOrigPlaceCodeChanging(string value);
    partial void OnOrigPlaceCodeChanged();
    partial void OnDestinationCountryChanging(string value);
    partial void OnDestinationCountryChanged();
    partial void OnDestCodeChanging(string value);
    partial void OnDestCodeChanged();
    partial void OnDistrictCodeChanging(string value);
    partial void OnDistrictCodeChanged();
    partial void OnDutyModeChanging(int value);
    partial void OnDutyModeChanged();
    partial void OnGoodsSpecChanging(string value);
    partial void OnGoodsSpecChanged();
    partial void OnGoodsModelChanging(string value);
    partial void OnGoodsModelChanged();
    partial void OnGoodsBrandChanging(string value);
    partial void OnGoodsBrandChanged();
    partial void OnCaseNoChanging(string value);
    partial void OnCaseNoChanged();
    partial void OnNetWtChanging(System.Nullable<decimal> value);
    partial void OnNetWtChanged();
    partial void OnGrossWtChanging(System.Nullable<decimal> value);
    partial void OnGrossWtChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnGoodsAttrChanging(string value);
    partial void OnGoodsAttrChanged();
    partial void OnGoodsBatchChanging(string value);
    partial void OnGoodsBatchChanged();
    partial void OnCiqNameChanging(string value);
    partial void OnCiqNameChanged();
    #endregion
		
		public DecLists()
		{
			this._DecHeads = default(EntityRef<DecHeads>);
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationID
		{
			get
			{
				return this._DeclarationID;
			}
			set
			{
				if ((this._DeclarationID != value))
				{
					if (this._DecHeads.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationID = value;
					this.SendPropertyChanged("DeclarationID");
					this.OnDeclarationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeItemID
		{
			get
			{
				return this._DeclarationNoticeItemID;
			}
			set
			{
				if ((this._DeclarationNoticeItemID != value))
				{
					this.OnDeclarationNoticeItemIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeItemID = value;
					this.SendPropertyChanged("DeclarationNoticeItemID");
					this.OnDeclarationNoticeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusDecStatus", DbType="Int NOT NULL")]
		public int CusDecStatus
		{
			get
			{
				return this._CusDecStatus;
			}
			set
			{
				if ((this._CusDecStatus != value))
				{
					this.OnCusDecStatusChanging(value);
					this.SendPropertyChanging();
					this._CusDecStatus = value;
					this.SendPropertyChanged("CusDecStatus");
					this.OnCusDecStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GNo", DbType="Int NOT NULL")]
		public int GNo
		{
			get
			{
				return this._GNo;
			}
			set
			{
				if ((this._GNo != value))
				{
					this.OnGNoChanging(value);
					this.SendPropertyChanging();
					this._GNo = value;
					this.SendPropertyChanged("GNo");
					this.OnGNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTS", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CodeTS
		{
			get
			{
				return this._CodeTS;
			}
			set
			{
				if ((this._CodeTS != value))
				{
					this.OnCodeTSChanging(value);
					this.SendPropertyChanging();
					this._CodeTS = value;
					this.SendPropertyChanged("CodeTS");
					this.OnCodeTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrItem", DbType="Decimal(19,0)")]
		public System.Nullable<decimal> ContrItem
		{
			get
			{
				return this._ContrItem;
			}
			set
			{
				if ((this._ContrItem != value))
				{
					this.OnContrItemChanging(value);
					this.SendPropertyChanging();
					this._ContrItem = value;
					this.SendPropertyChanged("ContrItem");
					this.OnContrItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiqCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CiqCode
		{
			get
			{
				return this._CiqCode;
			}
			set
			{
				if ((this._CiqCode != value))
				{
					this.OnCiqCodeChanging(value);
					this.SendPropertyChanging();
					this._CiqCode = value;
					this.SendPropertyChanged("CiqCode");
					this.OnCiqCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string GName
		{
			get
			{
				return this._GName;
			}
			set
			{
				if ((this._GName != value))
				{
					this.OnGNameChanging(value);
					this.SendPropertyChanging();
					this._GName = value;
					this.SendPropertyChanged("GName");
					this.OnGNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GModel", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string GModel
		{
			get
			{
				return this._GModel;
			}
			set
			{
				if ((this._GModel != value))
				{
					this.OnGModelChanging(value);
					this.SendPropertyChanging();
					this._GModel = value;
					this.SendPropertyChanged("GModel");
					this.OnGModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GQty", DbType="Decimal(19,5) NOT NULL")]
		public decimal GQty
		{
			get
			{
				return this._GQty;
			}
			set
			{
				if ((this._GQty != value))
				{
					this.OnGQtyChanging(value);
					this.SendPropertyChanging();
					this._GQty = value;
					this.SendPropertyChanged("GQty");
					this.OnGQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUnit", DbType="VarChar(3)")]
		public string GUnit
		{
			get
			{
				return this._GUnit;
			}
			set
			{
				if ((this._GUnit != value))
				{
					this.OnGUnitChanging(value);
					this.SendPropertyChanging();
					this._GUnit = value;
					this.SendPropertyChanged("GUnit");
					this.OnGUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstUnit", DbType="VarChar(3)")]
		public string FirstUnit
		{
			get
			{
				return this._FirstUnit;
			}
			set
			{
				if ((this._FirstUnit != value))
				{
					this.OnFirstUnitChanging(value);
					this.SendPropertyChanging();
					this._FirstUnit = value;
					this.SendPropertyChanged("FirstUnit");
					this.OnFirstUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstQty", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> FirstQty
		{
			get
			{
				return this._FirstQty;
			}
			set
			{
				if ((this._FirstQty != value))
				{
					this.OnFirstQtyChanging(value);
					this.SendPropertyChanging();
					this._FirstQty = value;
					this.SendPropertyChanged("FirstQty");
					this.OnFirstQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondUnit", DbType="VarChar(3)")]
		public string SecondUnit
		{
			get
			{
				return this._SecondUnit;
			}
			set
			{
				if ((this._SecondUnit != value))
				{
					this.OnSecondUnitChanging(value);
					this.SendPropertyChanging();
					this._SecondUnit = value;
					this.SendPropertyChanged("SecondUnit");
					this.OnSecondUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondQty", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> SecondQty
		{
			get
			{
				return this._SecondQty;
			}
			set
			{
				if ((this._SecondQty != value))
				{
					this.OnSecondQtyChanging(value);
					this.SendPropertyChanging();
					this._SecondQty = value;
					this.SendPropertyChanged("SecondQty");
					this.OnSecondQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclPrice", DbType="Decimal(19,5) NOT NULL")]
		public decimal DeclPrice
		{
			get
			{
				return this._DeclPrice;
			}
			set
			{
				if ((this._DeclPrice != value))
				{
					this.OnDeclPriceChanging(value);
					this.SendPropertyChanging();
					this._DeclPrice = value;
					this.SendPropertyChanged("DeclPrice");
					this.OnDeclPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclTotal", DbType="Decimal(19,5) NOT NULL")]
		public decimal DeclTotal
		{
			get
			{
				return this._DeclTotal;
			}
			set
			{
				if ((this._DeclTotal != value))
				{
					this.OnDeclTotalChanging(value);
					this.SendPropertyChanging();
					this._DeclTotal = value;
					this.SendPropertyChanged("DeclTotal");
					this.OnDeclTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeCurr", DbType="VarChar(3)")]
		public string TradeCurr
		{
			get
			{
				return this._TradeCurr;
			}
			set
			{
				if ((this._TradeCurr != value))
				{
					this.OnTradeCurrChanging(value);
					this.SendPropertyChanging();
					this._TradeCurr = value;
					this.SendPropertyChanged("TradeCurr");
					this.OnTradeCurrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginCountry", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string OriginCountry
		{
			get
			{
				return this._OriginCountry;
			}
			set
			{
				if ((this._OriginCountry != value))
				{
					this.OnOriginCountryChanging(value);
					this.SendPropertyChanging();
					this._OriginCountry = value;
					this.SendPropertyChanged("OriginCountry");
					this.OnOriginCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigPlaceCode", DbType="VarChar(50)")]
		public string OrigPlaceCode
		{
			get
			{
				return this._OrigPlaceCode;
			}
			set
			{
				if ((this._OrigPlaceCode != value))
				{
					this.OnOrigPlaceCodeChanging(value);
					this.SendPropertyChanging();
					this._OrigPlaceCode = value;
					this.SendPropertyChanged("OrigPlaceCode");
					this.OnOrigPlaceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationCountry", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string DestinationCountry
		{
			get
			{
				return this._DestinationCountry;
			}
			set
			{
				if ((this._DestinationCountry != value))
				{
					this.OnDestinationCountryChanging(value);
					this.SendPropertyChanging();
					this._DestinationCountry = value;
					this.SendPropertyChanged("DestinationCountry");
					this.OnDestinationCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestCode", DbType="VarChar(8)")]
		public string DestCode
		{
			get
			{
				return this._DestCode;
			}
			set
			{
				if ((this._DestCode != value))
				{
					this.OnDestCodeChanging(value);
					this.SendPropertyChanging();
					this._DestCode = value;
					this.SendPropertyChanged("DestCode");
					this.OnDestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictCode", DbType="VarChar(5)")]
		public string DistrictCode
		{
			get
			{
				return this._DistrictCode;
			}
			set
			{
				if ((this._DistrictCode != value))
				{
					this.OnDistrictCodeChanging(value);
					this.SendPropertyChanging();
					this._DistrictCode = value;
					this.SendPropertyChanged("DistrictCode");
					this.OnDistrictCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DutyMode", DbType="Int NOT NULL")]
		public int DutyMode
		{
			get
			{
				return this._DutyMode;
			}
			set
			{
				if ((this._DutyMode != value))
				{
					this.OnDutyModeChanging(value);
					this.SendPropertyChanging();
					this._DutyMode = value;
					this.SendPropertyChanged("DutyMode");
					this.OnDutyModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsSpec", DbType="VarChar(2000)")]
		public string GoodsSpec
		{
			get
			{
				return this._GoodsSpec;
			}
			set
			{
				if ((this._GoodsSpec != value))
				{
					this.OnGoodsSpecChanging(value);
					this.SendPropertyChanging();
					this._GoodsSpec = value;
					this.SendPropertyChanged("GoodsSpec");
					this.OnGoodsSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsModel", DbType="VarChar(2000)")]
		public string GoodsModel
		{
			get
			{
				return this._GoodsModel;
			}
			set
			{
				if ((this._GoodsModel != value))
				{
					this.OnGoodsModelChanging(value);
					this.SendPropertyChanging();
					this._GoodsModel = value;
					this.SendPropertyChanged("GoodsModel");
					this.OnGoodsModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsBrand", DbType="VarChar(2000)")]
		public string GoodsBrand
		{
			get
			{
				return this._GoodsBrand;
			}
			set
			{
				if ((this._GoodsBrand != value))
				{
					this.OnGoodsBrandChanging(value);
					this.SendPropertyChanging();
					this._GoodsBrand = value;
					this.SendPropertyChanged("GoodsBrand");
					this.OnGoodsBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNo", DbType="VarChar(50)")]
		public string CaseNo
		{
			get
			{
				return this._CaseNo;
			}
			set
			{
				if ((this._CaseNo != value))
				{
					this.OnCaseNoChanging(value);
					this.SendPropertyChanging();
					this._CaseNo = value;
					this.SendPropertyChanged("CaseNo");
					this.OnCaseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWt", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> NetWt
		{
			get
			{
				return this._NetWt;
			}
			set
			{
				if ((this._NetWt != value))
				{
					this.OnNetWtChanging(value);
					this.SendPropertyChanging();
					this._NetWt = value;
					this.SendPropertyChanged("NetWt");
					this.OnNetWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWt", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> GrossWt
		{
			get
			{
				return this._GrossWt;
			}
			set
			{
				if ((this._GrossWt != value))
				{
					this.OnGrossWtChanging(value);
					this.SendPropertyChanging();
					this._GrossWt = value;
					this.SendPropertyChanged("GrossWt");
					this.OnGrossWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(4)")]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsAttr", DbType="VarChar(20)")]
		public string GoodsAttr
		{
			get
			{
				return this._GoodsAttr;
			}
			set
			{
				if ((this._GoodsAttr != value))
				{
					this.OnGoodsAttrChanging(value);
					this.SendPropertyChanging();
					this._GoodsAttr = value;
					this.SendPropertyChanged("GoodsAttr");
					this.OnGoodsAttrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsBatch", DbType="NVarChar(50)")]
		public string GoodsBatch
		{
			get
			{
				return this._GoodsBatch;
			}
			set
			{
				if ((this._GoodsBatch != value))
				{
					this.OnGoodsBatchChanging(value);
					this.SendPropertyChanging();
					this._GoodsBatch = value;
					this.SendPropertyChanged("GoodsBatch");
					this.OnGoodsBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiqName", DbType="NVarChar(300)")]
		public string CiqName
		{
			get
			{
				return this._CiqName;
			}
			set
			{
				if ((this._CiqName != value))
				{
					this.OnCiqNameChanging(value);
					this.SendPropertyChanging();
					this._CiqName = value;
					this.SendPropertyChanged("CiqName");
					this.OnCiqNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecLists", Storage="_DecHeads", ThisKey="DeclarationID", OtherKey="ID", IsForeignKey=true)]
		public DecHeads DecHeads
		{
			get
			{
				return this._DecHeads.Entity;
			}
			set
			{
				DecHeads previousValue = this._DecHeads.Entity;
				if (((previousValue != value) 
							|| (this._DecHeads.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecHeads.Entity = null;
						previousValue.DecLists.Remove(this);
					}
					this._DecHeads.Entity = value;
					if ((value != null))
					{
						value.DecLists.Add(this);
						this._DeclarationID = value.ID;
					}
					else
					{
						this._DeclarationID = default(string);
					}
					this.SendPropertyChanged("DecHeads");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_DecLists", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.DecLists.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.DecLists.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DecTaxFlows")]
	public partial class DecTaxFlows : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DecTaxID;
		
		private string _BankName;
		
		private string _TaxNumber;
		
		private int _TaxType;
		
		private System.Nullable<System.DateTime> _PayDate;
		
		private System.Nullable<System.DateTime> _DeductionTime;
		
		private decimal _Amount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<DecTaxs> _DecTaxs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDecTaxIDChanging(string value);
    partial void OnDecTaxIDChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnTaxTypeChanging(int value);
    partial void OnTaxTypeChanged();
    partial void OnPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPayDateChanged();
    partial void OnDeductionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeductionTimeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DecTaxFlows()
		{
			this._DecTaxs = default(EntityRef<DecTaxs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecTaxID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecTaxID
		{
			get
			{
				return this._DecTaxID;
			}
			set
			{
				if ((this._DecTaxID != value))
				{
					if (this._DecTaxs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDecTaxIDChanging(value);
					this.SendPropertyChanging();
					this._DecTaxID = value;
					this.SendPropertyChanged("DecTaxID");
					this.OnDecTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="Int NOT NULL")]
		public int TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeductionTime
		{
			get
			{
				return this._DeductionTime;
			}
			set
			{
				if ((this._DeductionTime != value))
				{
					this.OnDeductionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeductionTime = value;
					this.SendPropertyChanged("DeductionTime");
					this.OnDeductionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecTaxs_DecTaxFlows", Storage="_DecTaxs", ThisKey="DecTaxID", OtherKey="ID", IsForeignKey=true)]
		public DecTaxs DecTaxs
		{
			get
			{
				return this._DecTaxs.Entity;
			}
			set
			{
				DecTaxs previousValue = this._DecTaxs.Entity;
				if (((previousValue != value) 
							|| (this._DecTaxs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecTaxs.Entity = null;
						previousValue.DecTaxFlows.Remove(this);
					}
					this._DecTaxs.Entity = value;
					if ((value != null))
					{
						value.DecTaxFlows.Add(this);
						this._DecTaxID = value.ID;
					}
					else
					{
						this._DecTaxID = default(string);
					}
					this.SendPropertyChanged("DecTaxs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaseCurrencies")]
	public partial class BaseCurrencies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _EnglishName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    #endregion
		
		public BaseCurrencies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItemCategories")]
	public partial class OrderItemCategories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderItemID;
		
		private int _Type;
		
		private string _TaxCode;
		
		private string _TaxName;
		
		private string _HSCode;
		
		private string _Name;
		
		private string _Elements;
		
		private string _Unit1;
		
		private string _Unit2;
		
		private System.Nullable<decimal> _Qty1;
		
		private System.Nullable<decimal> _Qty2;
		
		private string _CIQCode;
		
		private string _ClassifyFirstOperator;
		
		private string _ClassifySecondOperator;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<OrderItems> _OrderItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnTaxNameChanging(string value);
    partial void OnTaxNameChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnElementsChanging(string value);
    partial void OnElementsChanged();
    partial void OnUnit1Changing(string value);
    partial void OnUnit1Changed();
    partial void OnUnit2Changing(string value);
    partial void OnUnit2Changed();
    partial void OnQty1Changing(System.Nullable<decimal> value);
    partial void OnQty1Changed();
    partial void OnQty2Changing(System.Nullable<decimal> value);
    partial void OnQty2Changed();
    partial void OnCIQCodeChanging(string value);
    partial void OnCIQCodeChanged();
    partial void OnClassifyFirstOperatorChanging(string value);
    partial void OnClassifyFirstOperatorChanged();
    partial void OnClassifySecondOperatorChanging(string value);
    partial void OnClassifySecondOperatorChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderItemCategories()
		{
			this._OrderItems = default(EntityRef<OrderItems>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					if (this._OrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this.OnTaxNameChanging(value);
					this.SendPropertyChanging();
					this._TaxName = value;
					this.SendPropertyChanged("TaxName");
					this.OnTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					this.OnUnit1Changing(value);
					this.SendPropertyChanging();
					this._Unit1 = value;
					this.SendPropertyChanged("Unit1");
					this.OnUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit2", DbType="VarChar(50)")]
		public string Unit2
		{
			get
			{
				return this._Unit2;
			}
			set
			{
				if ((this._Unit2 != value))
				{
					this.OnUnit2Changing(value);
					this.SendPropertyChanging();
					this._Unit2 = value;
					this.SendPropertyChanged("Unit2");
					this.OnUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty1", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Qty1
		{
			get
			{
				return this._Qty1;
			}
			set
			{
				if ((this._Qty1 != value))
				{
					this.OnQty1Changing(value);
					this.SendPropertyChanging();
					this._Qty1 = value;
					this.SendPropertyChanged("Qty1");
					this.OnQty1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty2", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Qty2
		{
			get
			{
				return this._Qty2;
			}
			set
			{
				if ((this._Qty2 != value))
				{
					this.OnQty2Changing(value);
					this.SendPropertyChanging();
					this._Qty2 = value;
					this.SendPropertyChanged("Qty2");
					this.OnQty2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this.OnCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._CIQCode = value;
					this.SendPropertyChanged("CIQCode");
					this.OnCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyFirstOperator", DbType="VarChar(50)")]
		public string ClassifyFirstOperator
		{
			get
			{
				return this._ClassifyFirstOperator;
			}
			set
			{
				if ((this._ClassifyFirstOperator != value))
				{
					this.OnClassifyFirstOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifyFirstOperator = value;
					this.SendPropertyChanged("ClassifyFirstOperator");
					this.OnClassifyFirstOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifySecondOperator", DbType="VarChar(50)")]
		public string ClassifySecondOperator
		{
			get
			{
				return this._ClassifySecondOperator;
			}
			set
			{
				if ((this._ClassifySecondOperator != value))
				{
					this.OnClassifySecondOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifySecondOperator = value;
					this.SendPropertyChanged("ClassifySecondOperator");
					this.OnClassifySecondOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_OrderItemCategories", Storage="_OrderItems", ThisKey="OrderItemID", OtherKey="ID", IsForeignKey=true)]
		public OrderItems OrderItems
		{
			get
			{
				return this._OrderItems.Entity;
			}
			set
			{
				OrderItems previousValue = this._OrderItems.Entity;
				if (((previousValue != value) 
							|| (this._OrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItems.Entity = null;
						previousValue.OrderItemCategories.Remove(this);
					}
					this._OrderItems.Entity = value;
					if ((value != null))
					{
						value.OrderItemCategories.Add(this);
						this._OrderItemID = value.ID;
					}
					else
					{
						this._OrderItemID = default(string);
					}
					this.SendPropertyChanged("OrderItems");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItems")]
	public partial class OrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _Origin;
		
		private decimal _Quantity;
		
		private System.Nullable<decimal> _DeclaredQuantity;
		
		private string _Unit;
		
		private decimal _UnitPrice;
		
		private decimal _TotalPrice;
		
		private System.Nullable<decimal> _GrossWeight;
		
		private bool _IsSampllingCheck;
		
		private int _ClassifyStatus;
		
		private string _ProductUniqueCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _Name;
		
		private string _Model;
		
		private string _Manufacturer;
		
		private string _Batch;
		
		private EntitySet<OrderItemCategories> _OrderItemCategories;
		
		private EntitySet<InvoiceNoticeItems> _InvoiceNoticeItems;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnDeclaredQuantityChanging(System.Nullable<decimal> value);
    partial void OnDeclaredQuantityChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnGrossWeightChanging(System.Nullable<decimal> value);
    partial void OnGrossWeightChanged();
    partial void OnIsSampllingCheckChanging(bool value);
    partial void OnIsSampllingCheckChanged();
    partial void OnClassifyStatusChanging(int value);
    partial void OnClassifyStatusChanged();
    partial void OnProductUniqueCodeChanging(string value);
    partial void OnProductUniqueCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    #endregion
		
		public OrderItems()
		{
			this._OrderItemCategories = new EntitySet<OrderItemCategories>(new Action<OrderItemCategories>(this.attach_OrderItemCategories), new Action<OrderItemCategories>(this.detach_OrderItemCategories));
			this._InvoiceNoticeItems = new EntitySet<InvoiceNoticeItems>(new Action<InvoiceNoticeItems>(this.attach_InvoiceNoticeItems), new Action<InvoiceNoticeItems>(this.detach_InvoiceNoticeItems));
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(50)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclaredQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> DeclaredQuantity
		{
			get
			{
				return this._DeclaredQuantity;
			}
			set
			{
				if ((this._DeclaredQuantity != value))
				{
					this.OnDeclaredQuantityChanging(value);
					this.SendPropertyChanging();
					this._DeclaredQuantity = value;
					this.SendPropertyChanged("DeclaredQuantity");
					this.OnDeclaredQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(19,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSampllingCheck", DbType="Bit NOT NULL")]
		public bool IsSampllingCheck
		{
			get
			{
				return this._IsSampllingCheck;
			}
			set
			{
				if ((this._IsSampllingCheck != value))
				{
					this.OnIsSampllingCheckChanging(value);
					this.SendPropertyChanging();
					this._IsSampllingCheck = value;
					this.SendPropertyChanged("IsSampllingCheck");
					this.OnIsSampllingCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyStatus", DbType="Int NOT NULL")]
		public int ClassifyStatus
		{
			get
			{
				return this._ClassifyStatus;
			}
			set
			{
				if ((this._ClassifyStatus != value))
				{
					this.OnClassifyStatusChanging(value);
					this.SendPropertyChanging();
					this._ClassifyStatus = value;
					this.SendPropertyChanged("ClassifyStatus");
					this.OnClassifyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUniqueCode", DbType="VarChar(50)")]
		public string ProductUniqueCode
		{
			get
			{
				return this._ProductUniqueCode;
			}
			set
			{
				if ((this._ProductUniqueCode != value))
				{
					this.OnProductUniqueCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductUniqueCode = value;
					this.SendPropertyChanged("ProductUniqueCode");
					this.OnProductUniqueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_OrderItemCategories", Storage="_OrderItemCategories", ThisKey="ID", OtherKey="OrderItemID")]
		public EntitySet<OrderItemCategories> OrderItemCategories
		{
			get
			{
				return this._OrderItemCategories;
			}
			set
			{
				this._OrderItemCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_InvoiceNoticeItems", Storage="_InvoiceNoticeItems", ThisKey="ID", OtherKey="OrderItemID")]
		public EntitySet<InvoiceNoticeItems> InvoiceNoticeItems
		{
			get
			{
				return this._InvoiceNoticeItems;
			}
			set
			{
				this._InvoiceNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItems", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItemCategories(OrderItemCategories entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = this;
		}
		
		private void detach_OrderItemCategories(OrderItemCategories entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = null;
		}
		
		private void attach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = this;
		}
		
		private void detach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItemRateView")]
	public partial class OrderItemRateView
	{
		
		private string _OrderItemID;
		
		private System.Nullable<decimal> _ImportTaxRate;
		
		private System.Nullable<decimal> _ImportTaxReceiptRate;
		
		private System.Nullable<decimal> _AddedValueTaxRate;
		
		private System.Nullable<decimal> _AddedValueTaxReceiptRate;
		
		private System.Nullable<decimal> _ConsumeTaxRate;
		
		private System.Nullable<decimal> _ConsumeTaxReceiptRate;
		
		private System.Nullable<decimal> _CustomsExchangeRate;
		
		private System.Nullable<decimal> _RealExchangeRate;
		
		public OrderItemRateView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this._OrderItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTaxRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> ImportTaxRate
		{
			get
			{
				return this._ImportTaxRate;
			}
			set
			{
				if ((this._ImportTaxRate != value))
				{
					this._ImportTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTaxReceiptRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> ImportTaxReceiptRate
		{
			get
			{
				return this._ImportTaxReceiptRate;
			}
			set
			{
				if ((this._ImportTaxReceiptRate != value))
				{
					this._ImportTaxReceiptRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedValueTaxRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> AddedValueTaxRate
		{
			get
			{
				return this._AddedValueTaxRate;
			}
			set
			{
				if ((this._AddedValueTaxRate != value))
				{
					this._AddedValueTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedValueTaxReceiptRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> AddedValueTaxReceiptRate
		{
			get
			{
				return this._AddedValueTaxReceiptRate;
			}
			set
			{
				if ((this._AddedValueTaxReceiptRate != value))
				{
					this._AddedValueTaxReceiptRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumeTaxRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> ConsumeTaxRate
		{
			get
			{
				return this._ConsumeTaxRate;
			}
			set
			{
				if ((this._ConsumeTaxRate != value))
				{
					this._ConsumeTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumeTaxReceiptRate", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> ConsumeTaxReceiptRate
		{
			get
			{
				return this._ConsumeTaxReceiptRate;
			}
			set
			{
				if ((this._ConsumeTaxReceiptRate != value))
				{
					this._ConsumeTaxReceiptRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CustomsExchangeRate
		{
			get
			{
				return this._CustomsExchangeRate;
			}
			set
			{
				if ((this._CustomsExchangeRate != value))
				{
					this._CustomsExchangeRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> RealExchangeRate
		{
			get
			{
				return this._RealExchangeRate;
			}
			set
			{
				if ((this._RealExchangeRate != value))
				{
					this._RealExchangeRate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DecTaxs")]
	public partial class DecTaxs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _InvoiceType;
		
		private int _IsUpload;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<DecTaxFlows> _DecTaxFlows;
		
		private EntityRef<DecHeads> _DecHeads;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnIsUploadChanging(int value);
    partial void OnIsUploadChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DecTaxs()
		{
			this._DecTaxFlows = new EntitySet<DecTaxFlows>(new Action<DecTaxFlows>(this.attach_DecTaxFlows), new Action<DecTaxFlows>(this.detach_DecTaxFlows));
			this._DecHeads = default(EntityRef<DecHeads>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._DecHeads.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpload", DbType="Int NOT NULL")]
		public int IsUpload
		{
			get
			{
				return this._IsUpload;
			}
			set
			{
				if ((this._IsUpload != value))
				{
					this.OnIsUploadChanging(value);
					this.SendPropertyChanging();
					this._IsUpload = value;
					this.SendPropertyChanged("IsUpload");
					this.OnIsUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecTaxs_DecTaxFlows", Storage="_DecTaxFlows", ThisKey="ID", OtherKey="DecTaxID")]
		public EntitySet<DecTaxFlows> DecTaxFlows
		{
			get
			{
				return this._DecTaxFlows;
			}
			set
			{
				this._DecTaxFlows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecTaxs", Storage="_DecHeads", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public DecHeads DecHeads
		{
			get
			{
				return this._DecHeads.Entity;
			}
			set
			{
				DecHeads previousValue = this._DecHeads.Entity;
				if (((previousValue != value) 
							|| (this._DecHeads.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecHeads.Entity = null;
						previousValue.DecTaxs = null;
					}
					this._DecHeads.Entity = value;
					if ((value != null))
					{
						value.DecTaxs = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("DecHeads");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DecTaxFlows(DecTaxFlows entity)
		{
			this.SendPropertyChanging();
			entity.DecTaxs = this;
		}
		
		private void detach_DecTaxFlows(DecTaxFlows entity)
		{
			this.SendPropertyChanging();
			entity.DecTaxs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientFeeSettlements")]
	public partial class ClientFeeSettlements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AgreementID;
		
		private int _FeeType;
		
		private int _PeriodType;
		
		private System.Nullable<int> _DaysLimit;
		
		private System.Nullable<int> _MonthlyDay;
		
		private System.Nullable<decimal> _UpperLimit;
		
		private int _ExchangeRateType;
		
		private System.Nullable<decimal> _ExchangeRateValue;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<ClientAgreements> _ClientAgreements;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAgreementIDChanging(string value);
    partial void OnAgreementIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnPeriodTypeChanging(int value);
    partial void OnPeriodTypeChanged();
    partial void OnDaysLimitChanging(System.Nullable<int> value);
    partial void OnDaysLimitChanged();
    partial void OnMonthlyDayChanging(System.Nullable<int> value);
    partial void OnMonthlyDayChanged();
    partial void OnUpperLimitChanging(System.Nullable<decimal> value);
    partial void OnUpperLimitChanged();
    partial void OnExchangeRateTypeChanging(int value);
    partial void OnExchangeRateTypeChanged();
    partial void OnExchangeRateValueChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateValueChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientFeeSettlements()
		{
			this._ClientAgreements = default(EntityRef<ClientAgreements>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AgreementID
		{
			get
			{
				return this._AgreementID;
			}
			set
			{
				if ((this._AgreementID != value))
				{
					if (this._ClientAgreements.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgreementIDChanging(value);
					this.SendPropertyChanging();
					this._AgreementID = value;
					this.SendPropertyChanged("AgreementID");
					this.OnAgreementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodType", DbType="Int NOT NULL")]
		public int PeriodType
		{
			get
			{
				return this._PeriodType;
			}
			set
			{
				if ((this._PeriodType != value))
				{
					this.OnPeriodTypeChanging(value);
					this.SendPropertyChanging();
					this._PeriodType = value;
					this.SendPropertyChanged("PeriodType");
					this.OnPeriodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysLimit", DbType="Int")]
		public System.Nullable<int> DaysLimit
		{
			get
			{
				return this._DaysLimit;
			}
			set
			{
				if ((this._DaysLimit != value))
				{
					this.OnDaysLimitChanging(value);
					this.SendPropertyChanging();
					this._DaysLimit = value;
					this.SendPropertyChanged("DaysLimit");
					this.OnDaysLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyDay", DbType="Int")]
		public System.Nullable<int> MonthlyDay
		{
			get
			{
				return this._MonthlyDay;
			}
			set
			{
				if ((this._MonthlyDay != value))
				{
					this.OnMonthlyDayChanging(value);
					this.SendPropertyChanging();
					this._MonthlyDay = value;
					this.SendPropertyChanged("MonthlyDay");
					this.OnMonthlyDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperLimit", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UpperLimit
		{
			get
			{
				return this._UpperLimit;
			}
			set
			{
				if ((this._UpperLimit != value))
				{
					this.OnUpperLimitChanging(value);
					this.SendPropertyChanging();
					this._UpperLimit = value;
					this.SendPropertyChanged("UpperLimit");
					this.OnUpperLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRateType", DbType="Int NOT NULL")]
		public int ExchangeRateType
		{
			get
			{
				return this._ExchangeRateType;
			}
			set
			{
				if ((this._ExchangeRateType != value))
				{
					this.OnExchangeRateTypeChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRateType = value;
					this.SendPropertyChanged("ExchangeRateType");
					this.OnExchangeRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRateValue", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExchangeRateValue
		{
			get
			{
				return this._ExchangeRateValue;
			}
			set
			{
				if ((this._ExchangeRateValue != value))
				{
					this.OnExchangeRateValueChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRateValue = value;
					this.SendPropertyChanged("ExchangeRateValue");
					this.OnExchangeRateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientAgreements_ClientFeeSettlements", Storage="_ClientAgreements", ThisKey="AgreementID", OtherKey="ID", IsForeignKey=true)]
		public ClientAgreements ClientAgreements
		{
			get
			{
				return this._ClientAgreements.Entity;
			}
			set
			{
				ClientAgreements previousValue = this._ClientAgreements.Entity;
				if (((previousValue != value) 
							|| (this._ClientAgreements.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientAgreements.Entity = null;
						previousValue.ClientFeeSettlements.Remove(this);
					}
					this._ClientAgreements.Entity = value;
					if ((value != null))
					{
						value.ClientFeeSettlements.Add(this);
						this._AgreementID = value.ID;
					}
					else
					{
						this._AgreementID = default(string);
					}
					this.SendPropertyChanged("ClientAgreements");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProductCategories")]
	public partial class PreProductCategories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PreProductID;
		
		private string _Model;
		
		private string _Manufacture;
		
		private string _ProductName;
		
		private string _HSCode;
		
		private System.Nullable<decimal> _TariffRate;
		
		private System.Nullable<decimal> _AddedValueRate;
		
		private string _TaxCode;
		
		private string _TaxName;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _ClassifyType;
		
		private System.Nullable<decimal> _InspectionFee;
		
		private string _Unit1;
		
		private string _Unit2;
		
		private string _CIQCode;
		
		private string _Elements;
		
		private System.Nullable<int> _ClassifyStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _ClassifyFirstOperator;
		
		private string _ClassifySecondOperator;
		
		private string _Summary;
		
		private EntityRef<PreProducts> _PreProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPreProductIDChanging(string value);
    partial void OnPreProductIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnManufactureChanging(string value);
    partial void OnManufactureChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnTariffRateChanging(System.Nullable<decimal> value);
    partial void OnTariffRateChanged();
    partial void OnAddedValueRateChanging(System.Nullable<decimal> value);
    partial void OnAddedValueRateChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnTaxNameChanging(string value);
    partial void OnTaxNameChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnClassifyTypeChanging(System.Nullable<int> value);
    partial void OnClassifyTypeChanged();
    partial void OnInspectionFeeChanging(System.Nullable<decimal> value);
    partial void OnInspectionFeeChanged();
    partial void OnUnit1Changing(string value);
    partial void OnUnit1Changed();
    partial void OnUnit2Changing(string value);
    partial void OnUnit2Changed();
    partial void OnCIQCodeChanging(string value);
    partial void OnCIQCodeChanged();
    partial void OnElementsChanging(string value);
    partial void OnElementsChanged();
    partial void OnClassifyStatusChanging(System.Nullable<int> value);
    partial void OnClassifyStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnClassifyFirstOperatorChanging(string value);
    partial void OnClassifyFirstOperatorChanged();
    partial void OnClassifySecondOperatorChanging(string value);
    partial void OnClassifySecondOperatorChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PreProductCategories()
		{
			this._PreProducts = default(EntityRef<PreProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PreProductID
		{
			get
			{
				return this._PreProductID;
			}
			set
			{
				if ((this._PreProductID != value))
				{
					if (this._PreProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreProductIDChanging(value);
					this.SendPropertyChanging();
					this._PreProductID = value;
					this.SendPropertyChanged("PreProductID");
					this.OnPreProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture", DbType="NVarChar(50)")]
		public string Manufacture
		{
			get
			{
				return this._Manufacture;
			}
			set
			{
				if ((this._Manufacture != value))
				{
					this.OnManufactureChanging(value);
					this.SendPropertyChanging();
					this._Manufacture = value;
					this.SendPropertyChanged("Manufacture");
					this.OnManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TariffRate
		{
			get
			{
				return this._TariffRate;
			}
			set
			{
				if ((this._TariffRate != value))
				{
					this.OnTariffRateChanging(value);
					this.SendPropertyChanging();
					this._TariffRate = value;
					this.SendPropertyChanged("TariffRate");
					this.OnTariffRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedValueRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AddedValueRate
		{
			get
			{
				return this._AddedValueRate;
			}
			set
			{
				if ((this._AddedValueRate != value))
				{
					this.OnAddedValueRateChanging(value);
					this.SendPropertyChanging();
					this._AddedValueRate = value;
					this.SendPropertyChanged("AddedValueRate");
					this.OnAddedValueRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="NVarChar(100)")]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this.OnTaxNameChanging(value);
					this.SendPropertyChanging();
					this._TaxName = value;
					this.SendPropertyChanged("TaxName");
					this.OnTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyType", DbType="Int")]
		public System.Nullable<int> ClassifyType
		{
			get
			{
				return this._ClassifyType;
			}
			set
			{
				if ((this._ClassifyType != value))
				{
					this.OnClassifyTypeChanging(value);
					this.SendPropertyChanging();
					this._ClassifyType = value;
					this.SendPropertyChanged("ClassifyType");
					this.OnClassifyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionFee", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InspectionFee
		{
			get
			{
				return this._InspectionFee;
			}
			set
			{
				if ((this._InspectionFee != value))
				{
					this.OnInspectionFeeChanging(value);
					this.SendPropertyChanging();
					this._InspectionFee = value;
					this.SendPropertyChanged("InspectionFee");
					this.OnInspectionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit1", DbType="VarChar(50)")]
		public string Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					this.OnUnit1Changing(value);
					this.SendPropertyChanging();
					this._Unit1 = value;
					this.SendPropertyChanged("Unit1");
					this.OnUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit2", DbType="VarChar(50)")]
		public string Unit2
		{
			get
			{
				return this._Unit2;
			}
			set
			{
				if ((this._Unit2 != value))
				{
					this.OnUnit2Changing(value);
					this.SendPropertyChanging();
					this._Unit2 = value;
					this.SendPropertyChanged("Unit2");
					this.OnUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="VarChar(3)")]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this.OnCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._CIQCode = value;
					this.SendPropertyChanged("CIQCode");
					this.OnCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500)")]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyStatus", DbType="Int")]
		public System.Nullable<int> ClassifyStatus
		{
			get
			{
				return this._ClassifyStatus;
			}
			set
			{
				if ((this._ClassifyStatus != value))
				{
					this.OnClassifyStatusChanging(value);
					this.SendPropertyChanging();
					this._ClassifyStatus = value;
					this.SendPropertyChanged("ClassifyStatus");
					this.OnClassifyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyFirstOperator", DbType="VarChar(50)")]
		public string ClassifyFirstOperator
		{
			get
			{
				return this._ClassifyFirstOperator;
			}
			set
			{
				if ((this._ClassifyFirstOperator != value))
				{
					this.OnClassifyFirstOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifyFirstOperator = value;
					this.SendPropertyChanged("ClassifyFirstOperator");
					this.OnClassifyFirstOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifySecondOperator", DbType="VarChar(50)")]
		public string ClassifySecondOperator
		{
			get
			{
				return this._ClassifySecondOperator;
			}
			set
			{
				if ((this._ClassifySecondOperator != value))
				{
					this.OnClassifySecondOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifySecondOperator = value;
					this.SendPropertyChanged("ClassifySecondOperator");
					this.OnClassifySecondOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreProducts_PreProductCategories", Storage="_PreProducts", ThisKey="PreProductID", OtherKey="ID", IsForeignKey=true)]
		public PreProducts PreProducts
		{
			get
			{
				return this._PreProducts.Entity;
			}
			set
			{
				PreProducts previousValue = this._PreProducts.Entity;
				if (((previousValue != value) 
							|| (this._PreProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreProducts.Entity = null;
						previousValue.PreProductCategories.Remove(this);
					}
					this._PreProducts.Entity = value;
					if ((value != null))
					{
						value.PreProductCategories.Add(this);
						this._PreProductID = value.ID;
					}
					else
					{
						this._PreProductID = default(string);
					}
					this.SendPropertyChanged("PreProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPayExchangeSuppliers")]
	public partial class OrderPayExchangeSuppliers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _ClientSupplierID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Orders> _Orders;
		
		private EntityRef<ClientSuppliers> _ClientSuppliers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnClientSupplierIDChanging(string value);
    partial void OnClientSupplierIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderPayExchangeSuppliers()
		{
			this._Orders = default(EntityRef<Orders>);
			this._ClientSuppliers = default(EntityRef<ClientSuppliers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientSupplierID
		{
			get
			{
				return this._ClientSupplierID;
			}
			set
			{
				if ((this._ClientSupplierID != value))
				{
					if (this._ClientSuppliers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._ClientSupplierID = value;
					this.SendPropertyChanged("ClientSupplierID");
					this.OnClientSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderPayExchangeSuppliers", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderPayExchangeSuppliers.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderPayExchangeSuppliers.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_OrderPayExchangeSuppliers", Storage="_ClientSuppliers", ThisKey="ClientSupplierID", OtherKey="ID", IsForeignKey=true)]
		public ClientSuppliers ClientSuppliers
		{
			get
			{
				return this._ClientSuppliers.Entity;
			}
			set
			{
				ClientSuppliers previousValue = this._ClientSuppliers.Entity;
				if (((previousValue != value) 
							|| (this._ClientSuppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientSuppliers.Entity = null;
						previousValue.OrderPayExchangeSuppliers.Remove(this);
					}
					this._ClientSuppliers.Entity = value;
					if ((value != null))
					{
						value.OrderPayExchangeSuppliers.Add(this);
						this._ClientSupplierID = value.ID;
					}
					else
					{
						this._ClientSupplierID = default(string);
					}
					this.SendPropertyChanged("ClientSuppliers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPayExchangeSuppliersView")]
	public partial class OrderPayExchangeSuppliersView
	{
		
		private string _ID;
		
		private string _OrderID;
		
		private string _SupplierID;
		
		private string _Name;
		
		private string _ChineseName;
		
		public OrderPayExchangeSuppliersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50)")]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="NVarChar(150)")]
		public string ChineseName
		{
			get
			{
				return this._ChineseName;
			}
			set
			{
				if ((this._ChineseName != value))
				{
					this._ChineseName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MainOrders")]
	public partial class MainOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Type;
		
		private string _AdminID;
		
		private string _UserID;
		
		private string _ClientID;
		
		private System.Nullable<int> _MainOrderStatus;
		
		private System.Nullable<int> _PaymentStatus;
		
		private System.Nullable<int> _PayExchangeStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnMainOrderStatusChanging(System.Nullable<int> value);
    partial void OnMainOrderStatusChanged();
    partial void OnPaymentStatusChanging(System.Nullable<int> value);
    partial void OnPaymentStatusChanged();
    partial void OnPayExchangeStatusChanging(System.Nullable<int> value);
    partial void OnPayExchangeStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public MainOrders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainOrderStatus", DbType="Int")]
		public System.Nullable<int> MainOrderStatus
		{
			get
			{
				return this._MainOrderStatus;
			}
			set
			{
				if ((this._MainOrderStatus != value))
				{
					this.OnMainOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._MainOrderStatus = value;
					this.SendPropertyChanged("MainOrderStatus");
					this.OnMainOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="Int")]
		public System.Nullable<int> PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeStatus", DbType="Int")]
		public System.Nullable<int> PayExchangeStatus
		{
			get
			{
				return this._PayExchangeStatus;
			}
			set
			{
				if ((this._PayExchangeStatus != value))
				{
					this.OnPayExchangeStatusChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeStatus = value;
					this.SendPropertyChanged("PayExchangeStatus");
					this.OnPayExchangeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MainOrderFiles")]
	public partial class MainOrderFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MainOrderID;
		
		private string _OrderItemID;
		
		private string _OrderPremiumID;
		
		private string _AdminID;
		
		private string _UserID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _FileStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMainOrderIDChanging(string value);
    partial void OnMainOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnOrderPremiumIDChanging(string value);
    partial void OnOrderPremiumIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnFileStatusChanging(int value);
    partial void OnFileStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public MainOrderFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainOrderID
		{
			get
			{
				return this._MainOrderID;
			}
			set
			{
				if ((this._MainOrderID != value))
				{
					this.OnMainOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MainOrderID = value;
					this.SendPropertyChanged("MainOrderID");
					this.OnMainOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPremiumID", DbType="VarChar(50)")]
		public string OrderPremiumID
		{
			get
			{
				return this._OrderPremiumID;
			}
			set
			{
				if ((this._OrderPremiumID != value))
				{
					this.OnOrderPremiumIDChanging(value);
					this.SendPropertyChanging();
					this._OrderPremiumID = value;
					this.SendPropertyChanged("OrderPremiumID");
					this.OnOrderPremiumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileStatus", DbType="Int NOT NULL")]
		public int FileStatus
		{
			get
			{
				return this._FileStatus;
			}
			set
			{
				if ((this._FileStatus != value))
				{
					this.OnFileStatusChanging(value);
					this.SendPropertyChanging();
					this._FileStatus = value;
					this.SendPropertyChanged("FileStatus");
					this.OnFileStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeApplyFiles")]
	public partial class PayExchangeApplyFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayExchangeApplyID;
		
		private string _AdminID;
		
		private string _UserID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<PayExchangeApplies> _PayExchangeApplies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayExchangeApplyIDChanging(string value);
    partial void OnPayExchangeApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PayExchangeApplyFiles()
		{
			this._PayExchangeApplies = default(EntityRef<PayExchangeApplies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayExchangeApplyID
		{
			get
			{
				return this._PayExchangeApplyID;
			}
			set
			{
				if ((this._PayExchangeApplyID != value))
				{
					if (this._PayExchangeApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayExchangeApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyID = value;
					this.SendPropertyChanged("PayExchangeApplyID");
					this.OnPayExchangeApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyFiles", Storage="_PayExchangeApplies", ThisKey="PayExchangeApplyID", OtherKey="ID", IsForeignKey=true)]
		public PayExchangeApplies PayExchangeApplies
		{
			get
			{
				return this._PayExchangeApplies.Entity;
			}
			set
			{
				PayExchangeApplies previousValue = this._PayExchangeApplies.Entity;
				if (((previousValue != value) 
							|| (this._PayExchangeApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayExchangeApplies.Entity = null;
						previousValue.PayExchangeApplyFiles.Remove(this);
					}
					this._PayExchangeApplies.Entity = value;
					if ((value != null))
					{
						value.PayExchangeApplyFiles.Add(this);
						this._PayExchangeApplyID = value.ID;
					}
					else
					{
						this._PayExchangeApplyID = default(string);
					}
					this.SendPropertyChanged("PayExchangeApplies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeApplyItems")]
	public partial class PayExchangeApplyItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayExchangeApplyID;
		
		private string _OrderID;
		
		private decimal _Amount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<int> _ApplyStatus;
		
		private EntityRef<PayExchangeApplies> _PayExchangeApplies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayExchangeApplyIDChanging(string value);
    partial void OnPayExchangeApplyIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnApplyStatusChanging(System.Nullable<int> value);
    partial void OnApplyStatusChanged();
    #endregion
		
		public PayExchangeApplyItems()
		{
			this._PayExchangeApplies = default(EntityRef<PayExchangeApplies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayExchangeApplyID
		{
			get
			{
				return this._PayExchangeApplyID;
			}
			set
			{
				if ((this._PayExchangeApplyID != value))
				{
					if (this._PayExchangeApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayExchangeApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyID = value;
					this.SendPropertyChanged("PayExchangeApplyID");
					this.OnPayExchangeApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyStatus", DbType="Int")]
		public System.Nullable<int> ApplyStatus
		{
			get
			{
				return this._ApplyStatus;
			}
			set
			{
				if ((this._ApplyStatus != value))
				{
					this.OnApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._ApplyStatus = value;
					this.SendPropertyChanged("ApplyStatus");
					this.OnApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyItems", Storage="_PayExchangeApplies", ThisKey="PayExchangeApplyID", OtherKey="ID", IsForeignKey=true)]
		public PayExchangeApplies PayExchangeApplies
		{
			get
			{
				return this._PayExchangeApplies.Entity;
			}
			set
			{
				PayExchangeApplies previousValue = this._PayExchangeApplies.Entity;
				if (((previousValue != value) 
							|| (this._PayExchangeApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayExchangeApplies.Entity = null;
						previousValue.PayExchangeApplyItems.Remove(this);
					}
					this._PayExchangeApplies.Entity = value;
					if ((value != null))
					{
						value.PayExchangeApplyItems.Add(this);
						this._PayExchangeApplyID = value.ID;
					}
					else
					{
						this._PayExchangeApplyID = default(string);
					}
					this.SendPropertyChanged("PayExchangeApplies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSupplierMap")]
	public partial class ProductSupplierMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SupplierID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public ProductSupplierMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeApplyLogs")]
	public partial class PayExchangeApplyLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayExchangeApplyID;
		
		private string _AdminID;
		
		private string _UserID;
		
		private int _PayExchangeApplyStatus;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<PayExchangeApplies> _PayExchangeApplies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayExchangeApplyIDChanging(string value);
    partial void OnPayExchangeApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPayExchangeApplyStatusChanging(int value);
    partial void OnPayExchangeApplyStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PayExchangeApplyLogs()
		{
			this._PayExchangeApplies = default(EntityRef<PayExchangeApplies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayExchangeApplyID
		{
			get
			{
				return this._PayExchangeApplyID;
			}
			set
			{
				if ((this._PayExchangeApplyID != value))
				{
					if (this._PayExchangeApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayExchangeApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyID = value;
					this.SendPropertyChanged("PayExchangeApplyID");
					this.OnPayExchangeApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyStatus", DbType="Int NOT NULL")]
		public int PayExchangeApplyStatus
		{
			get
			{
				return this._PayExchangeApplyStatus;
			}
			set
			{
				if ((this._PayExchangeApplyStatus != value))
				{
					this.OnPayExchangeApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyStatus = value;
					this.SendPropertyChanged("PayExchangeApplyStatus");
					this.OnPayExchangeApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyLogs", Storage="_PayExchangeApplies", ThisKey="PayExchangeApplyID", OtherKey="ID", IsForeignKey=true)]
		public PayExchangeApplies PayExchangeApplies
		{
			get
			{
				return this._PayExchangeApplies.Entity;
			}
			set
			{
				PayExchangeApplies previousValue = this._PayExchangeApplies.Entity;
				if (((previousValue != value) 
							|| (this._PayExchangeApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayExchangeApplies.Entity = null;
						previousValue.PayExchangeApplyLogs.Remove(this);
					}
					this._PayExchangeApplies.Entity = value;
					if ((value != null))
					{
						value.PayExchangeApplyLogs.Add(this);
						this._PayExchangeApplyID = value.ID;
					}
					else
					{
						this._PayExchangeApplyID = default(string);
					}
					this.SendPropertyChanged("PayExchangeApplies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeSensitiveAreas")]
	public partial class PayExchangeSensitiveAreas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PayExchangeSensitiveAreas()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeSensitiveWords")]
	public partial class PayExchangeSensitiveWords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AreaID;
		
		private string _Content;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAreaIDChanging(string value);
    partial void OnAreaIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PayExchangeSensitiveWords()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderTraces")]
	public partial class OrderTraces : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _AdminID;
		
		private string _UserID;
		
		private int _Step;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderTraces()
		{
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL")]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderTraces", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderTraces.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderTraces.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNoticeItems")]
	public partial class SwapNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SwapNoticeID;
		
		private string _DecHeadID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<decimal> _Amount;
		
		private int _Status;
		
		private decimal _CustomizeAmount;
		
		private System.Nullable<bool> _IsOld;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSwapNoticeIDChanging(string value);
    partial void OnSwapNoticeIDChanged();
    partial void OnDecHeadIDChanging(string value);
    partial void OnDecHeadIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCustomizeAmountChanging(decimal value);
    partial void OnCustomizeAmountChanged();
    partial void OnIsOldChanging(System.Nullable<bool> value);
    partial void OnIsOldChanged();
    #endregion
		
		public SwapNoticeItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SwapNoticeID
		{
			get
			{
				return this._SwapNoticeID;
			}
			set
			{
				if ((this._SwapNoticeID != value))
				{
					this.OnSwapNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeID = value;
					this.SendPropertyChanged("SwapNoticeID");
					this.OnSwapNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecHeadID
		{
			get
			{
				return this._DecHeadID;
			}
			set
			{
				if ((this._DecHeadID != value))
				{
					this.OnDecHeadIDChanging(value);
					this.SendPropertyChanging();
					this._DecHeadID = value;
					this.SendPropertyChanged("DecHeadID");
					this.OnDecHeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomizeAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal CustomizeAmount
		{
			get
			{
				return this._CustomizeAmount;
			}
			set
			{
				if ((this._CustomizeAmount != value))
				{
					this.OnCustomizeAmountChanging(value);
					this.SendPropertyChanging();
					this._CustomizeAmount = value;
					this.SendPropertyChanged("CustomizeAmount");
					this.OnCustomizeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOld", DbType="Bit")]
		public System.Nullable<bool> IsOld
		{
			get
			{
				return this._IsOld;
			}
			set
			{
				if ((this._IsOld != value))
				{
					this.OnIsOldChanging(value);
					this.SendPropertyChanging();
					this._IsOld = value;
					this.SendPropertyChanged("IsOld");
					this.OnIsOldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceApplies")]
	public partial class ServiceApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Email;
		
		private string _CompanyName;
		
		private string _Address;
		
		private string _Contact;
		
		private string _Mobile;
		
		private string _Tel;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ServiceApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderConsignees")]
	public partial class OrderConsignees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _ClientSupplierID;
		
		private int _Type;
		
		private string _Contact;
		
		private string _Mobile;
		
		private string _Tel;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _PickUpTime;
		
		private string _WayBillNo;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Orders> _Orders;
		
		private EntityRef<ClientSuppliers> _ClientSuppliers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnClientSupplierIDChanging(string value);
    partial void OnClientSupplierIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPickUpTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPickUpTimeChanged();
    partial void OnWayBillNoChanging(string value);
    partial void OnWayBillNoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderConsignees()
		{
			this._Orders = default(EntityRef<Orders>);
			this._ClientSuppliers = default(EntityRef<ClientSuppliers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientSupplierID
		{
			get
			{
				return this._ClientSupplierID;
			}
			set
			{
				if ((this._ClientSupplierID != value))
				{
					if (this._ClientSuppliers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._ClientSupplierID = value;
					this.SendPropertyChanged("ClientSupplierID");
					this.OnClientSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickUpTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PickUpTime
		{
			get
			{
				return this._PickUpTime;
			}
			set
			{
				if ((this._PickUpTime != value))
				{
					this.OnPickUpTimeChanging(value);
					this.SendPropertyChanging();
					this._PickUpTime = value;
					this.SendPropertyChanged("PickUpTime");
					this.OnPickUpTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WayBillNo", DbType="VarChar(50)")]
		public string WayBillNo
		{
			get
			{
				return this._WayBillNo;
			}
			set
			{
				if ((this._WayBillNo != value))
				{
					this.OnWayBillNoChanging(value);
					this.SendPropertyChanging();
					this._WayBillNo = value;
					this.SendPropertyChanged("WayBillNo");
					this.OnWayBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderConsignees", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderConsignees.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderConsignees.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_OrderConsignees", Storage="_ClientSuppliers", ThisKey="ClientSupplierID", OtherKey="ID", IsForeignKey=true)]
		public ClientSuppliers ClientSuppliers
		{
			get
			{
				return this._ClientSuppliers.Entity;
			}
			set
			{
				ClientSuppliers previousValue = this._ClientSuppliers.Entity;
				if (((previousValue != value) 
							|| (this._ClientSuppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientSuppliers.Entity = null;
						previousValue.OrderConsignees.Remove(this);
					}
					this._ClientSuppliers.Entity = value;
					if ((value != null))
					{
						value.OrderConsignees.Add(this);
						this._ClientSupplierID = value.ID;
					}
					else
					{
						this._ClientSupplierID = default(string);
					}
					this.SendPropertyChanged("ClientSuppliers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInovieInfoView")]
	public partial class OrderInovieInfoView
	{
		
		private string _InvoiceNoticeItemID;
		
		private string _InvoiceNoticeID;
		
		private string _TinyOrderID;
		
		private string _OrderItemID;
		
		private string _TaxName;
		
		private System.Nullable<int> _InvoiceType;
		
		private decimal _Amount;
		
		private string _InvoiceNo;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<int> _InvoiceNoticeStatus;
		
		private string _Model;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _InvoiceTaxRate;
		
		private System.Nullable<decimal> _JinE;
		
		private System.Nullable<decimal> _ShuiE;
		
		private string _UnitName;
		
		public OrderInovieInfoView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeItemID
		{
			get
			{
				return this._InvoiceNoticeItemID;
			}
			set
			{
				if ((this._InvoiceNoticeItemID != value))
				{
					this._InvoiceNoticeItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this._InvoiceNoticeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyOrderID", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string TinyOrderID
		{
			get
			{
				return this._TinyOrderID;
			}
			set
			{
				if ((this._TinyOrderID != value))
				{
					this._TinyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this._OrderItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="NVarChar(50)")]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this._TaxName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(150)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeStatus", DbType="Int")]
		public System.Nullable<int> InvoiceNoticeStatus
		{
			get
			{
				return this._InvoiceNoticeStatus;
			}
			set
			{
				if ((this._InvoiceNoticeStatus != value))
				{
					this._InvoiceNoticeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(150)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTaxRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvoiceTaxRate
		{
			get
			{
				return this._InvoiceTaxRate;
			}
			set
			{
				if ((this._InvoiceTaxRate != value))
				{
					this._InvoiceTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JinE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JinE
		{
			get
			{
				return this._JinE;
			}
			set
			{
				if ((this._JinE != value))
				{
					this._JinE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShuiE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ShuiE
		{
			get
			{
				return this._ShuiE;
			}
			set
			{
				if ((this._ShuiE != value))
				{
					this._ShuiE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(150)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInvoiceTopView")]
	public partial class OrderInvoiceTopView
	{
		
		private string _TinyOrderID;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _OrderID;
		
		private System.Nullable<int> _InvoiceType;
		
		private int _Status;
		
		private string _InvoiceNo;
		
		private System.Nullable<decimal> _Amount;
		
		private string _ID;
		
		private string _ContrNo;
		
		private string _Expr1;
		
		private string _ConName;
		
		private string _ConUrl;
		
		private string _TraiffNo;
		
		private string _TraiffName;
		
		private string _TraiffUrl;
		
		private string _AddNo;
		
		private string _AddName;
		
		private string _AddUrl;
		
		private string _ClientID;
		
		public OrderInvoiceTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TinyOrderID
		{
			get
			{
				return this._TinyOrderID;
			}
			set
			{
				if ((this._TinyOrderID != value))
				{
					this._TinyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(150)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrNo", DbType="VarChar(32)")]
		public string ContrNo
		{
			get
			{
				return this._ContrNo;
			}
			set
			{
				if ((this._ContrNo != value))
				{
					this._ContrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="VarChar(50)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConName", DbType="NVarChar(150)")]
		public string ConName
		{
			get
			{
				return this._ConName;
			}
			set
			{
				if ((this._ConName != value))
				{
					this._ConName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConUrl", DbType="NVarChar(150)")]
		public string ConUrl
		{
			get
			{
				return this._ConUrl;
			}
			set
			{
				if ((this._ConUrl != value))
				{
					this._ConUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffNo", DbType="VarChar(50)")]
		public string TraiffNo
		{
			get
			{
				return this._TraiffNo;
			}
			set
			{
				if ((this._TraiffNo != value))
				{
					this._TraiffNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffName", DbType="NVarChar(150)")]
		public string TraiffName
		{
			get
			{
				return this._TraiffName;
			}
			set
			{
				if ((this._TraiffName != value))
				{
					this._TraiffName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffUrl", DbType="NVarChar(150)")]
		public string TraiffUrl
		{
			get
			{
				return this._TraiffUrl;
			}
			set
			{
				if ((this._TraiffUrl != value))
				{
					this._TraiffUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNo", DbType="VarChar(50)")]
		public string AddNo
		{
			get
			{
				return this._AddNo;
			}
			set
			{
				if ((this._AddNo != value))
				{
					this._AddNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddName", DbType="NVarChar(150)")]
		public string AddName
		{
			get
			{
				return this._AddName;
			}
			set
			{
				if ((this._AddName != value))
				{
					this._AddName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddUrl", DbType="NVarChar(150)")]
		public string AddUrl
		{
			get
			{
				return this._AddUrl;
			}
			set
			{
				if ((this._AddUrl != value))
				{
					this._AddUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suggestions")]
	public partial class Suggestions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private System.DateTime _UpdateDate;
		
		private string _City;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public Suggestions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSupplierBanks")]
	public partial class ClientSupplierBanks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientSupplierID;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _SwiftCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Place;
		
		private System.Nullable<int> _Methord;
		
		private System.Nullable<int> _Currency;
		
		private string _Summary;
		
		private EntityRef<ClientSuppliers> _ClientSuppliers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientSupplierIDChanging(string value);
    partial void OnClientSupplierIDChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnMethordChanging(System.Nullable<int> value);
    partial void OnMethordChanged();
    partial void OnCurrencyChanging(System.Nullable<int> value);
    partial void OnCurrencyChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientSupplierBanks()
		{
			this._ClientSuppliers = default(EntityRef<ClientSuppliers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientSupplierID
		{
			get
			{
				return this._ClientSupplierID;
			}
			set
			{
				if ((this._ClientSupplierID != value))
				{
					if (this._ClientSuppliers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._ClientSupplierID = value;
					this.SendPropertyChanged("ClientSupplierID");
					this.OnClientSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(10)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int")]
		public System.Nullable<int> Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this.OnMethordChanging(value);
					this.SendPropertyChanging();
					this._Methord = value;
					this.SendPropertyChanged("Methord");
					this.OnMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_ClientSupplierBanks", Storage="_ClientSuppliers", ThisKey="ClientSupplierID", OtherKey="ID", IsForeignKey=true)]
		public ClientSuppliers ClientSuppliers
		{
			get
			{
				return this._ClientSuppliers.Entity;
			}
			set
			{
				ClientSuppliers previousValue = this._ClientSuppliers.Entity;
				if (((previousValue != value) 
							|| (this._ClientSuppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientSuppliers.Entity = null;
						previousValue.ClientSupplierBanks.Remove(this);
					}
					this._ClientSuppliers.Entity = value;
					if ((value != null))
					{
						value.ClientSupplierBanks.Add(this);
						this._ClientSupplierID = value.ID;
					}
					else
					{
						this._ClientSupplierID = default(string);
					}
					this.SendPropertyChanged("ClientSuppliers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DecHeadFiles")]
	public partial class DecHeadFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DecHeadID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<DecHeads> _DecHeads;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDecHeadIDChanging(string value);
    partial void OnDecHeadIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DecHeadFiles()
		{
			this._DecHeads = default(EntityRef<DecHeads>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecHeadID
		{
			get
			{
				return this._DecHeadID;
			}
			set
			{
				if ((this._DecHeadID != value))
				{
					if (this._DecHeads.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDecHeadIDChanging(value);
					this.SendPropertyChanging();
					this._DecHeadID = value;
					this.SendPropertyChanged("DecHeadID");
					this.OnDecHeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DecHeads_DecHeadFiles", Storage="_DecHeads", ThisKey="DecHeadID", OtherKey="ID", IsForeignKey=true)]
		public DecHeads DecHeads
		{
			get
			{
				return this._DecHeads.Entity;
			}
			set
			{
				DecHeads previousValue = this._DecHeads.Entity;
				if (((previousValue != value) 
							|| (this._DecHeads.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecHeads.Entity = null;
						previousValue.DecHeadFiles.Remove(this);
					}
					this._DecHeads.Entity = value;
					if ((value != null))
					{
						value.DecHeadFiles.Add(this);
						this._DecHeadID = value.ID;
					}
					else
					{
						this._DecHeadID = default(string);
					}
					this.SendPropertyChanged("DecHeads");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProducts")]
	public partial class PreProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ProductUnionCode;
		
		private string _Model;
		
		private string _Manufacturer;
		
		private System.Nullable<decimal> _Qty;
		
		private decimal _Price;
		
		private string _Currency;
		
		private string _Supplier;
		
		private System.Nullable<int> _CompanyType;
		
		private string _BatchNo;
		
		private string _Description;
		
		private string _Pack;
		
		private string _AreaOfProduction;
		
		private string _UseFor;
		
		private System.Nullable<int> _UseType;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PreProductCategories> _PreProductCategories;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnProductUnionCodeChanging(string value);
    partial void OnProductUnionCodeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnCompanyTypeChanging(System.Nullable<int> value);
    partial void OnCompanyTypeChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackChanging(string value);
    partial void OnPackChanged();
    partial void OnAreaOfProductionChanging(string value);
    partial void OnAreaOfProductionChanged();
    partial void OnUseForChanging(string value);
    partial void OnUseForChanged();
    partial void OnUseTypeChanging(System.Nullable<int> value);
    partial void OnUseTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PreProducts()
		{
			this._PreProductCategories = new EntitySet<PreProductCategories>(new Action<PreProductCategories>(this.attach_PreProductCategories), new Action<PreProductCategories>(this.detach_PreProductCategories));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUnionCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductUnionCode
		{
			get
			{
				return this._ProductUnionCode;
			}
			set
			{
				if ((this._ProductUnionCode != value))
				{
					this.OnProductUnionCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductUnionCode = value;
					this.SendPropertyChanged("ProductUnionCode");
					this.OnProductUnionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(100)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int")]
		public System.Nullable<int> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="VarChar(200)")]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pack", DbType="NVarChar(100)")]
		public string Pack
		{
			get
			{
				return this._Pack;
			}
			set
			{
				if ((this._Pack != value))
				{
					this.OnPackChanging(value);
					this.SendPropertyChanging();
					this._Pack = value;
					this.SendPropertyChanged("Pack");
					this.OnPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaOfProduction", DbType="VarChar(50)")]
		public string AreaOfProduction
		{
			get
			{
				return this._AreaOfProduction;
			}
			set
			{
				if ((this._AreaOfProduction != value))
				{
					this.OnAreaOfProductionChanging(value);
					this.SendPropertyChanging();
					this._AreaOfProduction = value;
					this.SendPropertyChanged("AreaOfProduction");
					this.OnAreaOfProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseFor", DbType="VarChar(50)")]
		public string UseFor
		{
			get
			{
				return this._UseFor;
			}
			set
			{
				if ((this._UseFor != value))
				{
					this.OnUseForChanging(value);
					this.SendPropertyChanging();
					this._UseFor = value;
					this.SendPropertyChanged("UseFor");
					this.OnUseForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseType", DbType="Int")]
		public System.Nullable<int> UseType
		{
			get
			{
				return this._UseType;
			}
			set
			{
				if ((this._UseType != value))
				{
					this.OnUseTypeChanging(value);
					this.SendPropertyChanging();
					this._UseType = value;
					this.SendPropertyChanged("UseType");
					this.OnUseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreProducts_PreProductCategories", Storage="_PreProductCategories", ThisKey="ID", OtherKey="PreProductID")]
		public EntitySet<PreProductCategories> PreProductCategories
		{
			get
			{
				return this._PreProductCategories;
			}
			set
			{
				this._PreProductCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_PreProducts", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.PreProducts.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.PreProducts.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreProductCategories(PreProductCategories entity)
		{
			this.SendPropertyChanging();
			entity.PreProducts = this;
		}
		
		private void detach_PreProductCategories(PreProductCategories entity)
		{
			this.SendPropertyChanging();
			entity.PreProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderAgreementTopView")]
	public partial class OrderAgreementTopView
	{
		
		private string _OrderID;
		
		private System.Nullable<int> _InvoiceType;
		
		private System.Nullable<decimal> _InvoiceTaxRate;
		
		private System.Nullable<decimal> _AgencyRate;
		
		private System.Nullable<decimal> _MinAgencyFee;
		
		private string _ClientID;
		
		public OrderAgreementTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTaxRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvoiceTaxRate
		{
			get
			{
				return this._InvoiceTaxRate;
			}
			set
			{
				if ((this._InvoiceTaxRate != value))
				{
					this._InvoiceTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AgencyRate
		{
			get
			{
				return this._AgencyRate;
			}
			set
			{
				if ((this._AgencyRate != value))
				{
					this._AgencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAgencyFee", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> MinAgencyFee
		{
			get
			{
				return this._MinAgencyFee;
			}
			set
			{
				if ((this._MinAgencyFee != value))
				{
					this._MinAgencyFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaseCountries")]
	public partial class BaseCountries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _EnglishName;
		
		private string _EditionOne;
		
		private System.Nullable<int> _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnEditionOneChanging(string value);
    partial void OnEditionOneChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public BaseCountries()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionOne", DbType="VarChar(10)")]
		public string EditionOne
		{
			get
			{
				return this._EditionOne;
			}
			set
			{
				if ((this._EditionOne != value))
				{
					this.OnEditionOneChanging(value);
					this.SendPropertyChanging();
					this._EditionOne = value;
					this.SendPropertyChanged("EditionOne");
					this.OnEditionOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSuppliers")]
	public partial class ClientSuppliers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _Name;
		
		private string _ChineseName;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<int> _Grade;
		
		private string _Place;
		
		private string _Summary;
		
		private EntitySet<ClientSupplierAddresses> _ClientSupplierAddresses;
		
		private EntitySet<OrderPayExchangeSuppliers> _OrderPayExchangeSuppliers;
		
		private EntitySet<OrderConsignees> _OrderConsignees;
		
		private EntitySet<ClientSupplierBanks> _ClientSupplierBanks;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChineseNameChanging(string value);
    partial void OnChineseNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientSuppliers()
		{
			this._ClientSupplierAddresses = new EntitySet<ClientSupplierAddresses>(new Action<ClientSupplierAddresses>(this.attach_ClientSupplierAddresses), new Action<ClientSupplierAddresses>(this.detach_ClientSupplierAddresses));
			this._OrderPayExchangeSuppliers = new EntitySet<OrderPayExchangeSuppliers>(new Action<OrderPayExchangeSuppliers>(this.attach_OrderPayExchangeSuppliers), new Action<OrderPayExchangeSuppliers>(this.detach_OrderPayExchangeSuppliers));
			this._OrderConsignees = new EntitySet<OrderConsignees>(new Action<OrderConsignees>(this.attach_OrderConsignees), new Action<OrderConsignees>(this.detach_OrderConsignees));
			this._ClientSupplierBanks = new EntitySet<ClientSupplierBanks>(new Action<ClientSupplierBanks>(this.attach_ClientSupplierBanks), new Action<ClientSupplierBanks>(this.detach_ClientSupplierBanks));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ChineseName
		{
			get
			{
				return this._ChineseName;
			}
			set
			{
				if ((this._ChineseName != value))
				{
					this.OnChineseNameChanging(value);
					this.SendPropertyChanging();
					this._ChineseName = value;
					this.SendPropertyChanged("ChineseName");
					this.OnChineseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(10)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_ClientSupplierAddresses", Storage="_ClientSupplierAddresses", ThisKey="ID", OtherKey="ClientSupplierID")]
		public EntitySet<ClientSupplierAddresses> ClientSupplierAddresses
		{
			get
			{
				return this._ClientSupplierAddresses;
			}
			set
			{
				this._ClientSupplierAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_OrderPayExchangeSuppliers", Storage="_OrderPayExchangeSuppliers", ThisKey="ID", OtherKey="ClientSupplierID")]
		public EntitySet<OrderPayExchangeSuppliers> OrderPayExchangeSuppliers
		{
			get
			{
				return this._OrderPayExchangeSuppliers;
			}
			set
			{
				this._OrderPayExchangeSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_OrderConsignees", Storage="_OrderConsignees", ThisKey="ID", OtherKey="ClientSupplierID")]
		public EntitySet<OrderConsignees> OrderConsignees
		{
			get
			{
				return this._OrderConsignees;
			}
			set
			{
				this._OrderConsignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientSuppliers_ClientSupplierBanks", Storage="_ClientSupplierBanks", ThisKey="ID", OtherKey="ClientSupplierID")]
		public EntitySet<ClientSupplierBanks> ClientSupplierBanks
		{
			get
			{
				return this._ClientSupplierBanks;
			}
			set
			{
				this._ClientSupplierBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientSuppliers", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientSuppliers.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientSuppliers.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientSupplierAddresses(ClientSupplierAddresses entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = this;
		}
		
		private void detach_ClientSupplierAddresses(ClientSupplierAddresses entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = null;
		}
		
		private void attach_OrderPayExchangeSuppliers(OrderPayExchangeSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = this;
		}
		
		private void detach_OrderPayExchangeSuppliers(OrderPayExchangeSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = null;
		}
		
		private void attach_OrderConsignees(OrderConsignees entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = this;
		}
		
		private void detach_OrderConsignees(OrderConsignees entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = null;
		}
		
		private void attach_ClientSupplierBanks(ClientSupplierBanks entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = this;
		}
		
		private void detach_ClientSupplierBanks(ClientSupplierBanks entity)
		{
			this.SendPropertyChanging();
			entity.ClientSuppliers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvanceMoneyApplies")]
	public partial class AdvanceMoneyApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private decimal _Amount;
		
		private decimal _AmountUsed;
		
		private int _Status;
		
		private int _LimitDays;
		
		private decimal _InterestRate;
		
		private decimal _OverdueInterestRate;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAmountUsedChanging(decimal value);
    partial void OnAmountUsedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLimitDaysChanging(int value);
    partial void OnLimitDaysChanged();
    partial void OnInterestRateChanging(decimal value);
    partial void OnInterestRateChanged();
    partial void OnOverdueInterestRateChanging(decimal value);
    partial void OnOverdueInterestRateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public AdvanceMoneyApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountUsed", DbType="Decimal(18,4) NOT NULL")]
		public decimal AmountUsed
		{
			get
			{
				return this._AmountUsed;
			}
			set
			{
				if ((this._AmountUsed != value))
				{
					this.OnAmountUsedChanging(value);
					this.SendPropertyChanging();
					this._AmountUsed = value;
					this.SendPropertyChanged("AmountUsed");
					this.OnAmountUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDays", DbType="Int NOT NULL")]
		public int LimitDays
		{
			get
			{
				return this._LimitDays;
			}
			set
			{
				if ((this._LimitDays != value))
				{
					this.OnLimitDaysChanging(value);
					this.SendPropertyChanging();
					this._LimitDays = value;
					this.SendPropertyChanged("LimitDays");
					this.OnLimitDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Decimal(18,7) NOT NULL")]
		public decimal InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverdueInterestRate", DbType="Decimal(18,7) NOT NULL")]
		public decimal OverdueInterestRate
		{
			get
			{
				return this._OverdueInterestRate;
			}
			set
			{
				if ((this._OverdueInterestRate != value))
				{
					this.OnOverdueInterestRateChanging(value);
					this.SendPropertyChanging();
					this._OverdueInterestRate = value;
					this.SendPropertyChanged("OverdueInterestRate");
					this.OnOverdueInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(50)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvanceRecords")]
	public partial class AdvanceRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _OrderID;
		
		private string _AdvanceID;
		
		private string _PayExchangeID;
		
		private decimal _Amount;
		
		private decimal _PaidAmount;
		
		private System.DateTime _AdvanceTime;
		
		private int _LimitDays;
		
		private decimal _InterestRate;
		
		private decimal _InterestAmount;
		
		private decimal _OverdueInterestAmount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnAdvanceIDChanging(string value);
    partial void OnAdvanceIDChanged();
    partial void OnPayExchangeIDChanging(string value);
    partial void OnPayExchangeIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnAdvanceTimeChanging(System.DateTime value);
    partial void OnAdvanceTimeChanged();
    partial void OnLimitDaysChanging(int value);
    partial void OnLimitDaysChanged();
    partial void OnInterestRateChanging(decimal value);
    partial void OnInterestRateChanged();
    partial void OnInterestAmountChanging(decimal value);
    partial void OnInterestAmountChanged();
    partial void OnOverdueInterestAmountChanging(decimal value);
    partial void OnOverdueInterestAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public AdvanceRecords()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdvanceID
		{
			get
			{
				return this._AdvanceID;
			}
			set
			{
				if ((this._AdvanceID != value))
				{
					this.OnAdvanceIDChanging(value);
					this.SendPropertyChanging();
					this._AdvanceID = value;
					this.SendPropertyChanged("AdvanceID");
					this.OnAdvanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayExchangeID
		{
			get
			{
				return this._PayExchangeID;
			}
			set
			{
				if ((this._PayExchangeID != value))
				{
					this.OnPayExchangeIDChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeID = value;
					this.SendPropertyChanged("PayExchangeID");
					this.OnPayExchangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceTime", DbType="DateTime NOT NULL")]
		public System.DateTime AdvanceTime
		{
			get
			{
				return this._AdvanceTime;
			}
			set
			{
				if ((this._AdvanceTime != value))
				{
					this.OnAdvanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AdvanceTime = value;
					this.SendPropertyChanged("AdvanceTime");
					this.OnAdvanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDays", DbType="Int NOT NULL")]
		public int LimitDays
		{
			get
			{
				return this._LimitDays;
			}
			set
			{
				if ((this._LimitDays != value))
				{
					this.OnLimitDaysChanging(value);
					this.SendPropertyChanging();
					this._LimitDays = value;
					this.SendPropertyChanged("LimitDays");
					this.OnLimitDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Decimal(18,7) NOT NULL")]
		public decimal InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverdueInterestAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal OverdueInterestAmount
		{
			get
			{
				return this._OverdueInterestAmount;
			}
			set
			{
				if ((this._OverdueInterestAmount != value))
				{
					this.OnOverdueInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._OverdueInterestAmount = value;
					this.SendPropertyChanged("OverdueInterestAmount");
					this.OnOverdueInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(50)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientAdmins")]
	public partial class ClientAdmins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private int _Type;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientAdmins()
		{
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientAdmins", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientAdmins.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientAdmins.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView2")]
	public partial class AdminsTopView2
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _OriginID;
		
		private string _RoleID;
		
		public AdminsTopView2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="VarChar(50)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this._OriginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInvoiceTopViewRight")]
	public partial class OrderInvoiceTopViewRight
	{
		
		private string _TinyOrderID;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _OrderID;
		
		private System.Nullable<int> _InvoiceType;
		
		private System.Nullable<int> _Status;
		
		private string _InvoiceNo;
		
		private System.Nullable<decimal> _Amount;
		
		private string _ID;
		
		private string _ContrNo;
		
		private string _Expr1;
		
		private string _ConName;
		
		private string _ConUrl;
		
		private string _TraiffNo;
		
		private string _TraiffName;
		
		private string _TraiffUrl;
		
		private string _AddNo;
		
		private string _AddName;
		
		private string _AddUrl;
		
		private string _ClientID;
		
		public OrderInvoiceTopViewRight()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyOrderID", DbType="VarChar(50)")]
		public string TinyOrderID
		{
			get
			{
				return this._TinyOrderID;
			}
			set
			{
				if ((this._TinyOrderID != value))
				{
					this._TinyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(150)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrNo", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ContrNo
		{
			get
			{
				return this._ContrNo;
			}
			set
			{
				if ((this._ContrNo != value))
				{
					this._ContrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConName", DbType="NVarChar(150)")]
		public string ConName
		{
			get
			{
				return this._ConName;
			}
			set
			{
				if ((this._ConName != value))
				{
					this._ConName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConUrl", DbType="NVarChar(150)")]
		public string ConUrl
		{
			get
			{
				return this._ConUrl;
			}
			set
			{
				if ((this._ConUrl != value))
				{
					this._ConUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffNo", DbType="VarChar(50)")]
		public string TraiffNo
		{
			get
			{
				return this._TraiffNo;
			}
			set
			{
				if ((this._TraiffNo != value))
				{
					this._TraiffNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffName", DbType="NVarChar(150)")]
		public string TraiffName
		{
			get
			{
				return this._TraiffName;
			}
			set
			{
				if ((this._TraiffName != value))
				{
					this._TraiffName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiffUrl", DbType="NVarChar(150)")]
		public string TraiffUrl
		{
			get
			{
				return this._TraiffUrl;
			}
			set
			{
				if ((this._TraiffUrl != value))
				{
					this._TraiffUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNo", DbType="VarChar(50)")]
		public string AddNo
		{
			get
			{
				return this._AddNo;
			}
			set
			{
				if ((this._AddNo != value))
				{
					this._AddNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddName", DbType="NVarChar(150)")]
		public string AddName
		{
			get
			{
				return this._AddName;
			}
			set
			{
				if ((this._AddName != value))
				{
					this._AddName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddUrl", DbType="NVarChar(150)")]
		public string AddUrl
		{
			get
			{
				return this._AddUrl;
			}
			set
			{
				if ((this._AddUrl != value))
				{
					this._AddUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PvWsOrderBaseOrderView")]
	public partial class PvWsOrderBaseOrderView
	{
		
		private string _ID;
		
		private int _Type;
		
		private string _ClientID;
		
		private string _InvoiceID;
		
		private string _PayeeID;
		
		private string _BeneficiaryID;
		
		private string _SupplierID;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _CreatorID;
		
		private System.Nullable<int> _SettlementCurrency;
		
		public PvWsOrderBaseOrderView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="VarChar(50)")]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this._InvoiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeID
		{
			get
			{
				return this._PayeeID;
			}
			set
			{
				if ((this._PayeeID != value))
				{
					this._PayeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50)")]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50)")]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this._ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementCurrency", DbType="Int")]
		public System.Nullable<int> SettlementCurrency
		{
			get
			{
				return this._SettlementCurrency;
			}
			set
			{
				if ((this._SettlementCurrency != value))
				{
					this._SettlementCurrency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceipts")]
	public partial class OrderReceipts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FinanceReceiptID;
		
		private string _ClientID;
		
		private string _OrderID;
		
		private string _FeeSourceID;
		
		private int _FeeType;
		
		private int _Type;
		
		private string _Currency;
		
		private decimal _Rate;
		
		private decimal _Amount;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Orders> _Orders;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFinanceReceiptIDChanging(string value);
    partial void OnFinanceReceiptIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnFeeSourceIDChanging(string value);
    partial void OnFeeSourceIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderReceipts()
		{
			this._Orders = default(EntityRef<Orders>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceReceiptID", DbType="VarChar(50)")]
		public string FinanceReceiptID
		{
			get
			{
				return this._FinanceReceiptID;
			}
			set
			{
				if ((this._FinanceReceiptID != value))
				{
					this.OnFinanceReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceReceiptID = value;
					this.SendPropertyChanged("FinanceReceiptID");
					this.OnFinanceReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeSourceID", DbType="VarChar(50)")]
		public string FeeSourceID
		{
			get
			{
				return this._FeeSourceID;
			}
			set
			{
				if ((this._FeeSourceID != value))
				{
					this.OnFeeSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FeeSourceID = value;
					this.SendPropertyChanged("FeeSourceID");
					this.OnFeeSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderReceipts", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderReceipts.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderReceipts.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_OrderReceipts", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.OrderReceipts.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.OrderReceipts.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeItems")]
	public partial class InvoiceNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _OrderID;
		
		private string _OrderItemID;
		
		private decimal _UnitPrice;
		
		private decimal _Amount;
		
		private decimal _Difference;
		
		private string _InvoiceCode;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<OrderItems> _OrderItems;
		
		private EntityRef<InvoiceNotices> _InvoiceNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDifferenceChanging(decimal value);
    partial void OnDifferenceChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceNoticeItems()
		{
			this._OrderItems = default(EntityRef<OrderItems>);
			this._InvoiceNotices = default(EntityRef<InvoiceNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					if (this._InvoiceNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					if (this._OrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(19,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference", DbType="Decimal(18,4) NOT NULL")]
		public decimal Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(150)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(1200)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_InvoiceNoticeItems", Storage="_OrderItems", ThisKey="OrderItemID", OtherKey="ID", IsForeignKey=true)]
		public OrderItems OrderItems
		{
			get
			{
				return this._OrderItems.Entity;
			}
			set
			{
				OrderItems previousValue = this._OrderItems.Entity;
				if (((previousValue != value) 
							|| (this._OrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItems.Entity = null;
						previousValue.InvoiceNoticeItems.Remove(this);
					}
					this._OrderItems.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoticeItems.Add(this);
						this._OrderItemID = value.ID;
					}
					else
					{
						this._OrderItemID = default(string);
					}
					this.SendPropertyChanged("OrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeItems", Storage="_InvoiceNotices", ThisKey="InvoiceNoticeID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceNotices InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices.Entity;
			}
			set
			{
				InvoiceNotices previousValue = this._InvoiceNotices.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNotices.Entity = null;
						previousValue.InvoiceNoticeItems.Remove(this);
					}
					this._InvoiceNotices.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoticeItems.Add(this);
						this._InvoiceNoticeID = value.ID;
					}
					else
					{
						this._InvoiceNoticeID = default(string);
					}
					this.SendPropertyChanged("InvoiceNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNotices")]
	public partial class InvoiceNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private string _AdminID;
		
		private string _ClientID;
		
		private string _ClientInvoiceID;
		
		private int _InvoiceType;
		
		private decimal _InvoiceTaxRate;
		
		private string _Address;
		
		private string _Tel;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private int _DeliveryType;
		
		private string _MailName;
		
		private string _MailMobile;
		
		private string _MailAddress;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<InvoiceNoticeItems> _InvoiceNoticeItems;
		
		private EntityRef<ClientInvoices> _ClientInvoices;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientInvoiceIDChanging(string value);
    partial void OnClientInvoiceIDChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnInvoiceTaxRateChanging(decimal value);
    partial void OnInvoiceTaxRateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnMailNameChanging(string value);
    partial void OnMailNameChanged();
    partial void OnMailMobileChanging(string value);
    partial void OnMailMobileChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceNotices()
		{
			this._InvoiceNoticeItems = new EntitySet<InvoiceNoticeItems>(new Action<InvoiceNoticeItems>(this.attach_InvoiceNoticeItems), new Action<InvoiceNoticeItems>(this.detach_InvoiceNoticeItems));
			this._ClientInvoices = default(EntityRef<ClientInvoices>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientInvoiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientInvoiceID
		{
			get
			{
				return this._ClientInvoiceID;
			}
			set
			{
				if ((this._ClientInvoiceID != value))
				{
					if (this._ClientInvoices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._ClientInvoiceID = value;
					this.SendPropertyChanged("ClientInvoiceID");
					this.OnClientInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTaxRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal InvoiceTaxRate
		{
			get
			{
				return this._InvoiceTaxRate;
			}
			set
			{
				if ((this._InvoiceTaxRate != value))
				{
					this.OnInvoiceTaxRateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTaxRate = value;
					this.SendPropertyChanged("InvoiceTaxRate");
					this.OnInvoiceTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string MailName
		{
			get
			{
				return this._MailName;
			}
			set
			{
				if ((this._MailName != value))
				{
					this.OnMailNameChanging(value);
					this.SendPropertyChanging();
					this._MailName = value;
					this.SendPropertyChanged("MailName");
					this.OnMailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailMobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MailMobile
		{
			get
			{
				return this._MailMobile;
			}
			set
			{
				if ((this._MailMobile != value))
				{
					this.OnMailMobileChanging(value);
					this.SendPropertyChanging();
					this._MailMobile = value;
					this.SendPropertyChanged("MailMobile");
					this.OnMailMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeItems", Storage="_InvoiceNoticeItems", ThisKey="ID", OtherKey="InvoiceNoticeID")]
		public EntitySet<InvoiceNoticeItems> InvoiceNoticeItems
		{
			get
			{
				return this._InvoiceNoticeItems;
			}
			set
			{
				this._InvoiceNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientInvoices_InvoiceNotices", Storage="_ClientInvoices", ThisKey="ClientInvoiceID", OtherKey="ID", IsForeignKey=true)]
		public ClientInvoices ClientInvoices
		{
			get
			{
				return this._ClientInvoices.Entity;
			}
			set
			{
				ClientInvoices previousValue = this._ClientInvoices.Entity;
				if (((previousValue != value) 
							|| (this._ClientInvoices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientInvoices.Entity = null;
						previousValue.InvoiceNotices.Remove(this);
					}
					this._ClientInvoices.Entity = value;
					if ((value != null))
					{
						value.InvoiceNotices.Add(this);
						this._ClientInvoiceID = value.ID;
					}
					else
					{
						this._ClientInvoiceID = default(string);
					}
					this.SendPropertyChanged("ClientInvoices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_InvoiceNotices", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.InvoiceNotices.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.InvoiceNotices.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = this;
		}
		
		private void detach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeRates")]
	public partial class ExchangeRates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private int _Type;
		
		private decimal _Rate;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExchangeRates()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,6) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeRateLogs")]
	public partial class ExchangeRateLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ExchangeRateID;
		
		private decimal _Rate;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnExchangeRateIDChanging(string value);
    partial void OnExchangeRateIDChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExchangeRateLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRateID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExchangeRateID
		{
			get
			{
				return this._ExchangeRateID;
			}
			set
			{
				if ((this._ExchangeRateID != value))
				{
					this.OnExchangeRateIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRateID = value;
					this.SendPropertyChanged("ExchangeRateID");
					this.OnExchangeRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,6) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayExchangeApplies")]
	public partial class PayExchangeApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _SupplierName;
		
		private string _SupplierEnglishName;
		
		private string _SupplierAddress;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _SwiftCode;
		
		private int _ExchangeRateType;
		
		private string _Currency;
		
		private decimal _ExchangeRate;
		
		private int _PaymentType;
		
		private System.Nullable<System.DateTime> _ExpectPayDate;
		
		private System.DateTime _SettlemenDate;
		
		private string _OtherInfo;
		
		private string _UserID;
		
		private string _AdminID;
		
		private int _PayExchangeApplyStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _ABA;
		
		private string _IBAN;
		
		private string _FatherID;
		
		private System.Nullable<int> _IsAdvanceMoney;
		
		private string _DyjID;
		
		private System.Nullable<int> _HandlingFeePayerType;
		
		private System.Nullable<decimal> _HandlingFee;
		
		private System.Nullable<decimal> _USDRate;
		
		private EntitySet<PayExchangeApplyFiles> _PayExchangeApplyFiles;
		
		private EntitySet<PayExchangeApplyItems> _PayExchangeApplyItems;
		
		private EntitySet<PayExchangeApplyLogs> _PayExchangeApplyLogs;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierEnglishNameChanging(string value);
    partial void OnSupplierEnglishNameChanged();
    partial void OnSupplierAddressChanging(string value);
    partial void OnSupplierAddressChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnExchangeRateTypeChanging(int value);
    partial void OnExchangeRateTypeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnExpectPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectPayDateChanged();
    partial void OnSettlemenDateChanging(System.DateTime value);
    partial void OnSettlemenDateChanged();
    partial void OnOtherInfoChanging(string value);
    partial void OnOtherInfoChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPayExchangeApplyStatusChanging(int value);
    partial void OnPayExchangeApplyStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnABAChanging(string value);
    partial void OnABAChanged();
    partial void OnIBANChanging(string value);
    partial void OnIBANChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnIsAdvanceMoneyChanging(System.Nullable<int> value);
    partial void OnIsAdvanceMoneyChanged();
    partial void OnDyjIDChanging(string value);
    partial void OnDyjIDChanged();
    partial void OnHandlingFeePayerTypeChanging(System.Nullable<int> value);
    partial void OnHandlingFeePayerTypeChanged();
    partial void OnHandlingFeeChanging(System.Nullable<decimal> value);
    partial void OnHandlingFeeChanged();
    partial void OnUSDRateChanging(System.Nullable<decimal> value);
    partial void OnUSDRateChanged();
    #endregion
		
		public PayExchangeApplies()
		{
			this._PayExchangeApplyFiles = new EntitySet<PayExchangeApplyFiles>(new Action<PayExchangeApplyFiles>(this.attach_PayExchangeApplyFiles), new Action<PayExchangeApplyFiles>(this.detach_PayExchangeApplyFiles));
			this._PayExchangeApplyItems = new EntitySet<PayExchangeApplyItems>(new Action<PayExchangeApplyItems>(this.attach_PayExchangeApplyItems), new Action<PayExchangeApplyItems>(this.detach_PayExchangeApplyItems));
			this._PayExchangeApplyLogs = new EntitySet<PayExchangeApplyLogs>(new Action<PayExchangeApplyLogs>(this.attach_PayExchangeApplyLogs), new Action<PayExchangeApplyLogs>(this.detach_PayExchangeApplyLogs));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEnglishName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierEnglishName
		{
			get
			{
				return this._SupplierEnglishName;
			}
			set
			{
				if ((this._SupplierEnglishName != value))
				{
					this.OnSupplierEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierEnglishName = value;
					this.SendPropertyChanged("SupplierEnglishName");
					this.OnSupplierEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress", DbType="NVarChar(250)")]
		public string SupplierAddress
		{
			get
			{
				return this._SupplierAddress;
			}
			set
			{
				if ((this._SupplierAddress != value))
				{
					this.OnSupplierAddressChanging(value);
					this.SendPropertyChanging();
					this._SupplierAddress = value;
					this.SendPropertyChanged("SupplierAddress");
					this.OnSupplierAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRateType", DbType="Int NOT NULL")]
		public int ExchangeRateType
		{
			get
			{
				return this._ExchangeRateType;
			}
			set
			{
				if ((this._ExchangeRateType != value))
				{
					this.OnExchangeRateTypeChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRateType = value;
					this.SendPropertyChanged("ExchangeRateType");
					this.OnExchangeRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectPayDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpectPayDate
		{
			get
			{
				return this._ExpectPayDate;
			}
			set
			{
				if ((this._ExpectPayDate != value))
				{
					this.OnExpectPayDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectPayDate = value;
					this.SendPropertyChanged("ExpectPayDate");
					this.OnExpectPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlemenDate", DbType="Date NOT NULL")]
		public System.DateTime SettlemenDate
		{
			get
			{
				return this._SettlemenDate;
			}
			set
			{
				if ((this._SettlemenDate != value))
				{
					this.OnSettlemenDateChanging(value);
					this.SendPropertyChanging();
					this._SettlemenDate = value;
					this.SendPropertyChanged("SettlemenDate");
					this.OnSettlemenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInfo", DbType="NVarChar(500)")]
		public string OtherInfo
		{
			get
			{
				return this._OtherInfo;
			}
			set
			{
				if ((this._OtherInfo != value))
				{
					this.OnOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._OtherInfo = value;
					this.SendPropertyChanged("OtherInfo");
					this.OnOtherInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyStatus", DbType="Int NOT NULL")]
		public int PayExchangeApplyStatus
		{
			get
			{
				return this._PayExchangeApplyStatus;
			}
			set
			{
				if ((this._PayExchangeApplyStatus != value))
				{
					this.OnPayExchangeApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyStatus = value;
					this.SendPropertyChanged("PayExchangeApplyStatus");
					this.OnPayExchangeApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABA", DbType="VarChar(50)")]
		public string ABA
		{
			get
			{
				return this._ABA;
			}
			set
			{
				if ((this._ABA != value))
				{
					this.OnABAChanging(value);
					this.SendPropertyChanging();
					this._ABA = value;
					this.SendPropertyChanged("ABA");
					this.OnABAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBAN", DbType="VarChar(50)")]
		public string IBAN
		{
			get
			{
				return this._IBAN;
			}
			set
			{
				if ((this._IBAN != value))
				{
					this.OnIBANChanging(value);
					this.SendPropertyChanging();
					this._IBAN = value;
					this.SendPropertyChanged("IBAN");
					this.OnIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdvanceMoney", DbType="Int")]
		public System.Nullable<int> IsAdvanceMoney
		{
			get
			{
				return this._IsAdvanceMoney;
			}
			set
			{
				if ((this._IsAdvanceMoney != value))
				{
					this.OnIsAdvanceMoneyChanging(value);
					this.SendPropertyChanging();
					this._IsAdvanceMoney = value;
					this.SendPropertyChanged("IsAdvanceMoney");
					this.OnIsAdvanceMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="VarChar(50)")]
		public string DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingFeePayerType", DbType="Int")]
		public System.Nullable<int> HandlingFeePayerType
		{
			get
			{
				return this._HandlingFeePayerType;
			}
			set
			{
				if ((this._HandlingFeePayerType != value))
				{
					this.OnHandlingFeePayerTypeChanging(value);
					this.SendPropertyChanging();
					this._HandlingFeePayerType = value;
					this.SendPropertyChanged("HandlingFeePayerType");
					this.OnHandlingFeePayerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingFee", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> HandlingFee
		{
			get
			{
				return this._HandlingFee;
			}
			set
			{
				if ((this._HandlingFee != value))
				{
					this.OnHandlingFeeChanging(value);
					this.SendPropertyChanging();
					this._HandlingFee = value;
					this.SendPropertyChanged("HandlingFee");
					this.OnHandlingFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDRate", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> USDRate
		{
			get
			{
				return this._USDRate;
			}
			set
			{
				if ((this._USDRate != value))
				{
					this.OnUSDRateChanging(value);
					this.SendPropertyChanging();
					this._USDRate = value;
					this.SendPropertyChanged("USDRate");
					this.OnUSDRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyFiles", Storage="_PayExchangeApplyFiles", ThisKey="ID", OtherKey="PayExchangeApplyID")]
		public EntitySet<PayExchangeApplyFiles> PayExchangeApplyFiles
		{
			get
			{
				return this._PayExchangeApplyFiles;
			}
			set
			{
				this._PayExchangeApplyFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyItems", Storage="_PayExchangeApplyItems", ThisKey="ID", OtherKey="PayExchangeApplyID")]
		public EntitySet<PayExchangeApplyItems> PayExchangeApplyItems
		{
			get
			{
				return this._PayExchangeApplyItems;
			}
			set
			{
				this._PayExchangeApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayExchangeApplies_PayExchangeApplyLogs", Storage="_PayExchangeApplyLogs", ThisKey="ID", OtherKey="PayExchangeApplyID")]
		public EntitySet<PayExchangeApplyLogs> PayExchangeApplyLogs
		{
			get
			{
				return this._PayExchangeApplyLogs;
			}
			set
			{
				this._PayExchangeApplyLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_PayExchangeApplies", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.PayExchangeApplies.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.PayExchangeApplies.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayExchangeApplyFiles(PayExchangeApplyFiles entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = this;
		}
		
		private void detach_PayExchangeApplyFiles(PayExchangeApplyFiles entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = null;
		}
		
		private void attach_PayExchangeApplyItems(PayExchangeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = this;
		}
		
		private void detach_PayExchangeApplyItems(PayExchangeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = null;
		}
		
		private void attach_PayExchangeApplyLogs(PayExchangeApplyLogs entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = this;
		}
		
		private void detach_PayExchangeApplyLogs(PayExchangeApplyLogs entity)
		{
			this.SendPropertyChanging();
			entity.PayExchangeApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Logs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _MainID;
		
		private string _AdminID;
		
		private string _Summary;
		
		private string _Json;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnJsonChanging(string value);
    partial void OnJsonChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Logs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Json", DbType="NVarChar(MAX)")]
		public string Json
		{
			get
			{
				return this._Json;
			}
			set
			{
				if ((this._Json != value))
				{
					this.OnJsonChanging(value);
					this.SendPropertyChanging();
					this._Json = value;
					this.SendPropertyChanged("Json");
					this.OnJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoticeBoard")]
	public partial class NoticeBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NoticeTitle;
		
		private string _NoticeContent;
		
		private string _AdminID;
		
		private string _RoleID;
		
		private string _RoleName;
		
		private int _Status;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNoticeTitleChanging(string value);
    partial void OnNoticeTitleChanged();
    partial void OnNoticeContentChanging(string value);
    partial void OnNoticeContentChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public NoticeBoard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeTitle", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NoticeTitle
		{
			get
			{
				return this._NoticeTitle;
			}
			set
			{
				if ((this._NoticeTitle != value))
				{
					this.OnNoticeTitleChanging(value);
					this.SendPropertyChanging();
					this._NoticeTitle = value;
					this.SendPropertyChanged("NoticeTitle");
					this.OnNoticeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoticeContent
		{
			get
			{
				return this._NoticeContent;
			}
			set
			{
				if ((this._NoticeContent != value))
				{
					this.OnNoticeContentChanging(value);
					this.SendPropertyChanging();
					this._NoticeContent = value;
					this.SendPropertyChanged("NoticeContent");
					this.OnNoticeContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(50)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceReceipts")]
	public partial class FinanceReceipts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SeqNo;
		
		private string _Payer;
		
		private int _FeeType;
		
		private int _ReceiptType;
		
		private System.DateTime _ReceiptDate;
		
		private string _Currency;
		
		private decimal _Rate;
		
		private decimal _Amount;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _FormNo;
		
		private System.Nullable<int> _AccountProperty;
		
		private string _DyjID;
		
		private System.Nullable<bool> _GoodsCreStatus;
		
		private string _GoodsCreWord;
		
		private string _GoodsCreNo;
		
		private string _RequestID;
		
		private EntityRef<ReceiptNotices> _ReceiptNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnPayerChanging(string value);
    partial void OnPayerChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnReceiptTypeChanging(int value);
    partial void OnReceiptTypeChanged();
    partial void OnReceiptDateChanging(System.DateTime value);
    partial void OnReceiptDateChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFormNoChanging(string value);
    partial void OnFormNoChanged();
    partial void OnAccountPropertyChanging(System.Nullable<int> value);
    partial void OnAccountPropertyChanged();
    partial void OnDyjIDChanging(string value);
    partial void OnDyjIDChanged();
    partial void OnGoodsCreStatusChanging(System.Nullable<bool> value);
    partial void OnGoodsCreStatusChanged();
    partial void OnGoodsCreWordChanging(string value);
    partial void OnGoodsCreWordChanged();
    partial void OnGoodsCreNoChanging(string value);
    partial void OnGoodsCreNoChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    #endregion
		
		public FinanceReceipts()
		{
			this._ReceiptNotices = default(EntityRef<ReceiptNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payer", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Payer
		{
			get
			{
				return this._Payer;
			}
			set
			{
				if ((this._Payer != value))
				{
					this.OnPayerChanging(value);
					this.SendPropertyChanging();
					this._Payer = value;
					this.SendPropertyChanged("Payer");
					this.OnPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="Int NOT NULL")]
		public int ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this.OnReceiptTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptType = value;
					this.SendPropertyChanged("ReceiptType");
					this.OnReceiptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormNo", DbType="VarChar(50)")]
		public string FormNo
		{
			get
			{
				return this._FormNo;
			}
			set
			{
				if ((this._FormNo != value))
				{
					this.OnFormNoChanging(value);
					this.SendPropertyChanging();
					this._FormNo = value;
					this.SendPropertyChanged("FormNo");
					this.OnFormNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountProperty", DbType="Int")]
		public System.Nullable<int> AccountProperty
		{
			get
			{
				return this._AccountProperty;
			}
			set
			{
				if ((this._AccountProperty != value))
				{
					this.OnAccountPropertyChanging(value);
					this.SendPropertyChanging();
					this._AccountProperty = value;
					this.SendPropertyChanged("AccountProperty");
					this.OnAccountPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="VarChar(50)")]
		public string DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreStatus", DbType="Bit")]
		public System.Nullable<bool> GoodsCreStatus
		{
			get
			{
				return this._GoodsCreStatus;
			}
			set
			{
				if ((this._GoodsCreStatus != value))
				{
					this.OnGoodsCreStatusChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreStatus = value;
					this.SendPropertyChanged("GoodsCreStatus");
					this.OnGoodsCreStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreWord", DbType="VarChar(50)")]
		public string GoodsCreWord
		{
			get
			{
				return this._GoodsCreWord;
			}
			set
			{
				if ((this._GoodsCreWord != value))
				{
					this.OnGoodsCreWordChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreWord = value;
					this.SendPropertyChanged("GoodsCreWord");
					this.OnGoodsCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreNo", DbType="VarChar(50)")]
		public string GoodsCreNo
		{
			get
			{
				return this._GoodsCreNo;
			}
			set
			{
				if ((this._GoodsCreNo != value))
				{
					this.OnGoodsCreNoChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreNo = value;
					this.SendPropertyChanged("GoodsCreNo");
					this.OnGoodsCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceReceipts_ReceiptNotices", Storage="_ReceiptNotices", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ReceiptNotices ReceiptNotices
		{
			get
			{
				return this._ReceiptNotices.Entity;
			}
			set
			{
				ReceiptNotices previousValue = this._ReceiptNotices.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptNotices.Entity = null;
						previousValue.FinanceReceipts = null;
					}
					this._ReceiptNotices.Entity = value;
					if ((value != null))
					{
						value.FinanceReceipts = this;
					}
					this.SendPropertyChanged("ReceiptNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptNotices")]
	public partial class ReceiptNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private decimal _AvailableAmount;
		
		private decimal _ClearAmount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<FinanceReceipts> _FinanceReceipts;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAvailableAmountChanging(decimal value);
    partial void OnAvailableAmountChanged();
    partial void OnClearAmountChanging(decimal value);
    partial void OnClearAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ReceiptNotices()
		{
			this._FinanceReceipts = default(EntityRef<FinanceReceipts>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._FinanceReceipts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal AvailableAmount
		{
			get
			{
				return this._AvailableAmount;
			}
			set
			{
				if ((this._AvailableAmount != value))
				{
					this.OnAvailableAmountChanging(value);
					this.SendPropertyChanging();
					this._AvailableAmount = value;
					this.SendPropertyChanged("AvailableAmount");
					this.OnAvailableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal ClearAmount
		{
			get
			{
				return this._ClearAmount;
			}
			set
			{
				if ((this._ClearAmount != value))
				{
					this.OnClearAmountChanging(value);
					this.SendPropertyChanging();
					this._ClearAmount = value;
					this.SendPropertyChanged("ClearAmount");
					this.OnClearAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceReceipts_ReceiptNotices", Storage="_FinanceReceipts", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public FinanceReceipts FinanceReceipts
		{
			get
			{
				return this._FinanceReceipts.Entity;
			}
			set
			{
				FinanceReceipts previousValue = this._FinanceReceipts.Entity;
				if (((previousValue != value) 
							|| (this._FinanceReceipts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceReceipts.Entity = null;
						previousValue.ReceiptNotices = null;
					}
					this._FinanceReceipts.Entity = value;
					if ((value != null))
					{
						value.ReceiptNotices = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("FinanceReceipts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ReceiptNotices", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ReceiptNotices.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ReceiptNotices.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SendBaseInfo")]
	public partial class SendBaseInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ClientCode;
		
		private string _SendSpotID;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _WeChatID;
		
		private System.Nullable<int> _SendType;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnSendSpotIDChanging(string value);
    partial void OnSendSpotIDChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWeChatIDChanging(string value);
    partial void OnWeChatIDChanged();
    partial void OnSendTypeChanging(System.Nullable<int> value);
    partial void OnSendTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SendBaseInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendSpotID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SendSpotID
		{
			get
			{
				return this._SendSpotID;
			}
			set
			{
				if ((this._SendSpotID != value))
				{
					this.OnSendSpotIDChanging(value);
					this.SendPropertyChanging();
					this._SendSpotID = value;
					this.SendPropertyChanged("SendSpotID");
					this.OnSendSpotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeChatID", DbType="VarChar(100)")]
		public string WeChatID
		{
			get
			{
				return this._WeChatID;
			}
			set
			{
				if ((this._WeChatID != value))
				{
					this.OnWeChatIDChanging(value);
					this.SendPropertyChanging();
					this._WeChatID = value;
					this.SendPropertyChanged("WeChatID");
					this.OnWeChatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendType", DbType="Int")]
		public System.Nullable<int> SendType
		{
			get
			{
				return this._SendType;
			}
			set
			{
				if ((this._SendType != value))
				{
					this.OnSendTypeChanging(value);
					this.SendPropertyChanging();
					this._SendType = value;
					this.SendPropertyChanged("SendType");
					this.OnSendTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _OpenID;
		
		private string _Name;
		
		private string _RealName;
		
		private string _Password;
		
		private string _Mobile;
		
		private string _Email;
		
		private bool _IsMain;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _Avatar;
		
		private System.Nullable<System.DateTime> _MobileLastLoginDate;
		
		private EntitySet<UserTokens> _UserTokens;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOpenIDChanging(string value);
    partial void OnOpenIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnMobileLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMobileLastLoginDateChanged();
    #endregion
		
		public Users()
		{
			this._UserTokens = new EntitySet<UserTokens>(new Action<UserTokens>(this.attach_UserTokens), new Action<UserTokens>(this.detach_UserTokens));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenID", DbType="NVarChar(150)")]
		public string OpenID
		{
			get
			{
				return this._OpenID;
			}
			set
			{
				if ((this._OpenID != value))
				{
					this.OnOpenIDChanging(value);
					this.SendPropertyChanging();
					this._OpenID = value;
					this.SendPropertyChanged("OpenID");
					this.OnOpenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(150)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(200)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileLastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MobileLastLoginDate
		{
			get
			{
				return this._MobileLastLoginDate;
			}
			set
			{
				if ((this._MobileLastLoginDate != value))
				{
					this.OnMobileLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._MobileLastLoginDate = value;
					this.SendPropertyChanged("MobileLastLoginDate");
					this.OnMobileLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserTokens", Storage="_UserTokens", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserTokens> UserTokens
		{
			get
			{
				return this._UserTokens;
			}
			set
			{
				this._UserTokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Users", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTokens(UserTokens entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UserTokens(UserTokens entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MobileLogs")]
	public partial class MobileLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Token;
		
		private string _RequestContent;
		
		private string _ResponseContent;
		
		private System.DateTime _CreateDate;
		
		private string _Url;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnRequestContentChanging(string value);
    partial void OnRequestContentChanged();
    partial void OnResponseContentChanging(string value);
    partial void OnResponseContentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public MobileLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestContent", DbType="VarChar(MAX)")]
		public string RequestContent
		{
			get
			{
				return this._RequestContent;
			}
			set
			{
				if ((this._RequestContent != value))
				{
					this.OnRequestContentChanging(value);
					this.SendPropertyChanging();
					this._RequestContent = value;
					this.SendPropertyChanged("RequestContent");
					this.OnRequestContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseContent", DbType="VarChar(MAX)")]
		public string ResponseContent
		{
			get
			{
				return this._ResponseContent;
			}
			set
			{
				if ((this._ResponseContent != value))
				{
					this.OnResponseContentChanging(value);
					this.SendPropertyChanging();
					this._ResponseContent = value;
					this.SendPropertyChanged("ResponseContent");
					this.OnResponseContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTokens")]
	public partial class UserTokens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _UserID;
		
		private string _Token;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _RealCreateTime;
		
		private string _TerminalType;
		
		private string _TerminalSoftwareVersion;
		
		private string _TerminalMachineInfo;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnRealCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRealCreateTimeChanged();
    partial void OnTerminalTypeChanging(string value);
    partial void OnTerminalTypeChanged();
    partial void OnTerminalSoftwareVersionChanging(string value);
    partial void OnTerminalSoftwareVersionChanged();
    partial void OnTerminalMachineInfoChanging(string value);
    partial void OnTerminalMachineInfoChanged();
    #endregion
		
		public UserTokens()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RealCreateTime
		{
			get
			{
				return this._RealCreateTime;
			}
			set
			{
				if ((this._RealCreateTime != value))
				{
					this.OnRealCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._RealCreateTime = value;
					this.SendPropertyChanged("RealCreateTime");
					this.OnRealCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalType", DbType="VarChar(20)")]
		public string TerminalType
		{
			get
			{
				return this._TerminalType;
			}
			set
			{
				if ((this._TerminalType != value))
				{
					this.OnTerminalTypeChanging(value);
					this.SendPropertyChanging();
					this._TerminalType = value;
					this.SendPropertyChanged("TerminalType");
					this.OnTerminalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalSoftwareVersion", DbType="VarChar(50)")]
		public string TerminalSoftwareVersion
		{
			get
			{
				return this._TerminalSoftwareVersion;
			}
			set
			{
				if ((this._TerminalSoftwareVersion != value))
				{
					this.OnTerminalSoftwareVersionChanging(value);
					this.SendPropertyChanging();
					this._TerminalSoftwareVersion = value;
					this.SendPropertyChanged("TerminalSoftwareVersion");
					this.OnTerminalSoftwareVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalMachineInfo", DbType="VarChar(200)")]
		public string TerminalMachineInfo
		{
			get
			{
				return this._TerminalMachineInfo;
			}
			set
			{
				if ((this._TerminalMachineInfo != value))
				{
					this.OnTerminalMachineInfoChanging(value);
					this.SendPropertyChanging();
					this._TerminalMachineInfo = value;
					this.SendPropertyChanged("TerminalMachineInfo");
					this.OnTerminalMachineInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserTokens", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UserTokens.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UserTokens.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CompanyID;
		
		private System.Nullable<int> _ClientType;
		
		private string _ClientCode;
		
		private System.Nullable<int> _ClientRank;
		
		private int _ClientStatus;
		
		private int _Status;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _IsValid;
		
		private System.Nullable<bool> _IsSpecified;
		
		private int _IsSAUpload;
		
		private System.Nullable<int> _ClientNature;
		
		private System.Nullable<int> _ServiceType;
		
		private System.Nullable<int> _StorageType;
		
		private System.Nullable<bool> _IsStorageValid;
		
		private int _ChargeWH;
		
		private System.Nullable<int> _ChargeType;
		
		private System.Nullable<decimal> _AmountWH;
		
		private bool _IsNormal;
		
		private System.Nullable<bool> _IsQualified;
		
		private string _Referrer;
		
		private System.Nullable<System.DateTime> _AssessDate;
		
		private System.Nullable<bool> _IsDownloadDecTax;
		
		private string _DecTaxExtendDate;
		
		private System.Nullable<bool> _IsApplyInvoice;
		
		private string _InvoiceExtendDate;
		
		private System.Nullable<decimal> _UnPayExchangeAmount;
		
		private System.Nullable<decimal> _DeclareAmount;
		
		private System.Nullable<decimal> _PayExchangeAmount;
		
		private System.Nullable<System.DateTime> _CalculateDate;
		
		private EntitySet<ClientConsignees> _ClientConsignees;
		
		private EntitySet<ClientInvoices> _ClientInvoices;
		
		private EntitySet<ClientInvoiceConsignees> _ClientInvoiceConsignees;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<PreProducts> _PreProducts;
		
		private EntitySet<ClientSuppliers> _ClientSuppliers;
		
		private EntitySet<ClientAdmins> _ClientAdmins;
		
		private EntitySet<OrderReceipts> _OrderReceipts;
		
		private EntitySet<InvoiceNotices> _InvoiceNotices;
		
		private EntitySet<PayExchangeApplies> _PayExchangeApplies;
		
		private EntitySet<ReceiptNotices> _ReceiptNotices;
		
		private EntitySet<Users> _Users;
		
		private EntitySet<ClientAgreements> _ClientAgreements;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnClientTypeChanging(System.Nullable<int> value);
    partial void OnClientTypeChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnClientRankChanging(System.Nullable<int> value);
    partial void OnClientRankChanged();
    partial void OnClientStatusChanging(int value);
    partial void OnClientStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnIsSpecifiedChanging(System.Nullable<bool> value);
    partial void OnIsSpecifiedChanged();
    partial void OnIsSAUploadChanging(int value);
    partial void OnIsSAUploadChanged();
    partial void OnClientNatureChanging(System.Nullable<int> value);
    partial void OnClientNatureChanged();
    partial void OnServiceTypeChanging(System.Nullable<int> value);
    partial void OnServiceTypeChanged();
    partial void OnStorageTypeChanging(System.Nullable<int> value);
    partial void OnStorageTypeChanged();
    partial void OnIsStorageValidChanging(System.Nullable<bool> value);
    partial void OnIsStorageValidChanged();
    partial void OnChargeWHChanging(int value);
    partial void OnChargeWHChanged();
    partial void OnChargeTypeChanging(System.Nullable<int> value);
    partial void OnChargeTypeChanged();
    partial void OnAmountWHChanging(System.Nullable<decimal> value);
    partial void OnAmountWHChanged();
    partial void OnIsNormalChanging(bool value);
    partial void OnIsNormalChanged();
    partial void OnIsQualifiedChanging(System.Nullable<bool> value);
    partial void OnIsQualifiedChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnAssessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssessDateChanged();
    partial void OnIsDownloadDecTaxChanging(System.Nullable<bool> value);
    partial void OnIsDownloadDecTaxChanged();
    partial void OnDecTaxExtendDateChanging(string value);
    partial void OnDecTaxExtendDateChanged();
    partial void OnIsApplyInvoiceChanging(System.Nullable<bool> value);
    partial void OnIsApplyInvoiceChanged();
    partial void OnInvoiceExtendDateChanging(string value);
    partial void OnInvoiceExtendDateChanged();
    partial void OnUnPayExchangeAmountChanging(System.Nullable<decimal> value);
    partial void OnUnPayExchangeAmountChanged();
    partial void OnDeclareAmountChanging(System.Nullable<decimal> value);
    partial void OnDeclareAmountChanged();
    partial void OnPayExchangeAmountChanging(System.Nullable<decimal> value);
    partial void OnPayExchangeAmountChanged();
    partial void OnCalculateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalculateDateChanged();
    #endregion
		
		public Clients()
		{
			this._ClientConsignees = new EntitySet<ClientConsignees>(new Action<ClientConsignees>(this.attach_ClientConsignees), new Action<ClientConsignees>(this.detach_ClientConsignees));
			this._ClientInvoices = new EntitySet<ClientInvoices>(new Action<ClientInvoices>(this.attach_ClientInvoices), new Action<ClientInvoices>(this.detach_ClientInvoices));
			this._ClientInvoiceConsignees = new EntitySet<ClientInvoiceConsignees>(new Action<ClientInvoiceConsignees>(this.attach_ClientInvoiceConsignees), new Action<ClientInvoiceConsignees>(this.detach_ClientInvoiceConsignees));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._PreProducts = new EntitySet<PreProducts>(new Action<PreProducts>(this.attach_PreProducts), new Action<PreProducts>(this.detach_PreProducts));
			this._ClientSuppliers = new EntitySet<ClientSuppliers>(new Action<ClientSuppliers>(this.attach_ClientSuppliers), new Action<ClientSuppliers>(this.detach_ClientSuppliers));
			this._ClientAdmins = new EntitySet<ClientAdmins>(new Action<ClientAdmins>(this.attach_ClientAdmins), new Action<ClientAdmins>(this.detach_ClientAdmins));
			this._OrderReceipts = new EntitySet<OrderReceipts>(new Action<OrderReceipts>(this.attach_OrderReceipts), new Action<OrderReceipts>(this.detach_OrderReceipts));
			this._InvoiceNotices = new EntitySet<InvoiceNotices>(new Action<InvoiceNotices>(this.attach_InvoiceNotices), new Action<InvoiceNotices>(this.detach_InvoiceNotices));
			this._PayExchangeApplies = new EntitySet<PayExchangeApplies>(new Action<PayExchangeApplies>(this.attach_PayExchangeApplies), new Action<PayExchangeApplies>(this.detach_PayExchangeApplies));
			this._ReceiptNotices = new EntitySet<ReceiptNotices>(new Action<ReceiptNotices>(this.attach_ReceiptNotices), new Action<ReceiptNotices>(this.detach_ReceiptNotices));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			this._ClientAgreements = new EntitySet<ClientAgreements>(new Action<ClientAgreements>(this.attach_ClientAgreements), new Action<ClientAgreements>(this.detach_ClientAgreements));
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="Int")]
		public System.Nullable<int> ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(50)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientRank", DbType="Int")]
		public System.Nullable<int> ClientRank
		{
			get
			{
				return this._ClientRank;
			}
			set
			{
				if ((this._ClientRank != value))
				{
					this.OnClientRankChanging(value);
					this.SendPropertyChanging();
					this._ClientRank = value;
					this.SendPropertyChanged("ClientRank");
					this.OnClientRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatus", DbType="Int NOT NULL")]
		public int ClientStatus
		{
			get
			{
				return this._ClientStatus;
			}
			set
			{
				if ((this._ClientStatus != value))
				{
					this.OnClientStatusChanging(value);
					this.SendPropertyChanging();
					this._ClientStatus = value;
					this.SendPropertyChanged("ClientStatus");
					this.OnClientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecified", DbType="Bit")]
		public System.Nullable<bool> IsSpecified
		{
			get
			{
				return this._IsSpecified;
			}
			set
			{
				if ((this._IsSpecified != value))
				{
					this.OnIsSpecifiedChanging(value);
					this.SendPropertyChanging();
					this._IsSpecified = value;
					this.SendPropertyChanged("IsSpecified");
					this.OnIsSpecifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSAUpload", DbType="Int NOT NULL")]
		public int IsSAUpload
		{
			get
			{
				return this._IsSAUpload;
			}
			set
			{
				if ((this._IsSAUpload != value))
				{
					this.OnIsSAUploadChanging(value);
					this.SendPropertyChanging();
					this._IsSAUpload = value;
					this.SendPropertyChanged("IsSAUpload");
					this.OnIsSAUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNature", DbType="Int")]
		public System.Nullable<int> ClientNature
		{
			get
			{
				return this._ClientNature;
			}
			set
			{
				if ((this._ClientNature != value))
				{
					this.OnClientNatureChanging(value);
					this.SendPropertyChanging();
					this._ClientNature = value;
					this.SendPropertyChanged("ClientNature");
					this.OnClientNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="Int")]
		public System.Nullable<int> ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageType", DbType="Int")]
		public System.Nullable<int> StorageType
		{
			get
			{
				return this._StorageType;
			}
			set
			{
				if ((this._StorageType != value))
				{
					this.OnStorageTypeChanging(value);
					this.SendPropertyChanging();
					this._StorageType = value;
					this.SendPropertyChanged("StorageType");
					this.OnStorageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStorageValid", DbType="Bit")]
		public System.Nullable<bool> IsStorageValid
		{
			get
			{
				return this._IsStorageValid;
			}
			set
			{
				if ((this._IsStorageValid != value))
				{
					this.OnIsStorageValidChanging(value);
					this.SendPropertyChanging();
					this._IsStorageValid = value;
					this.SendPropertyChanged("IsStorageValid");
					this.OnIsStorageValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeWH", DbType="Int NOT NULL")]
		public int ChargeWH
		{
			get
			{
				return this._ChargeWH;
			}
			set
			{
				if ((this._ChargeWH != value))
				{
					this.OnChargeWHChanging(value);
					this.SendPropertyChanging();
					this._ChargeWH = value;
					this.SendPropertyChanged("ChargeWH");
					this.OnChargeWHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeType", DbType="Int")]
		public System.Nullable<int> ChargeType
		{
			get
			{
				return this._ChargeType;
			}
			set
			{
				if ((this._ChargeType != value))
				{
					this.OnChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargeType = value;
					this.SendPropertyChanged("ChargeType");
					this.OnChargeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountWH", DbType="Decimal(19,5)")]
		public System.Nullable<decimal> AmountWH
		{
			get
			{
				return this._AmountWH;
			}
			set
			{
				if ((this._AmountWH != value))
				{
					this.OnAmountWHChanging(value);
					this.SendPropertyChanging();
					this._AmountWH = value;
					this.SendPropertyChanged("AmountWH");
					this.OnAmountWHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNormal", DbType="Bit NOT NULL")]
		public bool IsNormal
		{
			get
			{
				return this._IsNormal;
			}
			set
			{
				if ((this._IsNormal != value))
				{
					this.OnIsNormalChanging(value);
					this.SendPropertyChanging();
					this._IsNormal = value;
					this.SendPropertyChanged("IsNormal");
					this.OnIsNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQualified", DbType="Bit")]
		public System.Nullable<bool> IsQualified
		{
			get
			{
				return this._IsQualified;
			}
			set
			{
				if ((this._IsQualified != value))
				{
					this.OnIsQualifiedChanging(value);
					this.SendPropertyChanging();
					this._IsQualified = value;
					this.SendPropertyChanged("IsQualified");
					this.OnIsQualifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="NVarChar(100)")]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssessDate
		{
			get
			{
				return this._AssessDate;
			}
			set
			{
				if ((this._AssessDate != value))
				{
					this.OnAssessDateChanging(value);
					this.SendPropertyChanging();
					this._AssessDate = value;
					this.SendPropertyChanged("AssessDate");
					this.OnAssessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDownloadDecTax", DbType="Bit")]
		public System.Nullable<bool> IsDownloadDecTax
		{
			get
			{
				return this._IsDownloadDecTax;
			}
			set
			{
				if ((this._IsDownloadDecTax != value))
				{
					this.OnIsDownloadDecTaxChanging(value);
					this.SendPropertyChanging();
					this._IsDownloadDecTax = value;
					this.SendPropertyChanged("IsDownloadDecTax");
					this.OnIsDownloadDecTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecTaxExtendDate", DbType="VarChar(50)")]
		public string DecTaxExtendDate
		{
			get
			{
				return this._DecTaxExtendDate;
			}
			set
			{
				if ((this._DecTaxExtendDate != value))
				{
					this.OnDecTaxExtendDateChanging(value);
					this.SendPropertyChanging();
					this._DecTaxExtendDate = value;
					this.SendPropertyChanged("DecTaxExtendDate");
					this.OnDecTaxExtendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApplyInvoice", DbType="Bit")]
		public System.Nullable<bool> IsApplyInvoice
		{
			get
			{
				return this._IsApplyInvoice;
			}
			set
			{
				if ((this._IsApplyInvoice != value))
				{
					this.OnIsApplyInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IsApplyInvoice = value;
					this.SendPropertyChanged("IsApplyInvoice");
					this.OnIsApplyInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceExtendDate", DbType="VarChar(50)")]
		public string InvoiceExtendDate
		{
			get
			{
				return this._InvoiceExtendDate;
			}
			set
			{
				if ((this._InvoiceExtendDate != value))
				{
					this.OnInvoiceExtendDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceExtendDate = value;
					this.SendPropertyChanged("InvoiceExtendDate");
					this.OnInvoiceExtendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnPayExchangeAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> UnPayExchangeAmount
		{
			get
			{
				return this._UnPayExchangeAmount;
			}
			set
			{
				if ((this._UnPayExchangeAmount != value))
				{
					this.OnUnPayExchangeAmountChanging(value);
					this.SendPropertyChanging();
					this._UnPayExchangeAmount = value;
					this.SendPropertyChanged("UnPayExchangeAmount");
					this.OnUnPayExchangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DeclareAmount
		{
			get
			{
				return this._DeclareAmount;
			}
			set
			{
				if ((this._DeclareAmount != value))
				{
					this.OnDeclareAmountChanging(value);
					this.SendPropertyChanging();
					this._DeclareAmount = value;
					this.SendPropertyChanged("DeclareAmount");
					this.OnDeclareAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PayExchangeAmount
		{
			get
			{
				return this._PayExchangeAmount;
			}
			set
			{
				if ((this._PayExchangeAmount != value))
				{
					this.OnPayExchangeAmountChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeAmount = value;
					this.SendPropertyChanged("PayExchangeAmount");
					this.OnPayExchangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalculateDate
		{
			get
			{
				return this._CalculateDate;
			}
			set
			{
				if ((this._CalculateDate != value))
				{
					this.OnCalculateDateChanging(value);
					this.SendPropertyChanging();
					this._CalculateDate = value;
					this.SendPropertyChanged("CalculateDate");
					this.OnCalculateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientConsignees", Storage="_ClientConsignees", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientConsignees> ClientConsignees
		{
			get
			{
				return this._ClientConsignees;
			}
			set
			{
				this._ClientConsignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientInvoices", Storage="_ClientInvoices", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientInvoices> ClientInvoices
		{
			get
			{
				return this._ClientInvoices;
			}
			set
			{
				this._ClientInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientInvoiceConsignees", Storage="_ClientInvoiceConsignees", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientInvoiceConsignees> ClientInvoiceConsignees
		{
			get
			{
				return this._ClientInvoiceConsignees;
			}
			set
			{
				this._ClientInvoiceConsignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Orders", Storage="_Orders", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_PreProducts", Storage="_PreProducts", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<PreProducts> PreProducts
		{
			get
			{
				return this._PreProducts;
			}
			set
			{
				this._PreProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientSuppliers", Storage="_ClientSuppliers", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientSuppliers> ClientSuppliers
		{
			get
			{
				return this._ClientSuppliers;
			}
			set
			{
				this._ClientSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientAdmins", Storage="_ClientAdmins", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientAdmins> ClientAdmins
		{
			get
			{
				return this._ClientAdmins;
			}
			set
			{
				this._ClientAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_OrderReceipts", Storage="_OrderReceipts", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<OrderReceipts> OrderReceipts
		{
			get
			{
				return this._OrderReceipts;
			}
			set
			{
				this._OrderReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_InvoiceNotices", Storage="_InvoiceNotices", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<InvoiceNotices> InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices;
			}
			set
			{
				this._InvoiceNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_PayExchangeApplies", Storage="_PayExchangeApplies", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<PayExchangeApplies> PayExchangeApplies
		{
			get
			{
				return this._PayExchangeApplies;
			}
			set
			{
				this._PayExchangeApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ReceiptNotices", Storage="_ReceiptNotices", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ReceiptNotices> ReceiptNotices
		{
			get
			{
				return this._ReceiptNotices;
			}
			set
			{
				this._ReceiptNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Users", Storage="_Users", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientAgreements", Storage="_ClientAgreements", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientAgreements> ClientAgreements
		{
			get
			{
				return this._ClientAgreements;
			}
			set
			{
				this._ClientAgreements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Clients", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientConsignees(ClientConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientConsignees(ClientConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientInvoices(ClientInvoices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientInvoices(ClientInvoices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientInvoiceConsignees(ClientInvoiceConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientInvoiceConsignees(ClientInvoiceConsignees entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_PreProducts(PreProducts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_PreProducts(PreProducts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientSuppliers(ClientSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientSuppliers(ClientSuppliers entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientAdmins(ClientAdmins entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientAdmins(ClientAdmins entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_OrderReceipts(OrderReceipts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_OrderReceipts(OrderReceipts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_InvoiceNotices(InvoiceNotices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_InvoiceNotices(InvoiceNotices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_PayExchangeApplies(PayExchangeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_PayExchangeApplies(PayExchangeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ReceiptNotices(ReceiptNotices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ReceiptNotices(ReceiptNotices entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientAgreements(ClientAgreements entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientAgreements(ClientAgreements entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientAgreements")]
	public partial class ClientAgreements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _AgreementCode;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<decimal> _PreAgency;
		
		private decimal _AgencyRate;
		
		private decimal _MinAgencyFee;
		
		private bool _IsPrePayExchange;
		
		private bool _IsLimitNinetyDays;
		
		private int _InvoiceType;
		
		private decimal _InvoiceTaxRate;
		
		private System.Nullable<int> _IsTen;
		
		private int _Status;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<ClientFeeSettlements> _ClientFeeSettlements;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAgreementCodeChanging(string value);
    partial void OnAgreementCodeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnPreAgencyChanging(System.Nullable<decimal> value);
    partial void OnPreAgencyChanged();
    partial void OnAgencyRateChanging(decimal value);
    partial void OnAgencyRateChanged();
    partial void OnMinAgencyFeeChanging(decimal value);
    partial void OnMinAgencyFeeChanged();
    partial void OnIsPrePayExchangeChanging(bool value);
    partial void OnIsPrePayExchangeChanged();
    partial void OnIsLimitNinetyDaysChanging(bool value);
    partial void OnIsLimitNinetyDaysChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnInvoiceTaxRateChanging(decimal value);
    partial void OnInvoiceTaxRateChanged();
    partial void OnIsTenChanging(System.Nullable<int> value);
    partial void OnIsTenChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientAgreements()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._ClientFeeSettlements = new EntitySet<ClientFeeSettlements>(new Action<ClientFeeSettlements>(this.attach_ClientFeeSettlements), new Action<ClientFeeSettlements>(this.detach_ClientFeeSettlements));
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementCode", DbType="VarChar(50)")]
		public string AgreementCode
		{
			get
			{
				return this._AgreementCode;
			}
			set
			{
				if ((this._AgreementCode != value))
				{
					this.OnAgreementCodeChanging(value);
					this.SendPropertyChanging();
					this._AgreementCode = value;
					this.SendPropertyChanged("AgreementCode");
					this.OnAgreementCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreAgency", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PreAgency
		{
			get
			{
				return this._PreAgency;
			}
			set
			{
				if ((this._PreAgency != value))
				{
					this.OnPreAgencyChanging(value);
					this.SendPropertyChanging();
					this._PreAgency = value;
					this.SendPropertyChanged("PreAgency");
					this.OnPreAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal AgencyRate
		{
			get
			{
				return this._AgencyRate;
			}
			set
			{
				if ((this._AgencyRate != value))
				{
					this.OnAgencyRateChanging(value);
					this.SendPropertyChanging();
					this._AgencyRate = value;
					this.SendPropertyChanged("AgencyRate");
					this.OnAgencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAgencyFee", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinAgencyFee
		{
			get
			{
				return this._MinAgencyFee;
			}
			set
			{
				if ((this._MinAgencyFee != value))
				{
					this.OnMinAgencyFeeChanging(value);
					this.SendPropertyChanging();
					this._MinAgencyFee = value;
					this.SendPropertyChanged("MinAgencyFee");
					this.OnMinAgencyFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrePayExchange", DbType="Bit NOT NULL")]
		public bool IsPrePayExchange
		{
			get
			{
				return this._IsPrePayExchange;
			}
			set
			{
				if ((this._IsPrePayExchange != value))
				{
					this.OnIsPrePayExchangeChanging(value);
					this.SendPropertyChanging();
					this._IsPrePayExchange = value;
					this.SendPropertyChanged("IsPrePayExchange");
					this.OnIsPrePayExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLimitNinetyDays", DbType="Bit NOT NULL")]
		public bool IsLimitNinetyDays
		{
			get
			{
				return this._IsLimitNinetyDays;
			}
			set
			{
				if ((this._IsLimitNinetyDays != value))
				{
					this.OnIsLimitNinetyDaysChanging(value);
					this.SendPropertyChanging();
					this._IsLimitNinetyDays = value;
					this.SendPropertyChanged("IsLimitNinetyDays");
					this.OnIsLimitNinetyDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTaxRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal InvoiceTaxRate
		{
			get
			{
				return this._InvoiceTaxRate;
			}
			set
			{
				if ((this._InvoiceTaxRate != value))
				{
					this.OnInvoiceTaxRateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTaxRate = value;
					this.SendPropertyChanged("InvoiceTaxRate");
					this.OnInvoiceTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTen", DbType="Int")]
		public System.Nullable<int> IsTen
		{
			get
			{
				return this._IsTen;
			}
			set
			{
				if ((this._IsTen != value))
				{
					this.OnIsTenChanging(value);
					this.SendPropertyChanging();
					this._IsTen = value;
					this.SendPropertyChanged("IsTen");
					this.OnIsTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(400)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientAgreements_Orders", Storage="_Orders", ThisKey="ID", OtherKey="ClientAgreementID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientAgreements_ClientFeeSettlements", Storage="_ClientFeeSettlements", ThisKey="ID", OtherKey="AgreementID")]
		public EntitySet<ClientFeeSettlements> ClientFeeSettlements
		{
			get
			{
				return this._ClientFeeSettlements;
			}
			set
			{
				this._ClientFeeSettlements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientAgreements", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientAgreements.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientAgreements.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.ClientAgreements = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.ClientAgreements = null;
		}
		
		private void attach_ClientFeeSettlements(ClientFeeSettlements entity)
		{
			this.SendPropertyChanging();
			entity.ClientAgreements = this;
		}
		
		private void detach_ClientFeeSettlements(ClientFeeSettlements entity)
		{
			this.SendPropertyChanging();
			entity.ClientAgreements = null;
		}
	}
}
#pragma warning restore 1591
