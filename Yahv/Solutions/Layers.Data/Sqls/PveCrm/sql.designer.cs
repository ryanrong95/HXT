#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layers.Data.Sqls.PveCrm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PveCrm")]
	public partial class sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdvantages(Advantages instance);
    partial void UpdateAdvantages(Advantages instance);
    partial void DeleteAdvantages(Advantages instance);
    partial void InsertClientReports(ClientReports instance);
    partial void UpdateClientReports(ClientReports instance);
    partial void DeleteClientReports(ClientReports instance);
    partial void InsertCommissions(Commissions instance);
    partial void UpdateCommissions(Commissions instance);
    partial void DeleteCommissions(Commissions instance);
    partial void InsertCompanies(Companies instance);
    partial void UpdateCompanies(Companies instance);
    partial void DeleteCompanies(Companies instance);
    partial void InsertContracts(Contracts instance);
    partial void UpdateContracts(Contracts instance);
    partial void DeleteContracts(Contracts instance);
    partial void InsertDishonests(Dishonests instance);
    partial void UpdateDishonests(Dishonests instance);
    partial void DeleteDishonests(Dishonests instance);
    partial void InsertEnterprises(Enterprises instance);
    partial void UpdateEnterprises(Enterprises instance);
    partial void DeleteEnterprises(Enterprises instance);
    partial void InsertEnumsDictionaries(EnumsDictionaries instance);
    partial void UpdateEnumsDictionaries(EnumsDictionaries instance);
    partial void DeleteEnumsDictionaries(EnumsDictionaries instance);
    partial void InsertFixedSuppliers(FixedSuppliers instance);
    partial void UpdateFixedSuppliers(FixedSuppliers instance);
    partial void DeleteFixedSuppliers(FixedSuppliers instance);
    partial void InsertMapsSiteuser(MapsSiteuser instance);
    partial void UpdateMapsSiteuser(MapsSiteuser instance);
    partial void DeleteMapsSiteuser(MapsSiteuser instance);
    partial void InsertMapsTopN(MapsTopN instance);
    partial void UpdateMapsTopN(MapsTopN instance);
    partial void DeleteMapsTopN(MapsTopN instance);
    partial void InsertnBrands(nBrands instance);
    partial void UpdatenBrands(nBrands instance);
    partial void DeletenBrands(nBrands instance);
    partial void InsertoAddresses(oAddresses instance);
    partial void UpdateoAddresses(oAddresses instance);
    partial void DeleteoAddresses(oAddresses instance);
    partial void InsertoContacts(oContacts instance);
    partial void UpdateoContacts(oContacts instance);
    partial void DeleteoContacts(oContacts instance);
    partial void InsertOrganizations(Organizations instance);
    partial void UpdateOrganizations(Organizations instance);
    partial void DeleteOrganizations(Organizations instance);
    partial void InsertPcFiles(PcFiles instance);
    partial void UpdatePcFiles(PcFiles instance);
    partial void DeletePcFiles(PcFiles instance);
    partial void InsertPersons(Persons instance);
    partial void UpdatePersons(Persons instance);
    partial void DeletePersons(Persons instance);
    partial void InsertPrimaryKeys(PrimaryKeys instance);
    partial void UpdatePrimaryKeys(PrimaryKeys instance);
    partial void DeletePrimaryKeys(PrimaryKeys instance);
    partial void InsertProjectCompeletes(ProjectCompeletes instance);
    partial void UpdateProjectCompeletes(ProjectCompeletes instance);
    partial void DeleteProjectCompeletes(ProjectCompeletes instance);
    partial void InsertProjectProducts(ProjectProducts instance);
    partial void UpdateProjectProducts(ProjectProducts instance);
    partial void DeleteProjectProducts(ProjectProducts instance);
    partial void InsertProjectReports(ProjectReports instance);
    partial void UpdateProjectReports(ProjectReports instance);
    partial void DeleteProjectReports(ProjectReports instance);
    partial void InsertProjects(Projects instance);
    partial void UpdateProjects(Projects instance);
    partial void DeleteProjects(Projects instance);
    partial void InsertQuotes(Quotes instance);
    partial void UpdateQuotes(Quotes instance);
    partial void DeleteQuotes(Quotes instance);
    partial void InsertRequirements(Requirements instance);
    partial void UpdateRequirements(Requirements instance);
    partial void DeleteRequirements(Requirements instance);
    partial void InsertSampleItems(SampleItems instance);
    partial void UpdateSampleItems(SampleItems instance);
    partial void DeleteSampleItems(SampleItems instance);
    partial void InsertSamples(Samples instance);
    partial void UpdateSamples(Samples instance);
    partial void DeleteSamples(Samples instance);
    partial void InsertSiteAccounts(SiteAccounts instance);
    partial void UpdateSiteAccounts(SiteAccounts instance);
    partial void DeleteSiteAccounts(SiteAccounts instance);
    partial void InsertSiteUsers(SiteUsers instance);
    partial void UpdateSiteUsers(SiteUsers instance);
    partial void DeleteSiteUsers(SiteUsers instance);
    partial void InsertSpecials(Specials instance);
    partial void UpdateSpecials(Specials instance);
    partial void DeleteSpecials(Specials instance);
    partial void InsertStandardBrands(StandardBrands instance);
    partial void UpdateStandardBrands(StandardBrands instance);
    partial void DeleteStandardBrands(StandardBrands instance);
    partial void InsertStandardPartNumbers(StandardPartNumbers instance);
    partial void UpdateStandardPartNumbers(StandardPartNumbers instance);
    partial void DeleteStandardPartNumbers(StandardPartNumbers instance);
    partial void InsertSysNotice(SysNotice instance);
    partial void UpdateSysNotice(SysNotice instance);
    partial void DeleteSysNotice(SysNotice instance);
    partial void InsertTraceComments(TraceComments instance);
    partial void UpdateTraceComments(TraceComments instance);
    partial void DeleteTraceComments(TraceComments instance);
    partial void InsertTraceRecords(TraceRecords instance);
    partial void UpdateTraceRecords(TraceRecords instance);
    partial void DeleteTraceRecords(TraceRecords instance);
    partial void InsertTradeSettlements(TradeSettlements instance);
    partial void UpdateTradeSettlements(TradeSettlements instance);
    partial void DeleteTradeSettlements(TradeSettlements instance);
    partial void InsertvAddresses(vAddresses instance);
    partial void UpdatevAddresses(vAddresses instance);
    partial void DeletevAddresses(vAddresses instance);
    partial void InsertvBrands(vBrands instance);
    partial void UpdatevBrands(vBrands instance);
    partial void DeletevBrands(vBrands instance);
    partial void InsertvComplaints(vComplaints instance);
    partial void UpdatevComplaints(vComplaints instance);
    partial void DeletevComplaints(vComplaints instance);
    partial void InsertvContracts(vContracts instance);
    partial void UpdatevContracts(vContracts instance);
    partial void DeletevContracts(vContracts instance);
    partial void InsertvDishonests(vDishonests instance);
    partial void UpdatevDishonests(vDishonests instance);
    partial void DeletevDishonests(vDishonests instance);
    partial void InsertvEnterprises(vEnterprises instance);
    partial void UpdatevEnterprises(vEnterprises instance);
    partial void DeletevEnterprises(vEnterprises instance);
    partial void InsertvInvoices(vInvoices instance);
    partial void UpdatevInvoices(vInvoices instance);
    partial void DeletevInvoices(vInvoices instance);
    partial void InsertApplyTasks(ApplyTasks instance);
    partial void UpdateApplyTasks(ApplyTasks instance);
    partial void DeleteApplyTasks(ApplyTasks instance);
    partial void InsertInvoices(Invoices instance);
    partial void UpdateInvoices(Invoices instance);
    partial void DeleteInvoices(Invoices instance);
    partial void InsertoDoors(oDoors instance);
    partial void UpdateoDoors(oDoors instance);
    partial void DeleteoDoors(oDoors instance);
    partial void InsertCarriers(Carriers instance);
    partial void UpdateCarriers(Carriers instance);
    partial void DeleteCarriers(Carriers instance);
    partial void InsertoTransports(oTransports instance);
    partial void UpdateoTransports(oTransports instance);
    partial void DeleteoTransports(oTransports instance);
    partial void InsertoDrivers(oDrivers instance);
    partial void UpdateoDrivers(oDrivers instance);
    partial void DeleteoDrivers(oDrivers instance);
    partial void InsertStructures(Structures instance);
    partial void UpdateStructures(Structures instance);
    partial void DeleteStructures(Structures instance);
    partial void InsertMapsRegion(MapsRegion instance);
    partial void UpdateMapsRegion(MapsRegion instance);
    partial void DeleteMapsRegion(MapsRegion instance);
    partial void InsertMapsStructure(MapsStructure instance);
    partial void UpdateMapsStructure(MapsStructure instance);
    partial void DeleteMapsStructure(MapsStructure instance);
    partial void InsertMapsAdmin(MapsAdmin instance);
    partial void UpdateMapsAdmin(MapsAdmin instance);
    partial void DeleteMapsAdmin(MapsAdmin instance);
    partial void InsertRelations(Relations instance);
    partial void UpdateRelations(Relations instance);
    partial void DeleteRelations(Relations instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertBookAccounts(BookAccounts instance);
    partial void UpdateBookAccounts(BookAccounts instance);
    partial void DeleteBookAccounts(BookAccounts instance);
    partial void InsertAddresses(Addresses instance);
    partial void UpdateAddresses(Addresses instance);
    partial void DeleteAddresses(Addresses instance);
    partial void InsertWareHouses(WareHouses instance);
    partial void UpdateWareHouses(WareHouses instance);
    partial void DeleteWareHouses(WareHouses instance);
    partial void InsertSuppliers(Suppliers instance);
    partial void UpdateSuppliers(Suppliers instance);
    partial void DeleteSuppliers(Suppliers instance);
    partial void InsertCredits(Credits instance);
    partial void UpdateCredits(Credits instance);
    partial void DeleteCredits(Credits instance);
    partial void InsertSitesAddress(SitesAddress instance);
    partial void UpdateSitesAddress(SitesAddress instance);
    partial void DeleteSitesAddress(SitesAddress instance);
    partial void InsertRegions(Regions instance);
    partial void UpdateRegions(Regions instance);
    partial void DeleteRegions(Regions instance);
    partial void InsertLogsHandOvers(LogsHandOvers instance);
    partial void UpdateLogsHandOvers(LogsHandOvers instance);
    partial void DeleteLogsHandOvers(LogsHandOvers instance);
    partial void InsertSitesAssistant(SitesAssistant instance);
    partial void UpdateSitesAssistant(SitesAssistant instance);
    partial void DeleteSitesAssistant(SitesAssistant instance);
    partial void InsertSitesBrand(SitesBrand instance);
    partial void UpdateSitesBrand(SitesBrand instance);
    partial void DeleteSitesBrand(SitesBrand instance);
    partial void InsertSitesConduct(SitesConduct instance);
    partial void UpdateSitesConduct(SitesConduct instance);
    partial void DeleteSitesConduct(SitesConduct instance);
    partial void InsertSitesContact(SitesContact instance);
    partial void UpdateSitesContact(SitesContact instance);
    partial void DeleteSitesContact(SitesContact instance);
    partial void InsertSitesPartNumber(SitesPartNumber instance);
    partial void UpdateSitesPartNumber(SitesPartNumber instance);
    partial void DeleteSitesPartNumber(SitesPartNumber instance);
    partial void InsertMapsCertificate(MapsCertificate instance);
    partial void UpdateMapsCertificate(MapsCertificate instance);
    partial void DeleteMapsCertificate(MapsCertificate instance);
    partial void InsertSitesRequirement(SitesRequirement instance);
    partial void UpdateSitesRequirement(SitesRequirement instance);
    partial void DeleteSitesRequirement(SitesRequirement instance);
    partial void InsertPaires(Paires instance);
    partial void UpdatePaires(Paires instance);
    partial void DeletePaires(Paires instance);
    partial void InsertSitesFlowCredit(SitesFlowCredit instance);
    partial void UpdateSitesFlowCredit(SitesFlowCredit instance);
    partial void DeleteSitesFlowCredit(SitesFlowCredit instance);
    partial void InsertSitesCredit(SitesCredit instance);
    partial void UpdateSitesCredit(SitesCredit instance);
    partial void DeleteSitesCredit(SitesCredit instance);
    partial void InsertMapsEnterprise(MapsEnterprise instance);
    partial void UpdateMapsEnterprise(MapsEnterprise instance);
    partial void DeleteMapsEnterprise(MapsEnterprise instance);
    partial void InsertSitesMapEnterprise(SitesMapEnterprise instance);
    partial void UpdateSitesMapEnterprise(SitesMapEnterprise instance);
    partial void DeleteSitesMapEnterprise(SitesMapEnterprise instance);
    partial void InsertSitesCertificate(SitesCertificate instance);
    partial void UpdateSitesCertificate(SitesCertificate instance);
    partial void DeleteSitesCertificate(SitesCertificate instance);
    partial void InsertSitesCommission(SitesCommission instance);
    partial void UpdateSitesCommission(SitesCommission instance);
    partial void DeleteSitesCommission(SitesCommission instance);
    partial void InsertSitesFixedSupplier(SitesFixedSupplier instance);
    partial void UpdateSitesFixedSupplier(SitesFixedSupplier instance);
    partial void DeleteSitesFixedSupplier(SitesFixedSupplier instance);
    partial void InsertEnterpriseRegisters(EnterpriseRegisters instance);
    partial void UpdateEnterpriseRegisters(EnterpriseRegisters instance);
    partial void DeleteEnterpriseRegisters(EnterpriseRegisters instance);
    partial void InsertLogsOperating(LogsOperating instance);
    partial void UpdateLogsOperating(LogsOperating instance);
    partial void DeleteLogsOperating(LogsOperating instance);
    partial void InsertRecords(Records instance);
    partial void UpdateRecords(Records instance);
    partial void DeleteRecords(Records instance);
    partial void InsertDyjInterfaceSyncRecords(DyjInterfaceSyncRecords instance);
    partial void UpdateDyjInterfaceSyncRecords(DyjInterfaceSyncRecords instance);
    partial void DeleteDyjInterfaceSyncRecords(DyjInterfaceSyncRecords instance);
    partial void InsertSites(Sites instance);
    partial void UpdateSites(Sites instance);
    partial void DeleteSites(Sites instance);
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    partial void InsertFlowCredits(FlowCredits instance);
    partial void UpdateFlowCredits(FlowCredits instance);
    partial void DeleteFlowCredits(FlowCredits instance);
    partial void InsertCertificates(Certificates instance);
    partial void UpdateCertificates(Certificates instance);
    partial void DeleteCertificates(Certificates instance);
    #endregion
		
		public sqlDataContext() : 
				base(global::Layers.Data.Properties.Settings.Default.PveCrmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Advantages> Advantages
		{
			get
			{
				return this.GetTable<Advantages>();
			}
		}
		
		public System.Data.Linq.Table<ClientReports> ClientReports
		{
			get
			{
				return this.GetTable<ClientReports>();
			}
		}
		
		public System.Data.Linq.Table<Commissions> Commissions
		{
			get
			{
				return this.GetTable<Commissions>();
			}
		}
		
		public System.Data.Linq.Table<Companies> Companies
		{
			get
			{
				return this.GetTable<Companies>();
			}
		}
		
		public System.Data.Linq.Table<Contracts> Contracts
		{
			get
			{
				return this.GetTable<Contracts>();
			}
		}
		
		public System.Data.Linq.Table<Dishonests> Dishonests
		{
			get
			{
				return this.GetTable<Dishonests>();
			}
		}
		
		public System.Data.Linq.Table<Enterprises> Enterprises
		{
			get
			{
				return this.GetTable<Enterprises>();
			}
		}
		
		public System.Data.Linq.Table<EnumsDictionaries> EnumsDictionaries
		{
			get
			{
				return this.GetTable<EnumsDictionaries>();
			}
		}
		
		public System.Data.Linq.Table<FixedSuppliers> FixedSuppliers
		{
			get
			{
				return this.GetTable<FixedSuppliers>();
			}
		}
		
		public System.Data.Linq.Table<MapsSiteuser> MapsSiteuser
		{
			get
			{
				return this.GetTable<MapsSiteuser>();
			}
		}
		
		public System.Data.Linq.Table<MapsTopN> MapsTopN
		{
			get
			{
				return this.GetTable<MapsTopN>();
			}
		}
		
		public System.Data.Linq.Table<nBrands> nBrands
		{
			get
			{
				return this.GetTable<nBrands>();
			}
		}
		
		public System.Data.Linq.Table<oAddresses> oAddresses
		{
			get
			{
				return this.GetTable<oAddresses>();
			}
		}
		
		public System.Data.Linq.Table<oContacts> oContacts
		{
			get
			{
				return this.GetTable<oContacts>();
			}
		}
		
		public System.Data.Linq.Table<Organizations> Organizations
		{
			get
			{
				return this.GetTable<Organizations>();
			}
		}
		
		public System.Data.Linq.Table<PcFiles> PcFiles
		{
			get
			{
				return this.GetTable<PcFiles>();
			}
		}
		
		public System.Data.Linq.Table<Persons> Persons
		{
			get
			{
				return this.GetTable<Persons>();
			}
		}
		
		public System.Data.Linq.Table<PrimaryKeys> PrimaryKeys
		{
			get
			{
				return this.GetTable<PrimaryKeys>();
			}
		}
		
		public System.Data.Linq.Table<ProjectCompeletes> ProjectCompeletes
		{
			get
			{
				return this.GetTable<ProjectCompeletes>();
			}
		}
		
		public System.Data.Linq.Table<ProjectProducts> ProjectProducts
		{
			get
			{
				return this.GetTable<ProjectProducts>();
			}
		}
		
		public System.Data.Linq.Table<ProjectReports> ProjectReports
		{
			get
			{
				return this.GetTable<ProjectReports>();
			}
		}
		
		public System.Data.Linq.Table<Projects> Projects
		{
			get
			{
				return this.GetTable<Projects>();
			}
		}
		
		public System.Data.Linq.Table<Quotes> Quotes
		{
			get
			{
				return this.GetTable<Quotes>();
			}
		}
		
		public System.Data.Linq.Table<Requirements> Requirements
		{
			get
			{
				return this.GetTable<Requirements>();
			}
		}
		
		public System.Data.Linq.Table<SampleItems> SampleItems
		{
			get
			{
				return this.GetTable<SampleItems>();
			}
		}
		
		public System.Data.Linq.Table<Samples> Samples
		{
			get
			{
				return this.GetTable<Samples>();
			}
		}
		
		public System.Data.Linq.Table<SiteAccounts> SiteAccounts
		{
			get
			{
				return this.GetTable<SiteAccounts>();
			}
		}
		
		public System.Data.Linq.Table<SiteUsers> SiteUsers
		{
			get
			{
				return this.GetTable<SiteUsers>();
			}
		}
		
		public System.Data.Linq.Table<Specials> Specials
		{
			get
			{
				return this.GetTable<Specials>();
			}
		}
		
		public System.Data.Linq.Table<StandardBrands> StandardBrands
		{
			get
			{
				return this.GetTable<StandardBrands>();
			}
		}
		
		public System.Data.Linq.Table<StandardPartNumbers> StandardPartNumbers
		{
			get
			{
				return this.GetTable<StandardPartNumbers>();
			}
		}
		
		public System.Data.Linq.Table<SysNotice> SysNotice
		{
			get
			{
				return this.GetTable<SysNotice>();
			}
		}
		
		public System.Data.Linq.Table<TraceComments> TraceComments
		{
			get
			{
				return this.GetTable<TraceComments>();
			}
		}
		
		public System.Data.Linq.Table<TraceRecords> TraceRecords
		{
			get
			{
				return this.GetTable<TraceRecords>();
			}
		}
		
		public System.Data.Linq.Table<TradeSettlements> TradeSettlements
		{
			get
			{
				return this.GetTable<TradeSettlements>();
			}
		}
		
		public System.Data.Linq.Table<vAddresses> vAddresses
		{
			get
			{
				return this.GetTable<vAddresses>();
			}
		}
		
		public System.Data.Linq.Table<vBrands> vBrands
		{
			get
			{
				return this.GetTable<vBrands>();
			}
		}
		
		public System.Data.Linq.Table<vComplaints> vComplaints
		{
			get
			{
				return this.GetTable<vComplaints>();
			}
		}
		
		public System.Data.Linq.Table<vContracts> vContracts
		{
			get
			{
				return this.GetTable<vContracts>();
			}
		}
		
		public System.Data.Linq.Table<vDishonests> vDishonests
		{
			get
			{
				return this.GetTable<vDishonests>();
			}
		}
		
		public System.Data.Linq.Table<vEnterprises> vEnterprises
		{
			get
			{
				return this.GetTable<vEnterprises>();
			}
		}
		
		public System.Data.Linq.Table<vInvoices> vInvoices
		{
			get
			{
				return this.GetTable<vInvoices>();
			}
		}
		
		public System.Data.Linq.Table<AdminsRolesTopView> AdminsRolesTopView
		{
			get
			{
				return this.GetTable<AdminsRolesTopView>();
			}
		}
		
		public System.Data.Linq.Table<ApplyTasks> ApplyTasks
		{
			get
			{
				return this.GetTable<ApplyTasks>();
			}
		}
		
		public System.Data.Linq.Table<Invoices> Invoices
		{
			get
			{
				return this.GetTable<Invoices>();
			}
		}
		
		public System.Data.Linq.Table<ClientApplyStatisticsView> ClientApplyStatisticsView
		{
			get
			{
				return this.GetTable<ClientApplyStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<oDoors> oDoors
		{
			get
			{
				return this.GetTable<oDoors>();
			}
		}
		
		public System.Data.Linq.Table<Carriers> Carriers
		{
			get
			{
				return this.GetTable<Carriers>();
			}
		}
		
		public System.Data.Linq.Table<oTransports> oTransports
		{
			get
			{
				return this.GetTable<oTransports>();
			}
		}
		
		public System.Data.Linq.Table<oDrivers> oDrivers
		{
			get
			{
				return this.GetTable<oDrivers>();
			}
		}
		
		public System.Data.Linq.Table<Structures> Structures
		{
			get
			{
				return this.GetTable<Structures>();
			}
		}
		
		public System.Data.Linq.Table<MapsRegion> MapsRegion
		{
			get
			{
				return this.GetTable<MapsRegion>();
			}
		}
		
		public System.Data.Linq.Table<MapsStructure> MapsStructure
		{
			get
			{
				return this.GetTable<MapsStructure>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdmin> MapsAdmin
		{
			get
			{
				return this.GetTable<MapsAdmin>();
			}
		}
		
		public System.Data.Linq.Table<Relations> Relations
		{
			get
			{
				return this.GetTable<Relations>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<BookAccounts> BookAccounts
		{
			get
			{
				return this.GetTable<BookAccounts>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiariesTopView> BeneficiariesTopView
		{
			get
			{
				return this.GetTable<BeneficiariesTopView>();
			}
		}
		
		public System.Data.Linq.Table<ContactsTopView> ContactsTopView
		{
			get
			{
				return this.GetTable<ContactsTopView>();
			}
		}
		
		public System.Data.Linq.Table<nBrandsTopView> nBrandsTopView
		{
			get
			{
				return this.GetTable<nBrandsTopView>();
			}
		}
		
		public System.Data.Linq.Table<WarehousesTopView> WarehousesTopView
		{
			get
			{
				return this.GetTable<WarehousesTopView>();
			}
		}
		
		public System.Data.Linq.Table<vBrandsTopView> vBrandsTopView
		{
			get
			{
				return this.GetTable<vBrandsTopView>();
			}
		}
		
		public System.Data.Linq.Table<EnterprisesTopView> EnterprisesTopView
		{
			get
			{
				return this.GetTable<EnterprisesTopView>();
			}
		}
		
		public System.Data.Linq.Table<EnumsDictionariesTopView> EnumsDictionariesTopView
		{
			get
			{
				return this.GetTable<EnumsDictionariesTopView>();
			}
		}
		
		public System.Data.Linq.Table<Addresses> Addresses
		{
			get
			{
				return this.GetTable<Addresses>();
			}
		}
		
		public System.Data.Linq.Table<RelationStatisticsView> RelationStatisticsView
		{
			get
			{
				return this.GetTable<RelationStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<InvoicesTopView> InvoicesTopView
		{
			get
			{
				return this.GetTable<InvoicesTopView>();
			}
		}
		
		public System.Data.Linq.Table<SuppliersTopView> SuppliersTopView
		{
			get
			{
				return this.GetTable<SuppliersTopView>();
			}
		}
		
		public System.Data.Linq.Table<CompaniesTopView> CompaniesTopView
		{
			get
			{
				return this.GetTable<CompaniesTopView>();
			}
		}
		
		public System.Data.Linq.Table<WareHouses> WareHouses
		{
			get
			{
				return this.GetTable<WareHouses>();
			}
		}
		
		public System.Data.Linq.Table<Suppliers> Suppliers
		{
			get
			{
				return this.GetTable<Suppliers>();
			}
		}
		
		public System.Data.Linq.Table<Credits> Credits
		{
			get
			{
				return this.GetTable<Credits>();
			}
		}
		
		public System.Data.Linq.Table<SitesAddress> SitesAddress
		{
			get
			{
				return this.GetTable<SitesAddress>();
			}
		}
		
		public System.Data.Linq.Table<ClientsTopView> ClientsTopView
		{
			get
			{
				return this.GetTable<ClientsTopView>();
			}
		}
		
		public System.Data.Linq.Table<Regions> Regions
		{
			get
			{
				return this.GetTable<Regions>();
			}
		}
		
		public System.Data.Linq.Table<LogsHandOvers> LogsHandOvers
		{
			get
			{
				return this.GetTable<LogsHandOvers>();
			}
		}
		
		public System.Data.Linq.Table<SitesAssistant> SitesAssistant
		{
			get
			{
				return this.GetTable<SitesAssistant>();
			}
		}
		
		public System.Data.Linq.Table<SitesBrand> SitesBrand
		{
			get
			{
				return this.GetTable<SitesBrand>();
			}
		}
		
		public System.Data.Linq.Table<SitesConduct> SitesConduct
		{
			get
			{
				return this.GetTable<SitesConduct>();
			}
		}
		
		public System.Data.Linq.Table<SitesContact> SitesContact
		{
			get
			{
				return this.GetTable<SitesContact>();
			}
		}
		
		public System.Data.Linq.Table<SitesPartNumber> SitesPartNumber
		{
			get
			{
				return this.GetTable<SitesPartNumber>();
			}
		}
		
		public System.Data.Linq.Table<MapsCertificate> MapsCertificate
		{
			get
			{
				return this.GetTable<MapsCertificate>();
			}
		}
		
		public System.Data.Linq.Table<SitesRequirement> SitesRequirement
		{
			get
			{
				return this.GetTable<SitesRequirement>();
			}
		}
		
		public System.Data.Linq.Table<Paires> Paires
		{
			get
			{
				return this.GetTable<Paires>();
			}
		}
		
		public System.Data.Linq.Table<SitesFlowCredit> SitesFlowCredit
		{
			get
			{
				return this.GetTable<SitesFlowCredit>();
			}
		}
		
		public System.Data.Linq.Table<SitesCreditTopView> SitesCreditTopView
		{
			get
			{
				return this.GetTable<SitesCreditTopView>();
			}
		}
		
		public System.Data.Linq.Table<SitesCredit> SitesCredit
		{
			get
			{
				return this.GetTable<SitesCredit>();
			}
		}
		
		public System.Data.Linq.Table<AdminSitesTopView> AdminSitesTopView
		{
			get
			{
				return this.GetTable<AdminSitesTopView>();
			}
		}
		
		public System.Data.Linq.Table<SiteAssistantsTopView> SiteAssistantsTopView
		{
			get
			{
				return this.GetTable<SiteAssistantsTopView>();
			}
		}
		
		public System.Data.Linq.Table<MapsEnterprise> MapsEnterprise
		{
			get
			{
				return this.GetTable<MapsEnterprise>();
			}
		}
		
		public System.Data.Linq.Table<SitesMapEnterprise> SitesMapEnterprise
		{
			get
			{
				return this.GetTable<SitesMapEnterprise>();
			}
		}
		
		public System.Data.Linq.Table<SitesMapEnterpriseTopView> SitesMapEnterpriseTopView
		{
			get
			{
				return this.GetTable<SitesMapEnterpriseTopView>();
			}
		}
		
		public System.Data.Linq.Table<SitesCertificate> SitesCertificate
		{
			get
			{
				return this.GetTable<SitesCertificate>();
			}
		}
		
		public System.Data.Linq.Table<ClientSitesCreditsStatisticsWithSharesView> ClientSitesCreditsStatisticsWithSharesView
		{
			get
			{
				return this.GetTable<ClientSitesCreditsStatisticsWithSharesView>();
			}
		}
		
		public System.Data.Linq.Table<SitesCreditsStatisticsView> SitesCreditsStatisticsView
		{
			get
			{
				return this.GetTable<SitesCreditsStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<CreditsStatisticsView> CreditsStatisticsView
		{
			get
			{
				return this.GetTable<CreditsStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<SitesCommission> SitesCommission
		{
			get
			{
				return this.GetTable<SitesCommission>();
			}
		}
		
		public System.Data.Linq.Table<SitesFixedSupplier> SitesFixedSupplier
		{
			get
			{
				return this.GetTable<SitesFixedSupplier>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseRegisters> EnterpriseRegisters
		{
			get
			{
				return this.GetTable<EnterpriseRegisters>();
			}
		}
		
		public System.Data.Linq.Table<SupplierSitesCreditsStatisticsWithSharesView> SupplierSitesCreditsStatisticsWithSharesView
		{
			get
			{
				return this.GetTable<SupplierSitesCreditsStatisticsWithSharesView>();
			}
		}
		
		public System.Data.Linq.Table<AllAdminSitesTopView> AllAdminSitesTopView
		{
			get
			{
				return this.GetTable<AllAdminSitesTopView>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
		
		public System.Data.Linq.Table<LogsOperating> LogsOperating
		{
			get
			{
				return this.GetTable<LogsOperating>();
			}
		}
		
		public System.Data.Linq.Table<Records> Records
		{
			get
			{
				return this.GetTable<Records>();
			}
		}
		
		public System.Data.Linq.Table<DyjInterfaceSyncRecords> DyjInterfaceSyncRecords
		{
			get
			{
				return this.GetTable<DyjInterfaceSyncRecords>();
			}
		}
		
		public System.Data.Linq.Table<ConsigneesTopView> ConsigneesTopView
		{
			get
			{
				return this.GetTable<ConsigneesTopView>();
			}
		}
		
		public System.Data.Linq.Table<SitesAllMapEnterpriseTopView> SitesAllMapEnterpriseTopView
		{
			get
			{
				return this.GetTable<SitesAllMapEnterpriseTopView>();
			}
		}
		
		public System.Data.Linq.Table<Sites> Sites
		{
			get
			{
				return this.GetTable<Sites>();
			}
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
		
		public System.Data.Linq.Table<FlowCredits> FlowCredits
		{
			get
			{
				return this.GetTable<FlowCredits>();
			}
		}
		
		public System.Data.Linq.Table<Certificates> Certificates
		{
			get
			{
				return this.GetTable<Certificates>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advantages")]
	public partial class Advantages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OwnerID;
		
		private string _SpntID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnSpntIDChanging(string value);
    partial void OnSpntIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Advantages()
		{
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpntID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpntID
		{
			get
			{
				return this._SpntID;
			}
			set
			{
				if ((this._SpntID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpntIDChanging(value);
					this.SendPropertyChanging();
					this._SpntID = value;
					this.SendPropertyChanged("SpntID");
					this.OnSpntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_Advantages", Storage="_StandardPartNumbers", ThisKey="SpntID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.Advantages.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.Advantages.Add(this);
						this._SpntID = value.ID;
					}
					else
					{
						this._SpntID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientReports")]
	public partial class ClientReports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ReporterID;
		
		private string _SupplierID;
		
		private string _Code;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Enterprises> _Enterprises1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnReporterIDChanging(string value);
    partial void OnReporterIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ClientReports()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Enterprises1 = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReporterID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReporterID
		{
			get
			{
				return this._ReporterID;
			}
			set
			{
				if ((this._ReporterID != value))
				{
					this.OnReporterIDChanging(value);
					this.SendPropertyChanging();
					this._ReporterID = value;
					this.SendPropertyChanged("ReporterID");
					this.OnReporterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Enterprises1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ClientReports", Storage="_Enterprises", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.ClientReports.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.ClientReports.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ClientReports1", Storage="_Enterprises1", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises1
		{
			get
			{
				return this._Enterprises1.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises1.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises1.Entity = null;
						previousValue.ClientReports1.Remove(this);
					}
					this._Enterprises1.Entity = value;
					if ((value != null))
					{
						value.ClientReports1.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Enterprises1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commissions")]
	public partial class Commissions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SupplierID;
		
		private string _CompanyID;
		
		private int _Type;
		
		private int _Methord;
		
		private System.Nullable<decimal> _Ratio;
		
		private decimal _Msp;
		
		private int _Currency;
		
		private int _Status;
		
		private System.Nullable<int> _Months;
		
		private System.Nullable<int> _Days;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMethordChanging(int value);
    partial void OnMethordChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    partial void OnMspChanging(decimal value);
    partial void OnMspChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMonthsChanging(System.Nullable<int> value);
    partial void OnMonthsChanged();
    partial void OnDaysChanging(System.Nullable<int> value);
    partial void OnDaysChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Commissions()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int NOT NULL")]
		public int Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this.OnMethordChanging(value);
					this.SendPropertyChanging();
					this._Methord = value;
					this.SendPropertyChanged("Methord");
					this.OnMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratio", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msp", DbType="Decimal(18,7) NOT NULL")]
		public decimal Msp
		{
			get
			{
				return this._Msp;
			}
			set
			{
				if ((this._Msp != value))
				{
					this.OnMspChanging(value);
					this.SendPropertyChanging();
					this._Msp = value;
					this.SendPropertyChanged("Msp");
					this.OnMspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="Int")]
		public System.Nullable<int> Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int")]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Commissions", Storage="_Enterprises", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Commissions.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Commissions.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Companies()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Companies", Storage="_Enterprises", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Companies = null;
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Companies = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contracts")]
	public partial class Contracts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PartyAID;
		
		private string _PartyBID;
		
		private int _Type;
		
		private string _Context;
		
		private string _Summary;
		
		private string _FiledID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPartyAIDChanging(string value);
    partial void OnPartyAIDChanged();
    partial void OnPartyBIDChanging(string value);
    partial void OnPartyBIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFiledIDChanging(string value);
    partial void OnFiledIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Contracts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyAID", DbType="VarChar(50)")]
		public string PartyAID
		{
			get
			{
				return this._PartyAID;
			}
			set
			{
				if ((this._PartyAID != value))
				{
					this.OnPartyAIDChanging(value);
					this.SendPropertyChanging();
					this._PartyAID = value;
					this.SendPropertyChanged("PartyAID");
					this.OnPartyAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyBID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartyBID
		{
			get
			{
				return this._PartyBID;
			}
			set
			{
				if ((this._PartyBID != value))
				{
					this.OnPartyBIDChanging(value);
					this.SendPropertyChanging();
					this._PartyBID = value;
					this.SendPropertyChanged("PartyBID");
					this.OnPartyBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiledID", DbType="VarChar(50)")]
		public string FiledID
		{
			get
			{
				return this._FiledID;
			}
			set
			{
				if ((this._FiledID != value))
				{
					this.OnFiledIDChanging(value);
					this.SendPropertyChanging();
					this._FiledID = value;
					this.SendPropertyChanged("FiledID");
					this.OnFiledIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dishonests")]
	public partial class Dishonests : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _Reason;
		
		private string _Code;
		
		private string _Summary;
		
		private System.DateTime _OccurTime;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnOccurTimeChanging(System.DateTime value);
    partial void OnOccurTimeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Dishonests()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurTime", DbType="DateTime NOT NULL")]
		public System.DateTime OccurTime
		{
			get
			{
				return this._OccurTime;
			}
			set
			{
				if ((this._OccurTime != value))
				{
					this.OnOccurTimeChanging(value);
					this.SendPropertyChanging();
					this._OccurTime = value;
					this.SendPropertyChanged("OccurTime");
					this.OnOccurTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Dishonests", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Dishonests.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Dishonests.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enterprises")]
	public partial class Enterprises : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private int _Status;
		
		private string _Place;
		
		private string _District;
		
		private System.Nullable<int> _Grade;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _DyjCode;
		
		private EntitySet<ClientReports> _ClientReports;
		
		private EntitySet<ClientReports> _ClientReports1;
		
		private EntitySet<Commissions> _Commissions;
		
		private EntityRef<Companies> _Companies;
		
		private EntitySet<Dishonests> _Dishonests;
		
		private EntityRef<FixedSuppliers> _FixedSuppliers;
		
		private EntitySet<MapsTopN> _MapsTopN;
		
		private EntitySet<nBrands> _nBrands;
		
		private EntitySet<ProjectProducts> _ProjectProducts;
		
		private EntitySet<ProjectReports> _ProjectReports;
		
		private EntitySet<Projects> _Projects;
		
		private EntitySet<Projects> _Projects1;
		
		private EntitySet<Requirements> _Requirements;
		
		private EntitySet<Specials> _Specials;
		
		private EntitySet<TradeSettlements> _TradeSettlements;
		
		private EntitySet<vEnterprises> _vEnterprises;
		
		private EntitySet<Invoices> _Invoices;
		
		private EntitySet<Relations> _Relations;
		
		private EntitySet<Contacts> _Contacts;
		
		private EntitySet<BookAccounts> _BookAccounts;
		
		private EntitySet<Addresses> _Addresses;
		
		private EntityRef<Suppliers> _Suppliers;
		
		private EntitySet<Credits> _Credits;
		
		private EntitySet<Credits> _Credits1;
		
		private EntitySet<MapsEnterprise> _MapsEnterprise;
		
		private EntitySet<MapsEnterprise> _MapsEnterprise1;
		
		private EntityRef<EnterpriseRegisters> _EnterpriseRegisters;
		
		private EntityRef<Clients> _Clients;
		
		private EntitySet<FlowCredits> _FlowCredits;
		
		private EntitySet<FlowCredits> _FlowCredits1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    #endregion
		
		public Enterprises()
		{
			this._ClientReports = new EntitySet<ClientReports>(new Action<ClientReports>(this.attach_ClientReports), new Action<ClientReports>(this.detach_ClientReports));
			this._ClientReports1 = new EntitySet<ClientReports>(new Action<ClientReports>(this.attach_ClientReports1), new Action<ClientReports>(this.detach_ClientReports1));
			this._Commissions = new EntitySet<Commissions>(new Action<Commissions>(this.attach_Commissions), new Action<Commissions>(this.detach_Commissions));
			this._Companies = default(EntityRef<Companies>);
			this._Dishonests = new EntitySet<Dishonests>(new Action<Dishonests>(this.attach_Dishonests), new Action<Dishonests>(this.detach_Dishonests));
			this._FixedSuppliers = default(EntityRef<FixedSuppliers>);
			this._MapsTopN = new EntitySet<MapsTopN>(new Action<MapsTopN>(this.attach_MapsTopN), new Action<MapsTopN>(this.detach_MapsTopN));
			this._nBrands = new EntitySet<nBrands>(new Action<nBrands>(this.attach_nBrands), new Action<nBrands>(this.detach_nBrands));
			this._ProjectProducts = new EntitySet<ProjectProducts>(new Action<ProjectProducts>(this.attach_ProjectProducts), new Action<ProjectProducts>(this.detach_ProjectProducts));
			this._ProjectReports = new EntitySet<ProjectReports>(new Action<ProjectReports>(this.attach_ProjectReports), new Action<ProjectReports>(this.detach_ProjectReports));
			this._Projects = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects), new Action<Projects>(this.detach_Projects));
			this._Projects1 = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects1), new Action<Projects>(this.detach_Projects1));
			this._Requirements = new EntitySet<Requirements>(new Action<Requirements>(this.attach_Requirements), new Action<Requirements>(this.detach_Requirements));
			this._Specials = new EntitySet<Specials>(new Action<Specials>(this.attach_Specials), new Action<Specials>(this.detach_Specials));
			this._TradeSettlements = new EntitySet<TradeSettlements>(new Action<TradeSettlements>(this.attach_TradeSettlements), new Action<TradeSettlements>(this.detach_TradeSettlements));
			this._vEnterprises = new EntitySet<vEnterprises>(new Action<vEnterprises>(this.attach_vEnterprises), new Action<vEnterprises>(this.detach_vEnterprises));
			this._Invoices = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices), new Action<Invoices>(this.detach_Invoices));
			this._Relations = new EntitySet<Relations>(new Action<Relations>(this.attach_Relations), new Action<Relations>(this.detach_Relations));
			this._Contacts = new EntitySet<Contacts>(new Action<Contacts>(this.attach_Contacts), new Action<Contacts>(this.detach_Contacts));
			this._BookAccounts = new EntitySet<BookAccounts>(new Action<BookAccounts>(this.attach_BookAccounts), new Action<BookAccounts>(this.detach_BookAccounts));
			this._Addresses = new EntitySet<Addresses>(new Action<Addresses>(this.attach_Addresses), new Action<Addresses>(this.detach_Addresses));
			this._Suppliers = default(EntityRef<Suppliers>);
			this._Credits = new EntitySet<Credits>(new Action<Credits>(this.attach_Credits), new Action<Credits>(this.detach_Credits));
			this._Credits1 = new EntitySet<Credits>(new Action<Credits>(this.attach_Credits1), new Action<Credits>(this.detach_Credits1));
			this._MapsEnterprise = new EntitySet<MapsEnterprise>(new Action<MapsEnterprise>(this.attach_MapsEnterprise), new Action<MapsEnterprise>(this.detach_MapsEnterprise));
			this._MapsEnterprise1 = new EntitySet<MapsEnterprise>(new Action<MapsEnterprise>(this.attach_MapsEnterprise1), new Action<MapsEnterprise>(this.detach_MapsEnterprise1));
			this._EnterpriseRegisters = default(EntityRef<EnterpriseRegisters>);
			this._Clients = default(EntityRef<Clients>);
			this._FlowCredits = new EntitySet<FlowCredits>(new Action<FlowCredits>(this.attach_FlowCredits), new Action<FlowCredits>(this.detach_FlowCredits));
			this._FlowCredits1 = new EntitySet<FlowCredits>(new Action<FlowCredits>(this.attach_FlowCredits1), new Action<FlowCredits>(this.detach_FlowCredits1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(50)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ClientReports", Storage="_ClientReports", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientReports> ClientReports
		{
			get
			{
				return this._ClientReports;
			}
			set
			{
				this._ClientReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ClientReports1", Storage="_ClientReports1", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<ClientReports> ClientReports1
		{
			get
			{
				return this._ClientReports1;
			}
			set
			{
				this._ClientReports1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Commissions", Storage="_Commissions", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Commissions> Commissions
		{
			get
			{
				return this._Commissions;
			}
			set
			{
				this._Commissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Companies", Storage="_Companies", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Enterprises = null;
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Enterprises = this;
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Dishonests", Storage="_Dishonests", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Dishonests> Dishonests
		{
			get
			{
				return this._Dishonests;
			}
			set
			{
				this._Dishonests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FixedSuppliers", Storage="_FixedSuppliers", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public FixedSuppliers FixedSuppliers
		{
			get
			{
				return this._FixedSuppliers.Entity;
			}
			set
			{
				FixedSuppliers previousValue = this._FixedSuppliers.Entity;
				if (((previousValue != value) 
							|| (this._FixedSuppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedSuppliers.Entity = null;
						previousValue.Enterprises = null;
					}
					this._FixedSuppliers.Entity = value;
					if ((value != null))
					{
						value.Enterprises = this;
					}
					this.SendPropertyChanged("FixedSuppliers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsTopN", Storage="_MapsTopN", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<MapsTopN> MapsTopN
		{
			get
			{
				return this._MapsTopN;
			}
			set
			{
				this._MapsTopN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_nBrands", Storage="_nBrands", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<nBrands> nBrands
		{
			get
			{
				return this._nBrands;
			}
			set
			{
				this._nBrands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ProjectProducts", Storage="_ProjectProducts", ThisKey="ID", OtherKey="AssignClientID")]
		public EntitySet<ProjectProducts> ProjectProducts
		{
			get
			{
				return this._ProjectProducts;
			}
			set
			{
				this._ProjectProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ProjectReports", Storage="_ProjectReports", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ProjectReports> ProjectReports
		{
			get
			{
				return this._ProjectReports;
			}
			set
			{
				this._ProjectReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects", Storage="_Projects", ThisKey="ID", OtherKey="EndClientID")]
		public EntitySet<Projects> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects1", Storage="_Projects1", ThisKey="ID", OtherKey="AssignClientID")]
		public EntitySet<Projects> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Requirements", Storage="_Requirements", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Requirements> Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				this._Requirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Specials", Storage="_Specials", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Specials> Specials
		{
			get
			{
				return this._Specials;
			}
			set
			{
				this._Specials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_TradeSettlements", Storage="_TradeSettlements", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<TradeSettlements> TradeSettlements
		{
			get
			{
				return this._TradeSettlements;
			}
			set
			{
				this._TradeSettlements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_vEnterprises", Storage="_vEnterprises", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<vEnterprises> vEnterprises
		{
			get
			{
				return this._vEnterprises;
			}
			set
			{
				this._vEnterprises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Invoices", Storage="_Invoices", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Invoices> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Relations", Storage="_Relations", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Relations> Relations
		{
			get
			{
				return this._Relations;
			}
			set
			{
				this._Relations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Contacts", Storage="_Contacts", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Contacts> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_BookAccounts", Storage="_BookAccounts", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<BookAccounts> BookAccounts
		{
			get
			{
				return this._BookAccounts;
			}
			set
			{
				this._BookAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Addresses", Storage="_Addresses", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Addresses> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Suppliers", Storage="_Suppliers", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Suppliers Suppliers
		{
			get
			{
				return this._Suppliers.Entity;
			}
			set
			{
				Suppliers previousValue = this._Suppliers.Entity;
				if (((previousValue != value) 
							|| (this._Suppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Suppliers.Entity = null;
						previousValue.Enterprises = null;
					}
					this._Suppliers.Entity = value;
					if ((value != null))
					{
						value.Enterprises = this;
					}
					this.SendPropertyChanged("Suppliers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Credits", Storage="_Credits", ThisKey="ID", OtherKey="MakerID")]
		public EntitySet<Credits> Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				this._Credits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Credits1", Storage="_Credits1", ThisKey="ID", OtherKey="TakerID")]
		public EntitySet<Credits> Credits1
		{
			get
			{
				return this._Credits1;
			}
			set
			{
				this._Credits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsEnterprise", Storage="_MapsEnterprise", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<MapsEnterprise> MapsEnterprise
		{
			get
			{
				return this._MapsEnterprise;
			}
			set
			{
				this._MapsEnterprise.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsEnterprise1", Storage="_MapsEnterprise1", ThisKey="ID", OtherKey="SubID")]
		public EntitySet<MapsEnterprise> MapsEnterprise1
		{
			get
			{
				return this._MapsEnterprise1;
			}
			set
			{
				this._MapsEnterprise1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_EnterpriseRegisters", Storage="_EnterpriseRegisters", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public EnterpriseRegisters EnterpriseRegisters
		{
			get
			{
				return this._EnterpriseRegisters.Entity;
			}
			set
			{
				EnterpriseRegisters previousValue = this._EnterpriseRegisters.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseRegisters.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseRegisters.Entity = null;
						previousValue.Enterprises = null;
					}
					this._EnterpriseRegisters.Entity = value;
					if ((value != null))
					{
						value.Enterprises = this;
					}
					this.SendPropertyChanged("EnterpriseRegisters");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Clients", Storage="_Clients", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Enterprises = null;
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Enterprises = this;
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FlowCredits", Storage="_FlowCredits", ThisKey="ID", OtherKey="MakerID")]
		public EntitySet<FlowCredits> FlowCredits
		{
			get
			{
				return this._FlowCredits;
			}
			set
			{
				this._FlowCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FlowCredits1", Storage="_FlowCredits1", ThisKey="ID", OtherKey="TakerID")]
		public EntitySet<FlowCredits> FlowCredits1
		{
			get
			{
				return this._FlowCredits1;
			}
			set
			{
				this._FlowCredits1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientReports(ClientReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_ClientReports(ClientReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_ClientReports1(ClientReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = this;
		}
		
		private void detach_ClientReports1(ClientReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = null;
		}
		
		private void attach_Commissions(Commissions entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Commissions(Commissions entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Dishonests(Dishonests entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Dishonests(Dishonests entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_MapsTopN(MapsTopN entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_MapsTopN(MapsTopN entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_nBrands(nBrands entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_nBrands(nBrands entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_ProjectProducts(ProjectProducts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_ProjectProducts(ProjectProducts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Projects1(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = this;
		}
		
		private void detach_Projects1(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = null;
		}
		
		private void attach_Requirements(Requirements entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Requirements(Requirements entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Specials(Specials entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Specials(Specials entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_TradeSettlements(TradeSettlements entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_TradeSettlements(TradeSettlements entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_vEnterprises(vEnterprises entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_vEnterprises(vEnterprises entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Relations(Relations entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Relations(Relations entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_BookAccounts(BookAccounts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_BookAccounts(BookAccounts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Addresses(Addresses entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Addresses(Addresses entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Credits(Credits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Credits(Credits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Credits1(Credits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = this;
		}
		
		private void detach_Credits1(Credits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = null;
		}
		
		private void attach_MapsEnterprise(MapsEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_MapsEnterprise(MapsEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_MapsEnterprise1(MapsEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = this;
		}
		
		private void detach_MapsEnterprise1(MapsEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = null;
		}
		
		private void attach_FlowCredits(FlowCredits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_FlowCredits(FlowCredits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_FlowCredits1(FlowCredits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = this;
		}
		
		private void detach_FlowCredits1(FlowCredits entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnumsDictionaries")]
	public partial class EnumsDictionaries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Enum;
		
		private bool _IsFixed;
		
		private string _Field;
		
		private string _Description;
		
		private string _Value;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnumChanging(string value);
    partial void OnEnumChanged();
    partial void OnIsFixedChanging(bool value);
    partial void OnIsFixedChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public EnumsDictionaries()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enum", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Enum
		{
			get
			{
				return this._Enum;
			}
			set
			{
				if ((this._Enum != value))
				{
					this.OnEnumChanging(value);
					this.SendPropertyChanging();
					this._Enum = value;
					this.SendPropertyChanged("Enum");
					this.OnEnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixed", DbType="Bit NOT NULL")]
		public bool IsFixed
		{
			get
			{
				return this._IsFixed;
			}
			set
			{
				if ((this._IsFixed != value))
				{
					this.OnIsFixedChanging(value);
					this.SendPropertyChanging();
					this._IsFixed = value;
					this.SendPropertyChanged("IsFixed");
					this.OnIsFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FixedSuppliers")]
	public partial class FixedSuppliers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<System.TimeSpan> _CutoffTime;
		
		private int _QuoteMethod;
		
		private string _DeliveryPlace;
		
		private string _DeliveryTime;
		
		private string _BatchMethod;
		
		private System.Nullable<int> _FreightPayer;
		
		private System.Nullable<decimal> _Mop;
		
		private string _CompanyID;
		
		private System.Nullable<bool> _IsOriginPi;
		
		private System.Nullable<bool> _IsWaybillPi;
		
		private System.Nullable<bool> _IsNotcieShiped;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<bool> _IsDelegatePay;
		
		private string _CreatorID;
		
		private string _WaybillFrom;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCutoffTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCutoffTimeChanged();
    partial void OnQuoteMethodChanging(int value);
    partial void OnQuoteMethodChanged();
    partial void OnDeliveryPlaceChanging(string value);
    partial void OnDeliveryPlaceChanged();
    partial void OnDeliveryTimeChanging(string value);
    partial void OnDeliveryTimeChanged();
    partial void OnBatchMethodChanging(string value);
    partial void OnBatchMethodChanged();
    partial void OnFreightPayerChanging(System.Nullable<int> value);
    partial void OnFreightPayerChanged();
    partial void OnMopChanging(System.Nullable<decimal> value);
    partial void OnMopChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnIsOriginPiChanging(System.Nullable<bool> value);
    partial void OnIsOriginPiChanged();
    partial void OnIsWaybillPiChanging(System.Nullable<bool> value);
    partial void OnIsWaybillPiChanged();
    partial void OnIsNotcieShipedChanging(System.Nullable<bool> value);
    partial void OnIsNotcieShipedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDelegatePayChanging(System.Nullable<bool> value);
    partial void OnIsDelegatePayChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnWaybillFromChanging(string value);
    partial void OnWaybillFromChanged();
    #endregion
		
		public FixedSuppliers()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutoffTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> CutoffTime
		{
			get
			{
				return this._CutoffTime;
			}
			set
			{
				if ((this._CutoffTime != value))
				{
					this.OnCutoffTimeChanging(value);
					this.SendPropertyChanging();
					this._CutoffTime = value;
					this.SendPropertyChanged("CutoffTime");
					this.OnCutoffTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteMethod", DbType="Int NOT NULL")]
		public int QuoteMethod
		{
			get
			{
				return this._QuoteMethod;
			}
			set
			{
				if ((this._QuoteMethod != value))
				{
					this.OnQuoteMethodChanging(value);
					this.SendPropertyChanging();
					this._QuoteMethod = value;
					this.SendPropertyChanged("QuoteMethod");
					this.OnQuoteMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPlace", DbType="NVarChar(300)")]
		public string DeliveryPlace
		{
			get
			{
				return this._DeliveryPlace;
			}
			set
			{
				if ((this._DeliveryPlace != value))
				{
					this.OnDeliveryPlaceChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPlace = value;
					this.SendPropertyChanged("DeliveryPlace");
					this.OnDeliveryPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="NVarChar(50)")]
		public string DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchMethod", DbType="NVarChar(150)")]
		public string BatchMethod
		{
			get
			{
				return this._BatchMethod;
			}
			set
			{
				if ((this._BatchMethod != value))
				{
					this.OnBatchMethodChanging(value);
					this.SendPropertyChanging();
					this._BatchMethod = value;
					this.SendPropertyChanged("BatchMethod");
					this.OnBatchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightPayer", DbType="Int")]
		public System.Nullable<int> FreightPayer
		{
			get
			{
				return this._FreightPayer;
			}
			set
			{
				if ((this._FreightPayer != value))
				{
					this.OnFreightPayerChanging(value);
					this.SendPropertyChanging();
					this._FreightPayer = value;
					this.SendPropertyChanged("FreightPayer");
					this.OnFreightPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mop", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Mop
		{
			get
			{
				return this._Mop;
			}
			set
			{
				if ((this._Mop != value))
				{
					this.OnMopChanging(value);
					this.SendPropertyChanging();
					this._Mop = value;
					this.SendPropertyChanged("Mop");
					this.OnMopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginPi", DbType="Bit")]
		public System.Nullable<bool> IsOriginPi
		{
			get
			{
				return this._IsOriginPi;
			}
			set
			{
				if ((this._IsOriginPi != value))
				{
					this.OnIsOriginPiChanging(value);
					this.SendPropertyChanging();
					this._IsOriginPi = value;
					this.SendPropertyChanged("IsOriginPi");
					this.OnIsOriginPiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaybillPi", DbType="Bit")]
		public System.Nullable<bool> IsWaybillPi
		{
			get
			{
				return this._IsWaybillPi;
			}
			set
			{
				if ((this._IsWaybillPi != value))
				{
					this.OnIsWaybillPiChanging(value);
					this.SendPropertyChanging();
					this._IsWaybillPi = value;
					this.SendPropertyChanged("IsWaybillPi");
					this.OnIsWaybillPiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotcieShiped", DbType="Bit")]
		public System.Nullable<bool> IsNotcieShiped
		{
			get
			{
				return this._IsNotcieShiped;
			}
			set
			{
				if ((this._IsNotcieShiped != value))
				{
					this.OnIsNotcieShipedChanging(value);
					this.SendPropertyChanging();
					this._IsNotcieShiped = value;
					this.SendPropertyChanged("IsNotcieShiped");
					this.OnIsNotcieShipedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelegatePay", DbType="Bit")]
		public System.Nullable<bool> IsDelegatePay
		{
			get
			{
				return this._IsDelegatePay;
			}
			set
			{
				if ((this._IsDelegatePay != value))
				{
					this.OnIsDelegatePayChanging(value);
					this.SendPropertyChanging();
					this._IsDelegatePay = value;
					this.SendPropertyChanged("IsDelegatePay");
					this.OnIsDelegatePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillFrom", DbType="NVarChar(150)")]
		public string WaybillFrom
		{
			get
			{
				return this._WaybillFrom;
			}
			set
			{
				if ((this._WaybillFrom != value))
				{
					this.OnWaybillFromChanging(value);
					this.SendPropertyChanging();
					this._WaybillFrom = value;
					this.SendPropertyChanged("WaybillFrom");
					this.OnWaybillFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FixedSuppliers", Storage="_Enterprises", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.FixedSuppliers = null;
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.FixedSuppliers = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsSiteuser")]
	public partial class MapsSiteuser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteuserID;
		
		private string _AdminID;
		
		private int _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteuserIDChanging(string value);
    partial void OnSiteuserIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public MapsSiteuser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteuserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteuserID
		{
			get
			{
				return this._SiteuserID;
			}
			set
			{
				if ((this._SiteuserID != value))
				{
					this.OnSiteuserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteuserID = value;
					this.SendPropertyChanged("SiteuserID");
					this.OnSiteuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsTopN")]
	public partial class MapsTopN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private int _TopOrder;
		
		private string _OwnerID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTopOrderChanging(int value);
    partial void OnTopOrderChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    #endregion
		
		public MapsTopN()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopOrder", DbType="Int NOT NULL")]
		public int TopOrder
		{
			get
			{
				return this._TopOrder;
			}
			set
			{
				if ((this._TopOrder != value))
				{
					this.OnTopOrderChanging(value);
					this.SendPropertyChanging();
					this._TopOrder = value;
					this.SendPropertyChanged("TopOrder");
					this.OnTopOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsTopN", Storage="_Enterprises", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.MapsTopN.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.MapsTopN.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nBrands")]
	public partial class nBrands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _BrandID;
		
		private string _EnterpriseID;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<StandardBrands> _StandardBrands;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public nBrands()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._StandardBrands = default(EntityRef<StandardBrands>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._StandardBrands.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_nBrands", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.nBrands.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.nBrands.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_nBrands", Storage="_StandardBrands", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true)]
		public StandardBrands StandardBrands
		{
			get
			{
				return this._StandardBrands.Entity;
			}
			set
			{
				StandardBrands previousValue = this._StandardBrands.Entity;
				if (((previousValue != value) 
							|| (this._StandardBrands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardBrands.Entity = null;
						previousValue.nBrands.Remove(this);
					}
					this._StandardBrands.Entity = value;
					if ((value != null))
					{
						value.nBrands.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("StandardBrands");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oAddresses")]
	public partial class oAddresses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrgID;
		
		private int _Type;
		
		private string _Code;
		
		private string _Title;
		
		private string _District;
		
		private string _Context;
		
		private string _Contact;
		
		private string _Phone;
		
		private string _PostZip;
		
		private string _DyjCode;
		
		private int _Status;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Summary;
		
		private string _Source;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPostZipChanging(string value);
    partial void OnPostZipChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public oAddresses()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostZip", DbType="VarChar(50)")]
		public string PostZip
		{
			get
			{
				return this._PostZip;
			}
			set
			{
				if ((this._PostZip != value))
				{
					this.OnPostZipChanging(value);
					this.SendPropertyChanging();
					this._PostZip = value;
					this.SendPropertyChanged("PostZip");
					this.OnPostZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oAddresses", Storage="_Organizations", ThisKey="OrgID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.oAddresses.Remove(this);
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.oAddresses.Add(this);
						this._OrgID = value.ID;
					}
					else
					{
						this._OrgID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oContacts")]
	public partial class oContacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrgID;
		
		private System.Nullable<int> _RelationType;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Department;
		
		private string _Positon;
		
		private string _Tel;
		
		private string _Gender;
		
		private string _qq;
		
		private string _Wx;
		
		private string _Skype;
		
		private string _Summary;
		
		private string _Character;
		
		private string _Taboo;
		
		private string _OwnerID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Source;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnRelationTypeChanging(System.Nullable<int> value);
    partial void OnRelationTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnPositonChanging(string value);
    partial void OnPositonChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnWxChanging(string value);
    partial void OnWxChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCharacterChanging(string value);
    partial void OnCharacterChanged();
    partial void OnTabooChanging(string value);
    partial void OnTabooChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public oContacts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationType", DbType="Int")]
		public System.Nullable<int> RelationType
		{
			get
			{
				return this._RelationType;
			}
			set
			{
				if ((this._RelationType != value))
				{
					this.OnRelationTypeChanging(value);
					this.SendPropertyChanging();
					this._RelationType = value;
					this.SendPropertyChanged("RelationType");
					this.OnRelationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positon", DbType="NVarChar(50)")]
		public string Positon
		{
			get
			{
				return this._Positon;
			}
			set
			{
				if ((this._Positon != value))
				{
					this.OnPositonChanging(value);
					this.SendPropertyChanging();
					this._Positon = value;
					this.SendPropertyChanged("Positon");
					this.OnPositonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qq", DbType="VarChar(50)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wx", DbType="VarChar(50)")]
		public string Wx
		{
			get
			{
				return this._Wx;
			}
			set
			{
				if ((this._Wx != value))
				{
					this.OnWxChanging(value);
					this.SendPropertyChanging();
					this._Wx = value;
					this.SendPropertyChanged("Wx");
					this.OnWxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="VarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Character", DbType="NVarChar(150)")]
		public string Character
		{
			get
			{
				return this._Character;
			}
			set
			{
				if ((this._Character != value))
				{
					this.OnCharacterChanging(value);
					this.SendPropertyChanging();
					this._Character = value;
					this.SendPropertyChanged("Character");
					this.OnCharacterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taboo", DbType="NVarChar(150)")]
		public string Taboo
		{
			get
			{
				return this._Taboo;
			}
			set
			{
				if ((this._Taboo != value))
				{
					this.OnTabooChanging(value);
					this.SendPropertyChanging();
					this._Taboo = value;
					this.SendPropertyChanged("Taboo");
					this.OnTabooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organizations")]
	public partial class Organizations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Summary;
		
		private int _Status;
		
		private EntitySet<oAddresses> _oAddresses;
		
		private EntitySet<oDoors> _oDoors;
		
		private EntityRef<Carriers> _Carriers;
		
		private EntitySet<oTransports> _oTransports;
		
		private EntitySet<oDrivers> _oDrivers;
		
		private EntityRef<WareHouses> _WareHouses;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Organizations()
		{
			this._oAddresses = new EntitySet<oAddresses>(new Action<oAddresses>(this.attach_oAddresses), new Action<oAddresses>(this.detach_oAddresses));
			this._oDoors = new EntitySet<oDoors>(new Action<oDoors>(this.attach_oDoors), new Action<oDoors>(this.detach_oDoors));
			this._Carriers = default(EntityRef<Carriers>);
			this._oTransports = new EntitySet<oTransports>(new Action<oTransports>(this.attach_oTransports), new Action<oTransports>(this.detach_oTransports));
			this._oDrivers = new EntitySet<oDrivers>(new Action<oDrivers>(this.attach_oDrivers), new Action<oDrivers>(this.detach_oDrivers));
			this._WareHouses = default(EntityRef<WareHouses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oAddresses", Storage="_oAddresses", ThisKey="ID", OtherKey="OrgID")]
		public EntitySet<oAddresses> oAddresses
		{
			get
			{
				return this._oAddresses;
			}
			set
			{
				this._oAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oDoors", Storage="_oDoors", ThisKey="ID", OtherKey="OrgID")]
		public EntitySet<oDoors> oDoors
		{
			get
			{
				return this._oDoors;
			}
			set
			{
				this._oDoors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_Carriers", Storage="_Carriers", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Carriers Carriers
		{
			get
			{
				return this._Carriers.Entity;
			}
			set
			{
				Carriers previousValue = this._Carriers.Entity;
				if (((previousValue != value) 
							|| (this._Carriers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carriers.Entity = null;
						previousValue.Organizations = null;
					}
					this._Carriers.Entity = value;
					if ((value != null))
					{
						value.Organizations = this;
					}
					this.SendPropertyChanged("Carriers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oTransports", Storage="_oTransports", ThisKey="ID", OtherKey="OrgID")]
		public EntitySet<oTransports> oTransports
		{
			get
			{
				return this._oTransports;
			}
			set
			{
				this._oTransports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oDrivers", Storage="_oDrivers", ThisKey="ID", OtherKey="OrgID")]
		public EntitySet<oDrivers> oDrivers
		{
			get
			{
				return this._oDrivers;
			}
			set
			{
				this._oDrivers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_WareHouses", Storage="_WareHouses", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public WareHouses WareHouses
		{
			get
			{
				return this._WareHouses.Entity;
			}
			set
			{
				WareHouses previousValue = this._WareHouses.Entity;
				if (((previousValue != value) 
							|| (this._WareHouses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WareHouses.Entity = null;
						previousValue.Organizations = null;
					}
					this._WareHouses.Entity = value;
					if ((value != null))
					{
						value.Organizations = this;
					}
					this.SendPropertyChanged("WareHouses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oAddresses(oAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = this;
		}
		
		private void detach_oAddresses(oAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = null;
		}
		
		private void attach_oDoors(oDoors entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = this;
		}
		
		private void detach_oDoors(oDoors entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = null;
		}
		
		private void attach_oTransports(oTransports entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = this;
		}
		
		private void detach_oTransports(oTransports entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = null;
		}
		
		private void attach_oDrivers(oDrivers entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = this;
		}
		
		private void detach_oDrivers(oDrivers entity)
		{
			this.SendPropertyChanging();
			entity.Organizations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PcFiles")]
	public partial class PcFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MainID;
		
		private int _Type;
		
		private string _CustomName;
		
		private string _Url;
		
		private System.DateTime _CreateDate;
		
		private string _AdminID;
		
		private string _SiteuserID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCustomNameChanging(string value);
    partial void OnCustomNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSiteuserIDChanging(string value);
    partial void OnSiteuserIDChanged();
    #endregion
		
		public PcFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string CustomName
		{
			get
			{
				return this._CustomName;
			}
			set
			{
				if ((this._CustomName != value))
				{
					this.OnCustomNameChanging(value);
					this.SendPropertyChanging();
					this._CustomName = value;
					this.SendPropertyChanged("CustomName");
					this.OnCustomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteuserID", DbType="VarChar(50)")]
		public string SiteuserID
		{
			get
			{
				return this._SiteuserID;
			}
			set
			{
				if ((this._SiteuserID != value))
				{
					this.OnSiteuserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteuserID = value;
					this.SendPropertyChanged("SiteuserID");
					this.OnSiteuserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Persons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _RealName;
		
		private int _Gender;
		
		private string _IDCard;
		
		private string _Mobile;
		
		private string _CreatorID;
		
		private EntitySet<vAddresses> _vAddresses;
		
		private EntitySet<vComplaints> _vComplaints;
		
		private EntitySet<vDishonests> _vDishonests;
		
		private EntitySet<vInvoices> _vInvoices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Persons()
		{
			this._vAddresses = new EntitySet<vAddresses>(new Action<vAddresses>(this.attach_vAddresses), new Action<vAddresses>(this.detach_vAddresses));
			this._vComplaints = new EntitySet<vComplaints>(new Action<vComplaints>(this.attach_vComplaints), new Action<vComplaints>(this.detach_vComplaints));
			this._vDishonests = new EntitySet<vDishonests>(new Action<vDishonests>(this.attach_vDishonests), new Action<vDishonests>(this.detach_vDishonests));
			this._vInvoices = new EntitySet<vInvoices>(new Action<vInvoices>(this.attach_vInvoices), new Action<vInvoices>(this.detach_vInvoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
		public int Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="VarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vAddresses", Storage="_vAddresses", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<vAddresses> vAddresses
		{
			get
			{
				return this._vAddresses;
			}
			set
			{
				this._vAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vComplaints", Storage="_vComplaints", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<vComplaints> vComplaints
		{
			get
			{
				return this._vComplaints;
			}
			set
			{
				this._vComplaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vDishonests", Storage="_vDishonests", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<vDishonests> vDishonests
		{
			get
			{
				return this._vDishonests;
			}
			set
			{
				this._vDishonests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vInvoices", Storage="_vInvoices", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<vInvoices> vInvoices
		{
			get
			{
				return this._vInvoices;
			}
			set
			{
				this._vInvoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vAddresses(vAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Persons = this;
		}
		
		private void detach_vAddresses(vAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Persons = null;
		}
		
		private void attach_vComplaints(vComplaints entity)
		{
			this.SendPropertyChanging();
			entity.Persons = this;
		}
		
		private void detach_vComplaints(vComplaints entity)
		{
			this.SendPropertyChanging();
			entity.Persons = null;
		}
		
		private void attach_vDishonests(vDishonests entity)
		{
			this.SendPropertyChanging();
			entity.Persons = this;
		}
		
		private void detach_vDishonests(vDishonests entity)
		{
			this.SendPropertyChanging();
			entity.Persons = null;
		}
		
		private void attach_vInvoices(vInvoices entity)
		{
			this.SendPropertyChanging();
			entity.Persons = this;
		}
		
		private void detach_vInvoices(vInvoices entity)
		{
			this.SendPropertyChanging();
			entity.Persons = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrimaryKeys")]
	public partial class PrimaryKeys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private int _Type;
		
		private int _Length;
		
		private int _Value;
		
		private int _Day;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    #endregion
		
		public PrimaryKeys()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectCompeletes")]
	public partial class ProjectCompeletes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProjectID;
		
		private string _ProjectProductID;
		
		private string _SpnID;
		
		private string _ProductID;
		
		private string _CreatorID;
		
		private decimal _UnitPrice;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private EntityRef<ProjectProducts> _ProjectProducts;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnProjectProductIDChanging(string value);
    partial void OnProjectProductIDChanged();
    partial void OnSpnIDChanging(string value);
    partial void OnSpnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public ProjectCompeletes()
		{
			this._ProjectProducts = default(EntityRef<ProjectProducts>);
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectProductID
		{
			get
			{
				return this._ProjectProductID;
			}
			set
			{
				if ((this._ProjectProductID != value))
				{
					if (this._ProjectProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectProductID = value;
					this.SendPropertyChanged("ProjectProductID");
					this.OnProjectProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpnID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpnID
		{
			get
			{
				return this._SpnID;
			}
			set
			{
				if ((this._SpnID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpnIDChanging(value);
					this.SendPropertyChanging();
					this._SpnID = value;
					this.SendPropertyChanged("SpnID");
					this.OnSpnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50)")]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectProducts_ProjectCompeletes", Storage="_ProjectProducts", ThisKey="ProjectProductID", OtherKey="ID", IsForeignKey=true)]
		public ProjectProducts ProjectProducts
		{
			get
			{
				return this._ProjectProducts.Entity;
			}
			set
			{
				ProjectProducts previousValue = this._ProjectProducts.Entity;
				if (((previousValue != value) 
							|| (this._ProjectProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectProducts.Entity = null;
						previousValue.ProjectCompeletes.Remove(this);
					}
					this._ProjectProducts.Entity = value;
					if ((value != null))
					{
						value.ProjectCompeletes.Add(this);
						this._ProjectProductID = value.ID;
					}
					else
					{
						this._ProjectProductID = default(string);
					}
					this.SendPropertyChanged("ProjectProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_ProjectCompeletes", Storage="_StandardPartNumbers", ThisKey="SpnID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.ProjectCompeletes.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.ProjectCompeletes.Add(this);
						this._SpnID = value.ID;
					}
					else
					{
						this._SpnID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectProducts")]
	public partial class ProjectProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProjectID;
		
		private string _AssignClientID;
		
		private string _SpnID;
		
		private int _UnitProduceQuantity;
		
		private int _ProduceQuantity;
		
		private System.Nullable<int> _ExpectQuantity;
		
		private int _Currency;
		
		private decimal _ExpectUnitPrice;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _ProjectStatus;
		
		private int _Status;
		
		private EntitySet<ProjectCompeletes> _ProjectCompeletes;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnAssignClientIDChanging(string value);
    partial void OnAssignClientIDChanged();
    partial void OnSpnIDChanging(string value);
    partial void OnSpnIDChanged();
    partial void OnUnitProduceQuantityChanging(int value);
    partial void OnUnitProduceQuantityChanged();
    partial void OnProduceQuantityChanging(int value);
    partial void OnProduceQuantityChanged();
    partial void OnExpectQuantityChanging(System.Nullable<int> value);
    partial void OnExpectQuantityChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnExpectUnitPriceChanging(decimal value);
    partial void OnExpectUnitPriceChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnProjectStatusChanging(int value);
    partial void OnProjectStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ProjectProducts()
		{
			this._ProjectCompeletes = new EntitySet<ProjectCompeletes>(new Action<ProjectCompeletes>(this.attach_ProjectCompeletes), new Action<ProjectCompeletes>(this.detach_ProjectCompeletes));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Projects = default(EntityRef<Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignClientID", DbType="VarChar(50)")]
		public string AssignClientID
		{
			get
			{
				return this._AssignClientID;
			}
			set
			{
				if ((this._AssignClientID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignClientIDChanging(value);
					this.SendPropertyChanging();
					this._AssignClientID = value;
					this.SendPropertyChanged("AssignClientID");
					this.OnAssignClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpnID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpnID
		{
			get
			{
				return this._SpnID;
			}
			set
			{
				if ((this._SpnID != value))
				{
					this.OnSpnIDChanging(value);
					this.SendPropertyChanging();
					this._SpnID = value;
					this.SendPropertyChanged("SpnID");
					this.OnSpnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitProduceQuantity", DbType="Int NOT NULL")]
		public int UnitProduceQuantity
		{
			get
			{
				return this._UnitProduceQuantity;
			}
			set
			{
				if ((this._UnitProduceQuantity != value))
				{
					this.OnUnitProduceQuantityChanging(value);
					this.SendPropertyChanging();
					this._UnitProduceQuantity = value;
					this.SendPropertyChanged("UnitProduceQuantity");
					this.OnUnitProduceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceQuantity", DbType="Int NOT NULL")]
		public int ProduceQuantity
		{
			get
			{
				return this._ProduceQuantity;
			}
			set
			{
				if ((this._ProduceQuantity != value))
				{
					this.OnProduceQuantityChanging(value);
					this.SendPropertyChanging();
					this._ProduceQuantity = value;
					this.SendPropertyChanged("ProduceQuantity");
					this.OnProduceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectQuantity", DbType="Int")]
		public System.Nullable<int> ExpectQuantity
		{
			get
			{
				return this._ExpectQuantity;
			}
			set
			{
				if ((this._ExpectQuantity != value))
				{
					this.OnExpectQuantityChanging(value);
					this.SendPropertyChanging();
					this._ExpectQuantity = value;
					this.SendPropertyChanged("ExpectQuantity");
					this.OnExpectQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectUnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal ExpectUnitPrice
		{
			get
			{
				return this._ExpectUnitPrice;
			}
			set
			{
				if ((this._ExpectUnitPrice != value))
				{
					this.OnExpectUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._ExpectUnitPrice = value;
					this.SendPropertyChanged("ExpectUnitPrice");
					this.OnExpectUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatus", DbType="Int NOT NULL")]
		public int ProjectStatus
		{
			get
			{
				return this._ProjectStatus;
			}
			set
			{
				if ((this._ProjectStatus != value))
				{
					this.OnProjectStatusChanging(value);
					this.SendPropertyChanging();
					this._ProjectStatus = value;
					this.SendPropertyChanged("ProjectStatus");
					this.OnProjectStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectProducts_ProjectCompeletes", Storage="_ProjectCompeletes", ThisKey="ID", OtherKey="ProjectProductID")]
		public EntitySet<ProjectCompeletes> ProjectCompeletes
		{
			get
			{
				return this._ProjectCompeletes;
			}
			set
			{
				this._ProjectCompeletes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ProjectProducts", Storage="_Enterprises", ThisKey="AssignClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.ProjectProducts.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.ProjectProducts.Add(this);
						this._AssignClientID = value.ID;
					}
					else
					{
						this._AssignClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectProducts", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.ProjectProducts.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.ProjectProducts.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectCompeletes(ProjectCompeletes entity)
		{
			this.SendPropertyChanging();
			entity.ProjectProducts = this;
		}
		
		private void detach_ProjectCompeletes(ProjectCompeletes entity)
		{
			this.SendPropertyChanging();
			entity.ProjectProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectReports")]
	public partial class ProjectReports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ProjectID;
		
		private string _SpnID;
		
		private string _ReporterID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _ProjectCode;
		
		private string _Summary;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Projects> _Projects;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnSpnIDChanging(string value);
    partial void OnSpnIDChanged();
    partial void OnReporterIDChanging(string value);
    partial void OnReporterIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ProjectReports()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Projects = default(EntityRef<Projects>);
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if ((this._Enterprises.HasLoadedOrAssignedValue || this._Clients.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpnID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpnID
		{
			get
			{
				return this._SpnID;
			}
			set
			{
				if ((this._SpnID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpnIDChanging(value);
					this.SendPropertyChanging();
					this._SpnID = value;
					this.SendPropertyChanged("SpnID");
					this.OnSpnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReporterID", DbType="VarChar(50)")]
		public string ReporterID
		{
			get
			{
				return this._ReporterID;
			}
			set
			{
				if ((this._ReporterID != value))
				{
					this.OnReporterIDChanging(value);
					this.SendPropertyChanging();
					this._ReporterID = value;
					this.SendPropertyChanged("ReporterID");
					this.OnReporterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="VarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_ProjectReports", Storage="_Enterprises", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.ProjectReports.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.ProjectReports.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectReports", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.ProjectReports.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.ProjectReports.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_ProjectReports", Storage="_StandardPartNumbers", ThisKey="SpnID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.ProjectReports.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.ProjectReports.Add(this);
						this._SpnID = value.ID;
					}
					else
					{
						this._SpnID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ProjectReports", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ProjectReports.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ProjectReports.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Projects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _EndClientID;
		
		private string _AssignClientID;
		
		private string _CompanyID;
		
		private System.DateTime _EstablishDate;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private System.Nullable<System.DateTime> _RDDate;
		
		private string _ClientContactID;
		
		private string _Summary;
		
		private string _OwnerID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntitySet<ProjectProducts> _ProjectProducts;
		
		private EntitySet<ProjectReports> _ProjectReports;
		
		private EntitySet<Samples> _Samples;
		
		private EntitySet<TraceRecords> _TraceRecords;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Enterprises> _Enterprises1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEndClientIDChanging(string value);
    partial void OnEndClientIDChanged();
    partial void OnAssignClientIDChanging(string value);
    partial void OnAssignClientIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnEstablishDateChanging(System.DateTime value);
    partial void OnEstablishDateChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnRDDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRDDateChanged();
    partial void OnClientContactIDChanging(string value);
    partial void OnClientContactIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Projects()
		{
			this._ProjectProducts = new EntitySet<ProjectProducts>(new Action<ProjectProducts>(this.attach_ProjectProducts), new Action<ProjectProducts>(this.detach_ProjectProducts));
			this._ProjectReports = new EntitySet<ProjectReports>(new Action<ProjectReports>(this.attach_ProjectReports), new Action<ProjectReports>(this.detach_ProjectReports));
			this._Samples = new EntitySet<Samples>(new Action<Samples>(this.attach_Samples), new Action<Samples>(this.detach_Samples));
			this._TraceRecords = new EntitySet<TraceRecords>(new Action<TraceRecords>(this.attach_TraceRecords), new Action<TraceRecords>(this.detach_TraceRecords));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Enterprises1 = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EndClientID
		{
			get
			{
				return this._EndClientID;
			}
			set
			{
				if ((this._EndClientID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndClientIDChanging(value);
					this.SendPropertyChanging();
					this._EndClientID = value;
					this.SendPropertyChanged("EndClientID");
					this.OnEndClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignClientID", DbType="VarChar(50)")]
		public string AssignClientID
		{
			get
			{
				return this._AssignClientID;
			}
			set
			{
				if ((this._AssignClientID != value))
				{
					if (this._Enterprises1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignClientIDChanging(value);
					this.SendPropertyChanging();
					this._AssignClientID = value;
					this.SendPropertyChanged("AssignClientID");
					this.OnAssignClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishDate", DbType="DateTime NOT NULL")]
		public System.DateTime EstablishDate
		{
			get
			{
				return this._EstablishDate;
			}
			set
			{
				if ((this._EstablishDate != value))
				{
					this.OnEstablishDateChanging(value);
					this.SendPropertyChanging();
					this._EstablishDate = value;
					this.SendPropertyChanged("EstablishDate");
					this.OnEstablishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="Date")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDDate", DbType="Date")]
		public System.Nullable<System.DateTime> RDDate
		{
			get
			{
				return this._RDDate;
			}
			set
			{
				if ((this._RDDate != value))
				{
					this.OnRDDateChanging(value);
					this.SendPropertyChanging();
					this._RDDate = value;
					this.SendPropertyChanged("RDDate");
					this.OnRDDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientContactID
		{
			get
			{
				return this._ClientContactID;
			}
			set
			{
				if ((this._ClientContactID != value))
				{
					this.OnClientContactIDChanging(value);
					this.SendPropertyChanging();
					this._ClientContactID = value;
					this.SendPropertyChanged("ClientContactID");
					this.OnClientContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectProducts", Storage="_ProjectProducts", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<ProjectProducts> ProjectProducts
		{
			get
			{
				return this._ProjectProducts;
			}
			set
			{
				this._ProjectProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectReports", Storage="_ProjectReports", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<ProjectReports> ProjectReports
		{
			get
			{
				return this._ProjectReports;
			}
			set
			{
				this._ProjectReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Samples", Storage="_Samples", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<Samples> Samples
		{
			get
			{
				return this._Samples;
			}
			set
			{
				this._Samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_TraceRecords", Storage="_TraceRecords", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<TraceRecords> TraceRecords
		{
			get
			{
				return this._TraceRecords;
			}
			set
			{
				this._TraceRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects", Storage="_Enterprises", ThisKey="EndClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._EndClientID = value.ID;
					}
					else
					{
						this._EndClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects1", Storage="_Enterprises1", ThisKey="AssignClientID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises1
		{
			get
			{
				return this._Enterprises1.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises1.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises1.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._Enterprises1.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._AssignClientID = value.ID;
					}
					else
					{
						this._AssignClientID = default(string);
					}
					this.SendPropertyChanged("Enterprises1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectProducts(ProjectProducts entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_ProjectProducts(ProjectProducts entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotes")]
	public partial class Quotes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SpnID;
		
		private int _Type;
		
		private string _ClientID;
		
		private int _Currency;
		
		private decimal _UnitCostPrice;
		
		private decimal _ResalePrice;
		
		private System.Nullable<decimal> _ApprovedPrice;
		
		private System.Nullable<decimal> _ProfitRate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _Status;
		
		private string _CreatorID;
		
		private System.Nullable<int> _Moq;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSpnIDChanging(string value);
    partial void OnSpnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnUnitCostPriceChanging(decimal value);
    partial void OnUnitCostPriceChanged();
    partial void OnResalePriceChanging(decimal value);
    partial void OnResalePriceChanged();
    partial void OnApprovedPriceChanging(System.Nullable<decimal> value);
    partial void OnApprovedPriceChanged();
    partial void OnProfitRateChanging(System.Nullable<decimal> value);
    partial void OnProfitRateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnMoqChanging(System.Nullable<int> value);
    partial void OnMoqChanged();
    #endregion
		
		public Quotes()
		{
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpnID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpnID
		{
			get
			{
				return this._SpnID;
			}
			set
			{
				if ((this._SpnID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpnIDChanging(value);
					this.SendPropertyChanging();
					this._SpnID = value;
					this.SendPropertyChanged("SpnID");
					this.OnSpnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCostPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitCostPrice
		{
			get
			{
				return this._UnitCostPrice;
			}
			set
			{
				if ((this._UnitCostPrice != value))
				{
					this.OnUnitCostPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitCostPrice = value;
					this.SendPropertyChanged("UnitCostPrice");
					this.OnUnitCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResalePrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal ResalePrice
		{
			get
			{
				return this._ResalePrice;
			}
			set
			{
				if ((this._ResalePrice != value))
				{
					this.OnResalePriceChanging(value);
					this.SendPropertyChanging();
					this._ResalePrice = value;
					this.SendPropertyChanged("ResalePrice");
					this.OnResalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedPrice", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> ApprovedPrice
		{
			get
			{
				return this._ApprovedPrice;
			}
			set
			{
				if ((this._ApprovedPrice != value))
				{
					this.OnApprovedPriceChanging(value);
					this.SendPropertyChanging();
					this._ApprovedPrice = value;
					this.SendPropertyChanged("ApprovedPrice");
					this.OnApprovedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitRate", AutoSync=AutoSync.Always, DbType="Decimal(38,19)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moq", DbType="Int")]
		public System.Nullable<int> Moq
		{
			get
			{
				return this._Moq;
			}
			set
			{
				if ((this._Moq != value))
				{
					this.OnMoqChanging(value);
					this.SendPropertyChanging();
					this._Moq = value;
					this.SendPropertyChanged("Moq");
					this.OnMoqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_Quotes", Storage="_StandardPartNumbers", ThisKey="SpnID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._SpnID = value.ID;
					}
					else
					{
						this._SpnID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requirements")]
	public partial class Requirements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private int _SpecialType;
		
		private string _Content;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _CreatorID;
		
		private EntitySet<SitesRequirement> _SitesRequirement;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnSpecialTypeChanging(int value);
    partial void OnSpecialTypeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Requirements()
		{
			this._SitesRequirement = new EntitySet<SitesRequirement>(new Action<SitesRequirement>(this.attach_SitesRequirement), new Action<SitesRequirement>(this.detach_SitesRequirement));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialType", DbType="Int NOT NULL")]
		public int SpecialType
		{
			get
			{
				return this._SpecialType;
			}
			set
			{
				if ((this._SpecialType != value))
				{
					this.OnSpecialTypeChanging(value);
					this.SendPropertyChanging();
					this._SpecialType = value;
					this.SendPropertyChanged("SpecialType");
					this.OnSpecialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requirements_SitesRequirement", Storage="_SitesRequirement", ThisKey="ID", OtherKey="RequirementID")]
		public EntitySet<SitesRequirement> SitesRequirement
		{
			get
			{
				return this._SitesRequirement;
			}
			set
			{
				this._SitesRequirement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Requirements", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Requirements.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Requirements.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitesRequirement(SitesRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Requirements = this;
		}
		
		private void detach_SitesRequirement(SitesRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Requirements = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleItems")]
	public partial class SampleItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SampleID;
		
		private string _SpnID;
		
		private int _Type;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntityRef<Samples> _Samples;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSampleIDChanging(string value);
    partial void OnSampleIDChanged();
    partial void OnSpnIDChanging(string value);
    partial void OnSpnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SampleItems()
		{
			this._Samples = default(EntityRef<Samples>);
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SampleID
		{
			get
			{
				return this._SampleID;
			}
			set
			{
				if ((this._SampleID != value))
				{
					if (this._Samples.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleIDChanging(value);
					this.SendPropertyChanging();
					this._SampleID = value;
					this.SendPropertyChanged("SampleID");
					this.OnSampleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpnID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpnID
		{
			get
			{
				return this._SpnID;
			}
			set
			{
				if ((this._SpnID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpnIDChanging(value);
					this.SendPropertyChanging();
					this._SpnID = value;
					this.SendPropertyChanged("SpnID");
					this.OnSpnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Samples_SampleItems", Storage="_Samples", ThisKey="SampleID", OtherKey="ID", IsForeignKey=true)]
		public Samples Samples
		{
			get
			{
				return this._Samples.Entity;
			}
			set
			{
				Samples previousValue = this._Samples.Entity;
				if (((previousValue != value) 
							|| (this._Samples.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Samples.Entity = null;
						previousValue.SampleItems.Remove(this);
					}
					this._Samples.Entity = value;
					if ((value != null))
					{
						value.SampleItems.Add(this);
						this._SampleID = value.ID;
					}
					else
					{
						this._SampleID = default(string);
					}
					this.SendPropertyChanged("Samples");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_SampleItems", Storage="_StandardPartNumbers", ThisKey="SpnID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.SampleItems.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.SampleItems.Add(this);
						this._SpnID = value.ID;
					}
					else
					{
						this._SpnID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Samples")]
	public partial class Samples : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProjectID;
		
		private string _AddressID;
		
		private string _ContactID;
		
		private string _WaybillCode;
		
		private System.Nullable<decimal> _Freight;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _ApplierID;
		
		private string _ApproverID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<SampleItems> _SampleItems;
		
		private EntityRef<Projects> _Projects;
		
		private EntityRef<Contacts> _Contacts;
		
		private EntityRef<Addresses> _Addresses;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnAddressIDChanging(string value);
    partial void OnAddressIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnFreightChanging(System.Nullable<decimal> value);
    partial void OnFreightChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Samples()
		{
			this._SampleItems = new EntitySet<SampleItems>(new Action<SampleItems>(this.attach_SampleItems), new Action<SampleItems>(this.detach_SampleItems));
			this._Projects = default(EntityRef<Projects>);
			this._Contacts = default(EntityRef<Contacts>);
			this._Addresses = default(EntityRef<Addresses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Addresses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50)")]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Samples_SampleItems", Storage="_SampleItems", ThisKey="ID", OtherKey="SampleID")]
		public EntitySet<SampleItems> SampleItems
		{
			get
			{
				return this._SampleItems;
			}
			set
			{
				this._SampleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Samples", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.Samples.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.Samples.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Samples", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Samples.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Samples.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addresses_Samples", Storage="_Addresses", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Addresses Addresses
		{
			get
			{
				return this._Addresses.Entity;
			}
			set
			{
				Addresses previousValue = this._Addresses.Entity;
				if (((previousValue != value) 
							|| (this._Addresses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addresses.Entity = null;
						previousValue.Samples.Remove(this);
					}
					this._Addresses.Entity = value;
					if ((value != null))
					{
						value.Samples.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(string);
					}
					this.SendPropertyChanged("Addresses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SampleItems(SampleItems entity)
		{
			this.SendPropertyChanging();
			entity.Samples = this;
		}
		
		private void detach_SampleItems(SampleItems entity)
		{
			this.SendPropertyChanging();
			entity.Samples = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteAccounts")]
	public partial class SiteAccounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _CompanyID;
		
		private int _Currency;
		
		private string _BookAccountID;
		
		private int _Status;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnBookAccountIDChanging(string value);
    partial void OnBookAccountIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SiteAccounts()
		{
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BookAccountID
		{
			get
			{
				return this._BookAccountID;
			}
			set
			{
				if ((this._BookAccountID != value))
				{
					this.OnBookAccountIDChanging(value);
					this.SendPropertyChanging();
					this._BookAccountID = value;
					this.SendPropertyChanged("BookAccountID");
					this.OnBookAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_SiteAccounts", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.SiteAccounts.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.SiteAccounts.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteUsers")]
	public partial class SiteUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SsoID;
		
		private string _OriginID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Mobile;
		
		private int _Status;
		
		private string _Email;
		
		private string _Wx;
		
		private string _QQ;
		
		private string _CreatorID;
		
		private string _Source;
		
		private EntitySet<SiteAccounts> _SiteAccounts;
		
		private EntitySet<vAddresses> _vAddresses;
		
		private EntitySet<vComplaints> _vComplaints;
		
		private EntitySet<vDishonests> _vDishonests;
		
		private EntitySet<vEnterprises> _vEnterprises;
		
		private EntitySet<vInvoices> _vInvoices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSsoIDChanging(string value);
    partial void OnSsoIDChanged();
    partial void OnOriginIDChanging(string value);
    partial void OnOriginIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWxChanging(string value);
    partial void OnWxChanged();
    partial void OnQQChanging(string value);
    partial void OnQQChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public SiteUsers()
		{
			this._SiteAccounts = new EntitySet<SiteAccounts>(new Action<SiteAccounts>(this.attach_SiteAccounts), new Action<SiteAccounts>(this.detach_SiteAccounts));
			this._vAddresses = new EntitySet<vAddresses>(new Action<vAddresses>(this.attach_vAddresses), new Action<vAddresses>(this.detach_vAddresses));
			this._vComplaints = new EntitySet<vComplaints>(new Action<vComplaints>(this.attach_vComplaints), new Action<vComplaints>(this.detach_vComplaints));
			this._vDishonests = new EntitySet<vDishonests>(new Action<vDishonests>(this.attach_vDishonests), new Action<vDishonests>(this.detach_vDishonests));
			this._vEnterprises = new EntitySet<vEnterprises>(new Action<vEnterprises>(this.attach_vEnterprises), new Action<vEnterprises>(this.detach_vEnterprises));
			this._vInvoices = new EntitySet<vInvoices>(new Action<vInvoices>(this.attach_vInvoices), new Action<vInvoices>(this.detach_vInvoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsoID", DbType="VarChar(50)")]
		public string SsoID
		{
			get
			{
				return this._SsoID;
			}
			set
			{
				if ((this._SsoID != value))
				{
					this.OnSsoIDChanging(value);
					this.SendPropertyChanging();
					this._SsoID = value;
					this.SendPropertyChanged("SsoID");
					this.OnSsoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="NChar(10)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this.OnOriginIDChanging(value);
					this.SendPropertyChanging();
					this._OriginID = value;
					this.SendPropertyChanged("OriginID");
					this.OnOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wx", DbType="VarChar(50)")]
		public string Wx
		{
			get
			{
				return this._Wx;
			}
			set
			{
				if ((this._Wx != value))
				{
					this.OnWxChanging(value);
					this.SendPropertyChanging();
					this._Wx = value;
					this.SendPropertyChanged("Wx");
					this.OnWxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQ", DbType="VarChar(50)")]
		public string QQ
		{
			get
			{
				return this._QQ;
			}
			set
			{
				if ((this._QQ != value))
				{
					this.OnQQChanging(value);
					this.SendPropertyChanging();
					this._QQ = value;
					this.SendPropertyChanged("QQ");
					this.OnQQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_SiteAccounts", Storage="_SiteAccounts", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<SiteAccounts> SiteAccounts
		{
			get
			{
				return this._SiteAccounts;
			}
			set
			{
				this._SiteAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vAddresses", Storage="_vAddresses", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<vAddresses> vAddresses
		{
			get
			{
				return this._vAddresses;
			}
			set
			{
				this._vAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vComplaints", Storage="_vComplaints", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<vComplaints> vComplaints
		{
			get
			{
				return this._vComplaints;
			}
			set
			{
				this._vComplaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vDishonests", Storage="_vDishonests", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<vDishonests> vDishonests
		{
			get
			{
				return this._vDishonests;
			}
			set
			{
				this._vDishonests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vEnterprises", Storage="_vEnterprises", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<vEnterprises> vEnterprises
		{
			get
			{
				return this._vEnterprises;
			}
			set
			{
				this._vEnterprises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vInvoices", Storage="_vInvoices", ThisKey="ID", OtherKey="SiteUserID")]
		public EntitySet<vInvoices> vInvoices
		{
			get
			{
				return this._vInvoices;
			}
			set
			{
				this._vInvoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SiteAccounts(SiteAccounts entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_SiteAccounts(SiteAccounts entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
		
		private void attach_vAddresses(vAddresses entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_vAddresses(vAddresses entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
		
		private void attach_vComplaints(vComplaints entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_vComplaints(vComplaints entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
		
		private void attach_vDishonests(vDishonests entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_vDishonests(vDishonests entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
		
		private void attach_vEnterprises(vEnterprises entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_vEnterprises(vEnterprises entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
		
		private void attach_vInvoices(vInvoices entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = this;
		}
		
		private void detach_vInvoices(vInvoices entity)
		{
			this.SendPropertyChanging();
			entity.SiteUsers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specials")]
	public partial class Specials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _EnterpriseID;
		
		private string _PartNumber;
		
		private string _Brand;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public Specials()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(150)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(150)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Specials", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Specials.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Specials.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardBrands")]
	public partial class StandardBrands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Code;
		
		private string _ChineseName;
		
		private bool _IsAgent;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _CreatorID;
		
		private int _Status;
		
		private EntitySet<nBrands> _nBrands;
		
		private EntitySet<StandardPartNumbers> _StandardPartNumbers;
		
		private EntitySet<vBrands> _vBrands;
		
		private EntitySet<SitesBrand> _SitesBrand;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnChineseNameChanging(string value);
    partial void OnChineseNameChanged();
    partial void OnIsAgentChanging(bool value);
    partial void OnIsAgentChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public StandardBrands()
		{
			this._nBrands = new EntitySet<nBrands>(new Action<nBrands>(this.attach_nBrands), new Action<nBrands>(this.detach_nBrands));
			this._StandardPartNumbers = new EntitySet<StandardPartNumbers>(new Action<StandardPartNumbers>(this.attach_StandardPartNumbers), new Action<StandardPartNumbers>(this.detach_StandardPartNumbers));
			this._vBrands = new EntitySet<vBrands>(new Action<vBrands>(this.attach_vBrands), new Action<vBrands>(this.detach_vBrands));
			this._SitesBrand = new EntitySet<SitesBrand>(new Action<SitesBrand>(this.attach_SitesBrand), new Action<SitesBrand>(this.detach_SitesBrand));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="NVarChar(150)")]
		public string ChineseName
		{
			get
			{
				return this._ChineseName;
			}
			set
			{
				if ((this._ChineseName != value))
				{
					this.OnChineseNameChanging(value);
					this.SendPropertyChanging();
					this._ChineseName = value;
					this.SendPropertyChanged("ChineseName");
					this.OnChineseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgent", DbType="Bit NOT NULL")]
		public bool IsAgent
		{
			get
			{
				return this._IsAgent;
			}
			set
			{
				if ((this._IsAgent != value))
				{
					this.OnIsAgentChanging(value);
					this.SendPropertyChanging();
					this._IsAgent = value;
					this.SendPropertyChanged("IsAgent");
					this.OnIsAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_nBrands", Storage="_nBrands", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<nBrands> nBrands
		{
			get
			{
				return this._nBrands;
			}
			set
			{
				this._nBrands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_StandardPartNumbers", Storage="_StandardPartNumbers", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<StandardPartNumbers> StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers;
			}
			set
			{
				this._StandardPartNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_vBrands", Storage="_vBrands", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<vBrands> vBrands
		{
			get
			{
				return this._vBrands;
			}
			set
			{
				this._vBrands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_SitesBrand", Storage="_SitesBrand", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<SitesBrand> SitesBrand
		{
			get
			{
				return this._SitesBrand;
			}
			set
			{
				this._SitesBrand.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nBrands(nBrands entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = this;
		}
		
		private void detach_nBrands(nBrands entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = null;
		}
		
		private void attach_StandardPartNumbers(StandardPartNumbers entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = this;
		}
		
		private void detach_StandardPartNumbers(StandardPartNumbers entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = null;
		}
		
		private void attach_vBrands(vBrands entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = this;
		}
		
		private void detach_vBrands(vBrands entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = null;
		}
		
		private void attach_SitesBrand(SitesBrand entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = this;
		}
		
		private void detach_SitesBrand(SitesBrand entity)
		{
			this.SendPropertyChanging();
			entity.StandardBrands = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardPartNumbers")]
	public partial class StandardPartNumbers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Catalog;
		
		private string _PartNumber;
		
		private string _BrandID;
		
		private string _Brand;
		
		private string _PackageCase;
		
		private int _Moq;
		
		private int _Mpq;
		
		private string _TaxCode;
		
		private string _Eccn;
		
		private System.Nullable<decimal> _TariffRate;
		
		private System.Nullable<bool> _Ccc;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _Summary;
		
		private string _ProductName;
		
		private string _Packaging;
		
		private string _CreatorID;
		
		private EntitySet<Advantages> _Advantages;
		
		private EntitySet<ProjectCompeletes> _ProjectCompeletes;
		
		private EntitySet<ProjectReports> _ProjectReports;
		
		private EntitySet<Quotes> _Quotes;
		
		private EntitySet<SampleItems> _SampleItems;
		
		private EntitySet<SitesPartNumber> _SitesPartNumber;
		
		private EntityRef<StandardBrands> _StandardBrands;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCatalogChanging(string value);
    partial void OnCatalogChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnMoqChanging(int value);
    partial void OnMoqChanged();
    partial void OnMpqChanging(int value);
    partial void OnMpqChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnEccnChanging(string value);
    partial void OnEccnChanged();
    partial void OnTariffRateChanging(System.Nullable<decimal> value);
    partial void OnTariffRateChanged();
    partial void OnCccChanging(System.Nullable<bool> value);
    partial void OnCccChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public StandardPartNumbers()
		{
			this._Advantages = new EntitySet<Advantages>(new Action<Advantages>(this.attach_Advantages), new Action<Advantages>(this.detach_Advantages));
			this._ProjectCompeletes = new EntitySet<ProjectCompeletes>(new Action<ProjectCompeletes>(this.attach_ProjectCompeletes), new Action<ProjectCompeletes>(this.detach_ProjectCompeletes));
			this._ProjectReports = new EntitySet<ProjectReports>(new Action<ProjectReports>(this.attach_ProjectReports), new Action<ProjectReports>(this.detach_ProjectReports));
			this._Quotes = new EntitySet<Quotes>(new Action<Quotes>(this.attach_Quotes), new Action<Quotes>(this.detach_Quotes));
			this._SampleItems = new EntitySet<SampleItems>(new Action<SampleItems>(this.attach_SampleItems), new Action<SampleItems>(this.detach_SampleItems));
			this._SitesPartNumber = new EntitySet<SitesPartNumber>(new Action<SitesPartNumber>(this.attach_SitesPartNumber), new Action<SitesPartNumber>(this.detach_SitesPartNumber));
			this._StandardBrands = default(EntityRef<StandardBrands>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="NVarChar(100)")]
		public string Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._StandardBrands.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(150)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moq", DbType="Int NOT NULL")]
		public int Moq
		{
			get
			{
				return this._Moq;
			}
			set
			{
				if ((this._Moq != value))
				{
					this.OnMoqChanging(value);
					this.SendPropertyChanging();
					this._Moq = value;
					this.SendPropertyChanged("Moq");
					this.OnMoqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mpq", DbType="Int NOT NULL")]
		public int Mpq
		{
			get
			{
				return this._Mpq;
			}
			set
			{
				if ((this._Mpq != value))
				{
					this.OnMpqChanging(value);
					this.SendPropertyChanging();
					this._Mpq = value;
					this.SendPropertyChanged("Mpq");
					this.OnMpqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eccn", DbType="VarChar(50)")]
		public string Eccn
		{
			get
			{
				return this._Eccn;
			}
			set
			{
				if ((this._Eccn != value))
				{
					this.OnEccnChanging(value);
					this.SendPropertyChanging();
					this._Eccn = value;
					this.SendPropertyChanged("Eccn");
					this.OnEccnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> TariffRate
		{
			get
			{
				return this._TariffRate;
			}
			set
			{
				if ((this._TariffRate != value))
				{
					this.OnTariffRateChanging(value);
					this.SendPropertyChanging();
					this._TariffRate = value;
					this.SendPropertyChanged("TariffRate");
					this.OnTariffRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ccc", DbType="Bit")]
		public System.Nullable<bool> Ccc
		{
			get
			{
				return this._Ccc;
			}
			set
			{
				if ((this._Ccc != value))
				{
					this.OnCccChanging(value);
					this.SendPropertyChanging();
					this._Ccc = value;
					this.SendPropertyChanged("Ccc");
					this.OnCccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50)")]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_Advantages", Storage="_Advantages", ThisKey="ID", OtherKey="SpntID")]
		public EntitySet<Advantages> Advantages
		{
			get
			{
				return this._Advantages;
			}
			set
			{
				this._Advantages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_ProjectCompeletes", Storage="_ProjectCompeletes", ThisKey="ID", OtherKey="SpnID")]
		public EntitySet<ProjectCompeletes> ProjectCompeletes
		{
			get
			{
				return this._ProjectCompeletes;
			}
			set
			{
				this._ProjectCompeletes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_ProjectReports", Storage="_ProjectReports", ThisKey="ID", OtherKey="SpnID")]
		public EntitySet<ProjectReports> ProjectReports
		{
			get
			{
				return this._ProjectReports;
			}
			set
			{
				this._ProjectReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_Quotes", Storage="_Quotes", ThisKey="ID", OtherKey="SpnID")]
		public EntitySet<Quotes> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_SampleItems", Storage="_SampleItems", ThisKey="ID", OtherKey="SpnID")]
		public EntitySet<SampleItems> SampleItems
		{
			get
			{
				return this._SampleItems;
			}
			set
			{
				this._SampleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_SitesPartNumber", Storage="_SitesPartNumber", ThisKey="ID", OtherKey="PartNumberID")]
		public EntitySet<SitesPartNumber> SitesPartNumber
		{
			get
			{
				return this._SitesPartNumber;
			}
			set
			{
				this._SitesPartNumber.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_StandardPartNumbers", Storage="_StandardBrands", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true)]
		public StandardBrands StandardBrands
		{
			get
			{
				return this._StandardBrands.Entity;
			}
			set
			{
				StandardBrands previousValue = this._StandardBrands.Entity;
				if (((previousValue != value) 
							|| (this._StandardBrands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardBrands.Entity = null;
						previousValue.StandardPartNumbers.Remove(this);
					}
					this._StandardBrands.Entity = value;
					if ((value != null))
					{
						value.StandardPartNumbers.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("StandardBrands");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Advantages(Advantages entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_Advantages(Advantages entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
		
		private void attach_ProjectCompeletes(ProjectCompeletes entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_ProjectCompeletes(ProjectCompeletes entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
		
		private void attach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
		
		private void attach_Quotes(Quotes entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_Quotes(Quotes entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
		
		private void attach_SampleItems(SampleItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_SampleItems(SampleItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
		
		private void attach_SitesPartNumber(SitesPartNumber entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = this;
		}
		
		private void detach_SitesPartNumber(SitesPartNumber entity)
		{
			this.SendPropertyChanging();
			entity.StandardPartNumbers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysNotice")]
	public partial class SysNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ReciverID;
		
		private string _SenderID;
		
		private string _MainID;
		
		private string _Title;
		
		private string _Context;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnReciverIDChanging(string value);
    partial void OnReciverIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SysNotice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReciverID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReciverID
		{
			get
			{
				return this._ReciverID;
			}
			set
			{
				if ((this._ReciverID != value))
				{
					this.OnReciverIDChanging(value);
					this.SendPropertyChanging();
					this._ReciverID = value;
					this.SendPropertyChanged("ReciverID");
					this.OnReciverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TraceComments")]
	public partial class TraceComments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TraceRecordID;
		
		private bool _IsPointed;
		
		private string _Comments;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTraceRecordIDChanging(string value);
    partial void OnTraceRecordIDChanged();
    partial void OnIsPointedChanging(bool value);
    partial void OnIsPointedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public TraceComments()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraceRecordID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TraceRecordID
		{
			get
			{
				return this._TraceRecordID;
			}
			set
			{
				if ((this._TraceRecordID != value))
				{
					this.OnTraceRecordIDChanging(value);
					this.SendPropertyChanging();
					this._TraceRecordID = value;
					this.SendPropertyChanged("TraceRecordID");
					this.OnTraceRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPointed", DbType="Bit NOT NULL")]
		public bool IsPointed
		{
			get
			{
				return this._IsPointed;
			}
			set
			{
				if ((this._IsPointed != value))
				{
					this.OnIsPointedChanging(value);
					this.SendPropertyChanging();
					this._IsPointed = value;
					this.SendPropertyChanged("IsPointed");
					this.OnIsPointedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(300)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TraceRecords")]
	public partial class TraceRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ProjectID;
		
		private int _Type;
		
		private System.DateTime _TraceDate;
		
		private string _SupplierStaffs;
		
		private string _CompanyStaffs;
		
		private string _Context;
		
		private System.Nullable<System.DateTime> _NextDate;
		
		private string _NextPlan;
		
		private string _ClientContactID;
		
		private string _OwnerID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private EntityRef<Projects> _Projects;
		
		private EntityRef<Contacts> _Contacts;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTraceDateChanging(System.DateTime value);
    partial void OnTraceDateChanged();
    partial void OnSupplierStaffsChanging(string value);
    partial void OnSupplierStaffsChanged();
    partial void OnCompanyStaffsChanging(string value);
    partial void OnCompanyStaffsChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnNextDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextDateChanged();
    partial void OnNextPlanChanging(string value);
    partial void OnNextPlanChanged();
    partial void OnClientContactIDChanging(string value);
    partial void OnClientContactIDChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public TraceRecords()
		{
			this._Projects = default(EntityRef<Projects>);
			this._Contacts = default(EntityRef<Contacts>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraceDate", DbType="DateTime NOT NULL")]
		public System.DateTime TraceDate
		{
			get
			{
				return this._TraceDate;
			}
			set
			{
				if ((this._TraceDate != value))
				{
					this.OnTraceDateChanging(value);
					this.SendPropertyChanging();
					this._TraceDate = value;
					this.SendPropertyChanged("TraceDate");
					this.OnTraceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierStaffs", DbType="NVarChar(300)")]
		public string SupplierStaffs
		{
			get
			{
				return this._SupplierStaffs;
			}
			set
			{
				if ((this._SupplierStaffs != value))
				{
					this.OnSupplierStaffsChanging(value);
					this.SendPropertyChanging();
					this._SupplierStaffs = value;
					this.SendPropertyChanged("SupplierStaffs");
					this.OnSupplierStaffsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyStaffs", DbType="NVarChar(300)")]
		public string CompanyStaffs
		{
			get
			{
				return this._CompanyStaffs;
			}
			set
			{
				if ((this._CompanyStaffs != value))
				{
					this.OnCompanyStaffsChanging(value);
					this.SendPropertyChanging();
					this._CompanyStaffs = value;
					this.SendPropertyChanged("CompanyStaffs");
					this.OnCompanyStaffsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX)")]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDate
		{
			get
			{
				return this._NextDate;
			}
			set
			{
				if ((this._NextDate != value))
				{
					this.OnNextDateChanging(value);
					this.SendPropertyChanging();
					this._NextDate = value;
					this.SendPropertyChanged("NextDate");
					this.OnNextDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPlan", DbType="NVarChar(300)")]
		public string NextPlan
		{
			get
			{
				return this._NextPlan;
			}
			set
			{
				if ((this._NextPlan != value))
				{
					this.OnNextPlanChanging(value);
					this.SendPropertyChanging();
					this._NextPlan = value;
					this.SendPropertyChanged("NextPlan");
					this.OnNextPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientContactID
		{
			get
			{
				return this._ClientContactID;
			}
			set
			{
				if ((this._ClientContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientContactIDChanging(value);
					this.SendPropertyChanging();
					this._ClientContactID = value;
					this.SendPropertyChanged("ClientContactID");
					this.OnClientContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_TraceRecords", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.TraceRecords.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.TraceRecords.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_TraceRecords", Storage="_Contacts", ThisKey="ClientContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.TraceRecords.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.TraceRecords.Add(this);
						this._ClientContactID = value.ID;
					}
					else
					{
						this._ClientContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_TraceRecords", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.TraceRecords.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.TraceRecords.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TradeSettlements")]
	public partial class TradeSettlements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _CompanyID;
		
		private int _Type;
		
		private int _Method;
		
		private System.Nullable<int> _Months;
		
		private int _SettleStartDays;
		
		private int _SettleEndDays;
		
		private int _AccountStartDay;
		
		private int _AccountEndDay;
		
		private int _Status;
		
		private System.Nullable<int> _Currency;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMethodChanging(int value);
    partial void OnMethodChanged();
    partial void OnMonthsChanging(System.Nullable<int> value);
    partial void OnMonthsChanged();
    partial void OnSettleStartDaysChanging(int value);
    partial void OnSettleStartDaysChanged();
    partial void OnSettleEndDaysChanging(int value);
    partial void OnSettleEndDaysChanged();
    partial void OnAccountStartDayChanging(int value);
    partial void OnAccountStartDayChanged();
    partial void OnAccountEndDayChanging(int value);
    partial void OnAccountEndDayChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCurrencyChanging(System.Nullable<int> value);
    partial void OnCurrencyChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public TradeSettlements()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="Int NOT NULL")]
		public int Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="Int")]
		public System.Nullable<int> Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettleStartDays", DbType="Int NOT NULL")]
		public int SettleStartDays
		{
			get
			{
				return this._SettleStartDays;
			}
			set
			{
				if ((this._SettleStartDays != value))
				{
					this.OnSettleStartDaysChanging(value);
					this.SendPropertyChanging();
					this._SettleStartDays = value;
					this.SendPropertyChanged("SettleStartDays");
					this.OnSettleStartDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettleEndDays", DbType="Int NOT NULL")]
		public int SettleEndDays
		{
			get
			{
				return this._SettleEndDays;
			}
			set
			{
				if ((this._SettleEndDays != value))
				{
					this.OnSettleEndDaysChanging(value);
					this.SendPropertyChanging();
					this._SettleEndDays = value;
					this.SendPropertyChanged("SettleEndDays");
					this.OnSettleEndDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountStartDay", DbType="Int NOT NULL")]
		public int AccountStartDay
		{
			get
			{
				return this._AccountStartDay;
			}
			set
			{
				if ((this._AccountStartDay != value))
				{
					this.OnAccountStartDayChanging(value);
					this.SendPropertyChanging();
					this._AccountStartDay = value;
					this.SendPropertyChanged("AccountStartDay");
					this.OnAccountStartDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountEndDay", DbType="Int NOT NULL")]
		public int AccountEndDay
		{
			get
			{
				return this._AccountEndDay;
			}
			set
			{
				if ((this._AccountEndDay != value))
				{
					this.OnAccountEndDayChanging(value);
					this.SendPropertyChanging();
					this._AccountEndDay = value;
					this.SendPropertyChanged("AccountEndDay");
					this.OnAccountEndDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_TradeSettlements", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.TradeSettlements.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.TradeSettlements.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vAddresses")]
	public partial class vAddresses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _PersonID;
		
		private string _District;
		
		private string _Context;
		
		private string _Contact;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private int _Type;
		
		private EntityRef<Persons> _Persons;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public vAddresses()
		{
			this._Persons = default(EntityRef<Persons>);
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Persons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vAddresses", Storage="_Persons", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Persons Persons
		{
			get
			{
				return this._Persons.Entity;
			}
			set
			{
				Persons previousValue = this._Persons.Entity;
				if (((previousValue != value) 
							|| (this._Persons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persons.Entity = null;
						previousValue.vAddresses.Remove(this);
					}
					this._Persons.Entity = value;
					if ((value != null))
					{
						value.vAddresses.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(string);
					}
					this.SendPropertyChanged("Persons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vAddresses", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.vAddresses.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.vAddresses.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vBrands")]
	public partial class vBrands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BrandID;
		
		private string _RoleID;
		
		private string _AdminID;
		
		private EntityRef<StandardBrands> _StandardBrands;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public vBrands()
		{
			this._StandardBrands = default(EntityRef<StandardBrands>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._StandardBrands.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_vBrands", Storage="_StandardBrands", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true)]
		public StandardBrands StandardBrands
		{
			get
			{
				return this._StandardBrands.Entity;
			}
			set
			{
				StandardBrands previousValue = this._StandardBrands.Entity;
				if (((previousValue != value) 
							|| (this._StandardBrands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardBrands.Entity = null;
						previousValue.vBrands.Remove(this);
					}
					this._StandardBrands.Entity = value;
					if ((value != null))
					{
						value.vBrands.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("StandardBrands");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vComplaints")]
	public partial class vComplaints : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _PersonID;
		
		private string _Context;
		
		private string _Result;
		
		private System.Nullable<int> _Score;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModiftyDate;
		
		private System.Nullable<System.DateTime> _ResultTime;
		
		private string _TrackerID;
		
		private EntityRef<Persons> _Persons;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModiftyDateChanging(System.DateTime value);
    partial void OnModiftyDateChanged();
    partial void OnResultTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResultTimeChanged();
    partial void OnTrackerIDChanging(string value);
    partial void OnTrackerIDChanged();
    #endregion
		
		public vComplaints()
		{
			this._Persons = default(EntityRef<Persons>);
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50)")]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Persons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModiftyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModiftyDate
		{
			get
			{
				return this._ModiftyDate;
			}
			set
			{
				if ((this._ModiftyDate != value))
				{
					this.OnModiftyDateChanging(value);
					this.SendPropertyChanging();
					this._ModiftyDate = value;
					this.SendPropertyChanged("ModiftyDate");
					this.OnModiftyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultTime
		{
			get
			{
				return this._ResultTime;
			}
			set
			{
				if ((this._ResultTime != value))
				{
					this.OnResultTimeChanging(value);
					this.SendPropertyChanging();
					this._ResultTime = value;
					this.SendPropertyChanged("ResultTime");
					this.OnResultTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackerID", DbType="VarChar(50)")]
		public string TrackerID
		{
			get
			{
				return this._TrackerID;
			}
			set
			{
				if ((this._TrackerID != value))
				{
					this.OnTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._TrackerID = value;
					this.SendPropertyChanged("TrackerID");
					this.OnTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vComplaints", Storage="_Persons", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Persons Persons
		{
			get
			{
				return this._Persons.Entity;
			}
			set
			{
				Persons previousValue = this._Persons.Entity;
				if (((previousValue != value) 
							|| (this._Persons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persons.Entity = null;
						previousValue.vComplaints.Remove(this);
					}
					this._Persons.Entity = value;
					if ((value != null))
					{
						value.vComplaints.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(string);
					}
					this.SendPropertyChanged("Persons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vComplaints", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.vComplaints.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.vComplaints.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vContracts")]
	public partial class vContracts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _PersonID;
		
		private string _PartyA;
		
		private string _PartyB;
		
		private int _Type;
		
		private string _Context;
		
		private string _Summary;
		
		private string _FiledID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnPartyAChanging(string value);
    partial void OnPartyAChanged();
    partial void OnPartyBChanging(string value);
    partial void OnPartyBChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFiledIDChanging(string value);
    partial void OnFiledIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public vContracts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(MAX)")]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyA", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PartyA
		{
			get
			{
				return this._PartyA;
			}
			set
			{
				if ((this._PartyA != value))
				{
					this.OnPartyAChanging(value);
					this.SendPropertyChanging();
					this._PartyA = value;
					this.SendPropertyChanged("PartyA");
					this.OnPartyAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyB", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PartyB
		{
			get
			{
				return this._PartyB;
			}
			set
			{
				if ((this._PartyB != value))
				{
					this.OnPartyBChanging(value);
					this.SendPropertyChanging();
					this._PartyB = value;
					this.SendPropertyChanged("PartyB");
					this.OnPartyBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiledID", DbType="VarChar(50)")]
		public string FiledID
		{
			get
			{
				return this._FiledID;
			}
			set
			{
				if ((this._FiledID != value))
				{
					this.OnFiledIDChanging(value);
					this.SendPropertyChanging();
					this._FiledID = value;
					this.SendPropertyChanged("FiledID");
					this.OnFiledIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vDishonests")]
	public partial class vDishonests : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PersonID;
		
		private string _SiteUserID;
		
		private string _Reason;
		
		private string _Code;
		
		private string _Summary;
		
		private System.DateTime _OccurTime;
		
		private System.DateTime _CreateDate;
		
		private int _Stauts;
		
		private string _CreatorID;
		
		private EntityRef<Persons> _Persons;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnOccurTimeChanging(System.DateTime value);
    partial void OnOccurTimeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStautsChanging(int value);
    partial void OnStautsChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public vDishonests()
		{
			this._Persons = default(EntityRef<Persons>);
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Persons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50)")]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurTime", DbType="DateTime NOT NULL")]
		public System.DateTime OccurTime
		{
			get
			{
				return this._OccurTime;
			}
			set
			{
				if ((this._OccurTime != value))
				{
					this.OnOccurTimeChanging(value);
					this.SendPropertyChanging();
					this._OccurTime = value;
					this.SendPropertyChanged("OccurTime");
					this.OnOccurTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stauts", DbType="Int NOT NULL")]
		public int Stauts
		{
			get
			{
				return this._Stauts;
			}
			set
			{
				if ((this._Stauts != value))
				{
					this.OnStautsChanging(value);
					this.SendPropertyChanging();
					this._Stauts = value;
					this.SendPropertyChanged("Stauts");
					this.OnStautsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vDishonests", Storage="_Persons", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Persons Persons
		{
			get
			{
				return this._Persons.Entity;
			}
			set
			{
				Persons previousValue = this._Persons.Entity;
				if (((previousValue != value) 
							|| (this._Persons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persons.Entity = null;
						previousValue.vDishonests.Remove(this);
					}
					this._Persons.Entity = value;
					if ((value != null))
					{
						value.vDishonests.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(string);
					}
					this.SendPropertyChanged("Persons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vDishonests", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.vDishonests.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.vDishonests.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vEnterprises")]
	public partial class vEnterprises : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _EnterpriseID;
		
		private int _Status;
		
		private string _CreatorID;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public vEnterprises()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_vEnterprises", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.vEnterprises.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.vEnterprises.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vEnterprises", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.vEnterprises.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.vEnterprises.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vInvoices")]
	public partial class vInvoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteUserID;
		
		private string _PersonID;
		
		private int _Type;
		
		private string _Company;
		
		private string _TaxNumber;
		
		private string _RegAddress;
		
		private string _Tel;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private string _PostAddress;
		
		private string _PostRecipient;
		
		private string _PostTel;
		
		private string _PostZipCode;
		
		private bool _IsCredit;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _CreatorID;
		
		private EntityRef<Persons> _Persons;
		
		private EntityRef<SiteUsers> _SiteUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteUserIDChanging(string value);
    partial void OnSiteUserIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnRegAddressChanging(string value);
    partial void OnRegAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnPostAddressChanging(string value);
    partial void OnPostAddressChanged();
    partial void OnPostRecipientChanging(string value);
    partial void OnPostRecipientChanged();
    partial void OnPostTelChanging(string value);
    partial void OnPostTelChanged();
    partial void OnPostZipCodeChanging(string value);
    partial void OnPostZipCodeChanged();
    partial void OnIsCreditChanging(bool value);
    partial void OnIsCreditChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public vInvoices()
		{
			this._Persons = default(EntityRef<Persons>);
			this._SiteUsers = default(EntityRef<SiteUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUserID", DbType="VarChar(50)")]
		public string SiteUserID
		{
			get
			{
				return this._SiteUserID;
			}
			set
			{
				if ((this._SiteUserID != value))
				{
					if (this._SiteUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteUserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteUserID = value;
					this.SendPropertyChanged("SiteUserID");
					this.OnSiteUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Persons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="VarChar(50)")]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(150)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this.OnRegAddressChanging(value);
					this.SendPropertyChanging();
					this._RegAddress = value;
					this.SendPropertyChanged("RegAddress");
					this.OnRegAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostAddress", DbType="NVarChar(150)")]
		public string PostAddress
		{
			get
			{
				return this._PostAddress;
			}
			set
			{
				if ((this._PostAddress != value))
				{
					this.OnPostAddressChanging(value);
					this.SendPropertyChanging();
					this._PostAddress = value;
					this.SendPropertyChanged("PostAddress");
					this.OnPostAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostRecipient", DbType="NVarChar(50)")]
		public string PostRecipient
		{
			get
			{
				return this._PostRecipient;
			}
			set
			{
				if ((this._PostRecipient != value))
				{
					this.OnPostRecipientChanging(value);
					this.SendPropertyChanging();
					this._PostRecipient = value;
					this.SendPropertyChanged("PostRecipient");
					this.OnPostRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTel", DbType="VarChar(50)")]
		public string PostTel
		{
			get
			{
				return this._PostTel;
			}
			set
			{
				if ((this._PostTel != value))
				{
					this.OnPostTelChanging(value);
					this.SendPropertyChanging();
					this._PostTel = value;
					this.SendPropertyChanged("PostTel");
					this.OnPostTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostZipCode", DbType="VarChar(50)")]
		public string PostZipCode
		{
			get
			{
				return this._PostZipCode;
			}
			set
			{
				if ((this._PostZipCode != value))
				{
					this.OnPostZipCodeChanging(value);
					this.SendPropertyChanging();
					this._PostZipCode = value;
					this.SendPropertyChanged("PostZipCode");
					this.OnPostZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCredit", DbType="Bit NOT NULL")]
		public bool IsCredit
		{
			get
			{
				return this._IsCredit;
			}
			set
			{
				if ((this._IsCredit != value))
				{
					this.OnIsCreditChanging(value);
					this.SendPropertyChanging();
					this._IsCredit = value;
					this.SendPropertyChanged("IsCredit");
					this.OnIsCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_vInvoices", Storage="_Persons", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Persons Persons
		{
			get
			{
				return this._Persons.Entity;
			}
			set
			{
				Persons previousValue = this._Persons.Entity;
				if (((previousValue != value) 
							|| (this._Persons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persons.Entity = null;
						previousValue.vInvoices.Remove(this);
					}
					this._Persons.Entity = value;
					if ((value != null))
					{
						value.vInvoices.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(string);
					}
					this.SendPropertyChanged("Persons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteUsers_vInvoices", Storage="_SiteUsers", ThisKey="SiteUserID", OtherKey="ID", IsForeignKey=true)]
		public SiteUsers SiteUsers
		{
			get
			{
				return this._SiteUsers.Entity;
			}
			set
			{
				SiteUsers previousValue = this._SiteUsers.Entity;
				if (((previousValue != value) 
							|| (this._SiteUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteUsers.Entity = null;
						previousValue.vInvoices.Remove(this);
					}
					this._SiteUsers.Entity = value;
					if ((value != null))
					{
						value.vInvoices.Add(this);
						this._SiteUserID = value.ID;
					}
					else
					{
						this._SiteUserID = default(string);
					}
					this.SendPropertyChanged("SiteUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsRolesTopView")]
	public partial class AdminsRolesTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _RoleName;
		
		private string _RoleID;
		
		private int _RoleStatus;
		
		private string _OriginID;
		
		public AdminsRolesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(150)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStatus", DbType="Int NOT NULL")]
		public int RoleStatus
		{
			get
			{
				return this._RoleStatus;
			}
			set
			{
				if ((this._RoleStatus != value))
				{
					this._RoleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="VarChar(50)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this._OriginID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplyTasks")]
	public partial class ApplyTasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MainID;
		
		private string _SubID;
		
		private int _MainType;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private string _ApproverID;
		
		private string _ApplierID;
		
		private int _ApplyTaskType;
		
		private int _Status;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnSubIDChanging(string value);
    partial void OnSubIDChanged();
    partial void OnMainTypeChanging(int value);
    partial void OnMainTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnApplyTaskTypeChanging(int value);
    partial void OnApplyTaskTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ApplyTasks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50)")]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					this.OnSubIDChanging(value);
					this.SendPropertyChanging();
					this._SubID = value;
					this.SendPropertyChanged("SubID");
					this.OnSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainType", DbType="Int NOT NULL")]
		public int MainType
		{
			get
			{
				return this._MainType;
			}
			set
			{
				if ((this._MainType != value))
				{
					this.OnMainTypeChanging(value);
					this.SendPropertyChanging();
					this._MainType = value;
					this.SendPropertyChanged("MainType");
					this.OnMainTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyTaskType", DbType="Int NOT NULL")]
		public int ApplyTaskType
		{
			get
			{
				return this._ApplyTaskType;
			}
			set
			{
				if ((this._ApplyTaskType != value))
				{
					this.OnApplyTaskTypeChanging(value);
					this.SendPropertyChanging();
					this._ApplyTaskType = value;
					this.SendPropertyChanged("ApplyTaskType");
					this.OnApplyTaskTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _Address;
		
		private string _Tel;
		
		private string _Bank;
		
		private string _Account;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private string _Source;
		
		private string _Title;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Invoices()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Invoices", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientApplyStatisticsView")]
	public partial class ClientApplyStatisticsView
	{
		
		private string _ClientID;
		
		private string _Name;
		
		private int _ApplyTaskType;
		
		private System.Nullable<int> _ApprovedCount;
		
		public ClientApplyStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyTaskType", DbType="Int NOT NULL")]
		public int ApplyTaskType
		{
			get
			{
				return this._ApplyTaskType;
			}
			set
			{
				if ((this._ApplyTaskType != value))
				{
					this._ApplyTaskType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCount", DbType="Int")]
		public System.Nullable<int> ApprovedCount
		{
			get
			{
				return this._ApprovedCount;
			}
			set
			{
				if ((this._ApprovedCount != value))
				{
					this._ApprovedCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oDoors")]
	public partial class oDoors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrgID;
		
		private string _Title;
		
		private string _Address;
		
		private string _Code;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public oDoors()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(150)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oDoors", Storage="_Organizations", ThisKey="OrgID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.oDoors.Remove(this);
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.oDoors.Add(this);
						this._OrgID = value.ID;
					}
					else
					{
						this._OrgID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carriers")]
	public partial class Carriers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private int _Type;
		
		private bool _IsInternational;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Summary;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnIsInternationalChanging(bool value);
    partial void OnIsInternationalChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Carriers()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternational", DbType="Bit NOT NULL")]
		public bool IsInternational
		{
			get
			{
				return this._IsInternational;
			}
			set
			{
				if ((this._IsInternational != value))
				{
					this.OnIsInternationalChanging(value);
					this.SendPropertyChanging();
					this._IsInternational = value;
					this.SendPropertyChanged("IsInternational");
					this.OnIsInternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_Carriers", Storage="_Organizations", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.Carriers = null;
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.Carriers = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oTransports")]
	public partial class oTransports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrgID;
		
		private int _Type;
		
		private string _CarNumber1;
		
		private string _CarNumber2;
		
		private string _Weight;
		
		private int _Status;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCarNumber1Changing(string value);
    partial void OnCarNumber1Changed();
    partial void OnCarNumber2Changing(string value);
    partial void OnCarNumber2Changed();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public oTransports()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNumber1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CarNumber1
		{
			get
			{
				return this._CarNumber1;
			}
			set
			{
				if ((this._CarNumber1 != value))
				{
					this.OnCarNumber1Changing(value);
					this.SendPropertyChanging();
					this._CarNumber1 = value;
					this.SendPropertyChanged("CarNumber1");
					this.OnCarNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNumber2", DbType="VarChar(50)")]
		public string CarNumber2
		{
			get
			{
				return this._CarNumber2;
			}
			set
			{
				if ((this._CarNumber2 != value))
				{
					this.OnCarNumber2Changing(value);
					this.SendPropertyChanging();
					this._CarNumber2 = value;
					this.SendPropertyChanged("CarNumber2");
					this.OnCarNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oTransports", Storage="_Organizations", ThisKey="OrgID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.oTransports.Remove(this);
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.oTransports.Add(this);
						this._OrgID = value.ID;
					}
					else
					{
						this._OrgID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oDrivers")]
	public partial class oDrivers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrgID;
		
		private string _Name;
		
		private string _IDCard;
		
		private string _Mobile;
		
		private string _Mobile2;
		
		private string _CustomsCode;
		
		private string _CardCode;
		
		private string _PortCode;
		
		private string _LBPassword;
		
		private bool _IsChcd;
		
		private int _Status;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnCustomsCodeChanging(string value);
    partial void OnCustomsCodeChanged();
    partial void OnCardCodeChanging(string value);
    partial void OnCardCodeChanged();
    partial void OnPortCodeChanging(string value);
    partial void OnPortCodeChanged();
    partial void OnLBPasswordChanging(string value);
    partial void OnLBPasswordChanged();
    partial void OnIsChcdChanging(bool value);
    partial void OnIsChcdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public oDrivers()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="VarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="VarChar(50)")]
		public string Mobile2
		{
			get
			{
				return this._Mobile2;
			}
			set
			{
				if ((this._Mobile2 != value))
				{
					this.OnMobile2Changing(value);
					this.SendPropertyChanging();
					this._Mobile2 = value;
					this.SendPropertyChanged("Mobile2");
					this.OnMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsCode", DbType="VarChar(50)")]
		public string CustomsCode
		{
			get
			{
				return this._CustomsCode;
			}
			set
			{
				if ((this._CustomsCode != value))
				{
					this.OnCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomsCode = value;
					this.SendPropertyChanged("CustomsCode");
					this.OnCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCode", DbType="VarChar(50)")]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this.OnCardCodeChanging(value);
					this.SendPropertyChanging();
					this._CardCode = value;
					this.SendPropertyChanged("CardCode");
					this.OnCardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortCode", DbType="VarChar(50)")]
		public string PortCode
		{
			get
			{
				return this._PortCode;
			}
			set
			{
				if ((this._PortCode != value))
				{
					this.OnPortCodeChanging(value);
					this.SendPropertyChanging();
					this._PortCode = value;
					this.SendPropertyChanged("PortCode");
					this.OnPortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBPassword", DbType="VarChar(50)")]
		public string LBPassword
		{
			get
			{
				return this._LBPassword;
			}
			set
			{
				if ((this._LBPassword != value))
				{
					this.OnLBPasswordChanging(value);
					this.SendPropertyChanging();
					this._LBPassword = value;
					this.SendPropertyChanged("LBPassword");
					this.OnLBPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChcd", DbType="Bit NOT NULL")]
		public bool IsChcd
		{
			get
			{
				return this._IsChcd;
			}
			set
			{
				if ((this._IsChcd != value))
				{
					this.OnIsChcdChanging(value);
					this.SendPropertyChanging();
					this._IsChcd = value;
					this.SendPropertyChanged("IsChcd");
					this.OnIsChcdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_oDrivers", Storage="_Organizations", ThisKey="OrgID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.oDrivers.Remove(this);
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.oDrivers.Add(this);
						this._OrgID = value.ID;
					}
					else
					{
						this._OrgID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Structures")]
	public partial class Structures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private int _Type;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<MapsStructure> _MapsStructure;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Structures()
		{
			this._MapsStructure = new EntitySet<MapsStructure>(new Action<MapsStructure>(this.attach_MapsStructure), new Action<MapsStructure>(this.detach_MapsStructure));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Structures_MapsStructure", Storage="_MapsStructure", ThisKey="ID", OtherKey="StructureID")]
		public EntitySet<MapsStructure> MapsStructure
		{
			get
			{
				return this._MapsStructure;
			}
			set
			{
				this._MapsStructure.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsStructure(MapsStructure entity)
		{
			this.SendPropertyChanging();
			entity.Structures = this;
		}
		
		private void detach_MapsStructure(MapsStructure entity)
		{
			this.SendPropertyChanging();
			entity.Structures = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsRegion")]
	public partial class MapsRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _RegionID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Regions> _Regions;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnRegionIDChanging(string value);
    partial void OnRegionIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public MapsRegion()
		{
			this._Regions = default(EntityRef<Regions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Regions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regions_MapsRegion", Storage="_Regions", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public Regions Regions
		{
			get
			{
				return this._Regions.Entity;
			}
			set
			{
				Regions previousValue = this._Regions.Entity;
				if (((previousValue != value) 
							|| (this._Regions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Regions.Entity = null;
						previousValue.MapsRegion.Remove(this);
					}
					this._Regions.Entity = value;
					if ((value != null))
					{
						value.MapsRegion.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(string);
					}
					this.SendPropertyChanged("Regions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsStructure")]
	public partial class MapsStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _StructureID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Structures> _Structures;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStructureIDChanging(string value);
    partial void OnStructureIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public MapsStructure()
		{
			this._Structures = default(EntityRef<Structures>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StructureID
		{
			get
			{
				return this._StructureID;
			}
			set
			{
				if ((this._StructureID != value))
				{
					if (this._Structures.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStructureIDChanging(value);
					this.SendPropertyChanging();
					this._StructureID = value;
					this.SendPropertyChanged("StructureID");
					this.OnStructureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Structures_MapsStructure", Storage="_Structures", ThisKey="StructureID", OtherKey="ID", IsForeignKey=true)]
		public Structures Structures
		{
			get
			{
				return this._Structures.Entity;
			}
			set
			{
				Structures previousValue = this._Structures.Entity;
				if (((previousValue != value) 
							|| (this._Structures.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Structures.Entity = null;
						previousValue.MapsStructure.Remove(this);
					}
					this._Structures.Entity = value;
					if ((value != null))
					{
						value.MapsStructure.Add(this);
						this._StructureID = value.ID;
					}
					else
					{
						this._StructureID = default(string);
					}
					this.SendPropertyChanged("Structures");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdmin")]
	public partial class MapsAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private int _Type;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public MapsAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relations")]
	public partial class Relations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _CompanyID;
		
		private string _Position;
		
		private string _OwnerID;
		
		private int _Status;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _OfferDate;
		
		private bool _IsOld;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnOfferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOfferDateChanged();
    partial void OnIsOldChanging(bool value);
    partial void OnIsOldChanged();
    #endregion
		
		public Relations()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OfferDate
		{
			get
			{
				return this._OfferDate;
			}
			set
			{
				if ((this._OfferDate != value))
				{
					this.OnOfferDateChanging(value);
					this.SendPropertyChanging();
					this._OfferDate = value;
					this.SendPropertyChanged("OfferDate");
					this.OnOfferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOld", DbType="Bit NOT NULL")]
		public bool IsOld
		{
			get
			{
				return this._IsOld;
			}
			set
			{
				if ((this._IsOld != value))
				{
					this.OnIsOldChanging(value);
					this.SendPropertyChanging();
					this._IsOld = value;
					this.SendPropertyChanged("IsOld");
					this.OnIsOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Relations", Storage="_Enterprises", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Relations.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Relations.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Department;
		
		private string _Positon;
		
		private string _Tel;
		
		private string _Gender;
		
		private string _qq;
		
		private string _Wx;
		
		private string _Skype;
		
		private string _Summary;
		
		private string _Character;
		
		private string _Taboo;
		
		private string _OwnerID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Source;
		
		private EntitySet<Samples> _Samples;
		
		private EntitySet<TraceRecords> _TraceRecords;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnPositonChanging(string value);
    partial void OnPositonChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnWxChanging(string value);
    partial void OnWxChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCharacterChanging(string value);
    partial void OnCharacterChanged();
    partial void OnTabooChanging(string value);
    partial void OnTabooChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public Contacts()
		{
			this._Samples = new EntitySet<Samples>(new Action<Samples>(this.attach_Samples), new Action<Samples>(this.detach_Samples));
			this._TraceRecords = new EntitySet<TraceRecords>(new Action<TraceRecords>(this.attach_TraceRecords), new Action<TraceRecords>(this.detach_TraceRecords));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positon", DbType="NVarChar(50)")]
		public string Positon
		{
			get
			{
				return this._Positon;
			}
			set
			{
				if ((this._Positon != value))
				{
					this.OnPositonChanging(value);
					this.SendPropertyChanging();
					this._Positon = value;
					this.SendPropertyChanged("Positon");
					this.OnPositonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qq", DbType="VarChar(50)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wx", DbType="VarChar(50)")]
		public string Wx
		{
			get
			{
				return this._Wx;
			}
			set
			{
				if ((this._Wx != value))
				{
					this.OnWxChanging(value);
					this.SendPropertyChanging();
					this._Wx = value;
					this.SendPropertyChanged("Wx");
					this.OnWxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="VarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Character", DbType="NVarChar(150)")]
		public string Character
		{
			get
			{
				return this._Character;
			}
			set
			{
				if ((this._Character != value))
				{
					this.OnCharacterChanging(value);
					this.SendPropertyChanging();
					this._Character = value;
					this.SendPropertyChanged("Character");
					this.OnCharacterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taboo", DbType="NVarChar(150)")]
		public string Taboo
		{
			get
			{
				return this._Taboo;
			}
			set
			{
				if ((this._Taboo != value))
				{
					this.OnTabooChanging(value);
					this.SendPropertyChanging();
					this._Taboo = value;
					this.SendPropertyChanged("Taboo");
					this.OnTabooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Samples", Storage="_Samples", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Samples> Samples
		{
			get
			{
				return this._Samples;
			}
			set
			{
				this._Samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_TraceRecords", Storage="_TraceRecords", ThisKey="ID", OtherKey="ClientContactID")]
		public EntitySet<TraceRecords> TraceRecords
		{
			get
			{
				return this._TraceRecords;
			}
			set
			{
				this._TraceRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Contacts", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookAccounts")]
	public partial class BookAccounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private int _Type;
		
		private System.Nullable<int> _Methord;
		
		private string _Title;
		
		private string _Bank;
		
		private string _BankAddress;
		
		private string _BankCode;
		
		private string _Account;
		
		private System.Nullable<int> _Currency;
		
		private string _SwiftCode;
		
		private string _Transfer;
		
		private int _Status;
		
		private bool _IsPersonal;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Source;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMethordChanging(System.Nullable<int> value);
    partial void OnMethordChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnCurrencyChanging(System.Nullable<int> value);
    partial void OnCurrencyChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnTransferChanging(string value);
    partial void OnTransferChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsPersonalChanging(bool value);
    partial void OnIsPersonalChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public BookAccounts()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int")]
		public System.Nullable<int> Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this.OnMethordChanging(value);
					this.SendPropertyChanging();
					this._Methord = value;
					this.SendPropertyChanged("Methord");
					this.OnMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(200)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="VarChar(50)")]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transfer", DbType="NVarChar(150)")]
		public string Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				if ((this._Transfer != value))
				{
					this.OnTransferChanging(value);
					this.SendPropertyChanging();
					this._Transfer = value;
					this.SendPropertyChanged("Transfer");
					this.OnTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPersonal", DbType="Bit NOT NULL")]
		public bool IsPersonal
		{
			get
			{
				return this._IsPersonal;
			}
			set
			{
				if ((this._IsPersonal != value))
				{
					this.OnIsPersonalChanging(value);
					this.SendPropertyChanging();
					this._IsPersonal = value;
					this.SendPropertyChanged("IsPersonal");
					this.OnIsPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_BookAccounts", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.BookAccounts.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.BookAccounts.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeneficiariesTopView")]
	public partial class BeneficiariesTopView
	{
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _InvoiceType;
		
		private string _RealName;
		
		private string _RealID;
		
		private string _Bank;
		
		private string _BankAddress;
		
		private string _Account;
		
		private string _SwiftCode;
		
		private System.Nullable<int> _Methord;
		
		private System.Nullable<int> _Currency;
		
		private string _District;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private int _Status;
		
		public BeneficiariesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this._EnterpriseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(150)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this._RealID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this._Bank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(200)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this._BankAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this._SwiftCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int")]
		public System.Nullable<int> Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this._Methord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactsTopView")]
	public partial class ContactsTopView
	{
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _Type;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private int _Status;
		
		private string _Fax;
		
		public ContactsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this._EnterpriseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nBrandsTopView")]
	public partial class nBrandsTopView
	{
		
		private string _ID;
		
		private string _BrandID;
		
		private string _BrandName;
		
		private string _SupplierID;
		
		private string _SupplierName;
		
		public nBrandsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this._BrandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarehousesTopView")]
	public partial class WarehousesTopView
	{
		
		private string _ID;
		
		private int _Grade;
		
		private string _District;
		
		private string _Address;
		
		private string _DyjCode;
		
		private string _Name;
		
		private string _AdminCode;
		
		private string _RegAddress;
		
		private string _Corporation;
		
		private string _Uscc;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Status;
		
		private string _WsCode;
		
		public WarehousesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this._DyjCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AdminCode
		{
			get
			{
				return this._AdminCode;
			}
			set
			{
				if ((this._AdminCode != value))
				{
					this._AdminCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this._Corporation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WsCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string WsCode
		{
			get
			{
				return this._WsCode;
			}
			set
			{
				if ((this._WsCode != value))
				{
					this._WsCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vBrandsTopView")]
	public partial class vBrandsTopView
	{
		
		private string _ID;
		
		private string _BrandID;
		
		private string _BrandName;
		
		private string _AdminID;
		
		public vBrandsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this._BrandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterprisesTopView")]
	public partial class EnterprisesTopView
	{
		
		private string _ID;
		
		private string _Name;
		
		private string _AdminCode;
		
		private int _Status;
		
		private string _Corperation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _Place;
		
		private string _District;
		
		public EnterprisesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AdminCode
		{
			get
			{
				return this._AdminCode;
			}
			set
			{
				if ((this._AdminCode != value))
				{
					this._AdminCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corperation", DbType="NVarChar(150)")]
		public string Corperation
		{
			get
			{
				return this._Corperation;
			}
			set
			{
				if ((this._Corperation != value))
				{
					this._Corperation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(50)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this._Place = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnumsDictionariesTopView")]
	public partial class EnumsDictionariesTopView
	{
		
		private string _ID;
		
		private string _Enum;
		
		private bool _IsFixed;
		
		private string _Field;
		
		private string _Description;
		
		private string _Value;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		public EnumsDictionariesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enum", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Enum
		{
			get
			{
				return this._Enum;
			}
			set
			{
				if ((this._Enum != value))
				{
					this._Enum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixed", DbType="Bit NOT NULL")]
		public bool IsFixed
		{
			get
			{
				return this._IsFixed;
			}
			set
			{
				if ((this._IsFixed != value))
				{
					this._IsFixed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this._Field = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addresses")]
	public partial class Addresses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private int _Type;
		
		private string _Title;
		
		private string _District;
		
		private string _Context;
		
		private string _Contact;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _PostZip;
		
		private string _DyjCode;
		
		private int _Status;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Summary;
		
		private string _Source;
		
		private EntitySet<Samples> _Samples;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPostZipChanging(string value);
    partial void OnPostZipChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public Addresses()
		{
			this._Samples = new EntitySet<Samples>(new Action<Samples>(this.attach_Samples), new Action<Samples>(this.detach_Samples));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostZip", DbType="VarChar(50)")]
		public string PostZip
		{
			get
			{
				return this._PostZip;
			}
			set
			{
				if ((this._PostZip != value))
				{
					this.OnPostZipChanging(value);
					this.SendPropertyChanging();
					this._PostZip = value;
					this.SendPropertyChanged("PostZip");
					this.OnPostZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addresses_Samples", Storage="_Samples", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<Samples> Samples
		{
			get
			{
				return this._Samples;
			}
			set
			{
				this._Samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Addresses", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Addresses = this;
		}
		
		private void detach_Samples(Samples entity)
		{
			this.SendPropertyChanging();
			entity.Addresses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelationStatisticsView")]
	public partial class RelationStatisticsView
	{
		
		private string _EnterpriseID;
		
		private string _Position;
		
		private System.Nullable<int> _Count;
		
		public RelationStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this._EnterpriseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicesTopView")]
	public partial class InvoicesTopView
	{
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _EnterpriseName;
		
		private string _District;
		
		private string _Bank;
		
		private string _BankAddress;
		
		private string _Account;
		
		private string _TaxperNumber;
		
		private string _Type;
		
		private string _Address;
		
		private string _Postzip;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		public InvoicesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this._EnterpriseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string EnterpriseName
		{
			get
			{
				return this._EnterpriseName;
			}
			set
			{
				if ((this._EnterpriseName != value))
				{
					this._EnterpriseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this._Bank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this._BankAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxperNumber", DbType="VarChar(50)")]
		public string TaxperNumber
		{
			get
			{
				return this._TaxperNumber;
			}
			set
			{
				if ((this._TaxperNumber != value))
				{
					this._TaxperNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postzip", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Postzip
		{
			get
			{
				return this._Postzip;
			}
			set
			{
				if ((this._Postzip != value))
				{
					this._Postzip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuppliersTopView")]
	public partial class SuppliersTopView
	{
		
		private string _ID;
		
		private int _Status;
		
		private string _Name;
		
		private System.Nullable<int> _Type;
		
		private string _Nature;
		
		private System.Nullable<int> _Grade;
		
		private string _AreaType;
		
		private int _IsFactory;
		
		private string _AgentCompany;
		
		private string _TaxperNumber;
		
		private string _DyjCode;
		
		private int _InvoiceType;
		
		private System.Nullable<int> _Currency;
		
		private int _Price;
		
		private int _RepayCycle;
		
		private string _Corperation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _District;
		
		public SuppliersTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="NVarChar(150)")]
		public string Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this._Nature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaType", DbType="VarChar(50)")]
		public string AreaType
		{
			get
			{
				return this._AreaType;
			}
			set
			{
				if ((this._AreaType != value))
				{
					this._AreaType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFactory", DbType="Int NOT NULL")]
		public int IsFactory
		{
			get
			{
				return this._IsFactory;
			}
			set
			{
				if ((this._IsFactory != value))
				{
					this._IsFactory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCompany", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AgentCompany
		{
			get
			{
				return this._AgentCompany;
			}
			set
			{
				if ((this._AgentCompany != value))
				{
					this._AgentCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxperNumber", DbType="VarChar(50)")]
		public string TaxperNumber
		{
			get
			{
				return this._TaxperNumber;
			}
			set
			{
				if ((this._TaxperNumber != value))
				{
					this._TaxperNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this._DyjCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepayCycle", DbType="Int NOT NULL")]
		public int RepayCycle
		{
			get
			{
				return this._RepayCycle;
			}
			set
			{
				if ((this._RepayCycle != value))
				{
					this._RepayCycle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corperation", DbType="NVarChar(150)")]
		public string Corperation
		{
			get
			{
				return this._Corperation;
			}
			set
			{
				if ((this._Corperation != value))
				{
					this._Corperation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompaniesTopView")]
	public partial class CompaniesTopView
	{
		
		private string _ID;
		
		private int _Type;
		
		private string _Range;
		
		private int _Status;
		
		private string _Name;
		
		private string _Corporation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _District;
		
		public CompaniesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this._Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="NVarChar(150)")]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this._Corporation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WareHouses")]
	public partial class WareHouses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private int _Grade;
		
		private string _District;
		
		private string _DyjCode;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private EntityRef<Organizations> _Organizations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnGradeChanging(int value);
    partial void OnGradeChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public WareHouses()
		{
			this._Organizations = default(EntityRef<Organizations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Organizations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizations_WareHouses", Storage="_Organizations", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Organizations Organizations
		{
			get
			{
				return this._Organizations.Entity;
			}
			set
			{
				Organizations previousValue = this._Organizations.Entity;
				if (((previousValue != value) 
							|| (this._Organizations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizations.Entity = null;
						previousValue.WareHouses = null;
					}
					this._Organizations.Entity = value;
					if ((value != null))
					{
						value.WareHouses = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Organizations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Suppliers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Grade;
		
		private string _Products;
		
		private string _Source;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Nature;
		
		private System.Nullable<int> _SettlementType;
		
		private int _OrderType;
		
		private int _InvoiceType;
		
		private System.DateTime _CreateDate;
		
		private bool _IsSpecial;
		
		private bool _IsClient;
		
		private bool _IsProtected;
		
		private bool _IsAgent;
		
		private bool _IsAccount;
		
		private string _WorkTime;
		
		private bool _IsFixed;
		
		private int _Status;
		
		private string _CreatorID;
		
		private string _OwnerID;
		
		private string _OrderCompanyID;
		
		private string _DyjCode;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnProductsChanging(string value);
    partial void OnProductsChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNatureChanging(System.Nullable<int> value);
    partial void OnNatureChanged();
    partial void OnSettlementTypeChanging(System.Nullable<int> value);
    partial void OnSettlementTypeChanged();
    partial void OnOrderTypeChanging(int value);
    partial void OnOrderTypeChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsSpecialChanging(bool value);
    partial void OnIsSpecialChanged();
    partial void OnIsClientChanging(bool value);
    partial void OnIsClientChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnIsAgentChanging(bool value);
    partial void OnIsAgentChanged();
    partial void OnIsAccountChanging(bool value);
    partial void OnIsAccountChanged();
    partial void OnWorkTimeChanging(string value);
    partial void OnWorkTimeChanged();
    partial void OnIsFixedChanging(bool value);
    partial void OnIsFixedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnOrderCompanyIDChanging(string value);
    partial void OnOrderCompanyIDChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    #endregion
		
		public Suppliers()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(150)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="Int")]
		public System.Nullable<int> Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementType", DbType="Int")]
		public System.Nullable<int> SettlementType
		{
			get
			{
				return this._SettlementType;
			}
			set
			{
				if ((this._SettlementType != value))
				{
					this.OnSettlementTypeChanging(value);
					this.SendPropertyChanging();
					this._SettlementType = value;
					this.SendPropertyChanged("SettlementType");
					this.OnSettlementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Int NOT NULL")]
		public int OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecial", DbType="Bit NOT NULL")]
		public bool IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClient", DbType="Bit NOT NULL")]
		public bool IsClient
		{
			get
			{
				return this._IsClient;
			}
			set
			{
				if ((this._IsClient != value))
				{
					this.OnIsClientChanging(value);
					this.SendPropertyChanging();
					this._IsClient = value;
					this.SendPropertyChanged("IsClient");
					this.OnIsClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgent", DbType="Bit NOT NULL")]
		public bool IsAgent
		{
			get
			{
				return this._IsAgent;
			}
			set
			{
				if ((this._IsAgent != value))
				{
					this.OnIsAgentChanging(value);
					this.SendPropertyChanging();
					this._IsAgent = value;
					this.SendPropertyChanged("IsAgent");
					this.OnIsAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccount", DbType="Bit NOT NULL")]
		public bool IsAccount
		{
			get
			{
				return this._IsAccount;
			}
			set
			{
				if ((this._IsAccount != value))
				{
					this.OnIsAccountChanging(value);
					this.SendPropertyChanging();
					this._IsAccount = value;
					this.SendPropertyChanged("IsAccount");
					this.OnIsAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="VarChar(50)")]
		public string WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixed", DbType="Bit NOT NULL")]
		public bool IsFixed
		{
			get
			{
				return this._IsFixed;
			}
			set
			{
				if ((this._IsFixed != value))
				{
					this.OnIsFixedChanging(value);
					this.SendPropertyChanging();
					this._IsFixed = value;
					this.SendPropertyChanged("IsFixed");
					this.OnIsFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50)")]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompanyID", DbType="VarChar(50)")]
		public string OrderCompanyID
		{
			get
			{
				return this._OrderCompanyID;
			}
			set
			{
				if ((this._OrderCompanyID != value))
				{
					this.OnOrderCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompanyID = value;
					this.SendPropertyChanged("OrderCompanyID");
					this.OnOrderCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Suppliers", Storage="_Enterprises", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Suppliers = null;
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Suppliers = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Credits")]
	public partial class Credits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteuserID;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Type;
		
		private int _ClearType;
		
		private int _Months;
		
		private int _Days;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private bool _IsAvailable;
		
		private string _Summary;
		
		private int _Status;
		
		private EntitySet<SitesCredit> _SitesCredit;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Enterprises> _Enterprises1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteuserIDChanging(string value);
    partial void OnSiteuserIDChanged();
    partial void OnMakerIDChanging(string value);
    partial void OnMakerIDChanged();
    partial void OnTakerIDChanging(string value);
    partial void OnTakerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnClearTypeChanging(int value);
    partial void OnClearTypeChanged();
    partial void OnMonthsChanging(int value);
    partial void OnMonthsChanged();
    partial void OnDaysChanging(int value);
    partial void OnDaysChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnIsAvailableChanging(bool value);
    partial void OnIsAvailableChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Credits()
		{
			this._SitesCredit = new EntitySet<SitesCredit>(new Action<SitesCredit>(this.attach_SitesCredit), new Action<SitesCredit>(this.detach_SitesCredit));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Enterprises1 = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteuserID", DbType="VarChar(50)")]
		public string SiteuserID
		{
			get
			{
				return this._SiteuserID;
			}
			set
			{
				if ((this._SiteuserID != value))
				{
					this.OnSiteuserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteuserID = value;
					this.SendPropertyChanged("SiteuserID");
					this.OnSiteuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerIDChanging(value);
					this.SendPropertyChanging();
					this._MakerID = value;
					this.SendPropertyChanged("MakerID");
					this.OnMakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					if (this._Enterprises1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTakerIDChanging(value);
					this.SendPropertyChanging();
					this._TakerID = value;
					this.SendPropertyChanged("TakerID");
					this.OnTakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearType", DbType="Int NOT NULL")]
		public int ClearType
		{
			get
			{
				return this._ClearType;
			}
			set
			{
				if ((this._ClearType != value))
				{
					this.OnClearTypeChanging(value);
					this.SendPropertyChanging();
					this._ClearType = value;
					this.SendPropertyChanged("ClearType");
					this.OnClearTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="Int NOT NULL")]
		public int Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int NOT NULL")]
		public int Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credits_SitesCredit", Storage="_SitesCredit", ThisKey="ID", OtherKey="CreditID")]
		public EntitySet<SitesCredit> SitesCredit
		{
			get
			{
				return this._SitesCredit;
			}
			set
			{
				this._SitesCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Credits", Storage="_Enterprises", ThisKey="MakerID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Credits.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Credits.Add(this);
						this._MakerID = value.ID;
					}
					else
					{
						this._MakerID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Credits1", Storage="_Enterprises1", ThisKey="TakerID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises1
		{
			get
			{
				return this._Enterprises1.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises1.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises1.Entity = null;
						previousValue.Credits1.Remove(this);
					}
					this._Enterprises1.Entity = value;
					if ((value != null))
					{
						value.Credits1.Add(this);
						this._TakerID = value.ID;
					}
					else
					{
						this._TakerID = default(string);
					}
					this.SendPropertyChanged("Enterprises1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitesCredit(SitesCredit entity)
		{
			this.SendPropertyChanging();
			entity.Credits = this;
		}
		
		private void detach_SitesCredit(SitesCredit entity)
		{
			this.SendPropertyChanging();
			entity.Credits = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesAddress")]
	public partial class SitesAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _AddressID;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDefault;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnAddressIDChanging(string value);
    partial void OnAddressIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public SitesAddress()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesAddress", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesAddress.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesAddress.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientsTopView")]
	public partial class ClientsTopView
	{
		
		private string _Name;
		
		private string _ID;
		
		private int _Nature;
		
		private System.Nullable<int> _Grade;
		
		private string _DyjCode;
		
		private string _TaxperNumber;
		
		private int _Vip;
		
		private int _Status;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _AreaType;
		
		private string _Corperation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _District;
		
		private bool _IsNew;
		
		public ClientsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="Int NOT NULL")]
		public int Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this._Nature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this._DyjCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxperNumber", DbType="VarChar(50)")]
		public string TaxperNumber
		{
			get
			{
				return this._TaxperNumber;
			}
			set
			{
				if ((this._TaxperNumber != value))
				{
					this._TaxperNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Int NOT NULL")]
		public int Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this._Vip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaType", DbType="VarChar(50)")]
		public string AreaType
		{
			get
			{
				return this._AreaType;
			}
			set
			{
				if ((this._AreaType != value))
				{
					this._AreaType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corperation", DbType="NVarChar(150)")]
		public string Corperation
		{
			get
			{
				return this._Corperation;
			}
			set
			{
				if ((this._Corperation != value))
				{
					this._Corperation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit NOT NULL")]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this._IsNew = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regions")]
	public partial class Regions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private int _OrderIndex;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<MapsRegion> _MapsRegion;
		
		private EntitySet<EnterpriseRegisters> _EnterpriseRegisters;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderIndexChanging(int value);
    partial void OnOrderIndexChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Regions()
		{
			this._MapsRegion = new EntitySet<MapsRegion>(new Action<MapsRegion>(this.attach_MapsRegion), new Action<MapsRegion>(this.detach_MapsRegion));
			this._EnterpriseRegisters = new EntitySet<EnterpriseRegisters>(new Action<EnterpriseRegisters>(this.attach_EnterpriseRegisters), new Action<EnterpriseRegisters>(this.detach_EnterpriseRegisters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int NOT NULL")]
		public int OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regions_MapsRegion", Storage="_MapsRegion", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<MapsRegion> MapsRegion
		{
			get
			{
				return this._MapsRegion;
			}
			set
			{
				this._MapsRegion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regions_EnterpriseRegisters", Storage="_EnterpriseRegisters", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<EnterpriseRegisters> EnterpriseRegisters
		{
			get
			{
				return this._EnterpriseRegisters;
			}
			set
			{
				this._EnterpriseRegisters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsRegion(MapsRegion entity)
		{
			this.SendPropertyChanging();
			entity.Regions = this;
		}
		
		private void detach_MapsRegion(MapsRegion entity)
		{
			this.SendPropertyChanging();
			entity.Regions = null;
		}
		
		private void attach_EnterpriseRegisters(EnterpriseRegisters entity)
		{
			this.SendPropertyChanging();
			entity.Regions = this;
		}
		
		private void detach_EnterpriseRegisters(EnterpriseRegisters entity)
		{
			this.SendPropertyChanging();
			entity.Regions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogsHandOvers")]
	public partial class LogsHandOvers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _HandOver;
		
		private string _Receiver;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnHandOverChanging(string value);
    partial void OnHandOverChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public LogsHandOvers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandOver", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HandOver
		{
			get
			{
				return this._HandOver;
			}
			set
			{
				if ((this._HandOver != value))
				{
					this.OnHandOverChanging(value);
					this.SendPropertyChanging();
					this._HandOver = value;
					this.SendPropertyChanged("HandOver");
					this.OnHandOverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesAssistant")]
	public partial class SitesAssistant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _SiteID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesAssistant()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesAssistant", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesAssistant.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesAssistant.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesBrand")]
	public partial class SitesBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _BrandID;
		
		private System.DateTime _CreateDate;
		
		private int _LimitType;
		
		private EntityRef<StandardBrands> _StandardBrands;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLimitTypeChanging(int value);
    partial void OnLimitTypeChanged();
    #endregion
		
		public SitesBrand()
		{
			this._StandardBrands = default(EntityRef<StandardBrands>);
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50)")]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._StandardBrands.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitType", DbType="Int NOT NULL")]
		public int LimitType
		{
			get
			{
				return this._LimitType;
			}
			set
			{
				if ((this._LimitType != value))
				{
					this.OnLimitTypeChanging(value);
					this.SendPropertyChanging();
					this._LimitType = value;
					this.SendPropertyChanged("LimitType");
					this.OnLimitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardBrands_SitesBrand", Storage="_StandardBrands", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true)]
		public StandardBrands StandardBrands
		{
			get
			{
				return this._StandardBrands.Entity;
			}
			set
			{
				StandardBrands previousValue = this._StandardBrands.Entity;
				if (((previousValue != value) 
							|| (this._StandardBrands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardBrands.Entity = null;
						previousValue.SitesBrand.Remove(this);
					}
					this._StandardBrands.Entity = value;
					if ((value != null))
					{
						value.SitesBrand.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("StandardBrands");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesBrand", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesBrand.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesBrand.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesConduct")]
	public partial class SitesConduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private int _Type;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesConduct()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesConduct", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesConduct.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesConduct.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesContact")]
	public partial class SitesContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _ContactID;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDefault;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public SitesContact()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesContact", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesContact.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesContact.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesPartNumber")]
	public partial class SitesPartNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _PartNumberID;
		
		private int _LimitType;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<StandardPartNumbers> _StandardPartNumbers;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnPartNumberIDChanging(string value);
    partial void OnPartNumberIDChanged();
    partial void OnLimitTypeChanging(int value);
    partial void OnLimitTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesPartNumber()
		{
			this._StandardPartNumbers = default(EntityRef<StandardPartNumbers>);
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumberID", DbType="VarChar(50)")]
		public string PartNumberID
		{
			get
			{
				return this._PartNumberID;
			}
			set
			{
				if ((this._PartNumberID != value))
				{
					if (this._StandardPartNumbers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartNumberIDChanging(value);
					this.SendPropertyChanging();
					this._PartNumberID = value;
					this.SendPropertyChanged("PartNumberID");
					this.OnPartNumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitType", DbType="Int NOT NULL")]
		public int LimitType
		{
			get
			{
				return this._LimitType;
			}
			set
			{
				if ((this._LimitType != value))
				{
					this.OnLimitTypeChanging(value);
					this.SendPropertyChanging();
					this._LimitType = value;
					this.SendPropertyChanged("LimitType");
					this.OnLimitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardPartNumbers_SitesPartNumber", Storage="_StandardPartNumbers", ThisKey="PartNumberID", OtherKey="ID", IsForeignKey=true)]
		public StandardPartNumbers StandardPartNumbers
		{
			get
			{
				return this._StandardPartNumbers.Entity;
			}
			set
			{
				StandardPartNumbers previousValue = this._StandardPartNumbers.Entity;
				if (((previousValue != value) 
							|| (this._StandardPartNumbers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardPartNumbers.Entity = null;
						previousValue.SitesPartNumber.Remove(this);
					}
					this._StandardPartNumbers.Entity = value;
					if ((value != null))
					{
						value.SitesPartNumber.Add(this);
						this._PartNumberID = value.ID;
					}
					else
					{
						this._PartNumberID = default(string);
					}
					this.SendPropertyChanged("StandardPartNumbers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesPartNumber", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesPartNumber.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesPartNumber.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsCertificate")]
	public partial class MapsCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CertificateID;
		
		private string _OtherID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Certificates> _Certificates;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCertificateIDChanging(string value);
    partial void OnCertificateIDChanged();
    partial void OnOtherIDChanging(string value);
    partial void OnOtherIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public MapsCertificate()
		{
			this._Certificates = default(EntityRef<Certificates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CertificateID
		{
			get
			{
				return this._CertificateID;
			}
			set
			{
				if ((this._CertificateID != value))
				{
					if (this._Certificates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateID = value;
					this.SendPropertyChanged("CertificateID");
					this.OnCertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50)")]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this.OnOtherIDChanging(value);
					this.SendPropertyChanging();
					this._OtherID = value;
					this.SendPropertyChanged("OtherID");
					this.OnOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificates_MapsCertificate", Storage="_Certificates", ThisKey="CertificateID", OtherKey="ID", IsForeignKey=true)]
		public Certificates Certificates
		{
			get
			{
				return this._Certificates.Entity;
			}
			set
			{
				Certificates previousValue = this._Certificates.Entity;
				if (((previousValue != value) 
							|| (this._Certificates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certificates.Entity = null;
						previousValue.MapsCertificate.Remove(this);
					}
					this._Certificates.Entity = value;
					if ((value != null))
					{
						value.MapsCertificate.Add(this);
						this._CertificateID = value.ID;
					}
					else
					{
						this._CertificateID = default(string);
					}
					this.SendPropertyChanged("Certificates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesRequirement")]
	public partial class SitesRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _RequirementID;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDefault;
		
		private EntityRef<Requirements> _Requirements;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnRequirementIDChanging(string value);
    partial void OnRequirementIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public SitesRequirement()
		{
			this._Requirements = default(EntityRef<Requirements>);
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RequirementID
		{
			get
			{
				return this._RequirementID;
			}
			set
			{
				if ((this._RequirementID != value))
				{
					if (this._Requirements.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequirementIDChanging(value);
					this.SendPropertyChanging();
					this._RequirementID = value;
					this.SendPropertyChanged("RequirementID");
					this.OnRequirementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requirements_SitesRequirement", Storage="_Requirements", ThisKey="RequirementID", OtherKey="ID", IsForeignKey=true)]
		public Requirements Requirements
		{
			get
			{
				return this._Requirements.Entity;
			}
			set
			{
				Requirements previousValue = this._Requirements.Entity;
				if (((previousValue != value) 
							|| (this._Requirements.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requirements.Entity = null;
						previousValue.SitesRequirement.Remove(this);
					}
					this._Requirements.Entity = value;
					if ((value != null))
					{
						value.SitesRequirement.Add(this);
						this._RequirementID = value.ID;
					}
					else
					{
						this._RequirementID = default(string);
					}
					this.SendPropertyChanged("Requirements");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesRequirement", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesRequirement.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesRequirement.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paires")]
	public partial class Paires : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MajorID;
		
		private string _MinorID;
		
		private int _MajorStatus;
		
		private int _MinorStatus;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMajorIDChanging(string value);
    partial void OnMajorIDChanged();
    partial void OnMinorIDChanging(string value);
    partial void OnMinorIDChanged();
    partial void OnMajorStatusChanging(int value);
    partial void OnMajorStatusChanged();
    partial void OnMinorStatusChanging(int value);
    partial void OnMinorStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Paires()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorID", DbType="VarChar(50)")]
		public string MinorID
		{
			get
			{
				return this._MinorID;
			}
			set
			{
				if ((this._MinorID != value))
				{
					this.OnMinorIDChanging(value);
					this.SendPropertyChanging();
					this._MinorID = value;
					this.SendPropertyChanged("MinorID");
					this.OnMinorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorStatus", DbType="Int NOT NULL")]
		public int MajorStatus
		{
			get
			{
				return this._MajorStatus;
			}
			set
			{
				if ((this._MajorStatus != value))
				{
					this.OnMajorStatusChanging(value);
					this.SendPropertyChanging();
					this._MajorStatus = value;
					this.SendPropertyChanged("MajorStatus");
					this.OnMajorStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorStatus", DbType="Int NOT NULL")]
		public int MinorStatus
		{
			get
			{
				return this._MinorStatus;
			}
			set
			{
				if ((this._MinorStatus != value))
				{
					this.OnMinorStatusChanging(value);
					this.SendPropertyChanging();
					this._MinorStatus = value;
					this.SendPropertyChanged("MinorStatus");
					this.OnMinorStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesFlowCredit")]
	public partial class SitesFlowCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _FlowCreditID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Sites> _Sites;
		
		private EntityRef<FlowCredits> _FlowCredits;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnFlowCreditIDChanging(string value);
    partial void OnFlowCreditIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesFlowCredit()
		{
			this._Sites = default(EntityRef<Sites>);
			this._FlowCredits = default(EntityRef<FlowCredits>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowCreditID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowCreditID
		{
			get
			{
				return this._FlowCreditID;
			}
			set
			{
				if ((this._FlowCreditID != value))
				{
					if (this._FlowCredits.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowCreditIDChanging(value);
					this.SendPropertyChanging();
					this._FlowCreditID = value;
					this.SendPropertyChanged("FlowCreditID");
					this.OnFlowCreditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesFlowCredit", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesFlowCredit.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesFlowCredit.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowCredits_SitesFlowCredit", Storage="_FlowCredits", ThisKey="FlowCreditID", OtherKey="ID", IsForeignKey=true)]
		public FlowCredits FlowCredits
		{
			get
			{
				return this._FlowCredits.Entity;
			}
			set
			{
				FlowCredits previousValue = this._FlowCredits.Entity;
				if (((previousValue != value) 
							|| (this._FlowCredits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowCredits.Entity = null;
						previousValue.SitesFlowCredit.Remove(this);
					}
					this._FlowCredits.Entity = value;
					if ((value != null))
					{
						value.SitesFlowCredit.Add(this);
						this._FlowCreditID = value.ID;
					}
					else
					{
						this._FlowCreditID = default(string);
					}
					this.SendPropertyChanged("FlowCredits");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesCreditTopView")]
	public partial class SitesCreditTopView
	{
		
		private string _ID;
		
		private string _SiteuserID;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Type;
		
		private int _ClearType;
		
		private int _Months;
		
		private int _Days;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private bool _IsAvailable;
		
		private string _Summary;
		
		private int _Status;
		
		private string _SiteID;
		
		public SitesCreditTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteuserID", DbType="VarChar(50)")]
		public string SiteuserID
		{
			get
			{
				return this._SiteuserID;
			}
			set
			{
				if ((this._SiteuserID != value))
				{
					this._SiteuserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					this._MakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					this._TakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearType", DbType="Int NOT NULL")]
		public int ClearType
		{
			get
			{
				return this._ClearType;
			}
			set
			{
				if ((this._ClearType != value))
				{
					this._ClearType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="Int NOT NULL")]
		public int Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this._Months = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int NOT NULL")]
		public int Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this._Days = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this._ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL")]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesCredit")]
	public partial class SitesCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _CreditID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Credits> _Credits;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnCreditIDChanging(string value);
    partial void OnCreditIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesCredit()
		{
			this._Credits = default(EntityRef<Credits>);
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreditID
		{
			get
			{
				return this._CreditID;
			}
			set
			{
				if ((this._CreditID != value))
				{
					if (this._Credits.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditIDChanging(value);
					this.SendPropertyChanging();
					this._CreditID = value;
					this.SendPropertyChanged("CreditID");
					this.OnCreditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credits_SitesCredit", Storage="_Credits", ThisKey="CreditID", OtherKey="ID", IsForeignKey=true)]
		public Credits Credits
		{
			get
			{
				return this._Credits.Entity;
			}
			set
			{
				Credits previousValue = this._Credits.Entity;
				if (((previousValue != value) 
							|| (this._Credits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Credits.Entity = null;
						previousValue.SitesCredit.Remove(this);
					}
					this._Credits.Entity = value;
					if ((value != null))
					{
						value.SitesCredit.Add(this);
						this._CreditID = value.ID;
					}
					else
					{
						this._CreditID = default(string);
					}
					this.SendPropertyChanged("Credits");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCredit", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesCredit.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesCredit.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminSitesTopView")]
	public partial class AdminSitesTopView
	{
		
		private string _ID;
		
		private string _Name;
		
		private int _Type;
		
		private string _OtherID;
		
		private string _CompanyID;
		
		private string _OwnerID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private System.Nullable<int> _Grade;
		
		private bool _IsAssigned;
		
		private string _Summary;
		
		private bool _Exclusived;
		
		private bool _IsPaired;
		
		private string _AdminID;
		
		public AdminSitesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50)")]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this._OtherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssigned", DbType="Bit NOT NULL")]
		public bool IsAssigned
		{
			get
			{
				return this._IsAssigned;
			}
			set
			{
				if ((this._IsAssigned != value))
				{
					this._IsAssigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exclusived", DbType="Bit NOT NULL")]
		public bool Exclusived
		{
			get
			{
				return this._Exclusived;
			}
			set
			{
				if ((this._Exclusived != value))
				{
					this._Exclusived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaired", DbType="Bit NOT NULL")]
		public bool IsPaired
		{
			get
			{
				return this._IsPaired;
			}
			set
			{
				if ((this._IsPaired != value))
				{
					this._IsPaired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteAssistantsTopView")]
	public partial class SiteAssistantsTopView
	{
		
		private string _ID;
		
		private string _OwnerID;
		
		private string _AdminID;
		
		private string _CompanyID;
		
		private string _OtherID;
		
		public SiteAssistantsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50)")]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this._OtherID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsEnterprise")]
	public partial class MapsEnterprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _MainID;
		
		private string _SubID;
		
		private int _Status;
		
		private bool _ShareCredit;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private EntitySet<SitesMapEnterprise> _SitesMapEnterprise;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Enterprises> _Enterprises1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnSubIDChanging(string value);
    partial void OnSubIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnShareCreditChanging(bool value);
    partial void OnShareCreditChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public MapsEnterprise()
		{
			this._SitesMapEnterprise = new EntitySet<SitesMapEnterprise>(new Action<SitesMapEnterprise>(this.attach_SitesMapEnterprise), new Action<SitesMapEnterprise>(this.detach_SitesMapEnterprise));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Enterprises1 = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					if (this._Enterprises1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubIDChanging(value);
					this.SendPropertyChanging();
					this._SubID = value;
					this.SendPropertyChanged("SubID");
					this.OnSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareCredit", DbType="Bit NOT NULL")]
		public bool ShareCredit
		{
			get
			{
				return this._ShareCredit;
			}
			set
			{
				if ((this._ShareCredit != value))
				{
					this.OnShareCreditChanging(value);
					this.SendPropertyChanging();
					this._ShareCredit = value;
					this.SendPropertyChanged("ShareCredit");
					this.OnShareCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapsEnterprise_SitesMapEnterprise", Storage="_SitesMapEnterprise", ThisKey="ID", OtherKey="MapsEnterpriseID")]
		public EntitySet<SitesMapEnterprise> SitesMapEnterprise
		{
			get
			{
				return this._SitesMapEnterprise;
			}
			set
			{
				this._SitesMapEnterprise.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsEnterprise", Storage="_Enterprises", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.MapsEnterprise.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.MapsEnterprise.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_MapsEnterprise1", Storage="_Enterprises1", ThisKey="SubID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises1
		{
			get
			{
				return this._Enterprises1.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises1.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises1.Entity = null;
						previousValue.MapsEnterprise1.Remove(this);
					}
					this._Enterprises1.Entity = value;
					if ((value != null))
					{
						value.MapsEnterprise1.Add(this);
						this._SubID = value.ID;
					}
					else
					{
						this._SubID = default(string);
					}
					this.SendPropertyChanged("Enterprises1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitesMapEnterprise(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.MapsEnterprise = this;
		}
		
		private void detach_SitesMapEnterprise(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.MapsEnterprise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesMapEnterprise")]
	public partial class SitesMapEnterprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MainSiteID;
		
		private string _SubSiteID;
		
		private string _MapsEnterpriseID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<MapsEnterprise> _MapsEnterprise;
		
		private EntityRef<Sites> _Sites;
		
		private EntityRef<Sites> _Sites1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMainSiteIDChanging(string value);
    partial void OnMainSiteIDChanged();
    partial void OnSubSiteIDChanging(string value);
    partial void OnSubSiteIDChanged();
    partial void OnMapsEnterpriseIDChanging(string value);
    partial void OnMapsEnterpriseIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesMapEnterprise()
		{
			this._MapsEnterprise = default(EntityRef<MapsEnterprise>);
			this._Sites = default(EntityRef<Sites>);
			this._Sites1 = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainSiteID
		{
			get
			{
				return this._MainSiteID;
			}
			set
			{
				if ((this._MainSiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainSiteIDChanging(value);
					this.SendPropertyChanging();
					this._MainSiteID = value;
					this.SendPropertyChanged("MainSiteID");
					this.OnMainSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubSiteID
		{
			get
			{
				return this._SubSiteID;
			}
			set
			{
				if ((this._SubSiteID != value))
				{
					if (this._Sites1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SubSiteID = value;
					this.SendPropertyChanged("SubSiteID");
					this.OnSubSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapsEnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MapsEnterpriseID
		{
			get
			{
				return this._MapsEnterpriseID;
			}
			set
			{
				if ((this._MapsEnterpriseID != value))
				{
					if (this._MapsEnterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapsEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._MapsEnterpriseID = value;
					this.SendPropertyChanged("MapsEnterpriseID");
					this.OnMapsEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapsEnterprise_SitesMapEnterprise", Storage="_MapsEnterprise", ThisKey="MapsEnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public MapsEnterprise MapsEnterprise
		{
			get
			{
				return this._MapsEnterprise.Entity;
			}
			set
			{
				MapsEnterprise previousValue = this._MapsEnterprise.Entity;
				if (((previousValue != value) 
							|| (this._MapsEnterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapsEnterprise.Entity = null;
						previousValue.SitesMapEnterprise.Remove(this);
					}
					this._MapsEnterprise.Entity = value;
					if ((value != null))
					{
						value.SitesMapEnterprise.Add(this);
						this._MapsEnterpriseID = value.ID;
					}
					else
					{
						this._MapsEnterpriseID = default(string);
					}
					this.SendPropertyChanged("MapsEnterprise");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesMapEnterprise", Storage="_Sites", ThisKey="MainSiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesMapEnterprise.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesMapEnterprise.Add(this);
						this._MainSiteID = value.ID;
					}
					else
					{
						this._MainSiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesMapEnterprise1", Storage="_Sites1", ThisKey="SubSiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites1
		{
			get
			{
				return this._Sites1.Entity;
			}
			set
			{
				Sites previousValue = this._Sites1.Entity;
				if (((previousValue != value) 
							|| (this._Sites1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites1.Entity = null;
						previousValue.SitesMapEnterprise1.Remove(this);
					}
					this._Sites1.Entity = value;
					if ((value != null))
					{
						value.SitesMapEnterprise1.Add(this);
						this._SubSiteID = value.ID;
					}
					else
					{
						this._SubSiteID = default(string);
					}
					this.SendPropertyChanged("Sites1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesMapEnterpriseTopView")]
	public partial class SitesMapEnterpriseTopView
	{
		
		private string _MainSiteID;
		
		private string _SubSiteID;
		
		private string _ID;
		
		private int _Type;
		
		private string _MainID;
		
		private string _SubID;
		
		private int _Status;
		
		private bool _ShareCredit;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private int _MainType;
		
		public SitesMapEnterpriseTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainSiteID
		{
			get
			{
				return this._MainSiteID;
			}
			set
			{
				if ((this._MainSiteID != value))
				{
					this._MainSiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubSiteID
		{
			get
			{
				return this._SubSiteID;
			}
			set
			{
				if ((this._SubSiteID != value))
				{
					this._SubSiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this._MainID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					this._SubID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareCredit", DbType="Bit NOT NULL")]
		public bool ShareCredit
		{
			get
			{
				return this._ShareCredit;
			}
			set
			{
				if ((this._ShareCredit != value))
				{
					this._ShareCredit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainType", DbType="Int NOT NULL")]
		public int MainType
		{
			get
			{
				return this._MainType;
			}
			set
			{
				if ((this._MainType != value))
				{
					this._MainType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesCertificate")]
	public partial class SitesCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _CertificateID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Sites> _Sites;
		
		private EntityRef<Certificates> _Certificates;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnCertificateIDChanging(string value);
    partial void OnCertificateIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SitesCertificate()
		{
			this._Sites = default(EntityRef<Sites>);
			this._Certificates = default(EntityRef<Certificates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CertificateID
		{
			get
			{
				return this._CertificateID;
			}
			set
			{
				if ((this._CertificateID != value))
				{
					if (this._Certificates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateID = value;
					this.SendPropertyChanged("CertificateID");
					this.OnCertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCertificate", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesCertificate.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesCertificate.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificates_SitesCertificate", Storage="_Certificates", ThisKey="CertificateID", OtherKey="ID", IsForeignKey=true)]
		public Certificates Certificates
		{
			get
			{
				return this._Certificates.Entity;
			}
			set
			{
				Certificates previousValue = this._Certificates.Entity;
				if (((previousValue != value) 
							|| (this._Certificates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certificates.Entity = null;
						previousValue.SitesCertificate.Remove(this);
					}
					this._Certificates.Entity = value;
					if ((value != null))
					{
						value.SitesCertificate.Add(this);
						this._CertificateID = value.ID;
					}
					else
					{
						this._CertificateID = default(string);
					}
					this.SendPropertyChanged("Certificates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSitesCreditsStatisticsWithSharesView")]
	public partial class ClientSitesCreditsStatisticsWithSharesView
	{
		
		private string _SiteID;
		
		private int _Type;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Currency;
		
		private decimal _Total;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _ShareTotal;
		
		private System.Nullable<decimal> _ShareCost;
		
		public ClientSitesCreditsStatisticsWithSharesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					this._MakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					this._TakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,7) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(38,7) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareTotal", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> ShareTotal
		{
			get
			{
				return this._ShareTotal;
			}
			set
			{
				if ((this._ShareTotal != value))
				{
					this._ShareTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareCost", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> ShareCost
		{
			get
			{
				return this._ShareCost;
			}
			set
			{
				if ((this._ShareCost != value))
				{
					this._ShareCost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesCreditsStatisticsView")]
	public partial class SitesCreditsStatisticsView
	{
		
		private string _SiteID;
		
		private int _Type;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Currency;
		
		private decimal _Total;
		
		private decimal _Cost;
		
		public SitesCreditsStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					this._MakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					this._TakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,7) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(38,7) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditsStatisticsView")]
	public partial class CreditsStatisticsView
	{
		
		private int _Type;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Currency;
		
		private decimal _Total;
		
		private decimal _Cost;
		
		public CreditsStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					this._MakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					this._TakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,7) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(38,7) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesCommission")]
	public partial class SitesCommission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _CommissionID;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDefault;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnCommissionIDChanging(string value);
    partial void OnCommissionIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public SitesCommission()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CommissionID
		{
			get
			{
				return this._CommissionID;
			}
			set
			{
				if ((this._CommissionID != value))
				{
					this.OnCommissionIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionID = value;
					this.SendPropertyChanged("CommissionID");
					this.OnCommissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCommission", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesCommission.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesCommission.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesFixedSupplier")]
	public partial class SitesFixedSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SiteID;
		
		private string _FixedSupplierID;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDefault;
		
		private EntityRef<Sites> _Sites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnFixedSupplierIDChanging(string value);
    partial void OnFixedSupplierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public SitesFixedSupplier()
		{
			this._Sites = default(EntityRef<Sites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Sites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedSupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FixedSupplierID
		{
			get
			{
				return this._FixedSupplierID;
			}
			set
			{
				if ((this._FixedSupplierID != value))
				{
					this.OnFixedSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._FixedSupplierID = value;
					this.SendPropertyChanged("FixedSupplierID");
					this.OnFixedSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesFixedSupplier", Storage="_Sites", ThisKey="SiteID", OtherKey="ID", IsForeignKey=true)]
		public Sites Sites
		{
			get
			{
				return this._Sites.Entity;
			}
			set
			{
				Sites previousValue = this._Sites.Entity;
				if (((previousValue != value) 
							|| (this._Sites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sites.Entity = null;
						previousValue.SitesFixedSupplier.Remove(this);
					}
					this._Sites.Entity = value;
					if ((value != null))
					{
						value.SitesFixedSupplier.Add(this);
						this._SiteID = value.ID;
					}
					else
					{
						this._SiteID = default(string);
					}
					this.SendPropertyChanged("Sites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseRegisters")]
	public partial class EnterpriseRegisters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private bool _IsSecret;
		
		private string _Corperation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private System.Nullable<int> _Currency;
		
		private string _RegistFund;
		
		private System.Nullable<int> _RegistCurrency;
		
		private string _Industry;
		
		private System.Nullable<System.DateTime> _RegistDate;
		
		private string _Summary;
		
		private string _BusinessState;
		
		private string _BusinessScope;
		
		private System.Nullable<int> _Employees;
		
		private string _WebSite;
		
		private string _Nature;
		
		private string _RegionID;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Regions> _Regions;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnIsSecretChanging(bool value);
    partial void OnIsSecretChanged();
    partial void OnCorperationChanging(string value);
    partial void OnCorperationChanged();
    partial void OnRegAddressChanging(string value);
    partial void OnRegAddressChanged();
    partial void OnUsccChanging(string value);
    partial void OnUsccChanged();
    partial void OnCurrencyChanging(System.Nullable<int> value);
    partial void OnCurrencyChanged();
    partial void OnRegistFundChanging(string value);
    partial void OnRegistFundChanged();
    partial void OnRegistCurrencyChanging(System.Nullable<int> value);
    partial void OnRegistCurrencyChanged();
    partial void OnIndustryChanging(string value);
    partial void OnIndustryChanged();
    partial void OnRegistDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnBusinessStateChanging(string value);
    partial void OnBusinessStateChanged();
    partial void OnBusinessScopeChanging(string value);
    partial void OnBusinessScopeChanged();
    partial void OnEmployeesChanging(System.Nullable<int> value);
    partial void OnEmployeesChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnNatureChanging(string value);
    partial void OnNatureChanged();
    partial void OnRegionIDChanging(string value);
    partial void OnRegionIDChanged();
    #endregion
		
		public EnterpriseRegisters()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Regions = default(EntityRef<Regions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecret", DbType="Bit NOT NULL")]
		public bool IsSecret
		{
			get
			{
				return this._IsSecret;
			}
			set
			{
				if ((this._IsSecret != value))
				{
					this.OnIsSecretChanging(value);
					this.SendPropertyChanging();
					this._IsSecret = value;
					this.SendPropertyChanged("IsSecret");
					this.OnIsSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corperation", DbType="NVarChar(150)")]
		public string Corperation
		{
			get
			{
				return this._Corperation;
			}
			set
			{
				if ((this._Corperation != value))
				{
					this.OnCorperationChanging(value);
					this.SendPropertyChanging();
					this._Corperation = value;
					this.SendPropertyChanged("Corperation");
					this.OnCorperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this.OnRegAddressChanging(value);
					this.SendPropertyChanging();
					this._RegAddress = value;
					this.SendPropertyChanged("RegAddress");
					this.OnRegAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this.OnUsccChanging(value);
					this.SendPropertyChanging();
					this._Uscc = value;
					this.SendPropertyChanged("Uscc");
					this.OnUsccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistFund", DbType="VarChar(50)")]
		public string RegistFund
		{
			get
			{
				return this._RegistFund;
			}
			set
			{
				if ((this._RegistFund != value))
				{
					this.OnRegistFundChanging(value);
					this.SendPropertyChanging();
					this._RegistFund = value;
					this.SendPropertyChanged("RegistFund");
					this.OnRegistFundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistCurrency", DbType="Int")]
		public System.Nullable<int> RegistCurrency
		{
			get
			{
				return this._RegistCurrency;
			}
			set
			{
				if ((this._RegistCurrency != value))
				{
					this.OnRegistCurrencyChanging(value);
					this.SendPropertyChanging();
					this._RegistCurrency = value;
					this.SendPropertyChanged("RegistCurrency");
					this.OnRegistCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Industry", DbType="NVarChar(150)")]
		public string Industry
		{
			get
			{
				return this._Industry;
			}
			set
			{
				if ((this._Industry != value))
				{
					this.OnIndustryChanging(value);
					this.SendPropertyChanging();
					this._Industry = value;
					this.SendPropertyChanged("Industry");
					this.OnIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistDate
		{
			get
			{
				return this._RegistDate;
			}
			set
			{
				if ((this._RegistDate != value))
				{
					this.OnRegistDateChanging(value);
					this.SendPropertyChanging();
					this._RegistDate = value;
					this.SendPropertyChanged("RegistDate");
					this.OnRegistDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessState", DbType="NVarChar(50)")]
		public string BusinessState
		{
			get
			{
				return this._BusinessState;
			}
			set
			{
				if ((this._BusinessState != value))
				{
					this.OnBusinessStateChanging(value);
					this.SendPropertyChanging();
					this._BusinessState = value;
					this.SendPropertyChanged("BusinessState");
					this.OnBusinessStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessScope", DbType="NVarChar(2000)")]
		public string BusinessScope
		{
			get
			{
				return this._BusinessScope;
			}
			set
			{
				if ((this._BusinessScope != value))
				{
					this.OnBusinessScopeChanging(value);
					this.SendPropertyChanging();
					this._BusinessScope = value;
					this.SendPropertyChanged("BusinessScope");
					this.OnBusinessScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employees", DbType="Int")]
		public System.Nullable<int> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				if ((this._Employees != value))
				{
					this.OnEmployeesChanging(value);
					this.SendPropertyChanging();
					this._Employees = value;
					this.SendPropertyChanged("Employees");
					this.OnEmployeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(150)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="NVarChar(150)")]
		public string Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="VarChar(50)")]
		public string RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Regions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_EnterpriseRegisters", Storage="_Enterprises", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.EnterpriseRegisters = null;
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.EnterpriseRegisters = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regions_EnterpriseRegisters", Storage="_Regions", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public Regions Regions
		{
			get
			{
				return this._Regions.Entity;
			}
			set
			{
				Regions previousValue = this._Regions.Entity;
				if (((previousValue != value) 
							|| (this._Regions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Regions.Entity = null;
						previousValue.EnterpriseRegisters.Remove(this);
					}
					this._Regions.Entity = value;
					if ((value != null))
					{
						value.EnterpriseRegisters.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(string);
					}
					this.SendPropertyChanged("Regions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierSitesCreditsStatisticsWithSharesView")]
	public partial class SupplierSitesCreditsStatisticsWithSharesView
	{
		
		private string _SiteID;
		
		private int _Type;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Currency;
		
		private decimal _Total;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _ShareTotal;
		
		private System.Nullable<decimal> _ShareCost;
		
		public SupplierSitesCreditsStatisticsWithSharesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					this._MakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					this._TakerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,7) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(38,7) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareTotal", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> ShareTotal
		{
			get
			{
				return this._ShareTotal;
			}
			set
			{
				if ((this._ShareTotal != value))
				{
					this._ShareTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareCost", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> ShareCost
		{
			get
			{
				return this._ShareCost;
			}
			set
			{
				if ((this._ShareCost != value))
				{
					this._ShareCost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllAdminSitesTopView")]
	public partial class AllAdminSitesTopView
	{
		
		private string _ID;
		
		private string _Name;
		
		private int _Type;
		
		private string _OtherID;
		
		private string _CompanyID;
		
		private string _OwnerID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private System.Nullable<int> _Grade;
		
		private bool _IsAssigned;
		
		private string _Summary;
		
		private bool _Exclusived;
		
		private bool _IsPaired;
		
		private string _AdminID;
		
		private int _ShareStatus;
		
		public AllAdminSitesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50)")]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this._OtherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssigned", DbType="Bit NOT NULL")]
		public bool IsAssigned
		{
			get
			{
				return this._IsAssigned;
			}
			set
			{
				if ((this._IsAssigned != value))
				{
					this._IsAssigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exclusived", DbType="Bit NOT NULL")]
		public bool Exclusived
		{
			get
			{
				return this._Exclusived;
			}
			set
			{
				if ((this._Exclusived != value))
				{
					this._Exclusived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaired", DbType="Bit NOT NULL")]
		public bool IsPaired
		{
			get
			{
				return this._IsPaired;
			}
			set
			{
				if ((this._IsPaired != value))
				{
					this._IsPaired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareStatus", DbType="Int NOT NULL")]
		public int ShareStatus
		{
			get
			{
				return this._ShareStatus;
			}
			set
			{
				if ((this._ShareStatus != value))
				{
					this._ShareStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _StaffID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _SelCode;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _RoleStatus;
		
		private string _OriginID;
		
		private string _DyjCode;
		
		private string _DyjCompanyCode;
		
		private string _DyjDepartmentCode;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this._StaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this._SelCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(150)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStatus", DbType="Int")]
		public System.Nullable<int> RoleStatus
		{
			get
			{
				return this._RoleStatus;
			}
			set
			{
				if ((this._RoleStatus != value))
				{
					this._RoleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="VarChar(50)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this._OriginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this._DyjCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCompanyCode", DbType="VarChar(50)")]
		public string DyjCompanyCode
		{
			get
			{
				return this._DyjCompanyCode;
			}
			set
			{
				if ((this._DyjCompanyCode != value))
				{
					this._DyjCompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjDepartmentCode", DbType="VarChar(50)")]
		public string DyjDepartmentCode
		{
			get
			{
				return this._DyjDepartmentCode;
			}
			set
			{
				if ((this._DyjDepartmentCode != value))
				{
					this._DyjDepartmentCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogsOperating")]
	public partial class LogsOperating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OperatorID;
		
		private string _MainID;
		
		private string _SubID;
		
		private string _Context;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOperatorIDChanging(string value);
    partial void OnOperatorIDChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnSubIDChanging(string value);
    partial void OnSubIDChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public LogsOperating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OperatorID
		{
			get
			{
				return this._OperatorID;
			}
			set
			{
				if ((this._OperatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._OperatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50)")]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					this.OnSubIDChanging(value);
					this.SendPropertyChanging();
					this._SubID = value;
					this.SendPropertyChanged("SubID");
					this.OnSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Records")]
	public partial class Records : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DocID;
		
		private int _Type;
		
		private string _OtherID;
		
		private string _PartyID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _TrusteeID;
		
		private System.Nullable<System.DateTime> _TrustDate;
		
		private string _ApproverID;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDocIDChanging(string value);
    partial void OnDocIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOtherIDChanging(string value);
    partial void OnOtherIDChanged();
    partial void OnPartyIDChanging(string value);
    partial void OnPartyIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnTrusteeIDChanging(string value);
    partial void OnTrusteeIDChanged();
    partial void OnTrustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrustDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Records()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this.OnOtherIDChanging(value);
					this.SendPropertyChanging();
					this._OtherID = value;
					this.SendPropertyChanged("OtherID");
					this.OnOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyID", DbType="VarChar(50)")]
		public string PartyID
		{
			get
			{
				return this._PartyID;
			}
			set
			{
				if ((this._PartyID != value))
				{
					this.OnPartyIDChanging(value);
					this.SendPropertyChanging();
					this._PartyID = value;
					this.SendPropertyChanged("PartyID");
					this.OnPartyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrusteeID", DbType="VarChar(50)")]
		public string TrusteeID
		{
			get
			{
				return this._TrusteeID;
			}
			set
			{
				if ((this._TrusteeID != value))
				{
					this.OnTrusteeIDChanging(value);
					this.SendPropertyChanging();
					this._TrusteeID = value;
					this.SendPropertyChanged("TrusteeID");
					this.OnTrusteeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrustDate
		{
			get
			{
				return this._TrustDate;
			}
			set
			{
				if ((this._TrustDate != value))
				{
					this.OnTrustDateChanging(value);
					this.SendPropertyChanging();
					this._TrustDate = value;
					this.SendPropertyChanged("TrustDate");
					this.OnTrustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DyjInterfaceSyncRecords")]
	public partial class DyjInterfaceSyncRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OtherID;
		
		private string _DyjCode;
		
		private int _Type;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOtherIDChanging(string value);
    partial void OnOtherIDChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DyjInterfaceSyncRecords()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this.OnOtherIDChanging(value);
					this.SendPropertyChanging();
					this._OtherID = value;
					this.SendPropertyChanged("OtherID");
					this.OnOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConsigneesTopView")]
	public partial class ConsigneesTopView
	{
		
		private string _ID;
		
		private string _EnterpriseID;
		
		private string _DyjCode;
		
		private string _District;
		
		private string _Address;
		
		private string _PostZip;
		
		private int _Status;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Title;
		
		private string _Place;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _Corperation;
		
		public ConsigneesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this._EnterpriseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this._DyjCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostZip", DbType="VarChar(50)")]
		public string PostZip
		{
			get
			{
				return this._PostZip;
			}
			set
			{
				if ((this._PostZip != value))
				{
					this._PostZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(50)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this._Place = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(200)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(50)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corperation", DbType="NVarChar(150)")]
		public string Corperation
		{
			get
			{
				return this._Corperation;
			}
			set
			{
				if ((this._Corperation != value))
				{
					this._Corperation = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitesAllMapEnterpriseTopView")]
	public partial class SitesAllMapEnterpriseTopView
	{
		
		private string _MainSiteID;
		
		private string _SubSiteID;
		
		private string _ID;
		
		private int _Type;
		
		private string _MainID;
		
		private string _SubID;
		
		private int _Status;
		
		private System.Nullable<bool> _ShareCredit;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private int _MainType;
		
		public SitesAllMapEnterpriseTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainSiteID
		{
			get
			{
				return this._MainSiteID;
			}
			set
			{
				if ((this._MainSiteID != value))
				{
					this._MainSiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSiteID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubSiteID
		{
			get
			{
				return this._SubSiteID;
			}
			set
			{
				if ((this._SubSiteID != value))
				{
					this._SubSiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this._MainID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					this._SubID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareCredit", DbType="Bit")]
		public System.Nullable<bool> ShareCredit
		{
			get
			{
				return this._ShareCredit;
			}
			set
			{
				if ((this._ShareCredit != value))
				{
					this._ShareCredit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainType", DbType="Int NOT NULL")]
		public int MainType
		{
			get
			{
				return this._MainType;
			}
			set
			{
				if ((this._MainType != value))
				{
					this._MainType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sites")]
	public partial class Sites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private int _Type;
		
		private string _OtherID;
		
		private string _CompanyID;
		
		private string _OwnerID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private System.Nullable<int> _Grade;
		
		private bool _IsAssigned;
		
		private string _Summary;
		
		private bool _Exclusived;
		
		private bool _IsPaired;
		
		private string _Summary1;
		
		private EntitySet<SitesAddress> _SitesAddress;
		
		private EntitySet<SitesAssistant> _SitesAssistant;
		
		private EntitySet<SitesBrand> _SitesBrand;
		
		private EntitySet<SitesConduct> _SitesConduct;
		
		private EntitySet<SitesContact> _SitesContact;
		
		private EntitySet<SitesPartNumber> _SitesPartNumber;
		
		private EntitySet<SitesRequirement> _SitesRequirement;
		
		private EntitySet<SitesFlowCredit> _SitesFlowCredit;
		
		private EntitySet<SitesCredit> _SitesCredit;
		
		private EntitySet<SitesMapEnterprise> _SitesMapEnterprise;
		
		private EntitySet<SitesMapEnterprise> _SitesMapEnterprise1;
		
		private EntitySet<SitesCertificate> _SitesCertificate;
		
		private EntitySet<SitesCommission> _SitesCommission;
		
		private EntitySet<SitesFixedSupplier> _SitesFixedSupplier;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOtherIDChanging(string value);
    partial void OnOtherIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnIsAssignedChanging(bool value);
    partial void OnIsAssignedChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnExclusivedChanging(bool value);
    partial void OnExclusivedChanged();
    partial void OnIsPairedChanging(bool value);
    partial void OnIsPairedChanged();
    partial void OnSummary1Changing(string value);
    partial void OnSummary1Changed();
    #endregion
		
		public Sites()
		{
			this._SitesAddress = new EntitySet<SitesAddress>(new Action<SitesAddress>(this.attach_SitesAddress), new Action<SitesAddress>(this.detach_SitesAddress));
			this._SitesAssistant = new EntitySet<SitesAssistant>(new Action<SitesAssistant>(this.attach_SitesAssistant), new Action<SitesAssistant>(this.detach_SitesAssistant));
			this._SitesBrand = new EntitySet<SitesBrand>(new Action<SitesBrand>(this.attach_SitesBrand), new Action<SitesBrand>(this.detach_SitesBrand));
			this._SitesConduct = new EntitySet<SitesConduct>(new Action<SitesConduct>(this.attach_SitesConduct), new Action<SitesConduct>(this.detach_SitesConduct));
			this._SitesContact = new EntitySet<SitesContact>(new Action<SitesContact>(this.attach_SitesContact), new Action<SitesContact>(this.detach_SitesContact));
			this._SitesPartNumber = new EntitySet<SitesPartNumber>(new Action<SitesPartNumber>(this.attach_SitesPartNumber), new Action<SitesPartNumber>(this.detach_SitesPartNumber));
			this._SitesRequirement = new EntitySet<SitesRequirement>(new Action<SitesRequirement>(this.attach_SitesRequirement), new Action<SitesRequirement>(this.detach_SitesRequirement));
			this._SitesFlowCredit = new EntitySet<SitesFlowCredit>(new Action<SitesFlowCredit>(this.attach_SitesFlowCredit), new Action<SitesFlowCredit>(this.detach_SitesFlowCredit));
			this._SitesCredit = new EntitySet<SitesCredit>(new Action<SitesCredit>(this.attach_SitesCredit), new Action<SitesCredit>(this.detach_SitesCredit));
			this._SitesMapEnterprise = new EntitySet<SitesMapEnterprise>(new Action<SitesMapEnterprise>(this.attach_SitesMapEnterprise), new Action<SitesMapEnterprise>(this.detach_SitesMapEnterprise));
			this._SitesMapEnterprise1 = new EntitySet<SitesMapEnterprise>(new Action<SitesMapEnterprise>(this.attach_SitesMapEnterprise1), new Action<SitesMapEnterprise>(this.detach_SitesMapEnterprise1));
			this._SitesCertificate = new EntitySet<SitesCertificate>(new Action<SitesCertificate>(this.attach_SitesCertificate), new Action<SitesCertificate>(this.detach_SitesCertificate));
			this._SitesCommission = new EntitySet<SitesCommission>(new Action<SitesCommission>(this.attach_SitesCommission), new Action<SitesCommission>(this.detach_SitesCommission));
			this._SitesFixedSupplier = new EntitySet<SitesFixedSupplier>(new Action<SitesFixedSupplier>(this.attach_SitesFixedSupplier), new Action<SitesFixedSupplier>(this.detach_SitesFixedSupplier));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this.OnOtherIDChanging(value);
					this.SendPropertyChanging();
					this._OtherID = value;
					this.SendPropertyChanged("OtherID");
					this.OnOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssigned", DbType="Bit NOT NULL")]
		public bool IsAssigned
		{
			get
			{
				return this._IsAssigned;
			}
			set
			{
				if ((this._IsAssigned != value))
				{
					this.OnIsAssignedChanging(value);
					this.SendPropertyChanging();
					this._IsAssigned = value;
					this.SendPropertyChanged("IsAssigned");
					this.OnIsAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exclusived", DbType="Bit NOT NULL")]
		public bool Exclusived
		{
			get
			{
				return this._Exclusived;
			}
			set
			{
				if ((this._Exclusived != value))
				{
					this.OnExclusivedChanging(value);
					this.SendPropertyChanging();
					this._Exclusived = value;
					this.SendPropertyChanged("Exclusived");
					this.OnExclusivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaired", DbType="Bit NOT NULL")]
		public bool IsPaired
		{
			get
			{
				return this._IsPaired;
			}
			set
			{
				if ((this._IsPaired != value))
				{
					this.OnIsPairedChanging(value);
					this.SendPropertyChanging();
					this._IsPaired = value;
					this.SendPropertyChanged("IsPaired");
					this.OnIsPairedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary1", DbType="NVarChar(150)")]
		public string Summary1
		{
			get
			{
				return this._Summary1;
			}
			set
			{
				if ((this._Summary1 != value))
				{
					this.OnSummary1Changing(value);
					this.SendPropertyChanging();
					this._Summary1 = value;
					this.SendPropertyChanged("Summary1");
					this.OnSummary1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesAddress", Storage="_SitesAddress", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesAddress> SitesAddress
		{
			get
			{
				return this._SitesAddress;
			}
			set
			{
				this._SitesAddress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesAssistant", Storage="_SitesAssistant", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesAssistant> SitesAssistant
		{
			get
			{
				return this._SitesAssistant;
			}
			set
			{
				this._SitesAssistant.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesBrand", Storage="_SitesBrand", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesBrand> SitesBrand
		{
			get
			{
				return this._SitesBrand;
			}
			set
			{
				this._SitesBrand.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesConduct", Storage="_SitesConduct", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesConduct> SitesConduct
		{
			get
			{
				return this._SitesConduct;
			}
			set
			{
				this._SitesConduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesContact", Storage="_SitesContact", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesContact> SitesContact
		{
			get
			{
				return this._SitesContact;
			}
			set
			{
				this._SitesContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesPartNumber", Storage="_SitesPartNumber", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesPartNumber> SitesPartNumber
		{
			get
			{
				return this._SitesPartNumber;
			}
			set
			{
				this._SitesPartNumber.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesRequirement", Storage="_SitesRequirement", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesRequirement> SitesRequirement
		{
			get
			{
				return this._SitesRequirement;
			}
			set
			{
				this._SitesRequirement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesFlowCredit", Storage="_SitesFlowCredit", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesFlowCredit> SitesFlowCredit
		{
			get
			{
				return this._SitesFlowCredit;
			}
			set
			{
				this._SitesFlowCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCredit", Storage="_SitesCredit", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesCredit> SitesCredit
		{
			get
			{
				return this._SitesCredit;
			}
			set
			{
				this._SitesCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesMapEnterprise", Storage="_SitesMapEnterprise", ThisKey="ID", OtherKey="MainSiteID")]
		public EntitySet<SitesMapEnterprise> SitesMapEnterprise
		{
			get
			{
				return this._SitesMapEnterprise;
			}
			set
			{
				this._SitesMapEnterprise.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesMapEnterprise1", Storage="_SitesMapEnterprise1", ThisKey="ID", OtherKey="SubSiteID")]
		public EntitySet<SitesMapEnterprise> SitesMapEnterprise1
		{
			get
			{
				return this._SitesMapEnterprise1;
			}
			set
			{
				this._SitesMapEnterprise1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCertificate", Storage="_SitesCertificate", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesCertificate> SitesCertificate
		{
			get
			{
				return this._SitesCertificate;
			}
			set
			{
				this._SitesCertificate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesCommission", Storage="_SitesCommission", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesCommission> SitesCommission
		{
			get
			{
				return this._SitesCommission;
			}
			set
			{
				this._SitesCommission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sites_SitesFixedSupplier", Storage="_SitesFixedSupplier", ThisKey="ID", OtherKey="SiteID")]
		public EntitySet<SitesFixedSupplier> SitesFixedSupplier
		{
			get
			{
				return this._SitesFixedSupplier;
			}
			set
			{
				this._SitesFixedSupplier.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitesAddress(SitesAddress entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesAddress(SitesAddress entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesAssistant(SitesAssistant entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesAssistant(SitesAssistant entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesBrand(SitesBrand entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesBrand(SitesBrand entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesConduct(SitesConduct entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesConduct(SitesConduct entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesContact(SitesContact entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesContact(SitesContact entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesPartNumber(SitesPartNumber entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesPartNumber(SitesPartNumber entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesRequirement(SitesRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesRequirement(SitesRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesFlowCredit(SitesFlowCredit entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesFlowCredit(SitesFlowCredit entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesCredit(SitesCredit entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesCredit(SitesCredit entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesMapEnterprise(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesMapEnterprise(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesMapEnterprise1(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Sites1 = this;
		}
		
		private void detach_SitesMapEnterprise1(SitesMapEnterprise entity)
		{
			this.SendPropertyChanging();
			entity.Sites1 = null;
		}
		
		private void attach_SitesCertificate(SitesCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesCertificate(SitesCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesCommission(SitesCommission entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesCommission(SitesCommission entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
		
		private void attach_SitesFixedSupplier(SitesFixedSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Sites = this;
		}
		
		private void detach_SitesFixedSupplier(SitesFixedSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Sites = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Grade;
		
		private int _Type;
		
		private int _Vip;
		
		private string _Source;
		
		private bool _IsMajor;
		
		private bool _IsSpecial;
		
		private string _Industry;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private System.Nullable<decimal> _ProfitRate;
		
		private bool _IsSupplier;
		
		private string _Owner;
		
		private string _DyjCode;
		
		private string _CreatorID;
		
		private string _Summary;
		
		private EntitySet<ProjectReports> _ProjectReports;
		
		private EntitySet<TraceRecords> _TraceRecords;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnVipChanging(int value);
    partial void OnVipChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnIsMajorChanging(bool value);
    partial void OnIsMajorChanged();
    partial void OnIsSpecialChanging(bool value);
    partial void OnIsSpecialChanged();
    partial void OnIndustryChanging(string value);
    partial void OnIndustryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnProfitRateChanging(System.Nullable<decimal> value);
    partial void OnProfitRateChanged();
    partial void OnIsSupplierChanging(bool value);
    partial void OnIsSupplierChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnDyjCodeChanging(string value);
    partial void OnDyjCodeChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Clients()
		{
			this._ProjectReports = new EntitySet<ProjectReports>(new Action<ProjectReports>(this.attach_ProjectReports), new Action<ProjectReports>(this.detach_ProjectReports));
			this._TraceRecords = new EntitySet<TraceRecords>(new Action<TraceRecords>(this.attach_TraceRecords), new Action<TraceRecords>(this.detach_TraceRecords));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Int NOT NULL")]
		public int Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMajor", DbType="Bit NOT NULL")]
		public bool IsMajor
		{
			get
			{
				return this._IsMajor;
			}
			set
			{
				if ((this._IsMajor != value))
				{
					this.OnIsMajorChanging(value);
					this.SendPropertyChanging();
					this._IsMajor = value;
					this.SendPropertyChanged("IsMajor");
					this.OnIsMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecial", DbType="Bit NOT NULL")]
		public bool IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Industry", DbType="NVarChar(200)")]
		public string Industry
		{
			get
			{
				return this._Industry;
			}
			set
			{
				if ((this._Industry != value))
				{
					this.OnIndustryChanging(value);
					this.SendPropertyChanging();
					this._Industry = value;
					this.SendPropertyChanged("Industry");
					this.OnIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitRate", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupplier", DbType="Bit NOT NULL")]
		public bool IsSupplier
		{
			get
			{
				return this._IsSupplier;
			}
			set
			{
				if ((this._IsSupplier != value))
				{
					this.OnIsSupplierChanging(value);
					this.SendPropertyChanging();
					this._IsSupplier = value;
					this.SendPropertyChanged("IsSupplier");
					this.OnIsSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCode", DbType="VarChar(50)")]
		public string DyjCode
		{
			get
			{
				return this._DyjCode;
			}
			set
			{
				if ((this._DyjCode != value))
				{
					this.OnDyjCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCode = value;
					this.SendPropertyChanged("DyjCode");
					this.OnDyjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ProjectReports", Storage="_ProjectReports", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ProjectReports> ProjectReports
		{
			get
			{
				return this._ProjectReports;
			}
			set
			{
				this._ProjectReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_TraceRecords", Storage="_TraceRecords", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<TraceRecords> TraceRecords
		{
			get
			{
				return this._TraceRecords;
			}
			set
			{
				this._TraceRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Clients", Storage="_Enterprises", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Clients = null;
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Clients = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ProjectReports(ProjectReports entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_TraceRecords(TraceRecords entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlowCredits")]
	public partial class FlowCredits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MakerID;
		
		private string _TakerID;
		
		private int _Type;
		
		private string _SiteuserID;
		
		private System.Nullable<int> _Conduct;
		
		private string _Catalog;
		
		private string _Subject;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _Price1;
		
		private decimal _CurrentRate;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private int _Status;
		
		private EntitySet<SitesFlowCredit> _SitesFlowCredit;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Enterprises> _Enterprises1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMakerIDChanging(string value);
    partial void OnMakerIDChanged();
    partial void OnTakerIDChanging(string value);
    partial void OnTakerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSiteuserIDChanging(string value);
    partial void OnSiteuserIDChanged();
    partial void OnConductChanging(System.Nullable<int> value);
    partial void OnConductChanged();
    partial void OnCatalogChanging(string value);
    partial void OnCatalogChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnCurrentRateChanging(decimal value);
    partial void OnCurrentRateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public FlowCredits()
		{
			this._SitesFlowCredit = new EntitySet<SitesFlowCredit>(new Action<SitesFlowCredit>(this.attach_SitesFlowCredit), new Action<SitesFlowCredit>(this.detach_SitesFlowCredit));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Enterprises1 = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MakerID
		{
			get
			{
				return this._MakerID;
			}
			set
			{
				if ((this._MakerID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerIDChanging(value);
					this.SendPropertyChanging();
					this._MakerID = value;
					this.SendPropertyChanged("MakerID");
					this.OnMakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TakerID
		{
			get
			{
				return this._TakerID;
			}
			set
			{
				if ((this._TakerID != value))
				{
					if (this._Enterprises1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTakerIDChanging(value);
					this.SendPropertyChanging();
					this._TakerID = value;
					this.SendPropertyChanged("TakerID");
					this.OnTakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteuserID", DbType="VarChar(50)")]
		public string SiteuserID
		{
			get
			{
				return this._SiteuserID;
			}
			set
			{
				if ((this._SiteuserID != value))
				{
					this.OnSiteuserIDChanging(value);
					this.SendPropertyChanging();
					this._SiteuserID = value;
					this.SendPropertyChanged("SiteuserID");
					this.OnSiteuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conduct", DbType="Int")]
		public System.Nullable<int> Conduct
		{
			get
			{
				return this._Conduct;
			}
			set
			{
				if ((this._Conduct != value))
				{
					this.OnConductChanging(value);
					this.SendPropertyChanging();
					this._Conduct = value;
					this.SendPropertyChanged("Conduct");
					this.OnConductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="NVarChar(50)")]
		public string Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,7) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(18,7) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRate", DbType="Decimal(18,7) NOT NULL")]
		public decimal CurrentRate
		{
			get
			{
				return this._CurrentRate;
			}
			set
			{
				if ((this._CurrentRate != value))
				{
					this.OnCurrentRateChanging(value);
					this.SendPropertyChanging();
					this._CurrentRate = value;
					this.SendPropertyChanged("CurrentRate");
					this.OnCurrentRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowCredits_SitesFlowCredit", Storage="_SitesFlowCredit", ThisKey="ID", OtherKey="FlowCreditID")]
		public EntitySet<SitesFlowCredit> SitesFlowCredit
		{
			get
			{
				return this._SitesFlowCredit;
			}
			set
			{
				this._SitesFlowCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FlowCredits", Storage="_Enterprises", ThisKey="MakerID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.FlowCredits.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.FlowCredits.Add(this);
						this._MakerID = value.ID;
					}
					else
					{
						this._MakerID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_FlowCredits1", Storage="_Enterprises1", ThisKey="TakerID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises1
		{
			get
			{
				return this._Enterprises1.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises1.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises1.Entity = null;
						previousValue.FlowCredits1.Remove(this);
					}
					this._Enterprises1.Entity = value;
					if ((value != null))
					{
						value.FlowCredits1.Add(this);
						this._TakerID = value.ID;
					}
					else
					{
						this._TakerID = default(string);
					}
					this.SendPropertyChanged("Enterprises1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitesFlowCredit(SitesFlowCredit entity)
		{
			this.SendPropertyChanging();
			entity.FlowCredits = this;
		}
		
		private void detach_SitesFlowCredit(SitesFlowCredit entity)
		{
			this.SendPropertyChanging();
			entity.FlowCredits = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Certificates")]
	public partial class Certificates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OtherID;
		
		private string _CompanyID;
		
		private int _Type;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _Status;
		
		private EntitySet<MapsCertificate> _MapsCertificate;
		
		private EntitySet<SitesCertificate> _SitesCertificate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOtherIDChanging(string value);
    partial void OnOtherIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Certificates()
		{
			this._MapsCertificate = new EntitySet<MapsCertificate>(new Action<MapsCertificate>(this.attach_MapsCertificate), new Action<MapsCertificate>(this.detach_MapsCertificate));
			this._SitesCertificate = new EntitySet<SitesCertificate>(new Action<SitesCertificate>(this.attach_SitesCertificate), new Action<SitesCertificate>(this.detach_SitesCertificate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OtherID
		{
			get
			{
				return this._OtherID;
			}
			set
			{
				if ((this._OtherID != value))
				{
					this.OnOtherIDChanging(value);
					this.SendPropertyChanging();
					this._OtherID = value;
					this.SendPropertyChanged("OtherID");
					this.OnOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50)")]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificates_MapsCertificate", Storage="_MapsCertificate", ThisKey="ID", OtherKey="CertificateID")]
		public EntitySet<MapsCertificate> MapsCertificate
		{
			get
			{
				return this._MapsCertificate;
			}
			set
			{
				this._MapsCertificate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificates_SitesCertificate", Storage="_SitesCertificate", ThisKey="ID", OtherKey="CertificateID")]
		public EntitySet<SitesCertificate> SitesCertificate
		{
			get
			{
				return this._SitesCertificate;
			}
			set
			{
				this._SitesCertificate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsCertificate(MapsCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Certificates = this;
		}
		
		private void detach_MapsCertificate(MapsCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Certificates = null;
		}
		
		private void attach_SitesCertificate(SitesCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Certificates = this;
		}
		
		private void detach_SitesCertificate(SitesCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Certificates = null;
		}
	}
}
#pragma warning restore 1591
