#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layers.Data.Sqls.PSL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PSL")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertProducts(Products instance);
    partial void UpdateProducts(Products instance);
    partial void DeleteProducts(Products instance);
    partial void InsertProductQuotes(ProductQuotes instance);
    partial void UpdateProductQuotes(ProductQuotes instance);
    partial void DeleteProductQuotes(ProductQuotes instance);
    partial void InsertProductInventories(ProductInventories instance);
    partial void UpdateProductInventories(ProductInventories instance);
    partial void DeleteProductInventories(ProductInventories instance);
    partial void InsertProductDeliveries(ProductDeliveries instance);
    partial void UpdateProductDeliveries(ProductDeliveries instance);
    partial void DeleteProductDeliveries(ProductDeliveries instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layers.Data.Properties.Settings.Default.PSLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Products> Products
		{
			get
			{
				return this.GetTable<Products>();
			}
		}
		
		public System.Data.Linq.Table<ProductQuotes> ProductQuotes
		{
			get
			{
				return this.GetTable<ProductQuotes>();
			}
		}
		
		public System.Data.Linq.Table<ProductInventories> ProductInventories
		{
			get
			{
				return this.GetTable<ProductInventories>();
			}
		}
		
		public System.Data.Linq.Table<ProductDeliveries> ProductDeliveries
		{
			get
			{
				return this.GetTable<ProductDeliveries>();
			}
		}
		
		public System.Data.Linq.Table<BomQuotesTopView> BomQuotesTopView
		{
			get
			{
				return this.GetTable<BomQuotesTopView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Products : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PartNumber;
		
		private string _Manufacturer;
		
		private string _PackageCase;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<ProductInventories> _ProductInventories;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Products()
		{
			this._ProductInventories = new EntitySet<ProductInventories>(new Action<ProductInventories>(this.attach_ProductInventories), new Action<ProductInventories>(this.detach_ProductInventories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50)")]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductInventories", Storage="_ProductInventories", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<ProductInventories> ProductInventories
		{
			get
			{
				return this._ProductInventories;
			}
			set
			{
				this._ProductInventories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductInventories(ProductInventories entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ProductInventories(ProductInventories entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductQuotes")]
	public partial class ProductQuotes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _InventoryID;
		
		private int _Moq;
		
		private int _Currency;
		
		private decimal _UnitPrice;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<bool> _IsCurrent;
		
		private System.Nullable<int> _Type;
		
		private EntityRef<ProductInventories> _ProductInventories;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(string value);
    partial void OnInventoryIDChanged();
    partial void OnMoqChanging(int value);
    partial void OnMoqChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsCurrentChanging(System.Nullable<bool> value);
    partial void OnIsCurrentChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public ProductQuotes()
		{
			this._ProductInventories = default(EntityRef<ProductInventories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if (this._ProductInventories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moq", DbType="Int NOT NULL")]
		public int Moq
		{
			get
			{
				return this._Moq;
			}
			set
			{
				if ((this._Moq != value))
				{
					this.OnMoqChanging(value);
					this.SendPropertyChanging();
					this._Moq = value;
					this.SendPropertyChanged("Moq");
					this.OnMoqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit")]
		public System.Nullable<bool> IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductInventories_ProductQuotes", Storage="_ProductInventories", ThisKey="InventoryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProductInventories ProductInventories
		{
			get
			{
				return this._ProductInventories.Entity;
			}
			set
			{
				ProductInventories previousValue = this._ProductInventories.Entity;
				if (((previousValue != value) 
							|| (this._ProductInventories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductInventories.Entity = null;
						previousValue.ProductQuotes.Remove(this);
					}
					this._ProductInventories.Entity = value;
					if ((value != null))
					{
						value.ProductQuotes.Add(this);
						this._InventoryID = value.ID;
					}
					else
					{
						this._InventoryID = default(string);
					}
					this.SendPropertyChanged("ProductInventories");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductInventories")]
	public partial class ProductInventories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProductID;
		
		private string _Supplier;
		
		private string _Storage;
		
		private string _DateCode;
		
		private string _Packaging;
		
		private string _Sign;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<ProductQuotes> _ProductQuotes;
		
		private EntityRef<ProductDeliveries> _ProductDeliveries;
		
		private EntityRef<Products> _Products;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnStorageChanging(string value);
    partial void OnStorageChanged();
    partial void OnDateCodeChanging(string value);
    partial void OnDateCodeChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnSignChanging(string value);
    partial void OnSignChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public ProductInventories()
		{
			this._ProductQuotes = new EntitySet<ProductQuotes>(new Action<ProductQuotes>(this.attach_ProductQuotes), new Action<ProductQuotes>(this.detach_ProductQuotes));
			this._ProductDeliveries = default(EntityRef<ProductDeliveries>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage", DbType="VarChar(50)")]
		public string Storage
		{
			get
			{
				return this._Storage;
			}
			set
			{
				if ((this._Storage != value))
				{
					this.OnStorageChanging(value);
					this.SendPropertyChanging();
					this._Storage = value;
					this.SendPropertyChanged("Storage");
					this.OnStorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50)")]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this.OnDateCodeChanging(value);
					this.SendPropertyChanging();
					this._DateCode = value;
					this.SendPropertyChanged("DateCode");
					this.OnDateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50)")]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="VarChar(50)")]
		public string Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this.OnSignChanging(value);
					this.SendPropertyChanging();
					this._Sign = value;
					this.SendPropertyChanged("Sign");
					this.OnSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductInventories_ProductQuotes", Storage="_ProductQuotes", ThisKey="ID", OtherKey="InventoryID")]
		public EntitySet<ProductQuotes> ProductQuotes
		{
			get
			{
				return this._ProductQuotes;
			}
			set
			{
				this._ProductQuotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductInventories_ProductDeliveries", Storage="_ProductDeliveries", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ProductDeliveries ProductDeliveries
		{
			get
			{
				return this._ProductDeliveries.Entity;
			}
			set
			{
				ProductDeliveries previousValue = this._ProductDeliveries.Entity;
				if (((previousValue != value) 
							|| (this._ProductDeliveries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDeliveries.Entity = null;
						previousValue.ProductInventories = null;
					}
					this._ProductDeliveries.Entity = value;
					if ((value != null))
					{
						value.ProductInventories = this;
					}
					this.SendPropertyChanged("ProductDeliveries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductInventories", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ProductInventories.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ProductInventories.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductQuotes(ProductQuotes entity)
		{
			this.SendPropertyChanging();
			entity.ProductInventories = this;
		}
		
		private void detach_ProductQuotes(ProductQuotes entity)
		{
			this.SendPropertyChanging();
			entity.ProductInventories = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDeliveries")]
	public partial class ProductDeliveries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Moq;
		
		private System.Nullable<int> _Jump;
		
		private System.Nullable<decimal> _Mpa;
		
		private System.Nullable<int> _MpaCurrency;
		
		private string _Delivery;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private System.Nullable<int> _PackSize;
		
		private EntityRef<ProductInventories> _ProductInventories;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMoqChanging(System.Nullable<int> value);
    partial void OnMoqChanged();
    partial void OnJumpChanging(System.Nullable<int> value);
    partial void OnJumpChanged();
    partial void OnMpaChanging(System.Nullable<decimal> value);
    partial void OnMpaChanged();
    partial void OnMpaCurrencyChanging(System.Nullable<int> value);
    partial void OnMpaCurrencyChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnPackSizeChanging(System.Nullable<int> value);
    partial void OnPackSizeChanged();
    #endregion
		
		public ProductDeliveries()
		{
			this._ProductInventories = default(EntityRef<ProductInventories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ProductInventories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moq", DbType="Int")]
		public System.Nullable<int> Moq
		{
			get
			{
				return this._Moq;
			}
			set
			{
				if ((this._Moq != value))
				{
					this.OnMoqChanging(value);
					this.SendPropertyChanging();
					this._Moq = value;
					this.SendPropertyChanged("Moq");
					this.OnMoqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jump", DbType="Int")]
		public System.Nullable<int> Jump
		{
			get
			{
				return this._Jump;
			}
			set
			{
				if ((this._Jump != value))
				{
					this.OnJumpChanging(value);
					this.SendPropertyChanging();
					this._Jump = value;
					this.SendPropertyChanged("Jump");
					this.OnJumpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mpa", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Mpa
		{
			get
			{
				return this._Mpa;
			}
			set
			{
				if ((this._Mpa != value))
				{
					this.OnMpaChanging(value);
					this.SendPropertyChanging();
					this._Mpa = value;
					this.SendPropertyChanged("Mpa");
					this.OnMpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MpaCurrency", DbType="Int")]
		public System.Nullable<int> MpaCurrency
		{
			get
			{
				return this._MpaCurrency;
			}
			set
			{
				if ((this._MpaCurrency != value))
				{
					this.OnMpaCurrencyChanging(value);
					this.SendPropertyChanging();
					this._MpaCurrency = value;
					this.SendPropertyChanged("MpaCurrency");
					this.OnMpaCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(50)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackSize", DbType="Int")]
		public System.Nullable<int> PackSize
		{
			get
			{
				return this._PackSize;
			}
			set
			{
				if ((this._PackSize != value))
				{
					this.OnPackSizeChanging(value);
					this.SendPropertyChanging();
					this._PackSize = value;
					this.SendPropertyChanged("PackSize");
					this.OnPackSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductInventories_ProductDeliveries", Storage="_ProductInventories", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProductInventories ProductInventories
		{
			get
			{
				return this._ProductInventories.Entity;
			}
			set
			{
				ProductInventories previousValue = this._ProductInventories.Entity;
				if (((previousValue != value) 
							|| (this._ProductInventories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductInventories.Entity = null;
						previousValue.ProductDeliveries = null;
					}
					this._ProductInventories.Entity = value;
					if ((value != null))
					{
						value.ProductDeliveries = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("ProductInventories");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BomQuotesTopView")]
	public partial class BomQuotesTopView
	{
		
		private string _PartNumber;
		
		private string _Manufacturer;
		
		private string _PackageCase;
		
		private string _Supplier;
		
		private string _Storage;
		
		private string _DateCode;
		
		private string _Packaging;
		
		private string _Sign;
		
		private System.Nullable<int> _Quantity;
		
		private string _Delivery;
		
		private int _Moq;
		
		private int _Currency;
		
		private decimal _UnitPrice;
		
		public BomQuotesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this._PartNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50)")]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this._PackageCase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage", DbType="VarChar(50)")]
		public string Storage
		{
			get
			{
				return this._Storage;
			}
			set
			{
				if ((this._Storage != value))
				{
					this._Storage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50)")]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this._DateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50)")]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this._Packaging = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="VarChar(50)")]
		public string Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this._Sign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(50)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this._Delivery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moq", DbType="Int NOT NULL")]
		public int Moq
		{
			get
			{
				return this._Moq;
			}
			set
			{
				if ((this._Moq != value))
				{
					this._Moq = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
