#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layers.Data.Sqls.PvFinance
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PvFinance")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAcceptanceApplies(AcceptanceApplies instance);
    partial void UpdateAcceptanceApplies(AcceptanceApplies instance);
    partial void DeleteAcceptanceApplies(AcceptanceApplies instance);
    partial void InsertAcceptanceLefts(AcceptanceLefts instance);
    partial void UpdateAcceptanceLefts(AcceptanceLefts instance);
    partial void DeleteAcceptanceLefts(AcceptanceLefts instance);
    partial void InsertAcceptanceRights(AcceptanceRights instance);
    partial void UpdateAcceptanceRights(AcceptanceRights instance);
    partial void DeleteAcceptanceRights(AcceptanceRights instance);
    partial void InsertAccountCatalogs(AccountCatalogs instance);
    partial void UpdateAccountCatalogs(AccountCatalogs instance);
    partial void DeleteAccountCatalogs(AccountCatalogs instance);
    partial void InsertAccountPurposes(AccountPurposes instance);
    partial void UpdateAccountPurposes(AccountPurposes instance);
    partial void DeleteAccountPurposes(AccountPurposes instance);
    partial void InsertAccountTypes(AccountTypes instance);
    partial void UpdateAccountTypes(AccountTypes instance);
    partial void DeleteAccountTypes(AccountTypes instance);
    partial void InsertAccountWorks(AccountWorks instance);
    partial void UpdateAccountWorks(AccountWorks instance);
    partial void DeleteAccountWorks(AccountWorks instance);
    partial void InsertBankRiskAreas(BankRiskAreas instance);
    partial void UpdateBankRiskAreas(BankRiskAreas instance);
    partial void DeleteBankRiskAreas(BankRiskAreas instance);
    partial void InsertBanks(Banks instance);
    partial void UpdateBanks(Banks instance);
    partial void DeleteBanks(Banks instance);
    partial void InsertChargeApplies(ChargeApplies instance);
    partial void UpdateChargeApplies(ChargeApplies instance);
    partial void DeleteChargeApplies(ChargeApplies instance);
    partial void InsertChargeApplyItems(ChargeApplyItems instance);
    partial void UpdateChargeApplyItems(ChargeApplyItems instance);
    partial void DeleteChargeApplyItems(ChargeApplyItems instance);
    partial void InsertCostApplies(CostApplies instance);
    partial void UpdateCostApplies(CostApplies instance);
    partial void DeleteCostApplies(CostApplies instance);
    partial void InsertCostApplyItems(CostApplyItems instance);
    partial void UpdateCostApplyItems(CostApplyItems instance);
    partial void DeleteCostApplyItems(CostApplyItems instance);
    partial void InsertCostCatalogs(CostCatalogs instance);
    partial void UpdateCostCatalogs(CostCatalogs instance);
    partial void DeleteCostCatalogs(CostCatalogs instance);
    partial void InsertEndorsements(Endorsements instance);
    partial void UpdateEndorsements(Endorsements instance);
    partial void DeleteEndorsements(Endorsements instance);
    partial void InsertEnterprises(Enterprises instance);
    partial void UpdateEnterprises(Enterprises instance);
    partial void DeleteEnterprises(Enterprises instance);
    partial void InsertFilesDescription(FilesDescription instance);
    partial void UpdateFilesDescription(FilesDescription instance);
    partial void DeleteFilesDescription(FilesDescription instance);
    partial void InsertFilesMap(FilesMap instance);
    partial void UpdateFilesMap(FilesMap instance);
    partial void DeleteFilesMap(FilesMap instance);
    partial void InsertGoldStores(GoldStores instance);
    partial void UpdateGoldStores(GoldStores instance);
    partial void DeleteGoldStores(GoldStores instance);
    partial void InsertLogs_ApplyStep(Logs_ApplyStep instance);
    partial void UpdateLogs_ApplyStep(Logs_ApplyStep instance);
    partial void DeleteLogs_ApplyStep(Logs_ApplyStep instance);
    partial void InsertLogs_Callback(Logs_Callback instance);
    partial void UpdateLogs_Callback(Logs_Callback instance);
    partial void DeleteLogs_Callback(Logs_Callback instance);
    partial void InsertLogs_FlowAccount(Logs_FlowAccount instance);
    partial void UpdateLogs_FlowAccount(Logs_FlowAccount instance);
    partial void DeleteLogs_FlowAccount(Logs_FlowAccount instance);
    partial void InsertLogs_Operation(Logs_Operation instance);
    partial void UpdateLogs_Operation(Logs_Operation instance);
    partial void DeleteLogs_Operation(Logs_Operation instance);
    partial void InsertMapsAccountCatalog(MapsAccountCatalog instance);
    partial void UpdateMapsAccountCatalog(MapsAccountCatalog instance);
    partial void DeleteMapsAccountCatalog(MapsAccountCatalog instance);
    partial void InsertMapsAccountType(MapsAccountType instance);
    partial void UpdateMapsAccountType(MapsAccountType instance);
    partial void DeleteMapsAccountType(MapsAccountType instance);
    partial void InsertMapsPurpose(MapsPurpose instance);
    partial void UpdateMapsPurpose(MapsPurpose instance);
    partial void DeleteMapsPurpose(MapsPurpose instance);
    partial void InsertMoneyOrders(MoneyOrders instance);
    partial void UpdateMoneyOrders(MoneyOrders instance);
    partial void DeleteMoneyOrders(MoneyOrders instance);
    partial void InsertPayeeLefts(PayeeLefts instance);
    partial void UpdatePayeeLefts(PayeeLefts instance);
    partial void DeletePayeeLefts(PayeeLefts instance);
    partial void InsertPayeeRights(PayeeRights instance);
    partial void UpdatePayeeRights(PayeeRights instance);
    partial void DeletePayeeRights(PayeeRights instance);
    partial void InsertPayerApplies(PayerApplies instance);
    partial void UpdatePayerApplies(PayerApplies instance);
    partial void DeletePayerApplies(PayerApplies instance);
    partial void InsertPayerLefts(PayerLefts instance);
    partial void UpdatePayerLefts(PayerLefts instance);
    partial void DeletePayerLefts(PayerLefts instance);
    partial void InsertPayerRights(PayerRights instance);
    partial void UpdatePayerRights(PayerRights instance);
    partial void DeletePayerRights(PayerRights instance);
    partial void InsertPersons(Persons instance);
    partial void UpdatePersons(Persons instance);
    partial void DeletePersons(Persons instance);
    partial void InsertRefundApplies(RefundApplies instance);
    partial void UpdateRefundApplies(RefundApplies instance);
    partial void DeleteRefundApplies(RefundApplies instance);
    partial void InsertSalaryApplies(SalaryApplies instance);
    partial void UpdateSalaryApplies(SalaryApplies instance);
    partial void DeleteSalaryApplies(SalaryApplies instance);
    partial void InsertSalaryApplyItems(SalaryApplyItems instance);
    partial void UpdateSalaryApplyItems(SalaryApplyItems instance);
    partial void DeleteSalaryApplyItems(SalaryApplyItems instance);
    partial void InsertSelfApplies(SelfApplies instance);
    partial void UpdateSelfApplies(SelfApplies instance);
    partial void DeleteSelfApplies(SelfApplies instance);
    partial void InsertSelfLefts(SelfLefts instance);
    partial void UpdateSelfLefts(SelfLefts instance);
    partial void DeleteSelfLefts(SelfLefts instance);
    partial void InsertSelfRights(SelfRights instance);
    partial void UpdateSelfRights(SelfRights instance);
    partial void DeleteSelfRights(SelfRights instance);
    partial void InsertSenders(Senders instance);
    partial void UpdateSenders(Senders instance);
    partial void DeleteSenders(Senders instance);
    partial void InsertTaxRates(TaxRates instance);
    partial void UpdateTaxRates(TaxRates instance);
    partial void DeleteTaxRates(TaxRates instance);
    partial void InsertFlowAccounts(FlowAccounts instance);
    partial void UpdateFlowAccounts(FlowAccounts instance);
    partial void DeleteFlowAccounts(FlowAccounts instance);
    partial void InsertAccounts(Accounts instance);
    partial void UpdateAccounts(Accounts instance);
    partial void DeleteAccounts(Accounts instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layers.Data.Properties.Settings.Default.PvFinanceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AcceptanceApplies> AcceptanceApplies
		{
			get
			{
				return this.GetTable<AcceptanceApplies>();
			}
		}
		
		public System.Data.Linq.Table<AcceptanceLefts> AcceptanceLefts
		{
			get
			{
				return this.GetTable<AcceptanceLefts>();
			}
		}
		
		public System.Data.Linq.Table<AcceptanceRights> AcceptanceRights
		{
			get
			{
				return this.GetTable<AcceptanceRights>();
			}
		}
		
		public System.Data.Linq.Table<AccountCatalogs> AccountCatalogs
		{
			get
			{
				return this.GetTable<AccountCatalogs>();
			}
		}
		
		public System.Data.Linq.Table<AccountPurposes> AccountPurposes
		{
			get
			{
				return this.GetTable<AccountPurposes>();
			}
		}
		
		public System.Data.Linq.Table<AccountTypes> AccountTypes
		{
			get
			{
				return this.GetTable<AccountTypes>();
			}
		}
		
		public System.Data.Linq.Table<AccountWorks> AccountWorks
		{
			get
			{
				return this.GetTable<AccountWorks>();
			}
		}
		
		public System.Data.Linq.Table<BankRiskAreas> BankRiskAreas
		{
			get
			{
				return this.GetTable<BankRiskAreas>();
			}
		}
		
		public System.Data.Linq.Table<Banks> Banks
		{
			get
			{
				return this.GetTable<Banks>();
			}
		}
		
		public System.Data.Linq.Table<ChargeApplies> ChargeApplies
		{
			get
			{
				return this.GetTable<ChargeApplies>();
			}
		}
		
		public System.Data.Linq.Table<ChargeApplyItems> ChargeApplyItems
		{
			get
			{
				return this.GetTable<ChargeApplyItems>();
			}
		}
		
		public System.Data.Linq.Table<CostApplies> CostApplies
		{
			get
			{
				return this.GetTable<CostApplies>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyItems> CostApplyItems
		{
			get
			{
				return this.GetTable<CostApplyItems>();
			}
		}
		
		public System.Data.Linq.Table<CostCatalogs> CostCatalogs
		{
			get
			{
				return this.GetTable<CostCatalogs>();
			}
		}
		
		public System.Data.Linq.Table<Endorsements> Endorsements
		{
			get
			{
				return this.GetTable<Endorsements>();
			}
		}
		
		public System.Data.Linq.Table<Enterprises> Enterprises
		{
			get
			{
				return this.GetTable<Enterprises>();
			}
		}
		
		public System.Data.Linq.Table<FilesDescription> FilesDescription
		{
			get
			{
				return this.GetTable<FilesDescription>();
			}
		}
		
		public System.Data.Linq.Table<FilesMap> FilesMap
		{
			get
			{
				return this.GetTable<FilesMap>();
			}
		}
		
		public System.Data.Linq.Table<GoldStores> GoldStores
		{
			get
			{
				return this.GetTable<GoldStores>();
			}
		}
		
		public System.Data.Linq.Table<Logs_ApplyStep> Logs_ApplyStep
		{
			get
			{
				return this.GetTable<Logs_ApplyStep>();
			}
		}
		
		public System.Data.Linq.Table<Logs_Callback> Logs_Callback
		{
			get
			{
				return this.GetTable<Logs_Callback>();
			}
		}
		
		public System.Data.Linq.Table<Logs_FlowAccount> Logs_FlowAccount
		{
			get
			{
				return this.GetTable<Logs_FlowAccount>();
			}
		}
		
		public System.Data.Linq.Table<Logs_Operation> Logs_Operation
		{
			get
			{
				return this.GetTable<Logs_Operation>();
			}
		}
		
		public System.Data.Linq.Table<MapsAccountCatalog> MapsAccountCatalog
		{
			get
			{
				return this.GetTable<MapsAccountCatalog>();
			}
		}
		
		public System.Data.Linq.Table<MapsAccountType> MapsAccountType
		{
			get
			{
				return this.GetTable<MapsAccountType>();
			}
		}
		
		public System.Data.Linq.Table<MapsPurpose> MapsPurpose
		{
			get
			{
				return this.GetTable<MapsPurpose>();
			}
		}
		
		public System.Data.Linq.Table<MoneyOrders> MoneyOrders
		{
			get
			{
				return this.GetTable<MoneyOrders>();
			}
		}
		
		public System.Data.Linq.Table<PayeeLefts> PayeeLefts
		{
			get
			{
				return this.GetTable<PayeeLefts>();
			}
		}
		
		public System.Data.Linq.Table<PayeeRights> PayeeRights
		{
			get
			{
				return this.GetTable<PayeeRights>();
			}
		}
		
		public System.Data.Linq.Table<PayerApplies> PayerApplies
		{
			get
			{
				return this.GetTable<PayerApplies>();
			}
		}
		
		public System.Data.Linq.Table<PayerLefts> PayerLefts
		{
			get
			{
				return this.GetTable<PayerLefts>();
			}
		}
		
		public System.Data.Linq.Table<PayerRights> PayerRights
		{
			get
			{
				return this.GetTable<PayerRights>();
			}
		}
		
		public System.Data.Linq.Table<Persons> Persons
		{
			get
			{
				return this.GetTable<Persons>();
			}
		}
		
		public System.Data.Linq.Table<RefundApplies> RefundApplies
		{
			get
			{
				return this.GetTable<RefundApplies>();
			}
		}
		
		public System.Data.Linq.Table<SalaryApplies> SalaryApplies
		{
			get
			{
				return this.GetTable<SalaryApplies>();
			}
		}
		
		public System.Data.Linq.Table<SalaryApplyItems> SalaryApplyItems
		{
			get
			{
				return this.GetTable<SalaryApplyItems>();
			}
		}
		
		public System.Data.Linq.Table<SelfApplies> SelfApplies
		{
			get
			{
				return this.GetTable<SelfApplies>();
			}
		}
		
		public System.Data.Linq.Table<SelfLefts> SelfLefts
		{
			get
			{
				return this.GetTable<SelfLefts>();
			}
		}
		
		public System.Data.Linq.Table<SelfRights> SelfRights
		{
			get
			{
				return this.GetTable<SelfRights>();
			}
		}
		
		public System.Data.Linq.Table<Senders> Senders
		{
			get
			{
				return this.GetTable<Senders>();
			}
		}
		
		public System.Data.Linq.Table<TaxRates> TaxRates
		{
			get
			{
				return this.GetTable<TaxRates>();
			}
		}
		
		public System.Data.Linq.Table<WsClientsTopView> WsClientsTopView
		{
			get
			{
				return this.GetTable<WsClientsTopView>();
			}
		}
		
		public System.Data.Linq.Table<AccountWorksStatisticsView> AccountWorksStatisticsView
		{
			get
			{
				return this.GetTable<AccountWorksStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
		
		public System.Data.Linq.Table<CompaniesTopView> CompaniesTopView
		{
			get
			{
				return this.GetTable<CompaniesTopView>();
			}
		}
		
		public System.Data.Linq.Table<PayerStatementsView> PayerStatementsView
		{
			get
			{
				return this.GetTable<PayerStatementsView>();
			}
		}
		
		public System.Data.Linq.Table<FlowAccounts> FlowAccounts
		{
			get
			{
				return this.GetTable<FlowAccounts>();
			}
		}
		
		public System.Data.Linq.Table<Accounts> Accounts
		{
			get
			{
				return this.GetTable<Accounts>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptanceApplies")]
	public partial class AcceptanceApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MoneyOrderID;
		
		private int _Type;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _Summary;
		
		private string _SenderID;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMoneyOrderIDChanging(string value);
    partial void OnMoneyOrderIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public AcceptanceApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MoneyOrderID
		{
			get
			{
				return this._MoneyOrderID;
			}
			set
			{
				if ((this._MoneyOrderID != value))
				{
					this.OnMoneyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyOrderID = value;
					this.SendPropertyChanged("MoneyOrderID");
					this.OnMoneyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptanceLefts")]
	public partial class AcceptanceLefts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private int _AccountMethord;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnAccountMethordChanging(int value);
    partial void OnAccountMethordChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public AcceptanceLefts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountMethord", DbType="Int NOT NULL")]
		public int AccountMethord
		{
			get
			{
				return this._AccountMethord;
			}
			set
			{
				if ((this._AccountMethord != value))
				{
					this.OnAccountMethordChanging(value);
					this.SendPropertyChanging();
					this._AccountMethord = value;
					this.SendPropertyChanged("AccountMethord");
					this.OnAccountMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptanceRights")]
	public partial class AcceptanceRights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AcceptanceLeftID;
		
		private decimal _Price;
		
		private string _FlowID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAcceptanceLeftIDChanging(string value);
    partial void OnAcceptanceLeftIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public AcceptanceRights()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AcceptanceLeftID
		{
			get
			{
				return this._AcceptanceLeftID;
			}
			set
			{
				if ((this._AcceptanceLeftID != value))
				{
					this.OnAcceptanceLeftIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceLeftID = value;
					this.SendPropertyChanged("AcceptanceLeftID");
					this.OnAcceptanceLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountCatalogs")]
	public partial class AccountCatalogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public AccountCatalogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPurposes")]
	public partial class AccountPurposes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntitySet<MapsPurpose> _MapsPurpose;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public AccountPurposes()
		{
			this._MapsPurpose = new EntitySet<MapsPurpose>(new Action<MapsPurpose>(this.attach_MapsPurpose), new Action<MapsPurpose>(this.detach_MapsPurpose));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountPurposes_MapsPurpose", Storage="_MapsPurpose", ThisKey="ID", OtherKey="AccountPurposeID")]
		public EntitySet<MapsPurpose> MapsPurpose
		{
			get
			{
				return this._MapsPurpose;
			}
			set
			{
				this._MapsPurpose.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsPurpose(MapsPurpose entity)
		{
			this.SendPropertyChanging();
			entity.AccountPurposes = this;
		}
		
		private void detach_MapsPurpose(MapsPurpose entity)
		{
			this.SendPropertyChanging();
			entity.AccountPurposes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountTypes")]
	public partial class AccountTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public AccountTypes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountWorks")]
	public partial class AccountWorks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeLeftID;
		
		private string _Conduct;
		
		private string _Company;
		
		private string _ClaimantID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeLeftIDChanging(string value);
    partial void OnPayeeLeftIDChanged();
    partial void OnConductChanging(string value);
    partial void OnConductChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnClaimantIDChanging(string value);
    partial void OnClaimantIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public AccountWorks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeLeftID
		{
			get
			{
				return this._PayeeLeftID;
			}
			set
			{
				if ((this._PayeeLeftID != value))
				{
					this.OnPayeeLeftIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeLeftID = value;
					this.SendPropertyChanged("PayeeLeftID");
					this.OnPayeeLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conduct", DbType="NVarChar(50)")]
		public string Conduct
		{
			get
			{
				return this._Conduct;
			}
			set
			{
				if ((this._Conduct != value))
				{
					this.OnConductChanging(value);
					this.SendPropertyChanging();
					this._Conduct = value;
					this.SendPropertyChanged("Conduct");
					this.OnConductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(150)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimantID", DbType="VarChar(50)")]
		public string ClaimantID
		{
			get
			{
				return this._ClaimantID;
			}
			set
			{
				if ((this._ClaimantID != value))
				{
					this.OnClaimantIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimantID = value;
					this.SendPropertyChanged("ClaimantID");
					this.OnClaimantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankRiskAreas")]
	public partial class BankRiskAreas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BankID;
		
		private string _District;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntityRef<Banks> _Banks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankIDChanging(string value);
    partial void OnBankIDChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public BankRiskAreas()
		{
			this._Banks = default(EntityRef<Banks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Banks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banks_BankRiskAreas", Storage="_Banks", ThisKey="BankID", OtherKey="ID", IsForeignKey=true)]
		public Banks Banks
		{
			get
			{
				return this._Banks.Entity;
			}
			set
			{
				Banks previousValue = this._Banks.Entity;
				if (((previousValue != value) 
							|| (this._Banks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Banks.Entity = null;
						previousValue.BankRiskAreas.Remove(this);
					}
					this._Banks.Entity = value;
					if ((value != null))
					{
						value.BankRiskAreas.Add(this);
						this._BankID = value.ID;
					}
					else
					{
						this._BankID = default(string);
					}
					this.SendPropertyChanged("Banks");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banks")]
	public partial class Banks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _EnglishName;
		
		private string _SwiftCode;
		
		private string _CostSummay;
		
		private System.Nullable<bool> _IsAccountCost;
		
		private System.Nullable<decimal> _AccountCost;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntitySet<BankRiskAreas> _BankRiskAreas;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnCostSummayChanging(string value);
    partial void OnCostSummayChanged();
    partial void OnIsAccountCostChanging(System.Nullable<bool> value);
    partial void OnIsAccountCostChanged();
    partial void OnAccountCostChanging(System.Nullable<decimal> value);
    partial void OnAccountCostChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Banks()
		{
			this._BankRiskAreas = new EntitySet<BankRiskAreas>(new Action<BankRiskAreas>(this.attach_BankRiskAreas), new Action<BankRiskAreas>(this.detach_BankRiskAreas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="VarChar(150)")]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostSummay", DbType="NVarChar(500)")]
		public string CostSummay
		{
			get
			{
				return this._CostSummay;
			}
			set
			{
				if ((this._CostSummay != value))
				{
					this.OnCostSummayChanging(value);
					this.SendPropertyChanging();
					this._CostSummay = value;
					this.SendPropertyChanged("CostSummay");
					this.OnCostSummayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccountCost", DbType="Bit")]
		public System.Nullable<bool> IsAccountCost
		{
			get
			{
				return this._IsAccountCost;
			}
			set
			{
				if ((this._IsAccountCost != value))
				{
					this.OnIsAccountCostChanging(value);
					this.SendPropertyChanging();
					this._IsAccountCost = value;
					this.SendPropertyChanged("IsAccountCost");
					this.OnIsAccountCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCost", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> AccountCost
		{
			get
			{
				return this._AccountCost;
			}
			set
			{
				if ((this._AccountCost != value))
				{
					this.OnAccountCostChanging(value);
					this.SendPropertyChanging();
					this._AccountCost = value;
					this.SendPropertyChanged("AccountCost");
					this.OnAccountCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banks_BankRiskAreas", Storage="_BankRiskAreas", ThisKey="ID", OtherKey="BankID")]
		public EntitySet<BankRiskAreas> BankRiskAreas
		{
			get
			{
				return this._BankRiskAreas;
			}
			set
			{
				this._BankRiskAreas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankRiskAreas(BankRiskAreas entity)
		{
			this.SendPropertyChanging();
			entity.Banks = this;
		}
		
		private void detach_BankRiskAreas(BankRiskAreas entity)
		{
			this.SendPropertyChanging();
			entity.Banks = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChargeApplies")]
	public partial class ChargeApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _PayerID;
		
		private int _Type;
		
		private System.Nullable<bool> _IsImmediately;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _Summary;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private string _SenderID;
		
		private string _Department;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
		private EntitySet<ChargeApplyItems> _ChargeApplyItems;
		
		private EntityRef<Senders> _Senders;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnIsImmediatelyChanging(System.Nullable<bool> value);
    partial void OnIsImmediatelyChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ChargeApplies()
		{
			this._ChargeApplyItems = new EntitySet<ChargeApplyItems>(new Action<ChargeApplyItems>(this.attach_ChargeApplyItems), new Action<ChargeApplyItems>(this.detach_ChargeApplyItems));
			this._Senders = default(EntityRef<Senders>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50)")]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImmediately", DbType="Bit")]
		public System.Nullable<bool> IsImmediately
		{
			get
			{
				return this._IsImmediately;
			}
			set
			{
				if ((this._IsImmediately != value))
				{
					this.OnIsImmediatelyChanging(value);
					this.SendPropertyChanging();
					this._IsImmediately = value;
					this.SendPropertyChanged("IsImmediately");
					this.OnIsImmediatelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargeApplies_ChargeApplyItems", Storage="_ChargeApplyItems", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<ChargeApplyItems> ChargeApplyItems
		{
			get
			{
				return this._ChargeApplyItems;
			}
			set
			{
				this._ChargeApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_ChargeApplies", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.ChargeApplies.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.ChargeApplies.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_ChargeApplies", Storage="_Accounts", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.ChargeApplies.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.ChargeApplies.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_ChargeApplies1", Storage="_Accounts1", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.ChargeApplies1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.ChargeApplies1.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChargeApplyItems(ChargeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.ChargeApplies = this;
		}
		
		private void detach_ChargeApplyItems(ChargeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.ChargeApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChargeApplyItems")]
	public partial class ChargeApplyItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private bool _IsPaid;
		
		private System.Nullable<System.DateTime> _ExpectedTime;
		
		private string _AccountCatalogID;
		
		private System.Nullable<decimal> _Price;
		
		private string _Summary;
		
		private string _FlowID;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntityRef<ChargeApplies> _ChargeApplies;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnExpectedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedTimeChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ChargeApplyItems()
		{
			this._ChargeApplies = default(EntityRef<ChargeApplies>);
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50)")]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._ChargeApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedTime
		{
			get
			{
				return this._ExpectedTime;
			}
			set
			{
				if ((this._ExpectedTime != value))
				{
					this.OnExpectedTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedTime = value;
					this.SendPropertyChanged("ExpectedTime");
					this.OnExpectedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50)")]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50)")]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargeApplies_ChargeApplyItems", Storage="_ChargeApplies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public ChargeApplies ChargeApplies
		{
			get
			{
				return this._ChargeApplies.Entity;
			}
			set
			{
				ChargeApplies previousValue = this._ChargeApplies.Entity;
				if (((previousValue != value) 
							|| (this._ChargeApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChargeApplies.Entity = null;
						previousValue.ChargeApplyItems.Remove(this);
					}
					this._ChargeApplies.Entity = value;
					if ((value != null))
					{
						value.ChargeApplyItems.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("ChargeApplies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_ChargeApplyItems", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.ChargeApplyItems.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.ChargeApplyItems.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplies")]
	public partial class CostApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _PayerID;
		
		private int _Type;
		
		private System.Nullable<bool> _IsImmediately;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _CostPurpose;
		
		private string _Summary;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private string _SenderID;
		
		private string _Department;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
		private EntitySet<CostApplyItems> _CostApplyItems;
		
		private EntityRef<Senders> _Senders;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnIsImmediatelyChanging(System.Nullable<bool> value);
    partial void OnIsImmediatelyChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCostPurposeChanging(int value);
    partial void OnCostPurposeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public CostApplies()
		{
			this._CostApplyItems = new EntitySet<CostApplyItems>(new Action<CostApplyItems>(this.attach_CostApplyItems), new Action<CostApplyItems>(this.detach_CostApplyItems));
			this._Senders = default(EntityRef<Senders>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50)")]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImmediately", DbType="Bit")]
		public System.Nullable<bool> IsImmediately
		{
			get
			{
				return this._IsImmediately;
			}
			set
			{
				if ((this._IsImmediately != value))
				{
					this.OnIsImmediatelyChanging(value);
					this.SendPropertyChanging();
					this._IsImmediately = value;
					this.SendPropertyChanged("IsImmediately");
					this.OnIsImmediatelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPurpose", DbType="Int NOT NULL")]
		public int CostPurpose
		{
			get
			{
				return this._CostPurpose;
			}
			set
			{
				if ((this._CostPurpose != value))
				{
					this.OnCostPurposeChanging(value);
					this.SendPropertyChanging();
					this._CostPurpose = value;
					this.SendPropertyChanged("CostPurpose");
					this.OnCostPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostApplies_CostApplyItems", Storage="_CostApplyItems", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<CostApplyItems> CostApplyItems
		{
			get
			{
				return this._CostApplyItems;
			}
			set
			{
				this._CostApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_CostApplies", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.CostApplies.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.CostApplies.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_CostApplies", Storage="_Accounts", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.CostApplies.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.CostApplies.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_CostApplies1", Storage="_Accounts1", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.CostApplies1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.CostApplies1.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CostApplyItems(CostApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.CostApplies = this;
		}
		
		private void detach_CostApplyItems(CostApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.CostApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyItems")]
	public partial class CostApplyItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private bool _IsPaid;
		
		private System.Nullable<System.DateTime> _ExpectedTime;
		
		private string _AccountCatalogID;
		
		private System.Nullable<decimal> _Price;
		
		private string _Summary;
		
		private string _FlowID;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntityRef<CostApplies> _CostApplies;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnExpectedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedTimeChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public CostApplyItems()
		{
			this._CostApplies = default(EntityRef<CostApplies>);
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50)")]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._CostApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedTime
		{
			get
			{
				return this._ExpectedTime;
			}
			set
			{
				if ((this._ExpectedTime != value))
				{
					this.OnExpectedTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedTime = value;
					this.SendPropertyChanged("ExpectedTime");
					this.OnExpectedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50)")]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50)")]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostApplies_CostApplyItems", Storage="_CostApplies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public CostApplies CostApplies
		{
			get
			{
				return this._CostApplies.Entity;
			}
			set
			{
				CostApplies previousValue = this._CostApplies.Entity;
				if (((previousValue != value) 
							|| (this._CostApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostApplies.Entity = null;
						previousValue.CostApplyItems.Remove(this);
					}
					this._CostApplies.Entity = value;
					if ((value != null))
					{
						value.CostApplyItems.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("CostApplies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_CostApplyItems", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.CostApplyItems.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.CostApplyItems.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostCatalogs")]
	public partial class CostCatalogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _OwnerID;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public CostCatalogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50)")]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Endorsements")]
	public partial class Endorsements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MoneyOrderID;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private System.DateTime _EndorseDate;
		
		private bool _IsTransfer;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMoneyOrderIDChanging(string value);
    partial void OnMoneyOrderIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnEndorseDateChanging(System.DateTime value);
    partial void OnEndorseDateChanged();
    partial void OnIsTransferChanging(bool value);
    partial void OnIsTransferChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Endorsements()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MoneyOrderID
		{
			get
			{
				return this._MoneyOrderID;
			}
			set
			{
				if ((this._MoneyOrderID != value))
				{
					this.OnMoneyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyOrderID = value;
					this.SendPropertyChanged("MoneyOrderID");
					this.OnMoneyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndorseDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndorseDate
		{
			get
			{
				return this._EndorseDate;
			}
			set
			{
				if ((this._EndorseDate != value))
				{
					this.OnEndorseDateChanging(value);
					this.SendPropertyChanging();
					this._EndorseDate = value;
					this.SendPropertyChanged("EndorseDate");
					this.OnEndorseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransfer", DbType="Bit NOT NULL")]
		public bool IsTransfer
		{
			get
			{
				return this._IsTransfer;
			}
			set
			{
				if ((this._IsTransfer != value))
				{
					this.OnIsTransferChanging(value);
					this.SendPropertyChanging();
					this._IsTransfer = value;
					this.SendPropertyChanged("IsTransfer");
					this.OnIsTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enterprises")]
	public partial class Enterprises : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private int _Type;
		
		private string _District;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Enterprises()
		{
			this._Accounts = new EntitySet<Accounts>(new Action<Accounts>(this.attach_Accounts), new Action<Accounts>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Accounts", Storage="_Accounts", ThisKey="ID", OtherKey="EnterpriseID")]
		public EntitySet<Accounts> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilesDescription")]
	public partial class FilesDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Url;
		
		private string _CustomName;
		
		private System.DateTime _CreateDate;
		
		private string _CreatorID;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCustomNameChanging(string value);
    partial void OnCustomNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public FilesDescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomName", DbType="NVarChar(256)")]
		public string CustomName
		{
			get
			{
				return this._CustomName;
			}
			set
			{
				if ((this._CustomName != value))
				{
					this.OnCustomNameChanging(value);
					this.SendPropertyChanging();
					this._CustomName = value;
					this.SendPropertyChanged("CustomName");
					this.OnCustomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilesMap")]
	public partial class FilesMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FileID;
		
		private string _Name;
		
		private string _Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFileIDChanging(string value);
    partial void OnFileIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public FilesMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="VarChar(50)")]
		public string FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoldStores")]
	public partial class GoldStores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _Summary;
		
		private bool _IsSpecial;
		
		private string _OwnerID;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntitySet<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsSpecialChanging(bool value);
    partial void OnIsSpecialChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public GoldStores()
		{
			this._Accounts = new EntitySet<Accounts>(new Action<Accounts>(this.attach_Accounts), new Action<Accounts>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecial", DbType="Bit NOT NULL")]
		public bool IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoldStores_Accounts", Storage="_Accounts", ThisKey="ID", OtherKey="GoldStoreID")]
		public EntitySet<Accounts> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.GoldStores = this;
		}
		
		private void detach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.GoldStores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_ApplyStep")]
	public partial class Logs_ApplyStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private int _Type;
		
		private string _Summary;
		
		private string _ApproverID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Logs_ApplyStep()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_Callback")]
	public partial class Logs_Callback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CallbackIUrl;
		
		private string _CallbackID;
		
		private System.Nullable<int> _StautsCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCallbackIUrlChanging(string value);
    partial void OnCallbackIUrlChanged();
    partial void OnCallbackIDChanging(string value);
    partial void OnCallbackIDChanged();
    partial void OnStautsCodeChanging(System.Nullable<int> value);
    partial void OnStautsCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Logs_Callback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallbackIUrl", DbType="VarChar(200)")]
		public string CallbackIUrl
		{
			get
			{
				return this._CallbackIUrl;
			}
			set
			{
				if ((this._CallbackIUrl != value))
				{
					this.OnCallbackIUrlChanging(value);
					this.SendPropertyChanging();
					this._CallbackIUrl = value;
					this.SendPropertyChanged("CallbackIUrl");
					this.OnCallbackIUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallbackID", DbType="NVarChar(MAX)")]
		public string CallbackID
		{
			get
			{
				return this._CallbackID;
			}
			set
			{
				if ((this._CallbackID != value))
				{
					this.OnCallbackIDChanging(value);
					this.SendPropertyChanging();
					this._CallbackID = value;
					this.SendPropertyChanged("CallbackID");
					this.OnCallbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StautsCode", DbType="Int")]
		public System.Nullable<int> StautsCode
		{
			get
			{
				return this._StautsCode;
			}
			set
			{
				if ((this._StautsCode != value))
				{
					this.OnStautsCodeChanging(value);
					this.SendPropertyChanging();
					this._StautsCode = value;
					this.SendPropertyChanged("StautsCode");
					this.OnStautsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_FlowAccount")]
	public partial class Logs_FlowAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _AccountMethord;
		
		private string _AccountID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private decimal _Balance;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _FormCode;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private decimal _Balance1;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _TargetAccountName;
		
		private string _TargetAccountCode;
		
		private int _PaymentMethord;
		
		private string _SourceID;
		
		private System.Nullable<System.DateTime> _SourceCreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAccountMethordChanging(int value);
    partial void OnAccountMethordChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnFormCodeChanging(string value);
    partial void OnFormCodeChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnBalance1Changing(decimal value);
    partial void OnBalance1Changed();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnTargetAccountNameChanging(string value);
    partial void OnTargetAccountNameChanged();
    partial void OnTargetAccountCodeChanging(string value);
    partial void OnTargetAccountCodeChanged();
    partial void OnPaymentMethordChanging(int value);
    partial void OnPaymentMethordChanged();
    partial void OnSourceIDChanging(string value);
    partial void OnSourceIDChanged();
    partial void OnSourceCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSourceCreateDateChanged();
    #endregion
		
		public Logs_FlowAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountMethord", DbType="Int NOT NULL")]
		public int AccountMethord
		{
			get
			{
				return this._AccountMethord;
			}
			set
			{
				if ((this._AccountMethord != value))
				{
					this.OnAccountMethordChanging(value);
					this.SendPropertyChanging();
					this._AccountMethord = value;
					this.SendPropertyChanged("AccountMethord");
					this.OnAccountMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(22,10) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this.OnFormCodeChanging(value);
					this.SendPropertyChanging();
					this._FormCode = value;
					this.SendPropertyChanged("FormCode");
					this.OnFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Balance1
		{
			get
			{
				return this._Balance1;
			}
			set
			{
				if ((this._Balance1 != value))
				{
					this.OnBalance1Changing(value);
					this.SendPropertyChanging();
					this._Balance1 = value;
					this.SendPropertyChanged("Balance1");
					this.OnBalance1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountName", DbType="NVarChar(150)")]
		public string TargetAccountName
		{
			get
			{
				return this._TargetAccountName;
			}
			set
			{
				if ((this._TargetAccountName != value))
				{
					this.OnTargetAccountNameChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountName = value;
					this.SendPropertyChanged("TargetAccountName");
					this.OnTargetAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountCode", DbType="VarChar(50)")]
		public string TargetAccountCode
		{
			get
			{
				return this._TargetAccountCode;
			}
			set
			{
				if ((this._TargetAccountCode != value))
				{
					this.OnTargetAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountCode = value;
					this.SendPropertyChanged("TargetAccountCode");
					this.OnTargetAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethord", DbType="Int NOT NULL")]
		public int PaymentMethord
		{
			get
			{
				return this._PaymentMethord;
			}
			set
			{
				if ((this._PaymentMethord != value))
				{
					this.OnPaymentMethordChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethord = value;
					this.SendPropertyChanged("PaymentMethord");
					this.OnPaymentMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="VarChar(50)")]
		public string SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SourceCreateDate
		{
			get
			{
				return this._SourceCreateDate;
			}
			set
			{
				if ((this._SourceCreateDate != value))
				{
					this.OnSourceCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SourceCreateDate = value;
					this.SendPropertyChanged("SourceCreateDate");
					this.OnSourceCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_Operation")]
	public partial class Logs_Operation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Modular;
		
		private string _Type;
		
		private string _Url;
		
		private string _Operation;
		
		private string _Remark;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnModularChanging(string value);
    partial void OnModularChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnOperationChanging(string value);
    partial void OnOperationChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Logs_Operation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modular", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Modular
		{
			get
			{
				return this._Modular;
			}
			set
			{
				if ((this._Modular != value))
				{
					this.OnModularChanging(value);
					this.SendPropertyChanging();
					this._Modular = value;
					this.SendPropertyChanged("Modular");
					this.OnModularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAccountCatalog")]
	public partial class MapsAccountCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _AccountCatalogID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    #endregion
		
		public MapsAccountCatalog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAccountType")]
	public partial class MapsAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountID;
		
		private string _AccountTypeID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountTypeIDChanging(string value);
    partial void OnAccountTypeIDChanged();
    #endregion
		
		public MapsAccountType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsPurpose")]
	public partial class MapsPurpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountID;
		
		private string _AccountPurposeID;
		
		private EntityRef<AccountPurposes> _AccountPurposes;
		
		private EntityRef<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountPurposeIDChanging(string value);
    partial void OnAccountPurposeIDChanged();
    #endregion
		
		public MapsPurpose()
		{
			this._AccountPurposes = default(EntityRef<AccountPurposes>);
			this._Accounts = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPurposeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountPurposeID
		{
			get
			{
				return this._AccountPurposeID;
			}
			set
			{
				if ((this._AccountPurposeID != value))
				{
					if (this._AccountPurposes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountPurposeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountPurposeID = value;
					this.SendPropertyChanged("AccountPurposeID");
					this.OnAccountPurposeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountPurposes_MapsPurpose", Storage="_AccountPurposes", ThisKey="AccountPurposeID", OtherKey="ID", IsForeignKey=true)]
		public AccountPurposes AccountPurposes
		{
			get
			{
				return this._AccountPurposes.Entity;
			}
			set
			{
				AccountPurposes previousValue = this._AccountPurposes.Entity;
				if (((previousValue != value) 
							|| (this._AccountPurposes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountPurposes.Entity = null;
						previousValue.MapsPurpose.Remove(this);
					}
					this._AccountPurposes.Entity = value;
					if ((value != null))
					{
						value.MapsPurpose.Add(this);
						this._AccountPurposeID = value.ID;
					}
					else
					{
						this._AccountPurposeID = default(string);
					}
					this.SendPropertyChanged("AccountPurposes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_MapsPurpose", Storage="_Accounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.MapsPurpose.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.MapsPurpose.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoneyOrders")]
	public partial class MoneyOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private string _Code;
		
		private string _BankCode;
		
		private string _BankName;
		
		private string _BankNo;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private bool _IsTransfer;
		
		private bool _IsMoney;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _Nature;
		
		private System.Nullable<System.DateTime> _ExchangeDate;
		
		private System.Nullable<decimal> _ExchangePrice;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ModifierID;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankNoChanging(string value);
    partial void OnBankNoChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnIsTransferChanging(bool value);
    partial void OnIsTransferChanged();
    partial void OnIsMoneyChanging(bool value);
    partial void OnIsMoneyChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnNatureChanging(int value);
    partial void OnNatureChanged();
    partial void OnExchangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExchangeDateChanged();
    partial void OnExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnExchangePriceChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public MoneyOrders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="VarChar(50)")]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNo", DbType="VarChar(50)")]
		public string BankNo
		{
			get
			{
				return this._BankNo;
			}
			set
			{
				if ((this._BankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._BankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransfer", DbType="Bit NOT NULL")]
		public bool IsTransfer
		{
			get
			{
				return this._IsTransfer;
			}
			set
			{
				if ((this._IsTransfer != value))
				{
					this.OnIsTransferChanging(value);
					this.SendPropertyChanging();
					this._IsTransfer = value;
					this.SendPropertyChanged("IsTransfer");
					this.OnIsTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMoney", DbType="Bit NOT NULL")]
		public bool IsMoney
		{
			get
			{
				return this._IsMoney;
			}
			set
			{
				if ((this._IsMoney != value))
				{
					this.OnIsMoneyChanging(value);
					this.SendPropertyChanging();
					this._IsMoney = value;
					this.SendPropertyChanged("IsMoney");
					this.OnIsMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="Int NOT NULL")]
		public int Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeDate
		{
			get
			{
				return this._ExchangeDate;
			}
			set
			{
				if ((this._ExchangeDate != value))
				{
					this.OnExchangeDateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeDate = value;
					this.SendPropertyChanged("ExchangeDate");
					this.OnExchangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangePrice", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> ExchangePrice
		{
			get
			{
				return this._ExchangePrice;
			}
			set
			{
				if ((this._ExchangePrice != value))
				{
					this.OnExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._ExchangePrice = value;
					this.SendPropertyChanged("ExchangePrice");
					this.OnExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayeeLefts")]
	public partial class PayeeLefts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AccountCatalogID;
		
		private string _AccountID;
		
		private int _PayerNature;
		
		private string _PayerName;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _FlowID;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<PayeeRights> _PayeeRights;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
		private EntityRef<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnPayerNatureChanging(int value);
    partial void OnPayerNatureChanged();
    partial void OnPayerNameChanging(string value);
    partial void OnPayerNameChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PayeeLefts()
		{
			this._PayeeRights = new EntitySet<PayeeRights>(new Action<PayeeRights>(this.attach_PayeeRights), new Action<PayeeRights>(this.detach_PayeeRights));
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			this._Accounts = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerNature", DbType="Int NOT NULL")]
		public int PayerNature
		{
			get
			{
				return this._PayerNature;
			}
			set
			{
				if ((this._PayerNature != value))
				{
					this.OnPayerNatureChanging(value);
					this.SendPropertyChanging();
					this._PayerNature = value;
					this.SendPropertyChanged("PayerNature");
					this.OnPayerNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerName", DbType="NVarChar(50)")]
		public string PayerName
		{
			get
			{
				return this._PayerName;
			}
			set
			{
				if ((this._PayerName != value))
				{
					this.OnPayerNameChanging(value);
					this.SendPropertyChanging();
					this._PayerName = value;
					this.SendPropertyChanged("PayerName");
					this.OnPayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayeeLefts_PayeeRights", Storage="_PayeeRights", ThisKey="ID", OtherKey="PayeeLeftID")]
		public EntitySet<PayeeRights> PayeeRights
		{
			get
			{
				return this._PayeeRights;
			}
			set
			{
				this._PayeeRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_PayeeLefts", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.PayeeLefts.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.PayeeLefts.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayeeLefts", Storage="_Accounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.PayeeLefts.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.PayeeLefts.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayeeRights(PayeeRights entity)
		{
			this.SendPropertyChanging();
			entity.PayeeLefts = this;
		}
		
		private void detach_PayeeRights(PayeeRights entity)
		{
			this.SendPropertyChanging();
			entity.PayeeLefts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayeeRights")]
	public partial class PayeeRights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeLeftID;
		
		private string _AccountCatalogID;
		
		private string _SenderID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _Price1;
		
		private decimal _ERate1;
		
		private string _Department;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<PayeeLefts> _PayeeLefts;
		
		private EntityRef<Senders> _Senders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeLeftIDChanging(string value);
    partial void OnPayeeLeftIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public PayeeRights()
		{
			this._PayeeLefts = default(EntityRef<PayeeLefts>);
			this._Senders = default(EntityRef<Senders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeLeftID
		{
			get
			{
				return this._PayeeLeftID;
			}
			set
			{
				if ((this._PayeeLeftID != value))
				{
					if (this._PayeeLefts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeLeftIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeLeftID = value;
					this.SendPropertyChanged("PayeeLeftID");
					this.OnPayeeLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,7) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(18,7) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(18,7) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(150)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayeeLefts_PayeeRights", Storage="_PayeeLefts", ThisKey="PayeeLeftID", OtherKey="ID", IsForeignKey=true)]
		public PayeeLefts PayeeLefts
		{
			get
			{
				return this._PayeeLefts.Entity;
			}
			set
			{
				PayeeLefts previousValue = this._PayeeLefts.Entity;
				if (((previousValue != value) 
							|| (this._PayeeLefts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayeeLefts.Entity = null;
						previousValue.PayeeRights.Remove(this);
					}
					this._PayeeLefts.Entity = value;
					if ((value != null))
					{
						value.PayeeRights.Add(this);
						this._PayeeLeftID = value.ID;
					}
					else
					{
						this._PayeeLeftID = default(string);
					}
					this.SendPropertyChanged("PayeeLefts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_PayeeRights", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.PayeeRights.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.PayeeRights.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayerApplies")]
	public partial class PayerApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _PayerID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _Summary;
		
		private bool _IsPaid;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private string _SenderID;
		
		private string _Department;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
		private EntitySet<PayerLefts> _PayerLefts;
		
		private EntityRef<Senders> _Senders;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public PayerApplies()
		{
			this._PayerLefts = new EntitySet<PayerLefts>(new Action<PayerLefts>(this.attach_PayerLefts), new Action<PayerLefts>(this.detach_PayerLefts));
			this._Senders = default(EntityRef<Senders>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50)")]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayerApplies_PayerLefts", Storage="_PayerLefts", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<PayerLefts> PayerLefts
		{
			get
			{
				return this._PayerLefts;
			}
			set
			{
				this._PayerLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_PayerApplies", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.PayerApplies.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.PayerApplies.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerApplies", Storage="_Accounts", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.PayerApplies.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.PayerApplies.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerApplies1", Storage="_Accounts1", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.PayerApplies1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.PayerApplies1.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayerLefts(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.PayerApplies = this;
		}
		
		private void detach_PayerLefts(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.PayerApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayerLefts")]
	public partial class PayerLefts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _PayerID;
		
		private string _AccountCatalogID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private string _ApplyID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private EntitySet<PayerRights> _PayerRights;
		
		private EntityRef<PayerApplies> _PayerApplies;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public PayerLefts()
		{
			this._PayerRights = new EntitySet<PayerRights>(new Action<PayerRights>(this.attach_PayerRights), new Action<PayerRights>(this.detach_PayerRights));
			this._PayerApplies = default(EntityRef<PayerApplies>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50)")]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._PayerApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayerLefts_PayerRights", Storage="_PayerRights", ThisKey="ID", OtherKey="PayerLeftID")]
		public EntitySet<PayerRights> PayerRights
		{
			get
			{
				return this._PayerRights;
			}
			set
			{
				this._PayerRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayerApplies_PayerLefts", Storage="_PayerApplies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public PayerApplies PayerApplies
		{
			get
			{
				return this._PayerApplies.Entity;
			}
			set
			{
				PayerApplies previousValue = this._PayerApplies.Entity;
				if (((previousValue != value) 
							|| (this._PayerApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayerApplies.Entity = null;
						previousValue.PayerLefts.Remove(this);
					}
					this._PayerApplies.Entity = value;
					if ((value != null))
					{
						value.PayerLefts.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("PayerApplies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerLefts", Storage="_Accounts", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.PayerLefts.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.PayerLefts.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerLefts1", Storage="_Accounts1", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.PayerLefts1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.PayerLefts1.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayerRights(PayerRights entity)
		{
			this.SendPropertyChanging();
			entity.PayerLefts = this;
		}
		
		private void detach_PayerRights(PayerRights entity)
		{
			this.SendPropertyChanging();
			entity.PayerLefts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayerRights")]
	public partial class PayerRights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayerLeftID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private string _FlowID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<PayerLefts> _PayerLefts;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayerLeftIDChanging(string value);
    partial void OnPayerLeftIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public PayerRights()
		{
			this._PayerLefts = default(EntityRef<PayerLefts>);
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerLeftID
		{
			get
			{
				return this._PayerLeftID;
			}
			set
			{
				if ((this._PayerLeftID != value))
				{
					if (this._PayerLefts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerLeftIDChanging(value);
					this.SendPropertyChanging();
					this._PayerLeftID = value;
					this.SendPropertyChanged("PayerLeftID");
					this.OnPayerLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayerLefts_PayerRights", Storage="_PayerLefts", ThisKey="PayerLeftID", OtherKey="ID", IsForeignKey=true)]
		public PayerLefts PayerLefts
		{
			get
			{
				return this._PayerLefts.Entity;
			}
			set
			{
				PayerLefts previousValue = this._PayerLefts.Entity;
				if (((previousValue != value) 
							|| (this._PayerLefts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayerLefts.Entity = null;
						previousValue.PayerRights.Remove(this);
					}
					this._PayerLefts.Entity = value;
					if ((value != null))
					{
						value.PayerRights.Add(this);
						this._PayerLeftID = value.ID;
					}
					else
					{
						this._PayerLeftID = default(string);
					}
					this.SendPropertyChanged("PayerLefts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_PayerRights", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.PayerRights.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.PayerRights.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Persons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _RealName;
		
		private System.Nullable<int> _Gender;
		
		private string _IDCard;
		
		private string _Mobile;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntitySet<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Persons()
		{
			this._Accounts = new EntitySet<Accounts>(new Action<Accounts>(this.attach_Accounts), new Action<Accounts>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="VarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_Accounts", Storage="_Accounts", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Accounts> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.Persons = this;
		}
		
		private void detach_Accounts(Accounts entity)
		{
			this.SendPropertyChanging();
			entity.Persons = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefundApplies")]
	public partial class RefundApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _PayeeLeftID;
		
		private string _AccountCatalogID;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private string _FlowID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _Summary;
		
		private string _SenderID;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPayeeLeftIDChanging(string value);
    partial void OnPayeeLeftIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public RefundApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeLeftID
		{
			get
			{
				return this._PayeeLeftID;
			}
			set
			{
				if ((this._PayeeLeftID != value))
				{
					this.OnPayeeLeftIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeLeftID = value;
					this.SendPropertyChanged("PayeeLeftID");
					this.OnPayeeLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50)")]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50)")]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalaryApplies")]
	public partial class SalaryApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _DateIndex;
		
		private string _Title;
		
		private int _Currency;
		
		private decimal _Price;
		
		private string _Summary;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private string _SenderID;
		
		private string _Department;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private EntitySet<SalaryApplyItems> _SalaryApplyItems;
		
		private EntityRef<Senders> _Senders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDateIndexChanging(int value);
    partial void OnDateIndexChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SalaryApplies()
		{
			this._SalaryApplyItems = new EntitySet<SalaryApplyItems>(new Action<SalaryApplyItems>(this.attach_SalaryApplyItems), new Action<SalaryApplyItems>(this.detach_SalaryApplyItems));
			this._Senders = default(EntityRef<Senders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIndex", DbType="Int NOT NULL")]
		public int DateIndex
		{
			get
			{
				return this._DateIndex;
			}
			set
			{
				if ((this._DateIndex != value))
				{
					this.OnDateIndexChanging(value);
					this.SendPropertyChanging();
					this._DateIndex = value;
					this.SendPropertyChanged("DateIndex");
					this.OnDateIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryApplies_SalaryApplyItems", Storage="_SalaryApplyItems", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<SalaryApplyItems> SalaryApplyItems
		{
			get
			{
				return this._SalaryApplyItems;
			}
			set
			{
				this._SalaryApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_SalaryApplies", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.SalaryApplies.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.SalaryApplies.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalaryApplyItems(SalaryApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.SalaryApplies = this;
		}
		
		private void detach_SalaryApplyItems(SalaryApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.SalaryApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalaryApplyItems")]
	public partial class SalaryApplyItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _AccountCatalogID;
		
		private System.Nullable<decimal> _Price;
		
		private string _Summary;
		
		private string _FlowID;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private EntityRef<SalaryApplies> _SalaryApplies;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SalaryApplyItems()
		{
			this._SalaryApplies = default(EntityRef<SalaryApplies>);
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._SalaryApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50)")]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryApplies_SalaryApplyItems", Storage="_SalaryApplies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public SalaryApplies SalaryApplies
		{
			get
			{
				return this._SalaryApplies.Entity;
			}
			set
			{
				SalaryApplies previousValue = this._SalaryApplies.Entity;
				if (((previousValue != value) 
							|| (this._SalaryApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalaryApplies.Entity = null;
						previousValue.SalaryApplyItems.Remove(this);
					}
					this._SalaryApplies.Entity = value;
					if ((value != null))
					{
						value.SalaryApplyItems.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("SalaryApplies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_SalaryApplyItems", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.SalaryApplyItems.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.SalaryApplyItems.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelfApplies")]
	public partial class SelfApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _TargetCurrency;
		
		private decimal _TargetPrice;
		
		private decimal _TargetERate;
		
		private string _Summary;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private string _CallBackUrl;
		
		private string _CallBackID;
		
		private string _SenderID;
		
		private string _Department;
		
		private string _ApplierID;
		
		private string _ExcuterID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _ApproverID;
		
		private int _Status;
		
		private EntitySet<SelfLefts> _SelfLefts;
		
		private EntityRef<Senders> _Senders;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnTargetCurrencyChanging(int value);
    partial void OnTargetCurrencyChanged();
    partial void OnTargetPriceChanging(decimal value);
    partial void OnTargetPriceChanged();
    partial void OnTargetERateChanging(decimal value);
    partial void OnTargetERateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnCallBackUrlChanging(string value);
    partial void OnCallBackUrlChanged();
    partial void OnCallBackIDChanging(string value);
    partial void OnCallBackIDChanged();
    partial void OnSenderIDChanging(string value);
    partial void OnSenderIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnExcuterIDChanging(string value);
    partial void OnExcuterIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SelfApplies()
		{
			this._SelfLefts = new EntitySet<SelfLefts>(new Action<SelfLefts>(this.attach_SelfLefts), new Action<SelfLefts>(this.detach_SelfLefts));
			this._Senders = default(EntityRef<Senders>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrency", DbType="Int NOT NULL")]
		public int TargetCurrency
		{
			get
			{
				return this._TargetCurrency;
			}
			set
			{
				if ((this._TargetCurrency != value))
				{
					this.OnTargetCurrencyChanging(value);
					this.SendPropertyChanging();
					this._TargetCurrency = value;
					this.SendPropertyChanged("TargetCurrency");
					this.OnTargetCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal TargetPrice
		{
			get
			{
				return this._TargetPrice;
			}
			set
			{
				if ((this._TargetPrice != value))
				{
					this.OnTargetPriceChanging(value);
					this.SendPropertyChanging();
					this._TargetPrice = value;
					this.SendPropertyChanged("TargetPrice");
					this.OnTargetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetERate", DbType="Decimal(22,10) NOT NULL")]
		public decimal TargetERate
		{
			get
			{
				return this._TargetERate;
			}
			set
			{
				if ((this._TargetERate != value))
				{
					this.OnTargetERateChanging(value);
					this.SendPropertyChanging();
					this._TargetERate = value;
					this.SendPropertyChanged("TargetERate");
					this.OnTargetERateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackUrl", DbType="VarChar(200)")]
		public string CallBackUrl
		{
			get
			{
				return this._CallBackUrl;
			}
			set
			{
				if ((this._CallBackUrl != value))
				{
					this.OnCallBackUrlChanging(value);
					this.SendPropertyChanging();
					this._CallBackUrl = value;
					this.SendPropertyChanged("CallBackUrl");
					this.OnCallBackUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallBackID", DbType="NVarChar(MAX)")]
		public string CallBackID
		{
			get
			{
				return this._CallBackID;
			}
			set
			{
				if ((this._CallBackID != value))
				{
					this.OnCallBackIDChanging(value);
					this.SendPropertyChanging();
					this._CallBackID = value;
					this.SendPropertyChanged("CallBackID");
					this.OnCallBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._Senders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcuterID", DbType="VarChar(50)")]
		public string ExcuterID
		{
			get
			{
				return this._ExcuterID;
			}
			set
			{
				if ((this._ExcuterID != value))
				{
					this.OnExcuterIDChanging(value);
					this.SendPropertyChanging();
					this._ExcuterID = value;
					this.SendPropertyChanged("ExcuterID");
					this.OnExcuterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelfApplies_SelfLefts", Storage="_SelfLefts", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<SelfLefts> SelfLefts
		{
			get
			{
				return this._SelfLefts;
			}
			set
			{
				this._SelfLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_SelfApplies", Storage="_Senders", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public Senders Senders
		{
			get
			{
				return this._Senders.Entity;
			}
			set
			{
				Senders previousValue = this._Senders.Entity;
				if (((previousValue != value) 
							|| (this._Senders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Senders.Entity = null;
						previousValue.SelfApplies.Remove(this);
					}
					this._Senders.Entity = value;
					if ((value != null))
					{
						value.SelfApplies.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(string);
					}
					this.SendPropertyChanged("Senders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfApplies", Storage="_Accounts", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.SelfApplies.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.SelfApplies.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfApplies1", Storage="_Accounts1", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.SelfApplies1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.SelfApplies1.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SelfLefts(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.SelfApplies = this;
		}
		
		private void detach_SelfLefts(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.SelfApplies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelfLefts")]
	public partial class SelfLefts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private int _AccountMethord;
		
		private string _AccountCatalogID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private string _ApplyID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private EntitySet<SelfRights> _SelfRights;
		
		private EntityRef<SelfApplies> _SelfApplies;
		
		private EntityRef<Accounts> _Accounts;
		
		private EntityRef<Accounts> _Accounts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnAccountMethordChanging(int value);
    partial void OnAccountMethordChanged();
    partial void OnAccountCatalogIDChanging(string value);
    partial void OnAccountCatalogIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public SelfLefts()
		{
			this._SelfRights = new EntitySet<SelfRights>(new Action<SelfRights>(this.attach_SelfRights), new Action<SelfRights>(this.detach_SelfRights));
			this._SelfApplies = default(EntityRef<SelfApplies>);
			this._Accounts = default(EntityRef<Accounts>);
			this._Accounts1 = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					if (this._Accounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountMethord", DbType="Int NOT NULL")]
		public int AccountMethord
		{
			get
			{
				return this._AccountMethord;
			}
			set
			{
				if ((this._AccountMethord != value))
				{
					this.OnAccountMethordChanging(value);
					this.SendPropertyChanging();
					this._AccountMethord = value;
					this.SendPropertyChanged("AccountMethord");
					this.OnAccountMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this.OnAccountCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCatalogID = value;
					this.SendPropertyChanged("AccountCatalogID");
					this.OnAccountCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._SelfApplies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelfLefts_SelfRights", Storage="_SelfRights", ThisKey="ID", OtherKey="SelfLeftID")]
		public EntitySet<SelfRights> SelfRights
		{
			get
			{
				return this._SelfRights;
			}
			set
			{
				this._SelfRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelfApplies_SelfLefts", Storage="_SelfApplies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public SelfApplies SelfApplies
		{
			get
			{
				return this._SelfApplies.Entity;
			}
			set
			{
				SelfApplies previousValue = this._SelfApplies.Entity;
				if (((previousValue != value) 
							|| (this._SelfApplies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SelfApplies.Entity = null;
						previousValue.SelfLefts.Remove(this);
					}
					this._SelfApplies.Entity = value;
					if ((value != null))
					{
						value.SelfLefts.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("SelfApplies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfLefts", Storage="_Accounts", ThisKey="PayeeAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.SelfLefts.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.SelfLefts.Add(this);
						this._PayeeAccountID = value.ID;
					}
					else
					{
						this._PayeeAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfLefts1", Storage="_Accounts1", ThisKey="PayerAccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts1
		{
			get
			{
				return this._Accounts1.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts1.Entity;
				if (((previousValue != value) 
							|| (this._Accounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts1.Entity = null;
						previousValue.SelfLefts1.Remove(this);
					}
					this._Accounts1.Entity = value;
					if ((value != null))
					{
						value.SelfLefts1.Add(this);
						this._PayerAccountID = value.ID;
					}
					else
					{
						this._PayerAccountID = default(string);
					}
					this.SendPropertyChanged("Accounts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SelfRights(SelfRights entity)
		{
			this.SendPropertyChanging();
			entity.SelfLefts = this;
		}
		
		private void detach_SelfRights(SelfRights entity)
		{
			this.SendPropertyChanging();
			entity.SelfLefts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelfRights")]
	public partial class SelfRights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SelfLeftID;
		
		private int _OriginCurrency;
		
		private int _TargetCurrency;
		
		private decimal _Rate;
		
		private decimal _OriginPrice;
		
		private decimal _TargetPrice;
		
		private int _OriginCurrency1;
		
		private decimal _OriginPrice1;
		
		private decimal _OriginERate1;
		
		private int _TargetCurrency1;
		
		private decimal _TargetPrice1;
		
		private decimal _TargetERate1;
		
		private string _FlowID;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<SelfLefts> _SelfLefts;
		
		private EntityRef<FlowAccounts> _FlowAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSelfLeftIDChanging(string value);
    partial void OnSelfLeftIDChanged();
    partial void OnOriginCurrencyChanging(int value);
    partial void OnOriginCurrencyChanged();
    partial void OnTargetCurrencyChanging(int value);
    partial void OnTargetCurrencyChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnOriginPriceChanging(decimal value);
    partial void OnOriginPriceChanged();
    partial void OnTargetPriceChanging(decimal value);
    partial void OnTargetPriceChanged();
    partial void OnOriginCurrency1Changing(int value);
    partial void OnOriginCurrency1Changed();
    partial void OnOriginPrice1Changing(decimal value);
    partial void OnOriginPrice1Changed();
    partial void OnOriginERate1Changing(decimal value);
    partial void OnOriginERate1Changed();
    partial void OnTargetCurrency1Changing(int value);
    partial void OnTargetCurrency1Changed();
    partial void OnTargetPrice1Changing(decimal value);
    partial void OnTargetPrice1Changed();
    partial void OnTargetERate1Changing(decimal value);
    partial void OnTargetERate1Changed();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SelfRights()
		{
			this._SelfLefts = default(EntityRef<SelfLefts>);
			this._FlowAccounts = default(EntityRef<FlowAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelfLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelfLeftID
		{
			get
			{
				return this._SelfLeftID;
			}
			set
			{
				if ((this._SelfLeftID != value))
				{
					if (this._SelfLefts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSelfLeftIDChanging(value);
					this.SendPropertyChanging();
					this._SelfLeftID = value;
					this.SendPropertyChanged("SelfLeftID");
					this.OnSelfLeftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginCurrency", DbType="Int NOT NULL")]
		public int OriginCurrency
		{
			get
			{
				return this._OriginCurrency;
			}
			set
			{
				if ((this._OriginCurrency != value))
				{
					this.OnOriginCurrencyChanging(value);
					this.SendPropertyChanging();
					this._OriginCurrency = value;
					this.SendPropertyChanged("OriginCurrency");
					this.OnOriginCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrency", DbType="Int NOT NULL")]
		public int TargetCurrency
		{
			get
			{
				return this._TargetCurrency;
			}
			set
			{
				if ((this._TargetCurrency != value))
				{
					this.OnTargetCurrencyChanging(value);
					this.SendPropertyChanging();
					this._TargetCurrency = value;
					this.SendPropertyChanged("TargetCurrency");
					this.OnTargetCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal OriginPrice
		{
			get
			{
				return this._OriginPrice;
			}
			set
			{
				if ((this._OriginPrice != value))
				{
					this.OnOriginPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginPrice = value;
					this.SendPropertyChanged("OriginPrice");
					this.OnOriginPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal TargetPrice
		{
			get
			{
				return this._TargetPrice;
			}
			set
			{
				if ((this._TargetPrice != value))
				{
					this.OnTargetPriceChanging(value);
					this.SendPropertyChanging();
					this._TargetPrice = value;
					this.SendPropertyChanged("TargetPrice");
					this.OnTargetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginCurrency1", DbType="Int NOT NULL")]
		public int OriginCurrency1
		{
			get
			{
				return this._OriginCurrency1;
			}
			set
			{
				if ((this._OriginCurrency1 != value))
				{
					this.OnOriginCurrency1Changing(value);
					this.SendPropertyChanging();
					this._OriginCurrency1 = value;
					this.SendPropertyChanged("OriginCurrency1");
					this.OnOriginCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginPrice1", DbType="Decimal(22,10) NOT NULL")]
		public decimal OriginPrice1
		{
			get
			{
				return this._OriginPrice1;
			}
			set
			{
				if ((this._OriginPrice1 != value))
				{
					this.OnOriginPrice1Changing(value);
					this.SendPropertyChanging();
					this._OriginPrice1 = value;
					this.SendPropertyChanged("OriginPrice1");
					this.OnOriginPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal OriginERate1
		{
			get
			{
				return this._OriginERate1;
			}
			set
			{
				if ((this._OriginERate1 != value))
				{
					this.OnOriginERate1Changing(value);
					this.SendPropertyChanging();
					this._OriginERate1 = value;
					this.SendPropertyChanged("OriginERate1");
					this.OnOriginERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrency1", DbType="Int NOT NULL")]
		public int TargetCurrency1
		{
			get
			{
				return this._TargetCurrency1;
			}
			set
			{
				if ((this._TargetCurrency1 != value))
				{
					this.OnTargetCurrency1Changing(value);
					this.SendPropertyChanging();
					this._TargetCurrency1 = value;
					this.SendPropertyChanged("TargetCurrency1");
					this.OnTargetCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPrice1", DbType="Decimal(22,10) NOT NULL")]
		public decimal TargetPrice1
		{
			get
			{
				return this._TargetPrice1;
			}
			set
			{
				if ((this._TargetPrice1 != value))
				{
					this.OnTargetPrice1Changing(value);
					this.SendPropertyChanging();
					this._TargetPrice1 = value;
					this.SendPropertyChanged("TargetPrice1");
					this.OnTargetPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal TargetERate1
		{
			get
			{
				return this._TargetERate1;
			}
			set
			{
				if ((this._TargetERate1 != value))
				{
					this.OnTargetERate1Changing(value);
					this.SendPropertyChanging();
					this._TargetERate1 = value;
					this.SendPropertyChanged("TargetERate1");
					this.OnTargetERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._FlowAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelfLefts_SelfRights", Storage="_SelfLefts", ThisKey="SelfLeftID", OtherKey="ID", IsForeignKey=true)]
		public SelfLefts SelfLefts
		{
			get
			{
				return this._SelfLefts.Entity;
			}
			set
			{
				SelfLefts previousValue = this._SelfLefts.Entity;
				if (((previousValue != value) 
							|| (this._SelfLefts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SelfLefts.Entity = null;
						previousValue.SelfRights.Remove(this);
					}
					this._SelfLefts.Entity = value;
					if ((value != null))
					{
						value.SelfRights.Add(this);
						this._SelfLeftID = value.ID;
					}
					else
					{
						this._SelfLeftID = default(string);
					}
					this.SendPropertyChanged("SelfLefts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_SelfRights", Storage="_FlowAccounts", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public FlowAccounts FlowAccounts
		{
			get
			{
				return this._FlowAccounts.Entity;
			}
			set
			{
				FlowAccounts previousValue = this._FlowAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FlowAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlowAccounts.Entity = null;
						previousValue.SelfRights.Remove(this);
					}
					this._FlowAccounts.Entity = value;
					if ((value != null))
					{
						value.SelfRights.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("FlowAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Senders")]
	public partial class Senders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _SecretKey;
		
		private int _Status;
		
		private EntitySet<ChargeApplies> _ChargeApplies;
		
		private EntitySet<CostApplies> _CostApplies;
		
		private EntitySet<PayeeRights> _PayeeRights;
		
		private EntitySet<PayerApplies> _PayerApplies;
		
		private EntitySet<SalaryApplies> _SalaryApplies;
		
		private EntitySet<SelfApplies> _SelfApplies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSecretKeyChanging(string value);
    partial void OnSecretKeyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Senders()
		{
			this._ChargeApplies = new EntitySet<ChargeApplies>(new Action<ChargeApplies>(this.attach_ChargeApplies), new Action<ChargeApplies>(this.detach_ChargeApplies));
			this._CostApplies = new EntitySet<CostApplies>(new Action<CostApplies>(this.attach_CostApplies), new Action<CostApplies>(this.detach_CostApplies));
			this._PayeeRights = new EntitySet<PayeeRights>(new Action<PayeeRights>(this.attach_PayeeRights), new Action<PayeeRights>(this.detach_PayeeRights));
			this._PayerApplies = new EntitySet<PayerApplies>(new Action<PayerApplies>(this.attach_PayerApplies), new Action<PayerApplies>(this.detach_PayerApplies));
			this._SalaryApplies = new EntitySet<SalaryApplies>(new Action<SalaryApplies>(this.attach_SalaryApplies), new Action<SalaryApplies>(this.detach_SalaryApplies));
			this._SelfApplies = new EntitySet<SelfApplies>(new Action<SelfApplies>(this.attach_SelfApplies), new Action<SelfApplies>(this.detach_SelfApplies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretKey", DbType="VarChar(50)")]
		public string SecretKey
		{
			get
			{
				return this._SecretKey;
			}
			set
			{
				if ((this._SecretKey != value))
				{
					this.OnSecretKeyChanging(value);
					this.SendPropertyChanging();
					this._SecretKey = value;
					this.SendPropertyChanged("SecretKey");
					this.OnSecretKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_ChargeApplies", Storage="_ChargeApplies", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<ChargeApplies> ChargeApplies
		{
			get
			{
				return this._ChargeApplies;
			}
			set
			{
				this._ChargeApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_CostApplies", Storage="_CostApplies", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<CostApplies> CostApplies
		{
			get
			{
				return this._CostApplies;
			}
			set
			{
				this._CostApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_PayeeRights", Storage="_PayeeRights", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<PayeeRights> PayeeRights
		{
			get
			{
				return this._PayeeRights;
			}
			set
			{
				this._PayeeRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_PayerApplies", Storage="_PayerApplies", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<PayerApplies> PayerApplies
		{
			get
			{
				return this._PayerApplies;
			}
			set
			{
				this._PayerApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_SalaryApplies", Storage="_SalaryApplies", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<SalaryApplies> SalaryApplies
		{
			get
			{
				return this._SalaryApplies;
			}
			set
			{
				this._SalaryApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Senders_SelfApplies", Storage="_SelfApplies", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<SelfApplies> SelfApplies
		{
			get
			{
				return this._SelfApplies;
			}
			set
			{
				this._SelfApplies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChargeApplies(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_ChargeApplies(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
		
		private void attach_CostApplies(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_CostApplies(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
		
		private void attach_PayeeRights(PayeeRights entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_PayeeRights(PayeeRights entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
		
		private void attach_PayerApplies(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_PayerApplies(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
		
		private void attach_SalaryApplies(SalaryApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_SalaryApplies(SalaryApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
		
		private void attach_SelfApplies(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = this;
		}
		
		private void detach_SelfApplies(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Senders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxRates")]
	public partial class TaxRates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _JsonName;
		
		private string _Name;
		
		private int _Code;
		
		private decimal _Rate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnJsonNameChanging(string value);
    partial void OnJsonNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    #endregion
		
		public TaxRates()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JsonName
		{
			get
			{
				return this._JsonName;
			}
			set
			{
				if ((this._JsonName != value))
				{
					this.OnJsonNameChanging(value);
					this.SendPropertyChanging();
					this._JsonName = value;
					this.SendPropertyChanged("JsonName");
					this.OnJsonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WsClientsTopView")]
	public partial class WsClientsTopView
	{
		
		private string _ID;
		
		private string _Name;
		
		private string _AdminCode;
		
		private string _Corporation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private int _Grade;
		
		private bool _Vip;
		
		private string _EnterCode;
		
		private string _CustomsCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _AdminID;
		
		private int _ClientNature;
		
		private int _ServiceType;
		
		private bool _IsDeclaretion;
		
		private bool _IsStorageService;
		
		private int _StorageType;
		
		public WsClientsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminCode", DbType="VarChar(50)")]
		public string AdminCode
		{
			get
			{
				return this._AdminCode;
			}
			set
			{
				if ((this._AdminCode != value))
				{
					this._AdminCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="NVarChar(50)")]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this._Corporation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(150)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(150)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL")]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Bit NOT NULL")]
		public bool Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this._Vip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterCode", DbType="VarChar(50)")]
		public string EnterCode
		{
			get
			{
				return this._EnterCode;
			}
			set
			{
				if ((this._EnterCode != value))
				{
					this._EnterCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsCode", DbType="VarChar(150)")]
		public string CustomsCode
		{
			get
			{
				return this._CustomsCode;
			}
			set
			{
				if ((this._CustomsCode != value))
				{
					this._CustomsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNature", DbType="Int NOT NULL")]
		public int ClientNature
		{
			get
			{
				return this._ClientNature;
			}
			set
			{
				if ((this._ClientNature != value))
				{
					this._ClientNature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="Int NOT NULL")]
		public int ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this._ServiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeclaretion", DbType="Bit NOT NULL")]
		public bool IsDeclaretion
		{
			get
			{
				return this._IsDeclaretion;
			}
			set
			{
				if ((this._IsDeclaretion != value))
				{
					this._IsDeclaretion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStorageService", DbType="Bit NOT NULL")]
		public bool IsStorageService
		{
			get
			{
				return this._IsStorageService;
			}
			set
			{
				if ((this._IsStorageService != value))
				{
					this._IsStorageService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageType", DbType="Int NOT NULL")]
		public int StorageType
		{
			get
			{
				return this._StorageType;
			}
			set
			{
				if ((this._StorageType != value))
				{
					this._StorageType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountWorksStatisticsView")]
	public partial class AccountWorksStatisticsView
	{
		
		private string _PayeeLeftID;
		
		private string _FormCode;
		
		private string _Company;
		
		private int _Currency;
		
		private decimal _LeftPrice;
		
		private System.Nullable<decimal> _RightPrice;
		
		private string _ClaimantID;
		
		public AccountWorksStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeLeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeLeftID
		{
			get
			{
				return this._PayeeLeftID;
			}
			set
			{
				if ((this._PayeeLeftID != value))
				{
					this._PayeeLeftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this._FormCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(150)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal LeftPrice
		{
			get
			{
				return this._LeftPrice;
			}
			set
			{
				if ((this._LeftPrice != value))
				{
					this._LeftPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightPrice", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> RightPrice
		{
			get
			{
				return this._RightPrice;
			}
			set
			{
				if ((this._RightPrice != value))
				{
					this._RightPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimantID", DbType="VarChar(50)")]
		public string ClaimantID
		{
			get
			{
				return this._ClaimantID;
			}
			set
			{
				if ((this._ClaimantID != value))
				{
					this._ClaimantID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _StaffID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _SelCode;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _RoleStatus;
		
		private string _OriginID;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this._StaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this._SelCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(150)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStatus", DbType="Int")]
		public System.Nullable<int> RoleStatus
		{
			get
			{
				return this._RoleStatus;
			}
			set
			{
				if ((this._RoleStatus != value))
				{
					this._RoleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="VarChar(50)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this._OriginID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompaniesTopView")]
	public partial class CompaniesTopView
	{
		
		private string _ID;
		
		private int _Type;
		
		private int _Range;
		
		private int _Status;
		
		private string _Name;
		
		private string _Corporation;
		
		private string _RegAddress;
		
		private string _Uscc;
		
		private string _District;
		
		public CompaniesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="Int NOT NULL")]
		public int Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this._Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="NVarChar(50)")]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this._Corporation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddress", DbType="NVarChar(150)")]
		public string RegAddress
		{
			get
			{
				return this._RegAddress;
			}
			set
			{
				if ((this._RegAddress != value))
				{
					this._RegAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uscc", DbType="VarChar(150)")]
		public string Uscc
		{
			get
			{
				return this._Uscc;
			}
			set
			{
				if ((this._Uscc != value))
				{
					this._Uscc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayerStatementsView")]
	public partial class PayerStatementsView
	{
		
		private string _PayeeAccountID;
		
		private string _PayerAccountID;
		
		private string _AccountCatalogID;
		
		private int _Currency;
		
		private string _LeftID;
		
		private decimal _LeftPrice;
		
		private System.DateTime _LeftDate;
		
		private System.Nullable<decimal> _RightPrice;
		
		private System.Nullable<System.DateTime> _RightDate;
		
		private string _ApplyID;
		
		private string _CreatorID;
		
		private int _Status;
		
		public PayerStatementsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this._PayeeAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this._PayerAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCatalogID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCatalogID
		{
			get
			{
				return this._AccountCatalogID;
			}
			set
			{
				if ((this._AccountCatalogID != value))
				{
					this._AccountCatalogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeftID
		{
			get
			{
				return this._LeftID;
			}
			set
			{
				if ((this._LeftID != value))
				{
					this._LeftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal LeftPrice
		{
			get
			{
				return this._LeftPrice;
			}
			set
			{
				if ((this._LeftPrice != value))
				{
					this._LeftPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeftDate
		{
			get
			{
				return this._LeftDate;
			}
			set
			{
				if ((this._LeftDate != value))
				{
					this._LeftDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightPrice", DbType="Decimal(38,10)")]
		public System.Nullable<decimal> RightPrice
		{
			get
			{
				return this._RightPrice;
			}
			set
			{
				if ((this._RightPrice != value))
				{
					this._RightPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RightDate
		{
			get
			{
				return this._RightDate;
			}
			set
			{
				if ((this._RightDate != value))
				{
					this._RightDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this._ApplyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlowAccounts")]
	public partial class FlowAccounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _AccountMethord;
		
		private string _AccountID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _FormCode;
		
		private int _Currency1;
		
		private decimal _ERate1;
		
		private decimal _Price1;
		
		private System.Nullable<decimal> _Balance1;
		
		private string _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private string _TargetAccountName;
		
		private string _TargetAccountCode;
		
		private System.Nullable<decimal> _TargetRate;
		
		private int _PaymentMethord;
		
		private System.Nullable<int> _Type;
		
		private string _MoneyOrderID;
		
		private EntitySet<ChargeApplyItems> _ChargeApplyItems;
		
		private EntitySet<CostApplyItems> _CostApplyItems;
		
		private EntitySet<PayeeLefts> _PayeeLefts;
		
		private EntitySet<PayerRights> _PayerRights;
		
		private EntitySet<SalaryApplyItems> _SalaryApplyItems;
		
		private EntitySet<SelfRights> _SelfRights;
		
		private EntityRef<Accounts> _Accounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAccountMethordChanging(int value);
    partial void OnAccountMethordChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnFormCodeChanging(string value);
    partial void OnFormCodeChanged();
    partial void OnCurrency1Changing(int value);
    partial void OnCurrency1Changed();
    partial void OnERate1Changing(decimal value);
    partial void OnERate1Changed();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnBalance1Changing(System.Nullable<decimal> value);
    partial void OnBalance1Changed();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnTargetAccountNameChanging(string value);
    partial void OnTargetAccountNameChanged();
    partial void OnTargetAccountCodeChanging(string value);
    partial void OnTargetAccountCodeChanged();
    partial void OnTargetRateChanging(System.Nullable<decimal> value);
    partial void OnTargetRateChanged();
    partial void OnPaymentMethordChanging(int value);
    partial void OnPaymentMethordChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnMoneyOrderIDChanging(string value);
    partial void OnMoneyOrderIDChanged();
    #endregion
		
		public FlowAccounts()
		{
			this._ChargeApplyItems = new EntitySet<ChargeApplyItems>(new Action<ChargeApplyItems>(this.attach_ChargeApplyItems), new Action<ChargeApplyItems>(this.detach_ChargeApplyItems));
			this._CostApplyItems = new EntitySet<CostApplyItems>(new Action<CostApplyItems>(this.attach_CostApplyItems), new Action<CostApplyItems>(this.detach_CostApplyItems));
			this._PayeeLefts = new EntitySet<PayeeLefts>(new Action<PayeeLefts>(this.attach_PayeeLefts), new Action<PayeeLefts>(this.detach_PayeeLefts));
			this._PayerRights = new EntitySet<PayerRights>(new Action<PayerRights>(this.attach_PayerRights), new Action<PayerRights>(this.detach_PayerRights));
			this._SalaryApplyItems = new EntitySet<SalaryApplyItems>(new Action<SalaryApplyItems>(this.attach_SalaryApplyItems), new Action<SalaryApplyItems>(this.detach_SalaryApplyItems));
			this._SelfRights = new EntitySet<SelfRights>(new Action<SelfRights>(this.attach_SelfRights), new Action<SelfRights>(this.detach_SelfRights));
			this._Accounts = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountMethord", DbType="Int NOT NULL")]
		public int AccountMethord
		{
			get
			{
				return this._AccountMethord;
			}
			set
			{
				if ((this._AccountMethord != value))
				{
					this.OnAccountMethordChanging(value);
					this.SendPropertyChanging();
					this._AccountMethord = value;
					this.SendPropertyChanged("AccountMethord");
					this.OnAccountMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this.OnFormCodeChanging(value);
					this.SendPropertyChanging();
					this._FormCode = value;
					this.SendPropertyChanged("FormCode");
					this.OnFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency1", DbType="Int NOT NULL")]
		public int Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ERate1", DbType="Decimal(22,10) NOT NULL")]
		public decimal ERate1
		{
			get
			{
				return this._ERate1;
			}
			set
			{
				if ((this._ERate1 != value))
				{
					this.OnERate1Changing(value);
					this.SendPropertyChanging();
					this._ERate1 = value;
					this.SendPropertyChanged("ERate1");
					this.OnERate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Balance1
		{
			get
			{
				return this._Balance1;
			}
			set
			{
				if ((this._Balance1 != value))
				{
					this.OnBalance1Changing(value);
					this.SendPropertyChanging();
					this._Balance1 = value;
					this.SendPropertyChanged("Balance1");
					this.OnBalance1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountName", DbType="NVarChar(150)")]
		public string TargetAccountName
		{
			get
			{
				return this._TargetAccountName;
			}
			set
			{
				if ((this._TargetAccountName != value))
				{
					this.OnTargetAccountNameChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountName = value;
					this.SendPropertyChanged("TargetAccountName");
					this.OnTargetAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountCode", DbType="VarChar(50)")]
		public string TargetAccountCode
		{
			get
			{
				return this._TargetAccountCode;
			}
			set
			{
				if ((this._TargetAccountCode != value))
				{
					this.OnTargetAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountCode = value;
					this.SendPropertyChanged("TargetAccountCode");
					this.OnTargetAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> TargetRate
		{
			get
			{
				return this._TargetRate;
			}
			set
			{
				if ((this._TargetRate != value))
				{
					this.OnTargetRateChanging(value);
					this.SendPropertyChanging();
					this._TargetRate = value;
					this.SendPropertyChanged("TargetRate");
					this.OnTargetRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethord", DbType="Int NOT NULL")]
		public int PaymentMethord
		{
			get
			{
				return this._PaymentMethord;
			}
			set
			{
				if ((this._PaymentMethord != value))
				{
					this.OnPaymentMethordChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethord = value;
					this.SendPropertyChanged("PaymentMethord");
					this.OnPaymentMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyOrderID", DbType="VarChar(50)")]
		public string MoneyOrderID
		{
			get
			{
				return this._MoneyOrderID;
			}
			set
			{
				if ((this._MoneyOrderID != value))
				{
					this.OnMoneyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyOrderID = value;
					this.SendPropertyChanged("MoneyOrderID");
					this.OnMoneyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_ChargeApplyItems", Storage="_ChargeApplyItems", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<ChargeApplyItems> ChargeApplyItems
		{
			get
			{
				return this._ChargeApplyItems;
			}
			set
			{
				this._ChargeApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_CostApplyItems", Storage="_CostApplyItems", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<CostApplyItems> CostApplyItems
		{
			get
			{
				return this._CostApplyItems;
			}
			set
			{
				this._CostApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_PayeeLefts", Storage="_PayeeLefts", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<PayeeLefts> PayeeLefts
		{
			get
			{
				return this._PayeeLefts;
			}
			set
			{
				this._PayeeLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_PayerRights", Storage="_PayerRights", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<PayerRights> PayerRights
		{
			get
			{
				return this._PayerRights;
			}
			set
			{
				this._PayerRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_SalaryApplyItems", Storage="_SalaryApplyItems", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<SalaryApplyItems> SalaryApplyItems
		{
			get
			{
				return this._SalaryApplyItems;
			}
			set
			{
				this._SalaryApplyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlowAccounts_SelfRights", Storage="_SelfRights", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<SelfRights> SelfRights
		{
			get
			{
				return this._SelfRights;
			}
			set
			{
				this._SelfRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_FlowAccounts", Storage="_Accounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.FlowAccounts.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.FlowAccounts.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(string);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChargeApplyItems(ChargeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_ChargeApplyItems(ChargeApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
		
		private void attach_CostApplyItems(CostApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_CostApplyItems(CostApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
		
		private void attach_PayeeLefts(PayeeLefts entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_PayeeLefts(PayeeLefts entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
		
		private void attach_PayerRights(PayerRights entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_PayerRights(PayerRights entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
		
		private void attach_SalaryApplyItems(SalaryApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_SalaryApplyItems(SalaryApplyItems entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
		
		private void attach_SelfRights(SelfRights entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = this;
		}
		
		private void detach_SelfRights(SelfRights entity)
		{
			this.SendPropertyChanging();
			entity.FlowAccounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Code;
		
		private int _NatureType;
		
		private int _ManageType;
		
		private int _Currency;
		
		private string _BankName;
		
		private string _OpeningBank;
		
		private string _BankAddress;
		
		private string _District;
		
		private string _SwiftCode;
		
		private System.Nullable<System.DateTime> _OpeningTime;
		
		private System.Nullable<bool> _IsHaveU;
		
		private string _BankNo;
		
		private string _OwnerID;
		
		private string _GoldStoreID;
		
		private string _EnterpriseID;
		
		private string _PersonID;
		
		private string _Summary;
		
		private System.Nullable<int> _Source;
		
		private bool _IsVirtual;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		private string _DyjShortName;
		
		private EntitySet<ChargeApplies> _ChargeApplies;
		
		private EntitySet<ChargeApplies> _ChargeApplies1;
		
		private EntitySet<CostApplies> _CostApplies;
		
		private EntitySet<CostApplies> _CostApplies1;
		
		private EntitySet<MapsPurpose> _MapsPurpose;
		
		private EntitySet<PayeeLefts> _PayeeLefts;
		
		private EntitySet<PayerApplies> _PayerApplies;
		
		private EntitySet<PayerApplies> _PayerApplies1;
		
		private EntitySet<PayerLefts> _PayerLefts;
		
		private EntitySet<PayerLefts> _PayerLefts1;
		
		private EntitySet<SelfApplies> _SelfApplies;
		
		private EntitySet<SelfApplies> _SelfApplies1;
		
		private EntitySet<SelfLefts> _SelfLefts;
		
		private EntitySet<SelfLefts> _SelfLefts1;
		
		private EntitySet<FlowAccounts> _FlowAccounts;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<GoldStores> _GoldStores;
		
		private EntityRef<Persons> _Persons;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNatureTypeChanging(int value);
    partial void OnNatureTypeChanged();
    partial void OnManageTypeChanging(int value);
    partial void OnManageTypeChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnOpeningBankChanging(string value);
    partial void OnOpeningBankChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnOpeningTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOpeningTimeChanged();
    partial void OnIsHaveUChanging(System.Nullable<bool> value);
    partial void OnIsHaveUChanged();
    partial void OnBankNoChanging(string value);
    partial void OnBankNoChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnGoldStoreIDChanging(string value);
    partial void OnGoldStoreIDChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnSourceChanging(System.Nullable<int> value);
    partial void OnSourceChanged();
    partial void OnIsVirtualChanging(bool value);
    partial void OnIsVirtualChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnModifierIDChanging(string value);
    partial void OnModifierIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDyjShortNameChanging(string value);
    partial void OnDyjShortNameChanged();
    #endregion
		
		public Accounts()
		{
			this._ChargeApplies = new EntitySet<ChargeApplies>(new Action<ChargeApplies>(this.attach_ChargeApplies), new Action<ChargeApplies>(this.detach_ChargeApplies));
			this._ChargeApplies1 = new EntitySet<ChargeApplies>(new Action<ChargeApplies>(this.attach_ChargeApplies1), new Action<ChargeApplies>(this.detach_ChargeApplies1));
			this._CostApplies = new EntitySet<CostApplies>(new Action<CostApplies>(this.attach_CostApplies), new Action<CostApplies>(this.detach_CostApplies));
			this._CostApplies1 = new EntitySet<CostApplies>(new Action<CostApplies>(this.attach_CostApplies1), new Action<CostApplies>(this.detach_CostApplies1));
			this._MapsPurpose = new EntitySet<MapsPurpose>(new Action<MapsPurpose>(this.attach_MapsPurpose), new Action<MapsPurpose>(this.detach_MapsPurpose));
			this._PayeeLefts = new EntitySet<PayeeLefts>(new Action<PayeeLefts>(this.attach_PayeeLefts), new Action<PayeeLefts>(this.detach_PayeeLefts));
			this._PayerApplies = new EntitySet<PayerApplies>(new Action<PayerApplies>(this.attach_PayerApplies), new Action<PayerApplies>(this.detach_PayerApplies));
			this._PayerApplies1 = new EntitySet<PayerApplies>(new Action<PayerApplies>(this.attach_PayerApplies1), new Action<PayerApplies>(this.detach_PayerApplies1));
			this._PayerLefts = new EntitySet<PayerLefts>(new Action<PayerLefts>(this.attach_PayerLefts), new Action<PayerLefts>(this.detach_PayerLefts));
			this._PayerLefts1 = new EntitySet<PayerLefts>(new Action<PayerLefts>(this.attach_PayerLefts1), new Action<PayerLefts>(this.detach_PayerLefts1));
			this._SelfApplies = new EntitySet<SelfApplies>(new Action<SelfApplies>(this.attach_SelfApplies), new Action<SelfApplies>(this.detach_SelfApplies));
			this._SelfApplies1 = new EntitySet<SelfApplies>(new Action<SelfApplies>(this.attach_SelfApplies1), new Action<SelfApplies>(this.detach_SelfApplies1));
			this._SelfLefts = new EntitySet<SelfLefts>(new Action<SelfLefts>(this.attach_SelfLefts), new Action<SelfLefts>(this.detach_SelfLefts));
			this._SelfLefts1 = new EntitySet<SelfLefts>(new Action<SelfLefts>(this.attach_SelfLefts1), new Action<SelfLefts>(this.detach_SelfLefts1));
			this._FlowAccounts = new EntitySet<FlowAccounts>(new Action<FlowAccounts>(this.attach_FlowAccounts), new Action<FlowAccounts>(this.detach_FlowAccounts));
			this._Enterprises = default(EntityRef<Enterprises>);
			this._GoldStores = default(EntityRef<GoldStores>);
			this._Persons = default(EntityRef<Persons>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(150)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatureType", DbType="Int NOT NULL")]
		public int NatureType
		{
			get
			{
				return this._NatureType;
			}
			set
			{
				if ((this._NatureType != value))
				{
					this.OnNatureTypeChanging(value);
					this.SendPropertyChanging();
					this._NatureType = value;
					this.SendPropertyChanged("NatureType");
					this.OnNatureTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageType", DbType="Int NOT NULL")]
		public int ManageType
		{
			get
			{
				return this._ManageType;
			}
			set
			{
				if ((this._ManageType != value))
				{
					this.OnManageTypeChanging(value);
					this.SendPropertyChanging();
					this._ManageType = value;
					this.SendPropertyChanged("ManageType");
					this.OnManageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(200)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBank", DbType="NVarChar(150)")]
		public string OpeningBank
		{
			get
			{
				return this._OpeningBank;
			}
			set
			{
				if ((this._OpeningBank != value))
				{
					this.OnOpeningBankChanging(value);
					this.SendPropertyChanging();
					this._OpeningBank = value;
					this.SendPropertyChanged("OpeningBank");
					this.OnOpeningBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(200)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpeningTime
		{
			get
			{
				return this._OpeningTime;
			}
			set
			{
				if ((this._OpeningTime != value))
				{
					this.OnOpeningTimeChanging(value);
					this.SendPropertyChanging();
					this._OpeningTime = value;
					this.SendPropertyChanged("OpeningTime");
					this.OnOpeningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHaveU", DbType="Bit")]
		public System.Nullable<bool> IsHaveU
		{
			get
			{
				return this._IsHaveU;
			}
			set
			{
				if ((this._IsHaveU != value))
				{
					this.OnIsHaveUChanging(value);
					this.SendPropertyChanging();
					this._IsHaveU = value;
					this.SendPropertyChanged("IsHaveU");
					this.OnIsHaveUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNo", DbType="VarChar(50)")]
		public string BankNo
		{
			get
			{
				return this._BankNo;
			}
			set
			{
				if ((this._BankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._BankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(50)")]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldStoreID", DbType="VarChar(50)")]
		public string GoldStoreID
		{
			get
			{
				return this._GoldStoreID;
			}
			set
			{
				if ((this._GoldStoreID != value))
				{
					if (this._GoldStores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoldStoreIDChanging(value);
					this.SendPropertyChanging();
					this._GoldStoreID = value;
					this.SendPropertyChanged("GoldStoreID");
					this.OnGoldStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50)")]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Persons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int")]
		public System.Nullable<int> Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtual", DbType="Bit NOT NULL")]
		public bool IsVirtual
		{
			get
			{
				return this._IsVirtual;
			}
			set
			{
				if ((this._IsVirtual != value))
				{
					this.OnIsVirtualChanging(value);
					this.SendPropertyChanging();
					this._IsVirtual = value;
					this.SendPropertyChanged("IsVirtual");
					this.OnIsVirtualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this.OnModifierIDChanging(value);
					this.SendPropertyChanging();
					this._ModifierID = value;
					this.SendPropertyChanged("ModifierID");
					this.OnModifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjShortName", DbType="NVarChar(200)")]
		public string DyjShortName
		{
			get
			{
				return this._DyjShortName;
			}
			set
			{
				if ((this._DyjShortName != value))
				{
					this.OnDyjShortNameChanging(value);
					this.SendPropertyChanging();
					this._DyjShortName = value;
					this.SendPropertyChanged("DyjShortName");
					this.OnDyjShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_ChargeApplies", Storage="_ChargeApplies", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<ChargeApplies> ChargeApplies
		{
			get
			{
				return this._ChargeApplies;
			}
			set
			{
				this._ChargeApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_ChargeApplies1", Storage="_ChargeApplies1", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<ChargeApplies> ChargeApplies1
		{
			get
			{
				return this._ChargeApplies1;
			}
			set
			{
				this._ChargeApplies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_CostApplies", Storage="_CostApplies", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<CostApplies> CostApplies
		{
			get
			{
				return this._CostApplies;
			}
			set
			{
				this._CostApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_CostApplies1", Storage="_CostApplies1", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<CostApplies> CostApplies1
		{
			get
			{
				return this._CostApplies1;
			}
			set
			{
				this._CostApplies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_MapsPurpose", Storage="_MapsPurpose", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<MapsPurpose> MapsPurpose
		{
			get
			{
				return this._MapsPurpose;
			}
			set
			{
				this._MapsPurpose.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayeeLefts", Storage="_PayeeLefts", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<PayeeLefts> PayeeLefts
		{
			get
			{
				return this._PayeeLefts;
			}
			set
			{
				this._PayeeLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerApplies", Storage="_PayerApplies", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<PayerApplies> PayerApplies
		{
			get
			{
				return this._PayerApplies;
			}
			set
			{
				this._PayerApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerApplies1", Storage="_PayerApplies1", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<PayerApplies> PayerApplies1
		{
			get
			{
				return this._PayerApplies1;
			}
			set
			{
				this._PayerApplies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerLefts", Storage="_PayerLefts", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<PayerLefts> PayerLefts
		{
			get
			{
				return this._PayerLefts;
			}
			set
			{
				this._PayerLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PayerLefts1", Storage="_PayerLefts1", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<PayerLefts> PayerLefts1
		{
			get
			{
				return this._PayerLefts1;
			}
			set
			{
				this._PayerLefts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfApplies", Storage="_SelfApplies", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<SelfApplies> SelfApplies
		{
			get
			{
				return this._SelfApplies;
			}
			set
			{
				this._SelfApplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfApplies1", Storage="_SelfApplies1", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<SelfApplies> SelfApplies1
		{
			get
			{
				return this._SelfApplies1;
			}
			set
			{
				this._SelfApplies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfLefts", Storage="_SelfLefts", ThisKey="ID", OtherKey="PayeeAccountID")]
		public EntitySet<SelfLefts> SelfLefts
		{
			get
			{
				return this._SelfLefts;
			}
			set
			{
				this._SelfLefts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_SelfLefts1", Storage="_SelfLefts1", ThisKey="ID", OtherKey="PayerAccountID")]
		public EntitySet<SelfLefts> SelfLefts1
		{
			get
			{
				return this._SelfLefts1;
			}
			set
			{
				this._SelfLefts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_FlowAccounts", Storage="_FlowAccounts", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<FlowAccounts> FlowAccounts
		{
			get
			{
				return this._FlowAccounts;
			}
			set
			{
				this._FlowAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Accounts", Storage="_Enterprises", ThisKey="EnterpriseID", OtherKey="ID", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._EnterpriseID = value.ID;
					}
					else
					{
						this._EnterpriseID = default(string);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoldStores_Accounts", Storage="_GoldStores", ThisKey="GoldStoreID", OtherKey="ID", IsForeignKey=true)]
		public GoldStores GoldStores
		{
			get
			{
				return this._GoldStores.Entity;
			}
			set
			{
				GoldStores previousValue = this._GoldStores.Entity;
				if (((previousValue != value) 
							|| (this._GoldStores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoldStores.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._GoldStores.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._GoldStoreID = value.ID;
					}
					else
					{
						this._GoldStoreID = default(string);
					}
					this.SendPropertyChanged("GoldStores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persons_Accounts", Storage="_Persons", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Persons Persons
		{
			get
			{
				return this._Persons.Entity;
			}
			set
			{
				Persons previousValue = this._Persons.Entity;
				if (((previousValue != value) 
							|| (this._Persons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persons.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Persons.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(string);
					}
					this.SendPropertyChanged("Persons");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChargeApplies(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_ChargeApplies(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_ChargeApplies1(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_ChargeApplies1(ChargeApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_CostApplies(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_CostApplies(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_CostApplies1(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_CostApplies1(CostApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_MapsPurpose(MapsPurpose entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_MapsPurpose(MapsPurpose entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_PayeeLefts(PayeeLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_PayeeLefts(PayeeLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_PayerApplies(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_PayerApplies(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_PayerApplies1(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_PayerApplies1(PayerApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_PayerLefts(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_PayerLefts(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_PayerLefts1(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_PayerLefts1(PayerLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_SelfApplies(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_SelfApplies(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_SelfApplies1(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_SelfApplies1(SelfApplies entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_SelfLefts(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_SelfLefts(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
		
		private void attach_SelfLefts1(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = this;
		}
		
		private void detach_SelfLefts1(SelfLefts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts1 = null;
		}
		
		private void attach_FlowAccounts(FlowAccounts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_FlowAccounts(FlowAccounts entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
	}
}
#pragma warning restore 1591
