#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layers.Data.Sqls.PvbErm
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "PvbErm")]
    public partial class SqlDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region 可扩展性方法定义
        partial void OnCreated();
        partial void InsertAdmins(Admins instance);
        partial void UpdateAdmins(Admins instance);
        partial void DeleteAdmins(Admins instance);
        partial void InsertWageItems(WageItems instance);
        partial void UpdateWageItems(WageItems instance);
        partial void DeleteWageItems(WageItems instance);
        partial void InsertAdvantages(Advantages instance);
        partial void UpdateAdvantages(Advantages instance);
        partial void DeleteAdvantages(Advantages instance);
        partial void InsertApplications(Applications instance);
        partial void UpdateApplications(Applications instance);
        partial void DeleteApplications(Applications instance);
        partial void InsertApplyVoteSteps(ApplyVoteSteps instance);
        partial void UpdateApplyVoteSteps(ApplyVoteSteps instance);
        partial void DeleteApplyVoteSteps(ApplyVoteSteps instance);
        partial void InsertBankCards(BankCards instance);
        partial void UpdateBankCards(BankCards instance);
        partial void DeleteBankCards(BankCards instance);
        partial void InsertCalendars(Calendars instance);
        partial void UpdateCalendars(Calendars instance);
        partial void DeleteCalendars(Calendars instance);
        partial void InsertContacts(Contacts instance);
        partial void UpdateContacts(Contacts instance);
        partial void DeleteContacts(Contacts instance);
        partial void InsertLabours(Labours instance);
        partial void UpdateLabours(Labours instance);
        partial void DeleteLabours(Labours instance);
        partial void InsertLeagues(Leagues instance);
        partial void UpdateLeagues(Leagues instance);
        partial void DeleteLeagues(Leagues instance);
        partial void InsertLeaguesPrivate(LeaguesPrivate instance);
        partial void UpdateLeaguesPrivate(LeaguesPrivate instance);
        partial void DeleteLeaguesPrivate(LeaguesPrivate instance);
        partial void InsertLogs_ApplyVoteSteps(Logs_ApplyVoteSteps instance);
        partial void UpdateLogs_ApplyVoteSteps(Logs_ApplyVoteSteps instance);
        partial void DeleteLogs_ApplyVoteSteps(Logs_ApplyVoteSteps instance);
        partial void InsertLogs_Attend(Logs_Attend instance);
        partial void UpdateLogs_Attend(Logs_Attend instance);
        partial void DeleteLogs_Attend(Logs_Attend instance);
        partial void InsertLogs_Errors(Logs_Errors instance);
        partial void UpdateLogs_Errors(Logs_Errors instance);
        partial void DeleteLogs_Errors(Logs_Errors instance);
        partial void InsertLogs_Notice(Logs_Notice instance);
        partial void UpdateLogs_Notice(Logs_Notice instance);
        partial void DeleteLogs_Notice(Logs_Notice instance);
        partial void InsertLogs_StaffApprovals(Logs_StaffApprovals instance);
        partial void UpdateLogs_StaffApprovals(Logs_StaffApprovals instance);
        partial void DeleteLogs_StaffApprovals(Logs_StaffApprovals instance);
        partial void InsertMapsAppStaff(MapsAppStaff instance);
        partial void UpdateMapsAppStaff(MapsAppStaff instance);
        partial void DeleteMapsAppStaff(MapsAppStaff instance);
        partial void InsertMapsItem(MapsItem instance);
        partial void UpdateMapsItem(MapsItem instance);
        partial void DeleteMapsItem(MapsItem instance);
        partial void InsertMapsLeague(MapsLeague instance);
        partial void UpdateMapsLeague(MapsLeague instance);
        partial void DeleteMapsLeague(MapsLeague instance);
        partial void InsertMapsPostion(MapsPostion instance);
        partial void UpdateMapsPostion(MapsPostion instance);
        partial void DeleteMapsPostion(MapsPostion instance);
        partial void InsertMapsRole(MapsRole instance);
        partial void UpdateMapsRole(MapsRole instance);
        partial void DeleteMapsRole(MapsRole instance);
        partial void InsertMapsRoleCompose(MapsRoleCompose instance);
        partial void UpdateMapsRoleCompose(MapsRoleCompose instance);
        partial void DeleteMapsRoleCompose(MapsRoleCompose instance);
        partial void InsertMapsWageItem(MapsWageItem instance);
        partial void UpdateMapsWageItem(MapsWageItem instance);
        partial void DeleteMapsWageItem(MapsWageItem instance);
        partial void InsertMapsWareHouse(MapsWareHouse instance);
        partial void UpdateMapsWareHouse(MapsWareHouse instance);
        partial void DeleteMapsWareHouse(MapsWareHouse instance);
        partial void InsertOplogs(Oplogs instance);
        partial void UpdateOplogs(Oplogs instance);
        partial void DeleteOplogs(Oplogs instance);
        partial void InsertParticles(Particles instance);
        partial void UpdateParticles(Particles instance);
        partial void DeleteParticles(Particles instance);
        partial void InsertParticleSettings(ParticleSettings instance);
        partial void UpdateParticleSettings(ParticleSettings instance);
        partial void DeleteParticleSettings(ParticleSettings instance);
        partial void InsertPasts_AdminPassword(Pasts_AdminPassword instance);
        partial void UpdatePasts_AdminPassword(Pasts_AdminPassword instance);
        partial void DeletePasts_AdminPassword(Pasts_AdminPassword instance);
        partial void InsertPasts_Attend(Pasts_Attend instance);
        partial void UpdatePasts_Attend(Pasts_Attend instance);
        partial void DeletePasts_Attend(Pasts_Attend instance);
        partial void InsertPasts_MapsWageItem(Pasts_MapsWageItem instance);
        partial void UpdatePasts_MapsWageItem(Pasts_MapsWageItem instance);
        partial void DeletePasts_MapsWageItem(Pasts_MapsWageItem instance);
        partial void InsertPasts_WageItem(Pasts_WageItem instance);
        partial void UpdatePasts_WageItem(Pasts_WageItem instance);
        partial void DeletePasts_WageItem(Pasts_WageItem instance);
        partial void InsertPayBills(PayBills instance);
        partial void UpdatePayBills(PayBills instance);
        partial void DeletePayBills(PayBills instance);
        partial void InsertPayItems(PayItems instance);
        partial void UpdatePayItems(PayItems instance);
        partial void DeletePayItems(PayItems instance);
        partial void InsertPersonalFamilyMembers(PersonalFamilyMembers instance);
        partial void UpdatePersonalFamilyMembers(PersonalFamilyMembers instance);
        partial void DeletePersonalFamilyMembers(PersonalFamilyMembers instance);
        partial void InsertPersonalRates(PersonalRates instance);
        partial void UpdatePersonalRates(PersonalRates instance);
        partial void DeletePersonalRates(PersonalRates instance);
        partial void InsertPersonals(Personals instance);
        partial void UpdatePersonals(Personals instance);
        partial void DeletePersonals(Personals instance);
        partial void InsertPersonalWorkExperiences(PersonalWorkExperiences instance);
        partial void UpdatePersonalWorkExperiences(PersonalWorkExperiences instance);
        partial void DeletePersonalWorkExperiences(PersonalWorkExperiences instance);
        partial void InsertPositionsAc(PositionsAc instance);
        partial void UpdatePositionsAc(PositionsAc instance);
        partial void DeletePositionsAc(PositionsAc instance);
        partial void InsertPostions(Postions instance);
        partial void UpdatePostions(Postions instance);
        partial void DeletePostions(Postions instance);
        partial void InsertRegionsAc(RegionsAc instance);
        partial void UpdateRegionsAc(RegionsAc instance);
        partial void DeleteRegionsAc(RegionsAc instance);
        partial void InsertRoles(Roles instance);
        partial void UpdateRoles(Roles instance);
        partial void DeleteRoles(Roles instance);
        partial void InsertSchedules(Schedules instance);
        partial void UpdateSchedules(Schedules instance);
        partial void DeleteSchedules(Schedules instance);
        partial void InsertSchedulesPrivate(SchedulesPrivate instance);
        partial void UpdateSchedulesPrivate(SchedulesPrivate instance);
        partial void DeleteSchedulesPrivate(SchedulesPrivate instance);
        partial void InsertSchedulesPublic(SchedulesPublic instance);
        partial void UpdateSchedulesPublic(SchedulesPublic instance);
        partial void DeleteSchedulesPublic(SchedulesPublic instance);
        partial void InsertSchedulings(Schedulings instance);
        partial void UpdateSchedulings(Schedulings instance);
        partial void DeleteSchedulings(Schedulings instance);
        partial void InsertSealCertificates(SealCertificates instance);
        partial void UpdateSealCertificates(SealCertificates instance);
        partial void DeleteSealCertificates(SealCertificates instance);
        partial void InsertSettings(Settings instance);
        partial void UpdateSettings(Settings instance);
        partial void DeleteSettings(Settings instance);
        partial void InsertShiftStaffs(ShiftStaffs instance);
        partial void UpdateShiftStaffs(ShiftStaffs instance);
        partial void DeleteShiftStaffs(ShiftStaffs instance);
        partial void InsertStaffs(Staffs instance);
        partial void UpdateStaffs(Staffs instance);
        partial void DeleteStaffs(Staffs instance);
        partial void InsertStaffWxs(StaffWxs instance);
        partial void UpdateStaffWxs(StaffWxs instance);
        partial void DeleteStaffWxs(StaffWxs instance);
        partial void InsertTemp_DyjAttend(Temp_DyjAttend instance);
        partial void UpdateTemp_DyjAttend(Temp_DyjAttend instance);
        partial void DeleteTemp_DyjAttend(Temp_DyjAttend instance);
        partial void InsertTokens(Tokens instance);
        partial void UpdateTokens(Tokens instance);
        partial void DeleteTokens(Tokens instance);
        partial void InsertVoteFlows(VoteFlows instance);
        partial void UpdateVoteFlows(VoteFlows instance);
        partial void DeleteVoteFlows(VoteFlows instance);
        partial void InsertVoteSteps(VoteSteps instance);
        partial void UpdateVoteSteps(VoteSteps instance);
        partial void DeleteVoteSteps(VoteSteps instance);
        partial void InsertVacations(Vacations instance);
        partial void UpdateVacations(Vacations instance);
        partial void DeleteVacations(Vacations instance);
        partial void InsertMenus(Menus instance);
        partial void UpdateMenus(Menus instance);
        partial void DeleteMenus(Menus instance);
        #endregion

        public SqlDataContext() :
            base(global::Layers.Data.Properties.Settings.Default.PvbErmConnectionString, mappingSource)
        {
            OnCreated();
        }

        public SqlDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SqlDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Admins> Admins
        {
            get
            {
                return this.GetTable<Admins>();
            }
        }

        public System.Data.Linq.Table<WageItems> WageItems
        {
            get
            {
                return this.GetTable<WageItems>();
            }
        }

        public System.Data.Linq.Table<Advantages> Advantages
        {
            get
            {
                return this.GetTable<Advantages>();
            }
        }

        public System.Data.Linq.Table<Applications> Applications
        {
            get
            {
                return this.GetTable<Applications>();
            }
        }

        public System.Data.Linq.Table<ApplyVoteSteps> ApplyVoteSteps
        {
            get
            {
                return this.GetTable<ApplyVoteSteps>();
            }
        }

        public System.Data.Linq.Table<BankCards> BankCards
        {
            get
            {
                return this.GetTable<BankCards>();
            }
        }

        public System.Data.Linq.Table<Calendars> Calendars
        {
            get
            {
                return this.GetTable<Calendars>();
            }
        }

        public System.Data.Linq.Table<Contacts> Contacts
        {
            get
            {
                return this.GetTable<Contacts>();
            }
        }

        public System.Data.Linq.Table<Labours> Labours
        {
            get
            {
                return this.GetTable<Labours>();
            }
        }

        public System.Data.Linq.Table<Leagues> Leagues
        {
            get
            {
                return this.GetTable<Leagues>();
            }
        }

        public System.Data.Linq.Table<LeaguesPrivate> LeaguesPrivate
        {
            get
            {
                return this.GetTable<LeaguesPrivate>();
            }
        }

        public System.Data.Linq.Table<Logs_ApplyVoteSteps> Logs_ApplyVoteSteps
        {
            get
            {
                return this.GetTable<Logs_ApplyVoteSteps>();
            }
        }

        public System.Data.Linq.Table<Logs_Attend> Logs_Attend
        {
            get
            {
                return this.GetTable<Logs_Attend>();
            }
        }

        public System.Data.Linq.Table<Logs_Errors> Logs_Errors
        {
            get
            {
                return this.GetTable<Logs_Errors>();
            }
        }

        public System.Data.Linq.Table<Logs_Notice> Logs_Notice
        {
            get
            {
                return this.GetTable<Logs_Notice>();
            }
        }

        public System.Data.Linq.Table<Logs_StaffApprovals> Logs_StaffApprovals
        {
            get
            {
                return this.GetTable<Logs_StaffApprovals>();
            }
        }

        public System.Data.Linq.Table<MapsAppStaff> MapsAppStaff
        {
            get
            {
                return this.GetTable<MapsAppStaff>();
            }
        }

        public System.Data.Linq.Table<MapsItem> MapsItem
        {
            get
            {
                return this.GetTable<MapsItem>();
            }
        }

        public System.Data.Linq.Table<MapsLeague> MapsLeague
        {
            get
            {
                return this.GetTable<MapsLeague>();
            }
        }

        public System.Data.Linq.Table<MapsPostion> MapsPostion
        {
            get
            {
                return this.GetTable<MapsPostion>();
            }
        }

        public System.Data.Linq.Table<MapsRole> MapsRole
        {
            get
            {
                return this.GetTable<MapsRole>();
            }
        }

        public System.Data.Linq.Table<MapsRoleCompose> MapsRoleCompose
        {
            get
            {
                return this.GetTable<MapsRoleCompose>();
            }
        }

        public System.Data.Linq.Table<MapsWageItem> MapsWageItem
        {
            get
            {
                return this.GetTable<MapsWageItem>();
            }
        }

        public System.Data.Linq.Table<MapsWareHouse> MapsWareHouse
        {
            get
            {
                return this.GetTable<MapsWareHouse>();
            }
        }

        public System.Data.Linq.Table<Oplogs> Oplogs
        {
            get
            {
                return this.GetTable<Oplogs>();
            }
        }

        public System.Data.Linq.Table<Particles> Particles
        {
            get
            {
                return this.GetTable<Particles>();
            }
        }

        public System.Data.Linq.Table<ParticleSettings> ParticleSettings
        {
            get
            {
                return this.GetTable<ParticleSettings>();
            }
        }

        public System.Data.Linq.Table<Pasts_AdminPassword> Pasts_AdminPassword
        {
            get
            {
                return this.GetTable<Pasts_AdminPassword>();
            }
        }

        public System.Data.Linq.Table<Pasts_Attend> Pasts_Attend
        {
            get
            {
                return this.GetTable<Pasts_Attend>();
            }
        }

        public System.Data.Linq.Table<Pasts_MapsWageItem> Pasts_MapsWageItem
        {
            get
            {
                return this.GetTable<Pasts_MapsWageItem>();
            }
        }

        public System.Data.Linq.Table<Pasts_WageItem> Pasts_WageItem
        {
            get
            {
                return this.GetTable<Pasts_WageItem>();
            }
        }

        public System.Data.Linq.Table<PayBills> PayBills
        {
            get
            {
                return this.GetTable<PayBills>();
            }
        }

        public System.Data.Linq.Table<PayItems> PayItems
        {
            get
            {
                return this.GetTable<PayItems>();
            }
        }

        public System.Data.Linq.Table<PersonalFamilyMembers> PersonalFamilyMembers
        {
            get
            {
                return this.GetTable<PersonalFamilyMembers>();
            }
        }

        public System.Data.Linq.Table<PersonalRates> PersonalRates
        {
            get
            {
                return this.GetTable<PersonalRates>();
            }
        }

        public System.Data.Linq.Table<Personals> Personals
        {
            get
            {
                return this.GetTable<Personals>();
            }
        }

        public System.Data.Linq.Table<PersonalWorkExperiences> PersonalWorkExperiences
        {
            get
            {
                return this.GetTable<PersonalWorkExperiences>();
            }
        }

        public System.Data.Linq.Table<PositionsAc> PositionsAc
        {
            get
            {
                return this.GetTable<PositionsAc>();
            }
        }

        public System.Data.Linq.Table<Postions> Postions
        {
            get
            {
                return this.GetTable<Postions>();
            }
        }

        public System.Data.Linq.Table<RegionsAc> RegionsAc
        {
            get
            {
                return this.GetTable<RegionsAc>();
            }
        }

        public System.Data.Linq.Table<Roles> Roles
        {
            get
            {
                return this.GetTable<Roles>();
            }
        }

        public System.Data.Linq.Table<Schedules> Schedules
        {
            get
            {
                return this.GetTable<Schedules>();
            }
        }

        public System.Data.Linq.Table<SchedulesPrivate> SchedulesPrivate
        {
            get
            {
                return this.GetTable<SchedulesPrivate>();
            }
        }

        public System.Data.Linq.Table<SchedulesPublic> SchedulesPublic
        {
            get
            {
                return this.GetTable<SchedulesPublic>();
            }
        }

        public System.Data.Linq.Table<Schedulings> Schedulings
        {
            get
            {
                return this.GetTable<Schedulings>();
            }
        }

        public System.Data.Linq.Table<SealCertificates> SealCertificates
        {
            get
            {
                return this.GetTable<SealCertificates>();
            }
        }

        public System.Data.Linq.Table<Settings> Settings
        {
            get
            {
                return this.GetTable<Settings>();
            }
        }

        public System.Data.Linq.Table<ShiftStaffs> ShiftStaffs
        {
            get
            {
                return this.GetTable<ShiftStaffs>();
            }
        }

        public System.Data.Linq.Table<Staffs> Staffs
        {
            get
            {
                return this.GetTable<Staffs>();
            }
        }

        public System.Data.Linq.Table<StaffWxs> StaffWxs
        {
            get
            {
                return this.GetTable<StaffWxs>();
            }
        }

        public System.Data.Linq.Table<Temp_DyjAttend> Temp_DyjAttend
        {
            get
            {
                return this.GetTable<Temp_DyjAttend>();
            }
        }

        public System.Data.Linq.Table<Tokens> Tokens
        {
            get
            {
                return this.GetTable<Tokens>();
            }
        }

        public System.Data.Linq.Table<VoteFlows> VoteFlows
        {
            get
            {
                return this.GetTable<VoteFlows>();
            }
        }

        public System.Data.Linq.Table<VoteSteps> VoteSteps
        {
            get
            {
                return this.GetTable<VoteSteps>();
            }
        }

        public System.Data.Linq.Table<AdminAdvantagesTopView> AdminAdvantagesTopView
        {
            get
            {
                return this.GetTable<AdminAdvantagesTopView>();
            }
        }

        public System.Data.Linq.Table<WorkCitiesTopView> WorkCitiesTopView
        {
            get
            {
                return this.GetTable<WorkCitiesTopView>();
            }
        }

        public System.Data.Linq.Table<AdminsBussinessTopView> AdminsBussinessTopView
        {
            get
            {
                return this.GetTable<AdminsBussinessTopView>();
            }
        }

        public System.Data.Linq.Table<AdminsInfoTopView> AdminsInfoTopView
        {
            get
            {
                return this.GetTable<AdminsInfoTopView>();
            }
        }

        public System.Data.Linq.Table<AdminsTopView> AdminsTopView
        {
            get
            {
                return this.GetTable<AdminsTopView>();
            }
        }

        public System.Data.Linq.Table<AdminsWmsView> AdminsWmsView
        {
            get
            {
                return this.GetTable<AdminsWmsView>();
            }
        }

        public System.Data.Linq.Table<ApprovalsStatisticsView> ApprovalsStatisticsView
        {
            get
            {
                return this.GetTable<ApprovalsStatisticsView>();
            }
        }

        public System.Data.Linq.Table<BomQuotesTopView> BomQuotesTopView
        {
            get
            {
                return this.GetTable<BomQuotesTopView>();
            }
        }

        public System.Data.Linq.Table<CompaniesTopView> CompaniesTopView
        {
            get
            {
                return this.GetTable<CompaniesTopView>();
            }
        }

        public System.Data.Linq.Table<LogsAttendTopView> LogsAttendTopView
        {
            get
            {
                return this.GetTable<LogsAttendTopView>();
            }
        }

        public System.Data.Linq.Table<MapsRoleComposeTopView> MapsRoleComposeTopView
        {
            get
            {
                return this.GetTable<MapsRoleComposeTopView>();
            }
        }

        public System.Data.Linq.Table<MapsWareHouseView> MapsWareHouseView
        {
            get
            {
                return this.GetTable<MapsWareHouseView>();
            }
        }

        public System.Data.Linq.Table<PastsAttendTopView> PastsAttendTopView
        {
            get
            {
                return this.GetTable<PastsAttendTopView>();
            }
        }

        public System.Data.Linq.Table<StaffsTopView> StaffsTopView
        {
            get
            {
                return this.GetTable<StaffsTopView>();
            }
        }

        public System.Data.Linq.Table<SubsWarehousesTopView> SubsWarehousesTopView
        {
            get
            {
                return this.GetTable<SubsWarehousesTopView>();
            }
        }

        public System.Data.Linq.Table<WarehousePlatesTopView> WarehousePlatesTopView
        {
            get
            {
                return this.GetTable<WarehousePlatesTopView>();
            }
        }

        public System.Data.Linq.Table<Vacations> Vacations
        {
            get
            {
                return this.GetTable<Vacations>();
            }
        }

        public System.Data.Linq.Table<Menus> Menus
        {
            get
            {
                return this.GetTable<Menus>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.P_CalcWageByPayId")]
        public int P_CalcWageByPayId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string payId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string adminId)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), payId, adminId);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.P_ReplaceMethodByFormula")]
        public int P_ReplaceMethodByFormula([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(500)")] string str, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string dateIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string staffId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(500)")] ref string result)
        {
            IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str, dateIndex, staffId, result);
            result = ((string)(result1.GetParameterValue(3)));
            return ((int)(result1.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.P_CreatePKey")]
        public int P_CreatePKey([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "NAME", DbType = "VarChar(50)")] string nAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LENGTH", DbType = "Int")] System.Nullable<int> lENGTH, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PRIMARYKEYTYPE", DbType = "Int")] System.Nullable<int> pRIMARYKEYTYPE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Type", DbType = "Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VAL", DbType = "VarChar(50)")] ref string vAL)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nAME, lENGTH, pRIMARYKEYTYPE, type, vAL);
            vAL = ((string)(result.GetParameterValue(4)));
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.P_ImportWageData")]
        public ISingleResult<P_ImportWageDataResult> P_ImportWageData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(MAX)")] string json, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string dateIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(50)")] string adminId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(MAX)")] string error_msg)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), json, dateIndex, adminId, error_msg);
            return ((ISingleResult<P_ImportWageDataResult>)(result.ReturnValue));
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Admins")]
    public partial class Admins : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private string _UserName;

        private string _RealName;

        private string _ShowName;

        private string _Password;

        private string _SelCode;

        private string _RoleID;

        private System.DateTime _CreateDate;

        private System.Nullable<System.DateTime> _UpdateDate;

        private int _Status;

        private System.Nullable<System.DateTime> _LastLoginDate;

        private string _OriginID;

        private System.Nullable<System.DateTime> _PwdModifyDate;

        private EntitySet<Tokens> _Tokens;

        private EntityRef<Roles> _Roles;

        private EntityRef<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnRealNameChanging(string value);
        partial void OnRealNameChanged();
        partial void OnShowNameChanging(string value);
        partial void OnShowNameChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnSelCodeChanging(string value);
        partial void OnSelCodeChanged();
        partial void OnRoleIDChanging(string value);
        partial void OnRoleIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLastLoginDateChanged();
        partial void OnOriginIDChanging(string value);
        partial void OnOriginIDChanged();
        partial void OnPwdModifyDateChanging(System.Nullable<System.DateTime> value);
        partial void OnPwdModifyDateChanged();
        #endregion

        public Admins()
        {
            this._Tokens = new EntitySet<Tokens>(new Action<Tokens>(this.attach_Tokens), new Action<Tokens>(this.detach_Tokens));
            this._Roles = default(EntityRef<Roles>);
            this._Staffs = default(EntityRef<Staffs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    if (this._Staffs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RealName
        {
            get
            {
                return this._RealName;
            }
            set
            {
                if ((this._RealName != value))
                {
                    this.OnRealNameChanging(value);
                    this.SendPropertyChanging();
                    this._RealName = value;
                    this.SendPropertyChanged("RealName");
                    this.OnRealNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowName", DbType = "NVarChar(50)")]
        public string ShowName
        {
            get
            {
                return this._ShowName;
            }
            set
            {
                if ((this._ShowName != value))
                {
                    this.OnShowNameChanging(value);
                    this.SendPropertyChanging();
                    this._ShowName = value;
                    this.SendPropertyChanged("ShowName");
                    this.OnShowNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if ((this._Password != value))
                {
                    this.OnPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this.OnSelCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SelCode = value;
                    this.SendPropertyChanged("SelCode");
                    this.OnSelCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    if (this._Roles.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._RoleID = value;
                    this.SendPropertyChanged("RoleID");
                    this.OnRoleIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this.OnLastLoginDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastLoginDate = value;
                    this.SendPropertyChanged("LastLoginDate");
                    this.OnLastLoginDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginID", DbType = "VarChar(50)")]
        public string OriginID
        {
            get
            {
                return this._OriginID;
            }
            set
            {
                if ((this._OriginID != value))
                {
                    this.OnOriginIDChanging(value);
                    this.SendPropertyChanging();
                    this._OriginID = value;
                    this.SendPropertyChanged("OriginID");
                    this.OnOriginIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PwdModifyDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> PwdModifyDate
        {
            get
            {
                return this._PwdModifyDate;
            }
            set
            {
                if ((this._PwdModifyDate != value))
                {
                    this.OnPwdModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._PwdModifyDate = value;
                    this.SendPropertyChanged("PwdModifyDate");
                    this.OnPwdModifyDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Admins_Tokens", Storage = "_Tokens", ThisKey = "ID", OtherKey = "OutID")]
        public EntitySet<Tokens> Tokens
        {
            get
            {
                return this._Tokens;
            }
            set
            {
                this._Tokens.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Roles_Admins", Storage = "_Roles", ThisKey = "RoleID", OtherKey = "ID", IsForeignKey = true)]
        public Roles Roles
        {
            get
            {
                return this._Roles.Entity;
            }
            set
            {
                Roles previousValue = this._Roles.Entity;
                if (((previousValue != value)
                            || (this._Roles.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Roles.Entity = null;
                        previousValue.Admins.Remove(this);
                    }
                    this._Roles.Entity = value;
                    if ((value != null))
                    {
                        value.Admins.Add(this);
                        this._RoleID = value.ID;
                    }
                    else
                    {
                        this._RoleID = default(string);
                    }
                    this.SendPropertyChanged("Roles");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Admins", Storage = "_Staffs", ThisKey = "StaffID", OtherKey = "ID", IsForeignKey = true)]
        public Staffs Staffs
        {
            get
            {
                return this._Staffs.Entity;
            }
            set
            {
                Staffs previousValue = this._Staffs.Entity;
                if (((previousValue != value)
                            || (this._Staffs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Staffs.Entity = null;
                        previousValue.Admins.Remove(this);
                    }
                    this._Staffs.Entity = value;
                    if ((value != null))
                    {
                        value.Admins.Add(this);
                        this._StaffID = value.ID;
                    }
                    else
                    {
                        this._StaffID = default(string);
                    }
                    this.SendPropertyChanged("Staffs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Tokens(Tokens entity)
        {
            this.SendPropertyChanging();
            entity.Admins = this;
        }

        private void detach_Tokens(Tokens entity)
        {
            this.SendPropertyChanging();
            entity.Admins = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.WageItems")]
    public partial class WageItems : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private int _Type;

        private bool _IsImport;

        private string _Formula;

        private System.Nullable<int> _CalcOrder;

        private string _Description;

        private string _AdminID;

        private int _OrderIndex;

        private System.DateTime _CreateDate;

        private int _Status;

        private string _InputerId;

        private EntitySet<MapsPostion> _MapsPostion;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnIsImportChanging(bool value);
        partial void OnIsImportChanged();
        partial void OnFormulaChanging(string value);
        partial void OnFormulaChanged();
        partial void OnCalcOrderChanging(System.Nullable<int> value);
        partial void OnCalcOrderChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnOrderIndexChanging(int value);
        partial void OnOrderIndexChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnInputerIdChanging(string value);
        partial void OnInputerIdChanged();
        #endregion

        public WageItems()
        {
            this._MapsPostion = new EntitySet<MapsPostion>(new Action<MapsPostion>(this.attach_MapsPostion), new Action<MapsPostion>(this.detach_MapsPostion));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsImport", DbType = "Bit NOT NULL")]
        public bool IsImport
        {
            get
            {
                return this._IsImport;
            }
            set
            {
                if ((this._IsImport != value))
                {
                    this.OnIsImportChanging(value);
                    this.SendPropertyChanging();
                    this._IsImport = value;
                    this.SendPropertyChanged("IsImport");
                    this.OnIsImportChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Formula", DbType = "NVarChar(500)")]
        public string Formula
        {
            get
            {
                return this._Formula;
            }
            set
            {
                if ((this._Formula != value))
                {
                    this.OnFormulaChanging(value);
                    this.SendPropertyChanging();
                    this._Formula = value;
                    this.SendPropertyChanged("Formula");
                    this.OnFormulaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalcOrder", DbType = "Int")]
        public System.Nullable<int> CalcOrder
        {
            get
            {
                return this._CalcOrder;
            }
            set
            {
                if ((this._CalcOrder != value))
                {
                    this.OnCalcOrderChanging(value);
                    this.SendPropertyChanging();
                    this._CalcOrder = value;
                    this.SendPropertyChanged("CalcOrder");
                    this.OnCalcOrderChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(200)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderIndex", DbType = "Int NOT NULL")]
        public int OrderIndex
        {
            get
            {
                return this._OrderIndex;
            }
            set
            {
                if ((this._OrderIndex != value))
                {
                    this.OnOrderIndexChanging(value);
                    this.SendPropertyChanging();
                    this._OrderIndex = value;
                    this.SendPropertyChanged("OrderIndex");
                    this.OnOrderIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InputerId", DbType = "VarChar(50)")]
        public string InputerId
        {
            get
            {
                return this._InputerId;
            }
            set
            {
                if ((this._InputerId != value))
                {
                    this.OnInputerIdChanging(value);
                    this.SendPropertyChanging();
                    this._InputerId = value;
                    this.SendPropertyChanged("InputerId");
                    this.OnInputerIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "WageItems_MapsPostion", Storage = "_MapsPostion", ThisKey = "ID", OtherKey = "WageItemID")]
        public EntitySet<MapsPostion> MapsPostion
        {
            get
            {
                return this._MapsPostion;
            }
            set
            {
                this._MapsPostion.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_MapsPostion(MapsPostion entity)
        {
            this.SendPropertyChanging();
            entity.WageItems = this;
        }

        private void detach_MapsPostion(MapsPostion entity)
        {
            this.SendPropertyChanging();
            entity.WageItems = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Advantages")]
    public partial class Advantages : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _AdminID;

        private string _Manufacturers;

        private string _PartNumbers;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnManufacturersChanging(string value);
        partial void OnManufacturersChanged();
        partial void OnPartNumbersChanging(string value);
        partial void OnPartNumbersChanged();
        #endregion

        public Advantages()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Manufacturers", DbType = "NVarChar(MAX)")]
        public string Manufacturers
        {
            get
            {
                return this._Manufacturers;
            }
            set
            {
                if ((this._Manufacturers != value))
                {
                    this.OnManufacturersChanging(value);
                    this.SendPropertyChanging();
                    this._Manufacturers = value;
                    this.SendPropertyChanged("Manufacturers");
                    this.OnManufacturersChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PartNumbers", DbType = "NVarChar(MAX)")]
        public string PartNumbers
        {
            get
            {
                return this._PartNumbers;
            }
            set
            {
                if ((this._PartNumbers != value))
                {
                    this.OnPartNumbersChanging(value);
                    this.SendPropertyChanging();
                    this._PartNumbers = value;
                    this.SendPropertyChanged("PartNumbers");
                    this.OnPartNumbersChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Applications")]
    public partial class Applications : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _VoteFlowID;

        private string _Title;

        private string _Context;

        private string _ApplicantID;

        private string _CreatorID;

        private System.DateTime _CreateDate;

        private int _Status;

        private EntitySet<ApplyVoteSteps> _ApplyVoteSteps;

        private EntitySet<Logs_ApplyVoteSteps> _Logs_ApplyVoteSteps;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnVoteFlowIDChanging(string value);
        partial void OnVoteFlowIDChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        partial void OnApplicantIDChanging(string value);
        partial void OnApplicantIDChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        #endregion

        public Applications()
        {
            this._ApplyVoteSteps = new EntitySet<ApplyVoteSteps>(new Action<ApplyVoteSteps>(this.attach_ApplyVoteSteps), new Action<ApplyVoteSteps>(this.detach_ApplyVoteSteps));
            this._Logs_ApplyVoteSteps = new EntitySet<Logs_ApplyVoteSteps>(new Action<Logs_ApplyVoteSteps>(this.attach_Logs_ApplyVoteSteps), new Action<Logs_ApplyVoteSteps>(this.detach_Logs_ApplyVoteSteps));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteFlowID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string VoteFlowID
        {
            get
            {
                return this._VoteFlowID;
            }
            set
            {
                if ((this._VoteFlowID != value))
                {
                    this.OnVoteFlowIDChanging(value);
                    this.SendPropertyChanging();
                    this._VoteFlowID = value;
                    this.SendPropertyChanged("VoteFlowID");
                    this.OnVoteFlowIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicantID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicantID
        {
            get
            {
                return this._ApplicantID;
            }
            set
            {
                if ((this._ApplicantID != value))
                {
                    this.OnApplicantIDChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicantID = value;
                    this.SendPropertyChanged("ApplicantID");
                    this.OnApplicantIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Applications_ApplyVoteSteps", Storage = "_ApplyVoteSteps", ThisKey = "ID", OtherKey = "ApplicationID")]
        public EntitySet<ApplyVoteSteps> ApplyVoteSteps
        {
            get
            {
                return this._ApplyVoteSteps;
            }
            set
            {
                this._ApplyVoteSteps.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Applications_Logs_ApplyVoteSteps", Storage = "_Logs_ApplyVoteSteps", ThisKey = "ID", OtherKey = "ApplicationID")]
        public EntitySet<Logs_ApplyVoteSteps> Logs_ApplyVoteSteps
        {
            get
            {
                return this._Logs_ApplyVoteSteps;
            }
            set
            {
                this._Logs_ApplyVoteSteps.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ApplyVoteSteps(ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.Applications = this;
        }

        private void detach_ApplyVoteSteps(ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.Applications = null;
        }

        private void attach_Logs_ApplyVoteSteps(Logs_ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.Applications = this;
        }

        private void detach_Logs_ApplyVoteSteps(Logs_ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.Applications = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ApplyVoteSteps")]
    public partial class ApplyVoteSteps : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _ApplicationID;

        private string _VoteStepID;

        private bool _IsCurrent;

        private string _AdminID;

        private int _Status;

        private string _Summary;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        private EntityRef<Applications> _Applications;

        private EntityRef<VoteSteps> _VoteSteps;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnApplicationIDChanging(string value);
        partial void OnApplicationIDChanged();
        partial void OnVoteStepIDChanging(string value);
        partial void OnVoteStepIDChanged();
        partial void OnIsCurrentChanging(bool value);
        partial void OnIsCurrentChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        #endregion

        public ApplyVoteSteps()
        {
            this._Applications = default(EntityRef<Applications>);
            this._VoteSteps = default(EntityRef<VoteSteps>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    if (this._Applications.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnApplicationIDChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteStepID", DbType = "VarChar(50)")]
        public string VoteStepID
        {
            get
            {
                return this._VoteStepID;
            }
            set
            {
                if ((this._VoteStepID != value))
                {
                    if (this._VoteSteps.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnVoteStepIDChanging(value);
                    this.SendPropertyChanging();
                    this._VoteStepID = value;
                    this.SendPropertyChanged("VoteStepID");
                    this.OnVoteStepIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCurrent", DbType = "Bit NOT NULL")]
        public bool IsCurrent
        {
            get
            {
                return this._IsCurrent;
            }
            set
            {
                if ((this._IsCurrent != value))
                {
                    this.OnIsCurrentChanging(value);
                    this.SendPropertyChanging();
                    this._IsCurrent = value;
                    this.SendPropertyChanged("IsCurrent");
                    this.OnIsCurrentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "NVarChar(200)")]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Applications_ApplyVoteSteps", Storage = "_Applications", ThisKey = "ApplicationID", OtherKey = "ID", IsForeignKey = true)]
        public Applications Applications
        {
            get
            {
                return this._Applications.Entity;
            }
            set
            {
                Applications previousValue = this._Applications.Entity;
                if (((previousValue != value)
                            || (this._Applications.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Applications.Entity = null;
                        previousValue.ApplyVoteSteps.Remove(this);
                    }
                    this._Applications.Entity = value;
                    if ((value != null))
                    {
                        value.ApplyVoteSteps.Add(this);
                        this._ApplicationID = value.ID;
                    }
                    else
                    {
                        this._ApplicationID = default(string);
                    }
                    this.SendPropertyChanged("Applications");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "VoteSteps_ApplyVoteSteps", Storage = "_VoteSteps", ThisKey = "VoteStepID", OtherKey = "ID", IsForeignKey = true)]
        public VoteSteps VoteSteps
        {
            get
            {
                return this._VoteSteps.Entity;
            }
            set
            {
                VoteSteps previousValue = this._VoteSteps.Entity;
                if (((previousValue != value)
                            || (this._VoteSteps.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._VoteSteps.Entity = null;
                        previousValue.ApplyVoteSteps.Remove(this);
                    }
                    this._VoteSteps.Entity = value;
                    if ((value != null))
                    {
                        value.ApplyVoteSteps.Add(this);
                        this._VoteStepID = value.ID;
                    }
                    else
                    {
                        this._VoteStepID = default(string);
                    }
                    this.SendPropertyChanged("VoteSteps");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BankCards")]
    public partial class BankCards : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Bank;

        private string _BankAddress;

        private string _Account;

        private string _SwiftCode;

        private System.DateTime _CreateDate;

        private EntityRef<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnBankChanging(string value);
        partial void OnBankChanged();
        partial void OnBankAddressChanging(string value);
        partial void OnBankAddressChanged();
        partial void OnAccountChanging(string value);
        partial void OnAccountChanged();
        partial void OnSwiftCodeChanging(string value);
        partial void OnSwiftCodeChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public BankCards()
        {
            this._Staffs = default(EntityRef<Staffs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    if (this._Staffs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank", DbType = "NVarChar(200)")]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this.OnBankChanging(value);
                    this.SendPropertyChanging();
                    this._Bank = value;
                    this.SendPropertyChanged("Bank");
                    this.OnBankChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankAddress", DbType = "NVarChar(200)")]
        public string BankAddress
        {
            get
            {
                return this._BankAddress;
            }
            set
            {
                if ((this._BankAddress != value))
                {
                    this.OnBankAddressChanging(value);
                    this.SendPropertyChanging();
                    this._BankAddress = value;
                    this.SendPropertyChanged("BankAddress");
                    this.OnBankAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Account", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Account
        {
            get
            {
                return this._Account;
            }
            set
            {
                if ((this._Account != value))
                {
                    this.OnAccountChanging(value);
                    this.SendPropertyChanging();
                    this._Account = value;
                    this.SendPropertyChanged("Account");
                    this.OnAccountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SwiftCode", DbType = "VarChar(50)")]
        public string SwiftCode
        {
            get
            {
                return this._SwiftCode;
            }
            set
            {
                if ((this._SwiftCode != value))
                {
                    this.OnSwiftCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SwiftCode = value;
                    this.SendPropertyChanged("SwiftCode");
                    this.OnSwiftCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_BankCards", Storage = "_Staffs", ThisKey = "ID", OtherKey = "ID", IsForeignKey = true)]
        public Staffs Staffs
        {
            get
            {
                return this._Staffs.Entity;
            }
            set
            {
                Staffs previousValue = this._Staffs.Entity;
                if (((previousValue != value)
                            || (this._Staffs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Staffs.Entity = null;
                        previousValue.BankCards = null;
                    }
                    this._Staffs.Entity = value;
                    if ((value != null))
                    {
                        value.BankCards = this;
                        this._ID = value.ID;
                    }
                    else
                    {
                        this._ID = default(string);
                    }
                    this.SendPropertyChanged("Staffs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Calendars")]
    public partial class Calendars : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.DateTime _ID;

        private int _Year;

        private int _Month;

        private int _Day;

        private int _Week;

        private EntitySet<Logs_Attend> _Logs_Attend;

        private EntitySet<Schedules> _Schedules;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(System.DateTime value);
        partial void OnIDChanged();
        partial void OnYearChanging(int value);
        partial void OnYearChanged();
        partial void OnMonthChanging(int value);
        partial void OnMonthChanged();
        partial void OnDayChanging(int value);
        partial void OnDayChanged();
        partial void OnWeekChanging(int value);
        partial void OnWeekChanged();
        #endregion

        public Calendars()
        {
            this._Logs_Attend = new EntitySet<Logs_Attend>(new Action<Logs_Attend>(this.attach_Logs_Attend), new Action<Logs_Attend>(this.detach_Logs_Attend));
            this._Schedules = new EntitySet<Schedules>(new Action<Schedules>(this.attach_Schedules), new Action<Schedules>(this.detach_Schedules));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Date NOT NULL", IsPrimaryKey = true)]
        public System.DateTime ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Year", DbType = "Int NOT NULL")]
        public int Year
        {
            get
            {
                return this._Year;
            }
            set
            {
                if ((this._Year != value))
                {
                    this.OnYearChanging(value);
                    this.SendPropertyChanging();
                    this._Year = value;
                    this.SendPropertyChanged("Year");
                    this.OnYearChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Month", DbType = "Int NOT NULL")]
        public int Month
        {
            get
            {
                return this._Month;
            }
            set
            {
                if ((this._Month != value))
                {
                    this.OnMonthChanging(value);
                    this.SendPropertyChanging();
                    this._Month = value;
                    this.SendPropertyChanged("Month");
                    this.OnMonthChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Day", DbType = "Int NOT NULL")]
        public int Day
        {
            get
            {
                return this._Day;
            }
            set
            {
                if ((this._Day != value))
                {
                    this.OnDayChanging(value);
                    this.SendPropertyChanging();
                    this._Day = value;
                    this.SendPropertyChanged("Day");
                    this.OnDayChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Week", DbType = "Int NOT NULL")]
        public int Week
        {
            get
            {
                return this._Week;
            }
            set
            {
                if ((this._Week != value))
                {
                    this.OnWeekChanging(value);
                    this.SendPropertyChanging();
                    this._Week = value;
                    this.SendPropertyChanged("Week");
                    this.OnWeekChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Calendars_Logs_Attend", Storage = "_Logs_Attend", ThisKey = "ID", OtherKey = "Date")]
        public EntitySet<Logs_Attend> Logs_Attend
        {
            get
            {
                return this._Logs_Attend;
            }
            set
            {
                this._Logs_Attend.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Calendars_Schedules", Storage = "_Schedules", ThisKey = "ID", OtherKey = "Date")]
        public EntitySet<Schedules> Schedules
        {
            get
            {
                return this._Schedules;
            }
            set
            {
                this._Schedules.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Logs_Attend(Logs_Attend entity)
        {
            this.SendPropertyChanging();
            entity.Calendars = this;
        }

        private void detach_Logs_Attend(Logs_Attend entity)
        {
            this.SendPropertyChanging();
            entity.Calendars = null;
        }

        private void attach_Schedules(Schedules entity)
        {
            this.SendPropertyChanging();
            entity.Calendars = this;
        }

        private void detach_Schedules(Schedules entity)
        {
            this.SendPropertyChanging();
            entity.Calendars = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Contacts")]
    public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Tel;

        private string _Mobile;

        private string _QQ;

        private string _Email;

        private string _Wx;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnTelChanging(string value);
        partial void OnTelChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnQQChanging(string value);
        partial void OnQQChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnWxChanging(string value);
        partial void OnWxChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        #endregion

        public Contacts()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(50)")]
        public string Tel
        {
            get
            {
                return this._Tel;
            }
            set
            {
                if ((this._Tel != value))
                {
                    this.OnTelChanging(value);
                    this.SendPropertyChanging();
                    this._Tel = value;
                    this.SendPropertyChanged("Tel");
                    this.OnTelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(50)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QQ", DbType = "VarChar(50)")]
        public string QQ
        {
            get
            {
                return this._QQ;
            }
            set
            {
                if ((this._QQ != value))
                {
                    this.OnQQChanging(value);
                    this.SendPropertyChanging();
                    this._QQ = value;
                    this.SendPropertyChanged("QQ");
                    this.OnQQChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(50)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Wx", DbType = "VarChar(50)")]
        public string Wx
        {
            get
            {
                return this._Wx;
            }
            set
            {
                if ((this._Wx != value))
                {
                    this.OnWxChanging(value);
                    this.SendPropertyChanging();
                    this._Wx = value;
                    this.SendPropertyChanged("Wx");
                    this.OnWxChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Labours")]
    public partial class Labours : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private System.DateTime _EntryDate;

        private string _EntryCompany;

        private string _EnterpriseID;

        private System.Nullable<System.DateTime> _LeaveDate;

        private System.Nullable<System.DateTime> _SigningTime;

        private System.Nullable<System.DateTime> _ContractPeriod;

        private string _ContractType;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        private string _SocialSecurityAccount;

        private string _ProbationMonths;

        private EntityRef<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnEntryDateChanging(System.DateTime value);
        partial void OnEntryDateChanged();
        partial void OnEntryCompanyChanging(string value);
        partial void OnEntryCompanyChanged();
        partial void OnEnterpriseIDChanging(string value);
        partial void OnEnterpriseIDChanged();
        partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLeaveDateChanged();
        partial void OnSigningTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnSigningTimeChanged();
        partial void OnContractPeriodChanging(System.Nullable<System.DateTime> value);
        partial void OnContractPeriodChanged();
        partial void OnContractTypeChanging(string value);
        partial void OnContractTypeChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        partial void OnSocialSecurityAccountChanging(string value);
        partial void OnSocialSecurityAccountChanged();
        partial void OnProbationMonthsChanging(string value);
        partial void OnProbationMonthsChanged();
        #endregion

        public Labours()
        {
            this._Staffs = default(EntityRef<Staffs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    if (this._Staffs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EntryDate", DbType = "DateTime NOT NULL")]
        public System.DateTime EntryDate
        {
            get
            {
                return this._EntryDate;
            }
            set
            {
                if ((this._EntryDate != value))
                {
                    this.OnEntryDateChanging(value);
                    this.SendPropertyChanging();
                    this._EntryDate = value;
                    this.SendPropertyChanged("EntryDate");
                    this.OnEntryDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EntryCompany", DbType = "VarChar(50)")]
        public string EntryCompany
        {
            get
            {
                return this._EntryCompany;
            }
            set
            {
                if ((this._EntryCompany != value))
                {
                    this.OnEntryCompanyChanging(value);
                    this.SendPropertyChanging();
                    this._EntryCompany = value;
                    this.SendPropertyChanged("EntryCompany");
                    this.OnEntryCompanyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this.OnEnterpriseIDChanging(value);
                    this.SendPropertyChanging();
                    this._EnterpriseID = value;
                    this.SendPropertyChanged("EnterpriseID");
                    this.OnEnterpriseIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LeaveDate
        {
            get
            {
                return this._LeaveDate;
            }
            set
            {
                if ((this._LeaveDate != value))
                {
                    this.OnLeaveDateChanging(value);
                    this.SendPropertyChanging();
                    this._LeaveDate = value;
                    this.SendPropertyChanged("LeaveDate");
                    this.OnLeaveDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SigningTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SigningTime
        {
            get
            {
                return this._SigningTime;
            }
            set
            {
                if ((this._SigningTime != value))
                {
                    this.OnSigningTimeChanging(value);
                    this.SendPropertyChanging();
                    this._SigningTime = value;
                    this.SendPropertyChanged("SigningTime");
                    this.OnSigningTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractPeriod", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ContractPeriod
        {
            get
            {
                return this._ContractPeriod;
            }
            set
            {
                if ((this._ContractPeriod != value))
                {
                    this.OnContractPeriodChanging(value);
                    this.SendPropertyChanging();
                    this._ContractPeriod = value;
                    this.SendPropertyChanged("ContractPeriod");
                    this.OnContractPeriodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractType", DbType = "VarChar(50)")]
        public string ContractType
        {
            get
            {
                return this._ContractType;
            }
            set
            {
                if ((this._ContractType != value))
                {
                    this.OnContractTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ContractType = value;
                    this.SendPropertyChanged("ContractType");
                    this.OnContractTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialSecurityAccount", DbType = "VarChar(50)")]
        public string SocialSecurityAccount
        {
            get
            {
                return this._SocialSecurityAccount;
            }
            set
            {
                if ((this._SocialSecurityAccount != value))
                {
                    this.OnSocialSecurityAccountChanging(value);
                    this.SendPropertyChanging();
                    this._SocialSecurityAccount = value;
                    this.SendPropertyChanged("SocialSecurityAccount");
                    this.OnSocialSecurityAccountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProbationMonths", DbType = "VarChar(50)")]
        public string ProbationMonths
        {
            get
            {
                return this._ProbationMonths;
            }
            set
            {
                if ((this._ProbationMonths != value))
                {
                    this.OnProbationMonthsChanging(value);
                    this.SendPropertyChanging();
                    this._ProbationMonths = value;
                    this.SendPropertyChanged("ProbationMonths");
                    this.OnProbationMonthsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Labours", Storage = "_Staffs", ThisKey = "ID", OtherKey = "ID", IsForeignKey = true)]
        public Staffs Staffs
        {
            get
            {
                return this._Staffs.Entity;
            }
            set
            {
                Staffs previousValue = this._Staffs.Entity;
                if (((previousValue != value)
                            || (this._Staffs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Staffs.Entity = null;
                        previousValue.Labours = null;
                    }
                    this._Staffs.Entity = value;
                    if ((value != null))
                    {
                        value.Labours = this;
                        this._ID = value.ID;
                    }
                    else
                    {
                        this._ID = default(string);
                    }
                    this.SendPropertyChanged("Staffs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Leagues")]
    public partial class Leagues : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private int _Category;

        private string _FatherID;

        private string _Name;

        private int _Type;

        private int _Status;

        private string _RoleID;

        private string _EnterpriseID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnCategoryChanging(int value);
        partial void OnCategoryChanged();
        partial void OnFatherIDChanging(string value);
        partial void OnFatherIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnRoleIDChanging(string value);
        partial void OnRoleIDChanged();
        partial void OnEnterpriseIDChanging(string value);
        partial void OnEnterpriseIDChanged();
        #endregion

        public Leagues()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Category", DbType = "Int NOT NULL")]
        public int Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FatherID", DbType = "VarChar(50)")]
        public string FatherID
        {
            get
            {
                return this._FatherID;
            }
            set
            {
                if ((this._FatherID != value))
                {
                    this.OnFatherIDChanging(value);
                    this.SendPropertyChanging();
                    this._FatherID = value;
                    this.SendPropertyChanged("FatherID");
                    this.OnFatherIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this.OnRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._RoleID = value;
                    this.SendPropertyChanged("RoleID");
                    this.OnRoleIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50)")]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this.OnEnterpriseIDChanging(value);
                    this.SendPropertyChanging();
                    this._EnterpriseID = value;
                    this.SendPropertyChanged("EnterpriseID");
                    this.OnEnterpriseIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LeaguesPrivate")]
    public partial class LeaguesPrivate : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _AdminMainID;

        private string _AdminSubID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAdminMainIDChanging(string value);
        partial void OnAdminMainIDChanged();
        partial void OnAdminSubIDChanging(string value);
        partial void OnAdminSubIDChanged();
        #endregion

        public LeaguesPrivate()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminMainID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string AdminMainID
        {
            get
            {
                return this._AdminMainID;
            }
            set
            {
                if ((this._AdminMainID != value))
                {
                    this.OnAdminMainIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminMainID = value;
                    this.SendPropertyChanged("AdminMainID");
                    this.OnAdminMainIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminSubID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string AdminSubID
        {
            get
            {
                return this._AdminSubID;
            }
            set
            {
                if ((this._AdminSubID != value))
                {
                    this.OnAdminSubIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminSubID = value;
                    this.SendPropertyChanged("AdminSubID");
                    this.OnAdminSubIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Logs_ApplyVoteSteps")]
    public partial class Logs_ApplyVoteSteps : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _ApplicationID;

        private string _VoteStepID;

        private string _AdminID;

        private int _Status;

        private string _Summary;

        private System.DateTime _CreateDate;

        private EntityRef<Applications> _Applications;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnApplicationIDChanging(string value);
        partial void OnApplicationIDChanged();
        partial void OnVoteStepIDChanging(string value);
        partial void OnVoteStepIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Logs_ApplyVoteSteps()
        {
            this._Applications = default(EntityRef<Applications>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    if (this._Applications.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnApplicationIDChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteStepID", DbType = "VarChar(50)")]
        public string VoteStepID
        {
            get
            {
                return this._VoteStepID;
            }
            set
            {
                if ((this._VoteStepID != value))
                {
                    this.OnVoteStepIDChanging(value);
                    this.SendPropertyChanging();
                    this._VoteStepID = value;
                    this.SendPropertyChanged("VoteStepID");
                    this.OnVoteStepIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "NVarChar(200)")]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Applications_Logs_ApplyVoteSteps", Storage = "_Applications", ThisKey = "ApplicationID", OtherKey = "ID", IsForeignKey = true)]
        public Applications Applications
        {
            get
            {
                return this._Applications.Entity;
            }
            set
            {
                Applications previousValue = this._Applications.Entity;
                if (((previousValue != value)
                            || (this._Applications.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Applications.Entity = null;
                        previousValue.Logs_ApplyVoteSteps.Remove(this);
                    }
                    this._Applications.Entity = value;
                    if ((value != null))
                    {
                        value.Logs_ApplyVoteSteps.Add(this);
                        this._ApplicationID = value.ID;
                    }
                    else
                    {
                        this._ApplicationID = default(string);
                    }
                    this.SendPropertyChanged("Applications");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Logs_Attend")]
    public partial class Logs_Attend : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private System.DateTime _Date;

        private string _StaffID;

        private System.DateTime _CreateDate;

        private string _IP;

        private EntityRef<Calendars> _Calendars;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnIPChanging(string value);
        partial void OnIPChanged();
        #endregion

        public Logs_Attend()
        {
            this._Calendars = default(EntityRef<Calendars>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date NOT NULL")]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    if (this._Calendars.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IP", DbType = "VarChar(50)")]
        public string IP
        {
            get
            {
                return this._IP;
            }
            set
            {
                if ((this._IP != value))
                {
                    this.OnIPChanging(value);
                    this.SendPropertyChanging();
                    this._IP = value;
                    this.SendPropertyChanged("IP");
                    this.OnIPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Calendars_Logs_Attend", Storage = "_Calendars", ThisKey = "Date", OtherKey = "ID", IsForeignKey = true)]
        public Calendars Calendars
        {
            get
            {
                return this._Calendars.Entity;
            }
            set
            {
                Calendars previousValue = this._Calendars.Entity;
                if (((previousValue != value)
                            || (this._Calendars.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Calendars.Entity = null;
                        previousValue.Logs_Attend.Remove(this);
                    }
                    this._Calendars.Entity = value;
                    if ((value != null))
                    {
                        value.Logs_Attend.Add(this);
                        this._Date = value.ID;
                    }
                    else
                    {
                        this._Date = default(System.DateTime);
                    }
                    this.SendPropertyChanged("Calendars");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Logs_Errors")]
    public partial class Logs_Errors : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _ID;

        private string _AdminID;

        private string _Page;

        private string _Codes;

        private string _Message;

        private string _Source;

        private string _Stack;

        private System.DateTime _CreateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnPageChanging(string value);
        partial void OnPageChanged();
        partial void OnCodesChanging(string value);
        partial void OnCodesChanged();
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnStackChanging(string value);
        partial void OnStackChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Logs_Errors()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Page", DbType = "VarChar(200) NOT NULL", CanBeNull = false)]
        public string Page
        {
            get
            {
                return this._Page;
            }
            set
            {
                if ((this._Page != value))
                {
                    this.OnPageChanging(value);
                    this.SendPropertyChanging();
                    this._Page = value;
                    this.SendPropertyChanged("Page");
                    this.OnPageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Codes", DbType = "NVarChar(50)")]
        public string Codes
        {
            get
            {
                return this._Codes;
            }
            set
            {
                if ((this._Codes != value))
                {
                    this.OnCodesChanging(value);
                    this.SendPropertyChanging();
                    this._Codes = value;
                    this.SendPropertyChanged("Codes");
                    this.OnCodesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Message", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string Message
        {
            get
            {
                return this._Message;
            }
            set
            {
                if ((this._Message != value))
                {
                    this.OnMessageChanging(value);
                    this.SendPropertyChanging();
                    this._Message = value;
                    this.SendPropertyChanged("Message");
                    this.OnMessageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Source", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string Source
        {
            get
            {
                return this._Source;
            }
            set
            {
                if ((this._Source != value))
                {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Stack", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Stack
        {
            get
            {
                return this._Stack;
            }
            set
            {
                if ((this._Stack != value))
                {
                    this.OnStackChanging(value);
                    this.SendPropertyChanging();
                    this._Stack = value;
                    this.SendPropertyChanged("Stack");
                    this.OnStackChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Logs_Notice")]
    public partial class Logs_Notice : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _ID;

        private string _Title;

        private string _Context;

        private System.DateTime _CreateDate;

        private bool _Readed;

        private System.Nullable<System.DateTime> _ReadDate;

        private string _AdminID;

        private string _MainID;

        private System.Nullable<int> _Type;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnReadedChanging(bool value);
        partial void OnReadedChanged();
        partial void OnReadDateChanging(System.Nullable<System.DateTime> value);
        partial void OnReadDateChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnMainIDChanging(string value);
        partial void OnMainIDChanged();
        partial void OnTypeChanging(System.Nullable<int> value);
        partial void OnTypeChanged();
        #endregion

        public Logs_Notice()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Readed", DbType = "Bit NOT NULL")]
        public bool Readed
        {
            get
            {
                return this._Readed;
            }
            set
            {
                if ((this._Readed != value))
                {
                    this.OnReadedChanging(value);
                    this.SendPropertyChanging();
                    this._Readed = value;
                    this.SendPropertyChanged("Readed");
                    this.OnReadedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReadDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ReadDate
        {
            get
            {
                return this._ReadDate;
            }
            set
            {
                if ((this._ReadDate != value))
                {
                    this.OnReadDateChanging(value);
                    this.SendPropertyChanging();
                    this._ReadDate = value;
                    this.SendPropertyChanged("ReadDate");
                    this.OnReadDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MainID", DbType = "VarChar(50)")]
        public string MainID
        {
            get
            {
                return this._MainID;
            }
            set
            {
                if ((this._MainID != value))
                {
                    this.OnMainIDChanging(value);
                    this.SendPropertyChanging();
                    this._MainID = value;
                    this.SendPropertyChanged("MainID");
                    this.OnMainIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int")]
        public System.Nullable<int> Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Logs_StaffApprovals")]
    public partial class Logs_StaffApprovals : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private string _AdminID;

        private int _ApprovalStep;

        private int _ApprovalStatus;

        private int _NoticeReportStatus;

        private int _EnterReportStatus;

        private string _Context;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        private string _Summary;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnApprovalStepChanging(int value);
        partial void OnApprovalStepChanged();
        partial void OnApprovalStatusChanging(int value);
        partial void OnApprovalStatusChanged();
        partial void OnNoticeReportStatusChanging(int value);
        partial void OnNoticeReportStatusChanged();
        partial void OnEnterReportStatusChanging(int value);
        partial void OnEnterReportStatusChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        #endregion

        public Logs_StaffApprovals()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50)")]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApprovalStep", DbType = "Int NOT NULL")]
        public int ApprovalStep
        {
            get
            {
                return this._ApprovalStep;
            }
            set
            {
                if ((this._ApprovalStep != value))
                {
                    this.OnApprovalStepChanging(value);
                    this.SendPropertyChanging();
                    this._ApprovalStep = value;
                    this.SendPropertyChanged("ApprovalStep");
                    this.OnApprovalStepChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApprovalStatus", DbType = "Int NOT NULL")]
        public int ApprovalStatus
        {
            get
            {
                return this._ApprovalStatus;
            }
            set
            {
                if ((this._ApprovalStatus != value))
                {
                    this.OnApprovalStatusChanging(value);
                    this.SendPropertyChanging();
                    this._ApprovalStatus = value;
                    this.SendPropertyChanged("ApprovalStatus");
                    this.OnApprovalStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoticeReportStatus", DbType = "Int NOT NULL")]
        public int NoticeReportStatus
        {
            get
            {
                return this._NoticeReportStatus;
            }
            set
            {
                if ((this._NoticeReportStatus != value))
                {
                    this.OnNoticeReportStatusChanging(value);
                    this.SendPropertyChanging();
                    this._NoticeReportStatus = value;
                    this.SendPropertyChanged("NoticeReportStatus");
                    this.OnNoticeReportStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterReportStatus", DbType = "Int NOT NULL")]
        public int EnterReportStatus
        {
            get
            {
                return this._EnterReportStatus;
            }
            set
            {
                if ((this._EnterReportStatus != value))
                {
                    this.OnEnterReportStatusChanging(value);
                    this.SendPropertyChanging();
                    this._EnterReportStatus = value;
                    this.SendPropertyChanged("EnterReportStatus");
                    this.OnEnterReportStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX)")]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "VarChar(200)")]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsAppStaff")]
    public partial class MapsAppStaff : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ApplicationID;

        private string _StaffID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnApplicationIDChanging(string value);
        partial void OnApplicationIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        #endregion

        public MapsAppStaff()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsItem")]
    public partial class MapsItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _WageItemID;

        private string _StaffID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnWageItemIDChanging(string value);
        partial void OnWageItemIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        #endregion

        public MapsItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WageItemID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string WageItemID
        {
            get
            {
                return this._WageItemID;
            }
            set
            {
                if ((this._WageItemID != value))
                {
                    this.OnWageItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._WageItemID = value;
                    this.SendPropertyChanged("WageItemID");
                    this.OnWageItemIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsLeague")]
    public partial class MapsLeague : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _AdminID;

        private string _LeagueID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnLeagueIDChanging(string value);
        partial void OnLeagueIDChanged();
        #endregion

        public MapsLeague()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeagueID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string LeagueID
        {
            get
            {
                return this._LeagueID;
            }
            set
            {
                if ((this._LeagueID != value))
                {
                    this.OnLeagueIDChanging(value);
                    this.SendPropertyChanging();
                    this._LeagueID = value;
                    this.SendPropertyChanged("LeagueID");
                    this.OnLeagueIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsPostion")]
    public partial class MapsPostion : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _PostionID;

        private string _WageItemID;

        private EntityRef<WageItems> _WageItems;

        private EntityRef<Postions> _Postions;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnPostionIDChanging(string value);
        partial void OnPostionIDChanged();
        partial void OnWageItemIDChanging(string value);
        partial void OnWageItemIDChanged();
        #endregion

        public MapsPostion()
        {
            this._WageItems = default(EntityRef<WageItems>);
            this._Postions = default(EntityRef<Postions>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string PostionID
        {
            get
            {
                return this._PostionID;
            }
            set
            {
                if ((this._PostionID != value))
                {
                    if (this._Postions.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnPostionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PostionID = value;
                    this.SendPropertyChanged("PostionID");
                    this.OnPostionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WageItemID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string WageItemID
        {
            get
            {
                return this._WageItemID;
            }
            set
            {
                if ((this._WageItemID != value))
                {
                    if (this._WageItems.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnWageItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._WageItemID = value;
                    this.SendPropertyChanged("WageItemID");
                    this.OnWageItemIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "WageItems_MapsPostion", Storage = "_WageItems", ThisKey = "WageItemID", OtherKey = "ID", IsForeignKey = true)]
        public WageItems WageItems
        {
            get
            {
                return this._WageItems.Entity;
            }
            set
            {
                WageItems previousValue = this._WageItems.Entity;
                if (((previousValue != value)
                            || (this._WageItems.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._WageItems.Entity = null;
                        previousValue.MapsPostion.Remove(this);
                    }
                    this._WageItems.Entity = value;
                    if ((value != null))
                    {
                        value.MapsPostion.Add(this);
                        this._WageItemID = value.ID;
                    }
                    else
                    {
                        this._WageItemID = default(string);
                    }
                    this.SendPropertyChanged("WageItems");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Postions_MapsPostion", Storage = "_Postions", ThisKey = "PostionID", OtherKey = "ID", IsForeignKey = true)]
        public Postions Postions
        {
            get
            {
                return this._Postions.Entity;
            }
            set
            {
                Postions previousValue = this._Postions.Entity;
                if (((previousValue != value)
                            || (this._Postions.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Postions.Entity = null;
                        previousValue.MapsPostion.Remove(this);
                    }
                    this._Postions.Entity = value;
                    if ((value != null))
                    {
                        value.MapsPostion.Add(this);
                        this._PostionID = value.ID;
                    }
                    else
                    {
                        this._PostionID = default(string);
                    }
                    this.SendPropertyChanged("Postions");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsRole")]
    public partial class MapsRole : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MenuID;

        private string _RoleID;

        private EntityRef<Roles> _Roles;

        private EntityRef<Menus> _Menus;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMenuIDChanging(string value);
        partial void OnMenuIDChanged();
        partial void OnRoleIDChanging(string value);
        partial void OnRoleIDChanged();
        #endregion

        public MapsRole()
        {
            this._Roles = default(EntityRef<Roles>);
            this._Menus = default(EntityRef<Menus>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MenuID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MenuID
        {
            get
            {
                return this._MenuID;
            }
            set
            {
                if ((this._MenuID != value))
                {
                    if (this._Menus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMenuIDChanging(value);
                    this.SendPropertyChanging();
                    this._MenuID = value;
                    this.SendPropertyChanged("MenuID");
                    this.OnMenuIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    if (this._Roles.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._RoleID = value;
                    this.SendPropertyChanged("RoleID");
                    this.OnRoleIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Roles_MapsRole", Storage = "_Roles", ThisKey = "RoleID", OtherKey = "ID", IsForeignKey = true)]
        public Roles Roles
        {
            get
            {
                return this._Roles.Entity;
            }
            set
            {
                Roles previousValue = this._Roles.Entity;
                if (((previousValue != value)
                            || (this._Roles.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Roles.Entity = null;
                        previousValue.MapsRole.Remove(this);
                    }
                    this._Roles.Entity = value;
                    if ((value != null))
                    {
                        value.MapsRole.Add(this);
                        this._RoleID = value.ID;
                    }
                    else
                    {
                        this._RoleID = default(string);
                    }
                    this.SendPropertyChanged("Roles");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Menus_MapsRole", Storage = "_Menus", ThisKey = "MenuID", OtherKey = "ID", IsForeignKey = true)]
        public Menus Menus
        {
            get
            {
                return this._Menus.Entity;
            }
            set
            {
                Menus previousValue = this._Menus.Entity;
                if (((previousValue != value)
                            || (this._Menus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Menus.Entity = null;
                        previousValue.MapsRole.Remove(this);
                    }
                    this._Menus.Entity = value;
                    if ((value != null))
                    {
                        value.MapsRole.Add(this);
                        this._MenuID = value.ID;
                    }
                    else
                    {
                        this._MenuID = default(string);
                    }
                    this.SendPropertyChanged("Menus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsRoleCompose")]
    public partial class MapsRoleCompose : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _RoleID;

        private string _ChildID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRoleIDChanging(string value);
        partial void OnRoleIDChanged();
        partial void OnChildIDChanging(string value);
        partial void OnChildIDChanged();
        #endregion

        public MapsRoleCompose()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this.OnRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._RoleID = value;
                    this.SendPropertyChanged("RoleID");
                    this.OnRoleIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChildID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChildID
        {
            get
            {
                return this._ChildID;
            }
            set
            {
                if ((this._ChildID != value))
                {
                    this.OnChildIDChanging(value);
                    this.SendPropertyChanging();
                    this._ChildID = value;
                    this.SendPropertyChanged("ChildID");
                    this.OnChildIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsWageItem")]
    public partial class MapsWageItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _StaffID;

        private string _WageItemID;

        private System.Nullable<decimal> _DefaultValue;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnWageItemIDChanging(string value);
        partial void OnWageItemIDChanged();
        partial void OnDefaultValueChanging(System.Nullable<decimal> value);
        partial void OnDefaultValueChanged();
        #endregion

        public MapsWageItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WageItemID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string WageItemID
        {
            get
            {
                return this._WageItemID;
            }
            set
            {
                if ((this._WageItemID != value))
                {
                    this.OnWageItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._WageItemID = value;
                    this.SendPropertyChanged("WageItemID");
                    this.OnWageItemIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefaultValue", DbType = "Decimal(18,5)")]
        public System.Nullable<decimal> DefaultValue
        {
            get
            {
                return this._DefaultValue;
            }
            set
            {
                if ((this._DefaultValue != value))
                {
                    this.OnDefaultValueChanging(value);
                    this.SendPropertyChanging();
                    this._DefaultValue = value;
                    this.SendPropertyChanged("DefaultValue");
                    this.OnDefaultValueChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsWareHouse")]
    public partial class MapsWareHouse : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _AdminID;

        private string _WareHouseID;

        private string _ConsigneeID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnWareHouseIDChanging(string value);
        partial void OnWareHouseIDChanged();
        partial void OnConsigneeIDChanging(string value);
        partial void OnConsigneeIDChanged();
        #endregion

        public MapsWareHouse()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WareHouseID", DbType = "VarChar(50)")]
        public string WareHouseID
        {
            get
            {
                return this._WareHouseID;
            }
            set
            {
                if ((this._WareHouseID != value))
                {
                    this.OnWareHouseIDChanging(value);
                    this.SendPropertyChanging();
                    this._WareHouseID = value;
                    this.SendPropertyChanged("WareHouseID");
                    this.OnWareHouseIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsigneeID", DbType = "VarChar(50)")]
        public string ConsigneeID
        {
            get
            {
                return this._ConsigneeID;
            }
            set
            {
                if ((this._ConsigneeID != value))
                {
                    this.OnConsigneeIDChanging(value);
                    this.SendPropertyChanging();
                    this._ConsigneeID = value;
                    this.SendPropertyChanged("ConsigneeID");
                    this.OnConsigneeIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Oplogs")]
    public partial class Oplogs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _ID;

        private string _Url;

        private string _Sys;

        private string _Type;

        private string _Operation;

        private string _AdminID;

        private System.DateTime _CreateDate;

        private string _Remark;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnUrlChanging(string value);
        partial void OnUrlChanged();
        partial void OnSysChanging(string value);
        partial void OnSysChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnOperationChanging(string value);
        partial void OnOperationChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnRemarkChanging(string value);
        partial void OnRemarkChanged();
        #endregion

        public Oplogs()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Url", DbType = "NVarChar(300) NOT NULL", CanBeNull = false)]
        public string Url
        {
            get
            {
                return this._Url;
            }
            set
            {
                if ((this._Url != value))
                {
                    this.OnUrlChanging(value);
                    this.SendPropertyChanging();
                    this._Url = value;
                    this.SendPropertyChanged("Url");
                    this.OnUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sys", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Sys
        {
            get
            {
                return this._Sys;
            }
            set
            {
                if ((this._Sys != value))
                {
                    this.OnSysChanging(value);
                    this.SendPropertyChanging();
                    this._Sys = value;
                    this.SendPropertyChanged("Sys");
                    this.OnSysChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Operation", DbType = "NVarChar(MAX)")]
        public string Operation
        {
            get
            {
                return this._Operation;
            }
            set
            {
                if ((this._Operation != value))
                {
                    this.OnOperationChanging(value);
                    this.SendPropertyChanging();
                    this._Operation = value;
                    this.SendPropertyChanged("Operation");
                    this.OnOperationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remark", DbType = "NVarChar(MAX)")]
        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                if ((this._Remark != value))
                {
                    this.OnRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._Remark = value;
                    this.SendPropertyChanged("Remark");
                    this.OnRemarkChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Particles")]
    public partial class Particles : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _UrlCode;

        private string _Url;

        private string _Context;

        private string _Type;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnUrlCodeChanging(string value);
        partial void OnUrlCodeChanged();
        partial void OnUrlChanging(string value);
        partial void OnUrlChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        #endregion

        public Particles()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UrlCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string UrlCode
        {
            get
            {
                return this._UrlCode;
            }
            set
            {
                if ((this._UrlCode != value))
                {
                    this.OnUrlCodeChanging(value);
                    this.SendPropertyChanging();
                    this._UrlCode = value;
                    this.SendPropertyChanged("UrlCode");
                    this.OnUrlCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Url", DbType = "VarChar(2000) NOT NULL", CanBeNull = false)]
        public string Url
        {
            get
            {
                return this._Url;
            }
            set
            {
                if ((this._Url != value))
                {
                    this.OnUrlChanging(value);
                    this.SendPropertyChanging();
                    this._Url = value;
                    this.SendPropertyChanged("Url");
                    this.OnUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ParticleSettings")]
    public partial class ParticleSettings : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _RoleID;

        private string _UrlCode;

        private string _Url;

        private string _Context;

        private string _Type;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRoleIDChanging(string value);
        partial void OnRoleIDChanged();
        partial void OnUrlCodeChanging(string value);
        partial void OnUrlCodeChanged();
        partial void OnUrlChanging(string value);
        partial void OnUrlChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        #endregion

        public ParticleSettings()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this.OnRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._RoleID = value;
                    this.SendPropertyChanged("RoleID");
                    this.OnRoleIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UrlCode", DbType = "VarChar(200) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string UrlCode
        {
            get
            {
                return this._UrlCode;
            }
            set
            {
                if ((this._UrlCode != value))
                {
                    this.OnUrlCodeChanging(value);
                    this.SendPropertyChanging();
                    this._UrlCode = value;
                    this.SendPropertyChanged("UrlCode");
                    this.OnUrlCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Url", DbType = "VarChar(2000) NOT NULL", CanBeNull = false)]
        public string Url
        {
            get
            {
                return this._Url;
            }
            set
            {
                if ((this._Url != value))
                {
                    this.OnUrlChanging(value);
                    this.SendPropertyChanging();
                    this._Url = value;
                    this.SendPropertyChanged("Url");
                    this.OnUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Pasts_AdminPassword")]
    public partial class Pasts_AdminPassword : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _AdminID;

        private string _Password;

        private System.DateTime _CreateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Pasts_AdminPassword()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if ((this._Password != value))
                {
                    this.OnPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Pasts_Attend")]
    public partial class Pasts_Attend : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private System.DateTime _Date;

        private string _AmOrPm;

        private string _StaffID;

        private string _SchedulingID;

        private System.Nullable<System.DateTime> _StartTime;

        private System.Nullable<System.DateTime> _EndTime;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        private int _InFact;

        private System.Nullable<bool> _IsLater;

        private System.Nullable<bool> _IsEarly;

        private System.Nullable<bool> _OnWorkRemedy;

        private System.Nullable<bool> _OffWorkRemedy;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
        partial void OnAmOrPmChanging(string value);
        partial void OnAmOrPmChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnSchedulingIDChanging(string value);
        partial void OnSchedulingIDChanged();
        partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnStartTimeChanged();
        partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnEndTimeChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        partial void OnInFactChanging(int value);
        partial void OnInFactChanged();
        partial void OnIsLaterChanging(System.Nullable<bool> value);
        partial void OnIsLaterChanged();
        partial void OnIsEarlyChanging(System.Nullable<bool> value);
        partial void OnIsEarlyChanged();
        partial void OnOnWorkRemedyChanging(System.Nullable<bool> value);
        partial void OnOnWorkRemedyChanged();
        partial void OnOffWorkRemedyChanging(System.Nullable<bool> value);
        partial void OnOffWorkRemedyChanged();
        #endregion

        public Pasts_Attend()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date NOT NULL")]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmOrPm", DbType = "VarChar(2) NOT NULL", CanBeNull = false)]
        public string AmOrPm
        {
            get
            {
                return this._AmOrPm;
            }
            set
            {
                if ((this._AmOrPm != value))
                {
                    this.OnAmOrPmChanging(value);
                    this.SendPropertyChanging();
                    this._AmOrPm = value;
                    this.SendPropertyChanged("AmOrPm");
                    this.OnAmOrPmChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SchedulingID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SchedulingID
        {
            get
            {
                return this._SchedulingID;
            }
            set
            {
                if ((this._SchedulingID != value))
                {
                    this.OnSchedulingIDChanging(value);
                    this.SendPropertyChanging();
                    this._SchedulingID = value;
                    this.SendPropertyChanged("SchedulingID");
                    this.OnSchedulingIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if ((this._StartTime != value))
                {
                    this.OnStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartTime = value;
                    this.SendPropertyChanged("StartTime");
                    this.OnStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if ((this._EndTime != value))
                {
                    this.OnEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndTime = value;
                    this.SendPropertyChanged("EndTime");
                    this.OnEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InFact", DbType = "Int NOT NULL")]
        public int InFact
        {
            get
            {
                return this._InFact;
            }
            set
            {
                if ((this._InFact != value))
                {
                    this.OnInFactChanging(value);
                    this.SendPropertyChanging();
                    this._InFact = value;
                    this.SendPropertyChanged("InFact");
                    this.OnInFactChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsLater", DbType = "Bit")]
        public System.Nullable<bool> IsLater
        {
            get
            {
                return this._IsLater;
            }
            set
            {
                if ((this._IsLater != value))
                {
                    this.OnIsLaterChanging(value);
                    this.SendPropertyChanging();
                    this._IsLater = value;
                    this.SendPropertyChanged("IsLater");
                    this.OnIsLaterChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsEarly", DbType = "Bit")]
        public System.Nullable<bool> IsEarly
        {
            get
            {
                return this._IsEarly;
            }
            set
            {
                if ((this._IsEarly != value))
                {
                    this.OnIsEarlyChanging(value);
                    this.SendPropertyChanging();
                    this._IsEarly = value;
                    this.SendPropertyChanged("IsEarly");
                    this.OnIsEarlyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OnWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OnWorkRemedy
        {
            get
            {
                return this._OnWorkRemedy;
            }
            set
            {
                if ((this._OnWorkRemedy != value))
                {
                    this.OnOnWorkRemedyChanging(value);
                    this.SendPropertyChanging();
                    this._OnWorkRemedy = value;
                    this.SendPropertyChanged("OnWorkRemedy");
                    this.OnOnWorkRemedyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OffWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OffWorkRemedy
        {
            get
            {
                return this._OffWorkRemedy;
            }
            set
            {
                if ((this._OffWorkRemedy != value))
                {
                    this.OnOffWorkRemedyChanging(value);
                    this.SendPropertyChanging();
                    this._OffWorkRemedy = value;
                    this.SendPropertyChanged("OffWorkRemedy");
                    this.OnOffWorkRemedyChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Pasts_MapsWageItem")]
    public partial class Pasts_MapsWageItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private string _WageItemID;

        private System.Nullable<decimal> _DefaultValue;

        private System.DateTime _CreateDate;

        private string _AdminID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnWageItemIDChanging(string value);
        partial void OnWageItemIDChanged();
        partial void OnDefaultValueChanging(System.Nullable<decimal> value);
        partial void OnDefaultValueChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        #endregion

        public Pasts_MapsWageItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WageItemID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string WageItemID
        {
            get
            {
                return this._WageItemID;
            }
            set
            {
                if ((this._WageItemID != value))
                {
                    this.OnWageItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._WageItemID = value;
                    this.SendPropertyChanged("WageItemID");
                    this.OnWageItemIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefaultValue", DbType = "Decimal(18,5)")]
        public System.Nullable<decimal> DefaultValue
        {
            get
            {
                return this._DefaultValue;
            }
            set
            {
                if ((this._DefaultValue != value))
                {
                    this.OnDefaultValueChanging(value);
                    this.SendPropertyChanging();
                    this._DefaultValue = value;
                    this.SendPropertyChanged("DefaultValue");
                    this.OnDefaultValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Pasts_WageItem")]
    public partial class Pasts_WageItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private int _DateIndex;

        private string _WorkCityID;

        private string _EnterpriseID;

        private string _StaffID;

        private int _Type;

        private string _Name;

        private decimal _Value;

        private System.Nullable<int> _Currency;

        private int _Accumulative;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnDateIndexChanging(int value);
        partial void OnDateIndexChanged();
        partial void OnWorkCityIDChanging(string value);
        partial void OnWorkCityIDChanged();
        partial void OnEnterpriseIDChanging(string value);
        partial void OnEnterpriseIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnValueChanging(decimal value);
        partial void OnValueChanged();
        partial void OnCurrencyChanging(System.Nullable<int> value);
        partial void OnCurrencyChanged();
        partial void OnAccumulativeChanging(int value);
        partial void OnAccumulativeChanged();
        #endregion

        public Pasts_WageItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateIndex", DbType = "Int NOT NULL")]
        public int DateIndex
        {
            get
            {
                return this._DateIndex;
            }
            set
            {
                if ((this._DateIndex != value))
                {
                    this.OnDateIndexChanging(value);
                    this.SendPropertyChanging();
                    this._DateIndex = value;
                    this.SendPropertyChanged("DateIndex");
                    this.OnDateIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkCityID", DbType = "VarChar(50)")]
        public string WorkCityID
        {
            get
            {
                return this._WorkCityID;
            }
            set
            {
                if ((this._WorkCityID != value))
                {
                    this.OnWorkCityIDChanging(value);
                    this.SendPropertyChanging();
                    this._WorkCityID = value;
                    this.SendPropertyChanged("WorkCityID");
                    this.OnWorkCityIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this.OnEnterpriseIDChanging(value);
                    this.SendPropertyChanging();
                    this._EnterpriseID = value;
                    this.SendPropertyChanged("EnterpriseID");
                    this.OnEnterpriseIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "Decimal(18,5) NOT NULL")]
        public decimal Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if ((this._Value != value))
                {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Currency", DbType = "Int")]
        public System.Nullable<int> Currency
        {
            get
            {
                return this._Currency;
            }
            set
            {
                if ((this._Currency != value))
                {
                    this.OnCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._Currency = value;
                    this.SendPropertyChanged("Currency");
                    this.OnCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Accumulative", DbType = "Int NOT NULL")]
        public int Accumulative
        {
            get
            {
                return this._Accumulative;
            }
            set
            {
                if ((this._Accumulative != value))
                {
                    this.OnAccumulativeChanging(value);
                    this.SendPropertyChanging();
                    this._Accumulative = value;
                    this.SendPropertyChanged("Accumulative");
                    this.OnAccumulativeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PayBills")]
    public partial class PayBills : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private System.Nullable<System.DateTime> _ClosedData;

        private string _DateIndex;

        private System.DateTime _CreaetDate;

        private System.Nullable<System.DateTime> _UpdateDate;

        private int _Status;

        private string _EnterpriseID;

        private string _PostionID;

        private EntitySet<PayItems> _PayItems;

        private EntityRef<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnClosedDataChanging(System.Nullable<System.DateTime> value);
        partial void OnClosedDataChanged();
        partial void OnDateIndexChanging(string value);
        partial void OnDateIndexChanged();
        partial void OnCreaetDateChanging(System.DateTime value);
        partial void OnCreaetDateChanged();
        partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnEnterpriseIDChanging(string value);
        partial void OnEnterpriseIDChanged();
        partial void OnPostionIDChanging(string value);
        partial void OnPostionIDChanged();
        #endregion

        public PayBills()
        {
            this._PayItems = new EntitySet<PayItems>(new Action<PayItems>(this.attach_PayItems), new Action<PayItems>(this.detach_PayItems));
            this._Staffs = default(EntityRef<Staffs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    if (this._Staffs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClosedData", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ClosedData
        {
            get
            {
                return this._ClosedData;
            }
            set
            {
                if ((this._ClosedData != value))
                {
                    this.OnClosedDataChanging(value);
                    this.SendPropertyChanging();
                    this._ClosedData = value;
                    this.SendPropertyChanged("ClosedData");
                    this.OnClosedDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateIndex", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string DateIndex
        {
            get
            {
                return this._DateIndex;
            }
            set
            {
                if ((this._DateIndex != value))
                {
                    this.OnDateIndexChanging(value);
                    this.SendPropertyChanging();
                    this._DateIndex = value;
                    this.SendPropertyChanged("DateIndex");
                    this.OnDateIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreaetDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreaetDate
        {
            get
            {
                return this._CreaetDate;
            }
            set
            {
                if ((this._CreaetDate != value))
                {
                    this.OnCreaetDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreaetDate = value;
                    this.SendPropertyChanged("CreaetDate");
                    this.OnCreaetDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50)")]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this.OnEnterpriseIDChanging(value);
                    this.SendPropertyChanging();
                    this._EnterpriseID = value;
                    this.SendPropertyChanged("EnterpriseID");
                    this.OnEnterpriseIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionID", DbType = "VarChar(50)")]
        public string PostionID
        {
            get
            {
                return this._PostionID;
            }
            set
            {
                if ((this._PostionID != value))
                {
                    this.OnPostionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PostionID = value;
                    this.SendPropertyChanged("PostionID");
                    this.OnPostionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PayBills_PayItems", Storage = "_PayItems", ThisKey = "ID", OtherKey = "PayID")]
        public EntitySet<PayItems> PayItems
        {
            get
            {
                return this._PayItems;
            }
            set
            {
                this._PayItems.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_PayBills", Storage = "_Staffs", ThisKey = "StaffID", OtherKey = "ID", IsForeignKey = true)]
        public Staffs Staffs
        {
            get
            {
                return this._Staffs.Entity;
            }
            set
            {
                Staffs previousValue = this._Staffs.Entity;
                if (((previousValue != value)
                            || (this._Staffs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Staffs.Entity = null;
                        previousValue.PayBills.Remove(this);
                    }
                    this._Staffs.Entity = value;
                    if ((value != null))
                    {
                        value.PayBills.Add(this);
                        this._StaffID = value.ID;
                    }
                    else
                    {
                        this._StaffID = default(string);
                    }
                    this.SendPropertyChanged("Staffs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PayItems(PayItems entity)
        {
            this.SendPropertyChanging();
            entity.PayBills = this;
        }

        private void detach_PayItems(PayItems entity)
        {
            this.SendPropertyChanging();
            entity.PayBills = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PayItems")]
    public partial class PayItems : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _PayID;

        private string _Name;

        private decimal _Value;

        private string _DateIndex;

        private string _WageItemFormula;

        private string _ActualFormula;

        private string _Description;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        private string _AdminID;

        private string _UpdateAdminID;

        private System.Nullable<int> _Status;

        private EntityRef<PayBills> _PayBills;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnPayIDChanging(string value);
        partial void OnPayIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnValueChanging(decimal value);
        partial void OnValueChanged();
        partial void OnDateIndexChanging(string value);
        partial void OnDateIndexChanged();
        partial void OnWageItemFormulaChanging(string value);
        partial void OnWageItemFormulaChanged();
        partial void OnActualFormulaChanging(string value);
        partial void OnActualFormulaChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnUpdateAdminIDChanging(string value);
        partial void OnUpdateAdminIDChanged();
        partial void OnStatusChanging(System.Nullable<int> value);
        partial void OnStatusChanged();
        #endregion

        public PayItems()
        {
            this._PayBills = default(EntityRef<PayBills>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PayID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string PayID
        {
            get
            {
                return this._PayID;
            }
            set
            {
                if ((this._PayID != value))
                {
                    if (this._PayBills.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnPayIDChanging(value);
                    this.SendPropertyChanging();
                    this._PayID = value;
                    this.SendPropertyChanged("PayID");
                    this.OnPayIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "Decimal(18,5) NOT NULL")]
        public decimal Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if ((this._Value != value))
                {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateIndex", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string DateIndex
        {
            get
            {
                return this._DateIndex;
            }
            set
            {
                if ((this._DateIndex != value))
                {
                    this.OnDateIndexChanging(value);
                    this.SendPropertyChanging();
                    this._DateIndex = value;
                    this.SendPropertyChanged("DateIndex");
                    this.OnDateIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WageItemFormula", DbType = "NVarChar(500)")]
        public string WageItemFormula
        {
            get
            {
                return this._WageItemFormula;
            }
            set
            {
                if ((this._WageItemFormula != value))
                {
                    this.OnWageItemFormulaChanging(value);
                    this.SendPropertyChanging();
                    this._WageItemFormula = value;
                    this.SendPropertyChanged("WageItemFormula");
                    this.OnWageItemFormulaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActualFormula", DbType = "NVarChar(500)")]
        public string ActualFormula
        {
            get
            {
                return this._ActualFormula;
            }
            set
            {
                if ((this._ActualFormula != value))
                {
                    this.OnActualFormulaChanging(value);
                    this.SendPropertyChanging();
                    this._ActualFormula = value;
                    this.SendPropertyChanged("ActualFormula");
                    this.OnActualFormulaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(200)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateAdminID", DbType = "VarChar(50)")]
        public string UpdateAdminID
        {
            get
            {
                return this._UpdateAdminID;
            }
            set
            {
                if ((this._UpdateAdminID != value))
                {
                    this.OnUpdateAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateAdminID = value;
                    this.SendPropertyChanged("UpdateAdminID");
                    this.OnUpdateAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int")]
        public System.Nullable<int> Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PayBills_PayItems", Storage = "_PayBills", ThisKey = "PayID", OtherKey = "ID", IsForeignKey = true)]
        public PayBills PayBills
        {
            get
            {
                return this._PayBills.Entity;
            }
            set
            {
                PayBills previousValue = this._PayBills.Entity;
                if (((previousValue != value)
                            || (this._PayBills.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PayBills.Entity = null;
                        previousValue.PayItems.Remove(this);
                    }
                    this._PayBills.Entity = value;
                    if ((value != null))
                    {
                        value.PayItems.Add(this);
                        this._PayID = value.ID;
                    }
                    else
                    {
                        this._PayID = default(string);
                    }
                    this.SendPropertyChanged("PayBills");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PersonalFamilyMembers")]
    public partial class PersonalFamilyMembers : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private string _Name;

        private int _Age;

        private string _Relation;

        private string _Company;

        private string _Position;

        private string _Phone;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnAgeChanging(int value);
        partial void OnAgeChanged();
        partial void OnRelationChanging(string value);
        partial void OnRelationChanged();
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        partial void OnPositionChanging(string value);
        partial void OnPositionChanged();
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        #endregion

        public PersonalFamilyMembers()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Age", DbType = "Int NOT NULL")]
        public int Age
        {
            get
            {
                return this._Age;
            }
            set
            {
                if ((this._Age != value))
                {
                    this.OnAgeChanging(value);
                    this.SendPropertyChanging();
                    this._Age = value;
                    this.SendPropertyChanged("Age");
                    this.OnAgeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Relation", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Relation
        {
            get
            {
                return this._Relation;
            }
            set
            {
                if ((this._Relation != value))
                {
                    this.OnRelationChanging(value);
                    this.SendPropertyChanging();
                    this._Relation = value;
                    this.SendPropertyChanged("Relation");
                    this.OnRelationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company", DbType = "VarChar(50)")]
        public string Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                if ((this._Company != value))
                {
                    this.OnCompanyChanging(value);
                    this.SendPropertyChanging();
                    this._Company = value;
                    this.SendPropertyChanged("Company");
                    this.OnCompanyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Position", DbType = "VarChar(50)")]
        public string Position
        {
            get
            {
                return this._Position;
            }
            set
            {
                if ((this._Position != value))
                {
                    this.OnPositionChanging(value);
                    this.SendPropertyChanging();
                    this._Position = value;
                    this.SendPropertyChanged("Position");
                    this.OnPositionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone", DbType = "VarChar(50)")]
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                if ((this._Phone != value))
                {
                    this.OnPhoneChanging(value);
                    this.SendPropertyChanging();
                    this._Phone = value;
                    this.SendPropertyChanged("Phone");
                    this.OnPhoneChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PersonalRates")]
    public partial class PersonalRates : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private int _Levels;

        private decimal _BeginAmount;

        private decimal _EndAmount;

        private decimal _Rate;

        private decimal _Deduction;

        private string _Description;

        private System.DateTime _CreateDate;

        private System.Nullable<System.DateTime> _UpdateDate;

        private string _AdminID;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnLevelsChanging(int value);
        partial void OnLevelsChanged();
        partial void OnBeginAmountChanging(decimal value);
        partial void OnBeginAmountChanged();
        partial void OnEndAmountChanging(decimal value);
        partial void OnEndAmountChanged();
        partial void OnRateChanging(decimal value);
        partial void OnRateChanged();
        partial void OnDeductionChanging(decimal value);
        partial void OnDeductionChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        #endregion

        public PersonalRates()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Levels", DbType = "Int NOT NULL")]
        public int Levels
        {
            get
            {
                return this._Levels;
            }
            set
            {
                if ((this._Levels != value))
                {
                    this.OnLevelsChanging(value);
                    this.SendPropertyChanging();
                    this._Levels = value;
                    this.SendPropertyChanged("Levels");
                    this.OnLevelsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BeginAmount", DbType = "Decimal(18,5) NOT NULL")]
        public decimal BeginAmount
        {
            get
            {
                return this._BeginAmount;
            }
            set
            {
                if ((this._BeginAmount != value))
                {
                    this.OnBeginAmountChanging(value);
                    this.SendPropertyChanging();
                    this._BeginAmount = value;
                    this.SendPropertyChanged("BeginAmount");
                    this.OnBeginAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndAmount", DbType = "Decimal(18,5) NOT NULL")]
        public decimal EndAmount
        {
            get
            {
                return this._EndAmount;
            }
            set
            {
                if ((this._EndAmount != value))
                {
                    this.OnEndAmountChanging(value);
                    this.SendPropertyChanging();
                    this._EndAmount = value;
                    this.SendPropertyChanged("EndAmount");
                    this.OnEndAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rate", DbType = "Decimal(18,5) NOT NULL")]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this.OnRateChanging(value);
                    this.SendPropertyChanging();
                    this._Rate = value;
                    this.SendPropertyChanged("Rate");
                    this.OnRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Deduction", DbType = "Decimal(18,5) NOT NULL")]
        public decimal Deduction
        {
            get
            {
                return this._Deduction;
            }
            set
            {
                if ((this._Deduction != value))
                {
                    this.OnDeductionChanging(value);
                    this.SendPropertyChanging();
                    this._Deduction = value;
                    this.SendPropertyChanged("Deduction");
                    this.OnDeductionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(200)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Personals")]
    public partial class Personals : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _IDCard;

        private string _Image;

        private string _NativePlace;

        private string _HomeAddress;

        private string _PassAddress;

        private string _Volk;

        private string _PoliticalOutlook;

        private System.Nullable<double> _Height;

        private System.Nullable<double> _Weight;

        private string _Blood;

        private string _Education;

        private string _GraduatInstitutions;

        private string _Major;

        private System.Nullable<bool> _IsMarry;

        private string _Mobile;

        private string _Email;

        private System.Nullable<System.DateTime> _BirthDate;

        private System.Nullable<System.DateTime> _BeginWorkDate;

        private string _Healthy;

        private System.Nullable<System.DateTime> _GraduationDate;

        private string _EmergencyContact;

        private string _EmergencyMobile;

        private string _LanguageLevel;

        private string _ComputerLevel;

        private string _SelfEvaluation;

        private string _Treatment;

        private string _PositionName;

        private string _Summary;

        private EntityRef<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnIDCardChanging(string value);
        partial void OnIDCardChanged();
        partial void OnImageChanging(string value);
        partial void OnImageChanged();
        partial void OnNativePlaceChanging(string value);
        partial void OnNativePlaceChanged();
        partial void OnHomeAddressChanging(string value);
        partial void OnHomeAddressChanged();
        partial void OnPassAddressChanging(string value);
        partial void OnPassAddressChanged();
        partial void OnVolkChanging(string value);
        partial void OnVolkChanged();
        partial void OnPoliticalOutlookChanging(string value);
        partial void OnPoliticalOutlookChanged();
        partial void OnHeightChanging(System.Nullable<double> value);
        partial void OnHeightChanged();
        partial void OnWeightChanging(System.Nullable<double> value);
        partial void OnWeightChanged();
        partial void OnBloodChanging(string value);
        partial void OnBloodChanged();
        partial void OnEducationChanging(string value);
        partial void OnEducationChanged();
        partial void OnGraduatInstitutionsChanging(string value);
        partial void OnGraduatInstitutionsChanged();
        partial void OnMajorChanging(string value);
        partial void OnMajorChanged();
        partial void OnIsMarryChanging(System.Nullable<bool> value);
        partial void OnIsMarryChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
        partial void OnBirthDateChanged();
        partial void OnBeginWorkDateChanging(System.Nullable<System.DateTime> value);
        partial void OnBeginWorkDateChanged();
        partial void OnHealthyChanging(string value);
        partial void OnHealthyChanged();
        partial void OnGraduationDateChanging(System.Nullable<System.DateTime> value);
        partial void OnGraduationDateChanged();
        partial void OnEmergencyContactChanging(string value);
        partial void OnEmergencyContactChanged();
        partial void OnEmergencyMobileChanging(string value);
        partial void OnEmergencyMobileChanged();
        partial void OnLanguageLevelChanging(string value);
        partial void OnLanguageLevelChanged();
        partial void OnComputerLevelChanging(string value);
        partial void OnComputerLevelChanged();
        partial void OnSelfEvaluationChanging(string value);
        partial void OnSelfEvaluationChanged();
        partial void OnTreatmentChanging(string value);
        partial void OnTreatmentChanged();
        partial void OnPositionNameChanging(string value);
        partial void OnPositionNameChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        #endregion

        public Personals()
        {
            this._Staffs = default(EntityRef<Staffs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    if (this._Staffs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDCard", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string IDCard
        {
            get
            {
                return this._IDCard;
            }
            set
            {
                if ((this._IDCard != value))
                {
                    this.OnIDCardChanging(value);
                    this.SendPropertyChanging();
                    this._IDCard = value;
                    this.SendPropertyChanged("IDCard");
                    this.OnIDCardChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Image", DbType = "VarChar(200)")]
        public string Image
        {
            get
            {
                return this._Image;
            }
            set
            {
                if ((this._Image != value))
                {
                    this.OnImageChanging(value);
                    this.SendPropertyChanging();
                    this._Image = value;
                    this.SendPropertyChanged("Image");
                    this.OnImageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NativePlace", DbType = "NVarChar(150)")]
        public string NativePlace
        {
            get
            {
                return this._NativePlace;
            }
            set
            {
                if ((this._NativePlace != value))
                {
                    this.OnNativePlaceChanging(value);
                    this.SendPropertyChanging();
                    this._NativePlace = value;
                    this.SendPropertyChanged("NativePlace");
                    this.OnNativePlaceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HomeAddress", DbType = "NVarChar(150)")]
        public string HomeAddress
        {
            get
            {
                return this._HomeAddress;
            }
            set
            {
                if ((this._HomeAddress != value))
                {
                    this.OnHomeAddressChanging(value);
                    this.SendPropertyChanging();
                    this._HomeAddress = value;
                    this.SendPropertyChanged("HomeAddress");
                    this.OnHomeAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassAddress", DbType = "NVarChar(150)")]
        public string PassAddress
        {
            get
            {
                return this._PassAddress;
            }
            set
            {
                if ((this._PassAddress != value))
                {
                    this.OnPassAddressChanging(value);
                    this.SendPropertyChanging();
                    this._PassAddress = value;
                    this.SendPropertyChanged("PassAddress");
                    this.OnPassAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Volk", DbType = "VarChar(50)")]
        public string Volk
        {
            get
            {
                return this._Volk;
            }
            set
            {
                if ((this._Volk != value))
                {
                    this.OnVolkChanging(value);
                    this.SendPropertyChanging();
                    this._Volk = value;
                    this.SendPropertyChanged("Volk");
                    this.OnVolkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoliticalOutlook", DbType = "VarChar(50)")]
        public string PoliticalOutlook
        {
            get
            {
                return this._PoliticalOutlook;
            }
            set
            {
                if ((this._PoliticalOutlook != value))
                {
                    this.OnPoliticalOutlookChanging(value);
                    this.SendPropertyChanging();
                    this._PoliticalOutlook = value;
                    this.SendPropertyChanged("PoliticalOutlook");
                    this.OnPoliticalOutlookChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Height", DbType = "Float")]
        public System.Nullable<double> Height
        {
            get
            {
                return this._Height;
            }
            set
            {
                if ((this._Height != value))
                {
                    this.OnHeightChanging(value);
                    this.SendPropertyChanging();
                    this._Height = value;
                    this.SendPropertyChanged("Height");
                    this.OnHeightChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Weight", DbType = "Float")]
        public System.Nullable<double> Weight
        {
            get
            {
                return this._Weight;
            }
            set
            {
                if ((this._Weight != value))
                {
                    this.OnWeightChanging(value);
                    this.SendPropertyChanging();
                    this._Weight = value;
                    this.SendPropertyChanged("Weight");
                    this.OnWeightChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Blood", DbType = "VarChar(50)")]
        public string Blood
        {
            get
            {
                return this._Blood;
            }
            set
            {
                if ((this._Blood != value))
                {
                    this.OnBloodChanging(value);
                    this.SendPropertyChanging();
                    this._Blood = value;
                    this.SendPropertyChanged("Blood");
                    this.OnBloodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Education", DbType = "NVarChar(50)")]
        public string Education
        {
            get
            {
                return this._Education;
            }
            set
            {
                if ((this._Education != value))
                {
                    this.OnEducationChanging(value);
                    this.SendPropertyChanging();
                    this._Education = value;
                    this.SendPropertyChanged("Education");
                    this.OnEducationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GraduatInstitutions", DbType = "NVarChar(50)")]
        public string GraduatInstitutions
        {
            get
            {
                return this._GraduatInstitutions;
            }
            set
            {
                if ((this._GraduatInstitutions != value))
                {
                    this.OnGraduatInstitutionsChanging(value);
                    this.SendPropertyChanging();
                    this._GraduatInstitutions = value;
                    this.SendPropertyChanged("GraduatInstitutions");
                    this.OnGraduatInstitutionsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Major", DbType = "NVarChar(50)")]
        public string Major
        {
            get
            {
                return this._Major;
            }
            set
            {
                if ((this._Major != value))
                {
                    this.OnMajorChanging(value);
                    this.SendPropertyChanging();
                    this._Major = value;
                    this.SendPropertyChanged("Major");
                    this.OnMajorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsMarry", DbType = "Bit")]
        public System.Nullable<bool> IsMarry
        {
            get
            {
                return this._IsMarry;
            }
            set
            {
                if ((this._IsMarry != value))
                {
                    this.OnIsMarryChanging(value);
                    this.SendPropertyChanging();
                    this._IsMarry = value;
                    this.SendPropertyChanged("IsMarry");
                    this.OnIsMarryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(50)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(50)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BirthDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> BirthDate
        {
            get
            {
                return this._BirthDate;
            }
            set
            {
                if ((this._BirthDate != value))
                {
                    this.OnBirthDateChanging(value);
                    this.SendPropertyChanging();
                    this._BirthDate = value;
                    this.SendPropertyChanged("BirthDate");
                    this.OnBirthDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BeginWorkDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> BeginWorkDate
        {
            get
            {
                return this._BeginWorkDate;
            }
            set
            {
                if ((this._BeginWorkDate != value))
                {
                    this.OnBeginWorkDateChanging(value);
                    this.SendPropertyChanging();
                    this._BeginWorkDate = value;
                    this.SendPropertyChanged("BeginWorkDate");
                    this.OnBeginWorkDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Healthy", DbType = "NVarChar(50)")]
        public string Healthy
        {
            get
            {
                return this._Healthy;
            }
            set
            {
                if ((this._Healthy != value))
                {
                    this.OnHealthyChanging(value);
                    this.SendPropertyChanging();
                    this._Healthy = value;
                    this.SendPropertyChanged("Healthy");
                    this.OnHealthyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GraduationDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> GraduationDate
        {
            get
            {
                return this._GraduationDate;
            }
            set
            {
                if ((this._GraduationDate != value))
                {
                    this.OnGraduationDateChanging(value);
                    this.SendPropertyChanging();
                    this._GraduationDate = value;
                    this.SendPropertyChanged("GraduationDate");
                    this.OnGraduationDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmergencyContact", DbType = "VarChar(50)")]
        public string EmergencyContact
        {
            get
            {
                return this._EmergencyContact;
            }
            set
            {
                if ((this._EmergencyContact != value))
                {
                    this.OnEmergencyContactChanging(value);
                    this.SendPropertyChanging();
                    this._EmergencyContact = value;
                    this.SendPropertyChanged("EmergencyContact");
                    this.OnEmergencyContactChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmergencyMobile", DbType = "VarChar(50)")]
        public string EmergencyMobile
        {
            get
            {
                return this._EmergencyMobile;
            }
            set
            {
                if ((this._EmergencyMobile != value))
                {
                    this.OnEmergencyMobileChanging(value);
                    this.SendPropertyChanging();
                    this._EmergencyMobile = value;
                    this.SendPropertyChanged("EmergencyMobile");
                    this.OnEmergencyMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LanguageLevel", DbType = "VarChar(50)")]
        public string LanguageLevel
        {
            get
            {
                return this._LanguageLevel;
            }
            set
            {
                if ((this._LanguageLevel != value))
                {
                    this.OnLanguageLevelChanging(value);
                    this.SendPropertyChanging();
                    this._LanguageLevel = value;
                    this.SendPropertyChanged("LanguageLevel");
                    this.OnLanguageLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComputerLevel", DbType = "VarChar(50)")]
        public string ComputerLevel
        {
            get
            {
                return this._ComputerLevel;
            }
            set
            {
                if ((this._ComputerLevel != value))
                {
                    this.OnComputerLevelChanging(value);
                    this.SendPropertyChanging();
                    this._ComputerLevel = value;
                    this.SendPropertyChanged("ComputerLevel");
                    this.OnComputerLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelfEvaluation", DbType = "NVarChar(300)")]
        public string SelfEvaluation
        {
            get
            {
                return this._SelfEvaluation;
            }
            set
            {
                if ((this._SelfEvaluation != value))
                {
                    this.OnSelfEvaluationChanging(value);
                    this.SendPropertyChanging();
                    this._SelfEvaluation = value;
                    this.SendPropertyChanged("SelfEvaluation");
                    this.OnSelfEvaluationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Treatment", DbType = "VarChar(50)")]
        public string Treatment
        {
            get
            {
                return this._Treatment;
            }
            set
            {
                if ((this._Treatment != value))
                {
                    this.OnTreatmentChanging(value);
                    this.SendPropertyChanging();
                    this._Treatment = value;
                    this.SendPropertyChanged("Treatment");
                    this.OnTreatmentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PositionName", DbType = "NVarChar(50)")]
        public string PositionName
        {
            get
            {
                return this._PositionName;
            }
            set
            {
                if ((this._PositionName != value))
                {
                    this.OnPositionNameChanging(value);
                    this.SendPropertyChanging();
                    this._PositionName = value;
                    this.SendPropertyChanged("PositionName");
                    this.OnPositionNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "NVarChar(300)")]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Personals", Storage = "_Staffs", ThisKey = "ID", OtherKey = "ID", IsForeignKey = true)]
        public Staffs Staffs
        {
            get
            {
                return this._Staffs.Entity;
            }
            set
            {
                Staffs previousValue = this._Staffs.Entity;
                if (((previousValue != value)
                            || (this._Staffs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Staffs.Entity = null;
                        previousValue.Personals = null;
                    }
                    this._Staffs.Entity = value;
                    if ((value != null))
                    {
                        value.Personals = this;
                        this._ID = value.ID;
                    }
                    else
                    {
                        this._ID = default(string);
                    }
                    this.SendPropertyChanged("Staffs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PersonalWorkExperiences")]
    public partial class PersonalWorkExperiences : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private System.DateTime _StartTime;

        private System.DateTime _EndTime;

        private string _Company;

        private string _Position;

        private System.Nullable<decimal> _Salary;

        private string _LeaveReason;

        private string _Phone;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnStartTimeChanging(System.DateTime value);
        partial void OnStartTimeChanged();
        partial void OnEndTimeChanging(System.DateTime value);
        partial void OnEndTimeChanged();
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        partial void OnPositionChanging(string value);
        partial void OnPositionChanged();
        partial void OnSalaryChanging(System.Nullable<decimal> value);
        partial void OnSalaryChanged();
        partial void OnLeaveReasonChanging(string value);
        partial void OnLeaveReasonChanged();
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        #endregion

        public PersonalWorkExperiences()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTime", DbType = "DateTime NOT NULL")]
        public System.DateTime StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if ((this._StartTime != value))
                {
                    this.OnStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartTime = value;
                    this.SendPropertyChanged("StartTime");
                    this.OnStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTime", DbType = "DateTime NOT NULL")]
        public System.DateTime EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if ((this._EndTime != value))
                {
                    this.OnEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndTime = value;
                    this.SendPropertyChanged("EndTime");
                    this.OnEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                if ((this._Company != value))
                {
                    this.OnCompanyChanging(value);
                    this.SendPropertyChanging();
                    this._Company = value;
                    this.SendPropertyChanged("Company");
                    this.OnCompanyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Position", DbType = "VarChar(50)")]
        public string Position
        {
            get
            {
                return this._Position;
            }
            set
            {
                if ((this._Position != value))
                {
                    this.OnPositionChanging(value);
                    this.SendPropertyChanging();
                    this._Position = value;
                    this.SendPropertyChanged("Position");
                    this.OnPositionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Salary", DbType = "Decimal(18,7)")]
        public System.Nullable<decimal> Salary
        {
            get
            {
                return this._Salary;
            }
            set
            {
                if ((this._Salary != value))
                {
                    this.OnSalaryChanging(value);
                    this.SendPropertyChanging();
                    this._Salary = value;
                    this.SendPropertyChanged("Salary");
                    this.OnSalaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveReason", DbType = "VarChar(100)")]
        public string LeaveReason
        {
            get
            {
                return this._LeaveReason;
            }
            set
            {
                if ((this._LeaveReason != value))
                {
                    this.OnLeaveReasonChanging(value);
                    this.SendPropertyChanging();
                    this._LeaveReason = value;
                    this.SendPropertyChanged("LeaveReason");
                    this.OnLeaveReasonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone", DbType = "VarChar(50)")]
        public string Phone
        {
            get
            {
                return this._Phone;
            }
            set
            {
                if ((this._Phone != value))
                {
                    this.OnPhoneChanging(value);
                    this.SendPropertyChanging();
                    this._Phone = value;
                    this.SendPropertyChanged("Phone");
                    this.OnPhoneChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PositionsAc")]
    public partial class PositionsAc : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private string _RegionID;

        private int _Status;

        private string _CreatorID;

        private string _ModifyID;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnRegionIDChanging(string value);
        partial void OnRegionIDChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnModifyIDChanging(string value);
        partial void OnModifyIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        #endregion

        public PositionsAc()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegionID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string RegionID
        {
            get
            {
                return this._RegionID;
            }
            set
            {
                if ((this._RegionID != value))
                {
                    this.OnRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._RegionID = value;
                    this.SendPropertyChanged("RegionID");
                    this.OnRegionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyID", DbType = "VarChar(50)")]
        public string ModifyID
        {
            get
            {
                return this._ModifyID;
            }
            set
            {
                if ((this._ModifyID != value))
                {
                    this.OnModifyIDChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyID = value;
                    this.SendPropertyChanged("ModifyID");
                    this.OnModifyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Postions")]
    public partial class Postions : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private string _AdminID;

        private int _Status;

        private System.DateTime _CreateDate;

        private EntitySet<MapsPostion> _MapsPostion;

        private EntitySet<Staffs> _Staffs;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Postions()
        {
            this._MapsPostion = new EntitySet<MapsPostion>(new Action<MapsPostion>(this.attach_MapsPostion), new Action<MapsPostion>(this.detach_MapsPostion));
            this._Staffs = new EntitySet<Staffs>(new Action<Staffs>(this.attach_Staffs), new Action<Staffs>(this.detach_Staffs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Postions_MapsPostion", Storage = "_MapsPostion", ThisKey = "ID", OtherKey = "PostionID")]
        public EntitySet<MapsPostion> MapsPostion
        {
            get
            {
                return this._MapsPostion;
            }
            set
            {
                this._MapsPostion.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Postions_Staffs", Storage = "_Staffs", ThisKey = "ID", OtherKey = "PostionID")]
        public EntitySet<Staffs> Staffs
        {
            get
            {
                return this._Staffs;
            }
            set
            {
                this._Staffs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_MapsPostion(MapsPostion entity)
        {
            this.SendPropertyChanging();
            entity.Postions = this;
        }

        private void detach_MapsPostion(MapsPostion entity)
        {
            this.SendPropertyChanging();
            entity.Postions = null;
        }

        private void attach_Staffs(Staffs entity)
        {
            this.SendPropertyChanging();
            entity.Postions = this;
        }

        private void detach_Staffs(Staffs entity)
        {
            this.SendPropertyChanging();
            entity.Postions = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.RegionsAc")]
    public partial class RegionsAc : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _FatherID;

        private string _Name;

        private int _Status;

        private string _CreatorID;

        private string _ModifyID;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnFatherIDChanging(string value);
        partial void OnFatherIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnModifyIDChanging(string value);
        partial void OnModifyIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        #endregion

        public RegionsAc()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FatherID", DbType = "VarChar(50)")]
        public string FatherID
        {
            get
            {
                return this._FatherID;
            }
            set
            {
                if ((this._FatherID != value))
                {
                    this.OnFatherIDChanging(value);
                    this.SendPropertyChanging();
                    this._FatherID = value;
                    this.SendPropertyChanged("FatherID");
                    this.OnFatherIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyID", DbType = "VarChar(50)")]
        public string ModifyID
        {
            get
            {
                return this._ModifyID;
            }
            set
            {
                if ((this._ModifyID != value))
                {
                    this.OnModifyIDChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyID = value;
                    this.SendPropertyChanged("ModifyID");
                    this.OnModifyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Roles")]
    public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private int _Type;

        private int _Status;

        private System.DateTime _CreateDate;

        private EntitySet<Admins> _Admins;

        private EntitySet<MapsRole> _MapsRole;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Roles()
        {
            this._Admins = new EntitySet<Admins>(new Action<Admins>(this.attach_Admins), new Action<Admins>(this.detach_Admins));
            this._MapsRole = new EntitySet<MapsRole>(new Action<MapsRole>(this.attach_MapsRole), new Action<MapsRole>(this.detach_MapsRole));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Roles_Admins", Storage = "_Admins", ThisKey = "ID", OtherKey = "RoleID")]
        public EntitySet<Admins> Admins
        {
            get
            {
                return this._Admins;
            }
            set
            {
                this._Admins.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Roles_MapsRole", Storage = "_MapsRole", ThisKey = "ID", OtherKey = "RoleID")]
        public EntitySet<MapsRole> MapsRole
        {
            get
            {
                return this._MapsRole;
            }
            set
            {
                this._MapsRole.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Admins(Admins entity)
        {
            this.SendPropertyChanging();
            entity.Roles = this;
        }

        private void detach_Admins(Admins entity)
        {
            this.SendPropertyChanging();
            entity.Roles = null;
        }

        private void attach_MapsRole(MapsRole entity)
        {
            this.SendPropertyChanging();
            entity.Roles = this;
        }

        private void detach_MapsRole(MapsRole entity)
        {
            this.SendPropertyChanging();
            entity.Roles = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Schedules")]
    public partial class Schedules : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private System.DateTime _Date;

        private int _Type;

        private string _CreatorID;

        private string _ModifyID;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        private EntityRef<SchedulesPrivate> _SchedulesPrivate;

        private EntityRef<SchedulesPublic> _SchedulesPublic;

        private EntityRef<Calendars> _Calendars;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnModifyIDChanging(string value);
        partial void OnModifyIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        #endregion

        public Schedules()
        {
            this._SchedulesPrivate = default(EntityRef<SchedulesPrivate>);
            this._SchedulesPublic = default(EntityRef<SchedulesPublic>);
            this._Calendars = default(EntityRef<Calendars>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date NOT NULL")]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    if (this._Calendars.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyID", DbType = "VarChar(50)")]
        public string ModifyID
        {
            get
            {
                return this._ModifyID;
            }
            set
            {
                if ((this._ModifyID != value))
                {
                    this.OnModifyIDChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyID = value;
                    this.SendPropertyChanged("ModifyID");
                    this.OnModifyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Schedules_SchedulesPrivate", Storage = "_SchedulesPrivate", ThisKey = "ID", OtherKey = "ID", IsUnique = true, IsForeignKey = false)]
        public SchedulesPrivate SchedulesPrivate
        {
            get
            {
                return this._SchedulesPrivate.Entity;
            }
            set
            {
                SchedulesPrivate previousValue = this._SchedulesPrivate.Entity;
                if (((previousValue != value)
                            || (this._SchedulesPrivate.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._SchedulesPrivate.Entity = null;
                        previousValue.Schedules = null;
                    }
                    this._SchedulesPrivate.Entity = value;
                    if ((value != null))
                    {
                        value.Schedules = this;
                    }
                    this.SendPropertyChanged("SchedulesPrivate");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Schedules_SchedulesPublic", Storage = "_SchedulesPublic", ThisKey = "ID", OtherKey = "ID", IsUnique = true, IsForeignKey = false)]
        public SchedulesPublic SchedulesPublic
        {
            get
            {
                return this._SchedulesPublic.Entity;
            }
            set
            {
                SchedulesPublic previousValue = this._SchedulesPublic.Entity;
                if (((previousValue != value)
                            || (this._SchedulesPublic.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._SchedulesPublic.Entity = null;
                        previousValue.Schedules = null;
                    }
                    this._SchedulesPublic.Entity = value;
                    if ((value != null))
                    {
                        value.Schedules = this;
                    }
                    this.SendPropertyChanged("SchedulesPublic");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Calendars_Schedules", Storage = "_Calendars", ThisKey = "Date", OtherKey = "ID", IsForeignKey = true)]
        public Calendars Calendars
        {
            get
            {
                return this._Calendars.Entity;
            }
            set
            {
                Calendars previousValue = this._Calendars.Entity;
                if (((previousValue != value)
                            || (this._Calendars.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Calendars.Entity = null;
                        previousValue.Schedules.Remove(this);
                    }
                    this._Calendars.Entity = value;
                    if ((value != null))
                    {
                        value.Schedules.Add(this);
                        this._Date = value.ID;
                    }
                    else
                    {
                        this._Date = default(System.DateTime);
                    }
                    this.SendPropertyChanged("Calendars");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SchedulesPrivate")]
    public partial class SchedulesPrivate : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _ApplicationID;

        private int _Type;

        private string _AmOrPm;

        private string _StaffID;

        private System.Nullable<bool> _OnWorkRemedy;

        private System.Nullable<bool> _OffWorkRemedy;

        private System.DateTime _CreateDate;

        private EntityRef<Schedules> _Schedules;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnApplicationIDChanging(string value);
        partial void OnApplicationIDChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnAmOrPmChanging(string value);
        partial void OnAmOrPmChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnOnWorkRemedyChanging(System.Nullable<bool> value);
        partial void OnOnWorkRemedyChanged();
        partial void OnOffWorkRemedyChanging(System.Nullable<bool> value);
        partial void OnOffWorkRemedyChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public SchedulesPrivate()
        {
            this._Schedules = default(EntityRef<Schedules>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    if (this._Schedules.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmOrPm", DbType = "VarChar(2) NOT NULL", CanBeNull = false)]
        public string AmOrPm
        {
            get
            {
                return this._AmOrPm;
            }
            set
            {
                if ((this._AmOrPm != value))
                {
                    this.OnAmOrPmChanging(value);
                    this.SendPropertyChanging();
                    this._AmOrPm = value;
                    this.SendPropertyChanged("AmOrPm");
                    this.OnAmOrPmChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OnWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OnWorkRemedy
        {
            get
            {
                return this._OnWorkRemedy;
            }
            set
            {
                if ((this._OnWorkRemedy != value))
                {
                    this.OnOnWorkRemedyChanging(value);
                    this.SendPropertyChanging();
                    this._OnWorkRemedy = value;
                    this.SendPropertyChanged("OnWorkRemedy");
                    this.OnOnWorkRemedyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OffWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OffWorkRemedy
        {
            get
            {
                return this._OffWorkRemedy;
            }
            set
            {
                if ((this._OffWorkRemedy != value))
                {
                    this.OnOffWorkRemedyChanging(value);
                    this.SendPropertyChanging();
                    this._OffWorkRemedy = value;
                    this.SendPropertyChanged("OffWorkRemedy");
                    this.OnOffWorkRemedyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Schedules_SchedulesPrivate", Storage = "_Schedules", ThisKey = "ID", OtherKey = "ID", IsForeignKey = true)]
        public Schedules Schedules
        {
            get
            {
                return this._Schedules.Entity;
            }
            set
            {
                Schedules previousValue = this._Schedules.Entity;
                if (((previousValue != value)
                            || (this._Schedules.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Schedules.Entity = null;
                        previousValue.SchedulesPrivate = null;
                    }
                    this._Schedules.Entity = value;
                    if ((value != null))
                    {
                        value.SchedulesPrivate = this;
                        this._ID = value.ID;
                    }
                    else
                    {
                        this._ID = default(string);
                    }
                    this.SendPropertyChanged("Schedules");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SchedulesPublic")]
    public partial class SchedulesPublic : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private int _Method;

        private string _Name;

        private int _From;

        private string _RegionID;

        private string _PostionID;

        private System.Nullable<decimal> _SalaryMultiple;

        private string _ShiftID;

        private string _SchedulingID;

        private EntityRef<Schedules> _Schedules;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnMethodChanging(int value);
        partial void OnMethodChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnFromChanging(int value);
        partial void OnFromChanged();
        partial void OnRegionIDChanging(string value);
        partial void OnRegionIDChanged();
        partial void OnPostionIDChanging(string value);
        partial void OnPostionIDChanged();
        partial void OnSalaryMultipleChanging(System.Nullable<decimal> value);
        partial void OnSalaryMultipleChanged();
        partial void OnShiftIDChanging(string value);
        partial void OnShiftIDChanged();
        partial void OnSchedulingIDChanging(string value);
        partial void OnSchedulingIDChanged();
        #endregion

        public SchedulesPublic()
        {
            this._Schedules = default(EntityRef<Schedules>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    if (this._Schedules.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Method", DbType = "Int NOT NULL")]
        public int Method
        {
            get
            {
                return this._Method;
            }
            set
            {
                if ((this._Method != value))
                {
                    this.OnMethodChanging(value);
                    this.SendPropertyChanging();
                    this._Method = value;
                    this.SendPropertyChanged("Method");
                    this.OnMethodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "[From]", Storage = "_From", DbType = "Int NOT NULL")]
        public int From
        {
            get
            {
                return this._From;
            }
            set
            {
                if ((this._From != value))
                {
                    this.OnFromChanging(value);
                    this.SendPropertyChanging();
                    this._From = value;
                    this.SendPropertyChanged("From");
                    this.OnFromChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegionID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string RegionID
        {
            get
            {
                return this._RegionID;
            }
            set
            {
                if ((this._RegionID != value))
                {
                    this.OnRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._RegionID = value;
                    this.SendPropertyChanged("RegionID");
                    this.OnRegionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionID", DbType = "VarChar(50)")]
        public string PostionID
        {
            get
            {
                return this._PostionID;
            }
            set
            {
                if ((this._PostionID != value))
                {
                    this.OnPostionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PostionID = value;
                    this.SendPropertyChanged("PostionID");
                    this.OnPostionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryMultiple", DbType = "Decimal(18,7)")]
        public System.Nullable<decimal> SalaryMultiple
        {
            get
            {
                return this._SalaryMultiple;
            }
            set
            {
                if ((this._SalaryMultiple != value))
                {
                    this.OnSalaryMultipleChanging(value);
                    this.SendPropertyChanging();
                    this._SalaryMultiple = value;
                    this.SendPropertyChanged("SalaryMultiple");
                    this.OnSalaryMultipleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShiftID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                if ((this._ShiftID != value))
                {
                    this.OnShiftIDChanging(value);
                    this.SendPropertyChanging();
                    this._ShiftID = value;
                    this.SendPropertyChanged("ShiftID");
                    this.OnShiftIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SchedulingID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SchedulingID
        {
            get
            {
                return this._SchedulingID;
            }
            set
            {
                if ((this._SchedulingID != value))
                {
                    this.OnSchedulingIDChanging(value);
                    this.SendPropertyChanging();
                    this._SchedulingID = value;
                    this.SendPropertyChanged("SchedulingID");
                    this.OnSchedulingIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Schedules_SchedulesPublic", Storage = "_Schedules", ThisKey = "ID", OtherKey = "ID", IsForeignKey = true)]
        public Schedules Schedules
        {
            get
            {
                return this._Schedules.Entity;
            }
            set
            {
                Schedules previousValue = this._Schedules.Entity;
                if (((previousValue != value)
                            || (this._Schedules.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Schedules.Entity = null;
                        previousValue.SchedulesPublic = null;
                    }
                    this._Schedules.Entity = value;
                    if ((value != null))
                    {
                        value.SchedulesPublic = this;
                        this._ID = value.ID;
                    }
                    else
                    {
                        this._ID = default(string);
                    }
                    this.SendPropertyChanged("Schedules");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Schedulings")]
    public partial class Schedulings : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private string _PostionID;

        private System.Nullable<System.TimeSpan> _AmStartTime;

        private System.Nullable<System.TimeSpan> _AmEndTime;

        private System.TimeSpan _PmStartTime;

        private System.TimeSpan _PmEndTime;

        private int _DomainValue;

        private string _Summary;

        private bool _IsMain;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnPostionIDChanging(string value);
        partial void OnPostionIDChanged();
        partial void OnAmStartTimeChanging(System.Nullable<System.TimeSpan> value);
        partial void OnAmStartTimeChanged();
        partial void OnAmEndTimeChanging(System.Nullable<System.TimeSpan> value);
        partial void OnAmEndTimeChanged();
        partial void OnPmStartTimeChanging(System.TimeSpan value);
        partial void OnPmStartTimeChanged();
        partial void OnPmEndTimeChanging(System.TimeSpan value);
        partial void OnPmEndTimeChanged();
        partial void OnDomainValueChanging(int value);
        partial void OnDomainValueChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        partial void OnIsMainChanging(bool value);
        partial void OnIsMainChanged();
        #endregion

        public Schedulings()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionID", DbType = "VarChar(50)")]
        public string PostionID
        {
            get
            {
                return this._PostionID;
            }
            set
            {
                if ((this._PostionID != value))
                {
                    this.OnPostionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PostionID = value;
                    this.SendPropertyChanged("PostionID");
                    this.OnPostionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmStartTime", DbType = "Time")]
        public System.Nullable<System.TimeSpan> AmStartTime
        {
            get
            {
                return this._AmStartTime;
            }
            set
            {
                if ((this._AmStartTime != value))
                {
                    this.OnAmStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._AmStartTime = value;
                    this.SendPropertyChanged("AmStartTime");
                    this.OnAmStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmEndTime", DbType = "Time")]
        public System.Nullable<System.TimeSpan> AmEndTime
        {
            get
            {
                return this._AmEndTime;
            }
            set
            {
                if ((this._AmEndTime != value))
                {
                    this.OnAmEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._AmEndTime = value;
                    this.SendPropertyChanged("AmEndTime");
                    this.OnAmEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PmStartTime", DbType = "Time NOT NULL")]
        public System.TimeSpan PmStartTime
        {
            get
            {
                return this._PmStartTime;
            }
            set
            {
                if ((this._PmStartTime != value))
                {
                    this.OnPmStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._PmStartTime = value;
                    this.SendPropertyChanged("PmStartTime");
                    this.OnPmStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PmEndTime", DbType = "Time NOT NULL")]
        public System.TimeSpan PmEndTime
        {
            get
            {
                return this._PmEndTime;
            }
            set
            {
                if ((this._PmEndTime != value))
                {
                    this.OnPmEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._PmEndTime = value;
                    this.SendPropertyChanged("PmEndTime");
                    this.OnPmEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DomainValue", DbType = "Int NOT NULL")]
        public int DomainValue
        {
            get
            {
                return this._DomainValue;
            }
            set
            {
                if ((this._DomainValue != value))
                {
                    this.OnDomainValueChanging(value);
                    this.SendPropertyChanging();
                    this._DomainValue = value;
                    this.SendPropertyChanged("DomainValue");
                    this.OnDomainValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "NVarChar(500)")]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsMain", DbType = "Bit NOT NULL")]
        public bool IsMain
        {
            get
            {
                return this._IsMain;
            }
            set
            {
                if ((this._IsMain != value))
                {
                    this.OnIsMainChanging(value);
                    this.SendPropertyChanging();
                    this._IsMain = value;
                    this.SendPropertyChanged("IsMain");
                    this.OnIsMainChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SealCertificates")]
    public partial class SealCertificates : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _EnterpriseID;

        private int _Type;

        private string _Name;

        private System.Nullable<System.DateTime> _ProcessingDate;

        private System.Nullable<System.DateTime> _DueDate;

        private string _StaffID;

        private string _AdminID;

        private int _Status;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnEnterpriseIDChanging(string value);
        partial void OnEnterpriseIDChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnProcessingDateChanging(System.Nullable<System.DateTime> value);
        partial void OnProcessingDateChanged();
        partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
        partial void OnDueDateChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        #endregion

        public SealCertificates()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50)")]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this.OnEnterpriseIDChanging(value);
                    this.SendPropertyChanging();
                    this._EnterpriseID = value;
                    this.SendPropertyChanged("EnterpriseID");
                    this.OnEnterpriseIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessingDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ProcessingDate
        {
            get
            {
                return this._ProcessingDate;
            }
            set
            {
                if ((this._ProcessingDate != value))
                {
                    this.OnProcessingDateChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessingDate = value;
                    this.SendPropertyChanged("ProcessingDate");
                    this.OnProcessingDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DueDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._DueDate;
            }
            set
            {
                if ((this._DueDate != value))
                {
                    this.OnDueDateChanging(value);
                    this.SendPropertyChanging();
                    this._DueDate = value;
                    this.SendPropertyChanged("DueDate");
                    this.OnDueDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Settings")]
    public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Type;

        private string _DataType;

        private string _Name;

        private string _Value;

        private string _Summary;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnDataTypeChanging(string value);
        partial void OnDataTypeChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        #endregion

        public Settings()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DataType", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string DataType
        {
            get
            {
                return this._DataType;
            }
            set
            {
                if ((this._DataType != value))
                {
                    this.OnDataTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DataType = value;
                    this.SendPropertyChanged("DataType");
                    this.OnDataTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "NVarChar(2000)")]
        public string Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if ((this._Value != value))
                {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Summary", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string Summary
        {
            get
            {
                return this._Summary;
            }
            set
            {
                if ((this._Summary != value))
                {
                    this.OnSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._Summary = value;
                    this.SendPropertyChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ShiftStaffs")]
    public partial class ShiftStaffs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _ShiftSchedule;

        private string _ShiftRules;

        private string _NextSchedulingID;

        private string _CreatorID;

        private string _ModifyID;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnShiftScheduleChanging(string value);
        partial void OnShiftScheduleChanged();
        partial void OnShiftRulesChanging(string value);
        partial void OnShiftRulesChanged();
        partial void OnNextSchedulingIDChanging(string value);
        partial void OnNextSchedulingIDChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnModifyIDChanging(string value);
        partial void OnModifyIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        #endregion

        public ShiftStaffs()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShiftSchedule", DbType = "VarChar(150) NOT NULL", CanBeNull = false)]
        public string ShiftSchedule
        {
            get
            {
                return this._ShiftSchedule;
            }
            set
            {
                if ((this._ShiftSchedule != value))
                {
                    this.OnShiftScheduleChanging(value);
                    this.SendPropertyChanging();
                    this._ShiftSchedule = value;
                    this.SendPropertyChanged("ShiftSchedule");
                    this.OnShiftScheduleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShiftRules", DbType = "VarChar(50)")]
        public string ShiftRules
        {
            get
            {
                return this._ShiftRules;
            }
            set
            {
                if ((this._ShiftRules != value))
                {
                    this.OnShiftRulesChanging(value);
                    this.SendPropertyChanging();
                    this._ShiftRules = value;
                    this.SendPropertyChanged("ShiftRules");
                    this.OnShiftRulesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NextSchedulingID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string NextSchedulingID
        {
            get
            {
                return this._NextSchedulingID;
            }
            set
            {
                if ((this._NextSchedulingID != value))
                {
                    this.OnNextSchedulingIDChanging(value);
                    this.SendPropertyChanging();
                    this._NextSchedulingID = value;
                    this.SendPropertyChanged("NextSchedulingID");
                    this.OnNextSchedulingIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ModifyID
        {
            get
            {
                return this._ModifyID;
            }
            set
            {
                if ((this._ModifyID != value))
                {
                    this.OnModifyIDChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyID = value;
                    this.SendPropertyChanged("ModifyID");
                    this.OnModifyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Staffs")]
    public partial class Staffs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private string _Code;

        private string _SelCode;

        private int _Gender;

        private string _DyjCompanyCode;

        private string _DyjDepartmentCode;

        private string _DyjCode;

        private string _WorkCity;

        private string _LeagueID;

        private string _PostionID;

        private string _DepartmentCode;

        private string _PostionCode;

        private string _AssessmentMethod;

        private string _AssessmentTime;

        private string _AdminID;

        private System.DateTime _CreateDate;

        private System.DateTime _UpdateDate;

        private int _Status;

        private string _RegionID;

        private string _SchedulingID;

        private EntitySet<Admins> _Admins;

        private EntityRef<BankCards> _BankCards;

        private EntityRef<Labours> _Labours;

        private EntitySet<PayBills> _PayBills;

        private EntityRef<Personals> _Personals;

        private EntityRef<Postions> _Postions;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnSelCodeChanging(string value);
        partial void OnSelCodeChanged();
        partial void OnGenderChanging(int value);
        partial void OnGenderChanged();
        partial void OnDyjCompanyCodeChanging(string value);
        partial void OnDyjCompanyCodeChanged();
        partial void OnDyjDepartmentCodeChanging(string value);
        partial void OnDyjDepartmentCodeChanged();
        partial void OnDyjCodeChanging(string value);
        partial void OnDyjCodeChanged();
        partial void OnWorkCityChanging(string value);
        partial void OnWorkCityChanged();
        partial void OnLeagueIDChanging(string value);
        partial void OnLeagueIDChanged();
        partial void OnPostionIDChanging(string value);
        partial void OnPostionIDChanged();
        partial void OnDepartmentCodeChanging(string value);
        partial void OnDepartmentCodeChanged();
        partial void OnPostionCodeChanging(string value);
        partial void OnPostionCodeChanged();
        partial void OnAssessmentMethodChanging(string value);
        partial void OnAssessmentMethodChanged();
        partial void OnAssessmentTimeChanging(string value);
        partial void OnAssessmentTimeChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.DateTime value);
        partial void OnUpdateDateChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnRegionIDChanging(string value);
        partial void OnRegionIDChanged();
        partial void OnSchedulingIDChanging(string value);
        partial void OnSchedulingIDChanged();
        #endregion

        public Staffs()
        {
            this._Admins = new EntitySet<Admins>(new Action<Admins>(this.attach_Admins), new Action<Admins>(this.detach_Admins));
            this._BankCards = default(EntityRef<BankCards>);
            this._Labours = default(EntityRef<Labours>);
            this._PayBills = new EntitySet<PayBills>(new Action<PayBills>(this.attach_PayBills), new Action<PayBills>(this.detach_PayBills));
            this._Personals = default(EntityRef<Personals>);
            this._Postions = default(EntityRef<Postions>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "VarChar(50)")]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging();
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50)")]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this.OnSelCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SelCode = value;
                    this.SendPropertyChanged("SelCode");
                    this.OnSelCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Gender", DbType = "Int NOT NULL")]
        public int Gender
        {
            get
            {
                return this._Gender;
            }
            set
            {
                if ((this._Gender != value))
                {
                    this.OnGenderChanging(value);
                    this.SendPropertyChanging();
                    this._Gender = value;
                    this.SendPropertyChanged("Gender");
                    this.OnGenderChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjCompanyCode", DbType = "VarChar(50)")]
        public string DyjCompanyCode
        {
            get
            {
                return this._DyjCompanyCode;
            }
            set
            {
                if ((this._DyjCompanyCode != value))
                {
                    this.OnDyjCompanyCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DyjCompanyCode = value;
                    this.SendPropertyChanged("DyjCompanyCode");
                    this.OnDyjCompanyCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjDepartmentCode", DbType = "VarChar(50)")]
        public string DyjDepartmentCode
        {
            get
            {
                return this._DyjDepartmentCode;
            }
            set
            {
                if ((this._DyjDepartmentCode != value))
                {
                    this.OnDyjDepartmentCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DyjDepartmentCode = value;
                    this.SendPropertyChanged("DyjDepartmentCode");
                    this.OnDyjDepartmentCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjCode", DbType = "VarChar(50)")]
        public string DyjCode
        {
            get
            {
                return this._DyjCode;
            }
            set
            {
                if ((this._DyjCode != value))
                {
                    this.OnDyjCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DyjCode = value;
                    this.SendPropertyChanged("DyjCode");
                    this.OnDyjCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkCity", DbType = "VarChar(50)")]
        public string WorkCity
        {
            get
            {
                return this._WorkCity;
            }
            set
            {
                if ((this._WorkCity != value))
                {
                    this.OnWorkCityChanging(value);
                    this.SendPropertyChanging();
                    this._WorkCity = value;
                    this.SendPropertyChanged("WorkCity");
                    this.OnWorkCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeagueID", DbType = "VarChar(50)")]
        public string LeagueID
        {
            get
            {
                return this._LeagueID;
            }
            set
            {
                if ((this._LeagueID != value))
                {
                    this.OnLeagueIDChanging(value);
                    this.SendPropertyChanging();
                    this._LeagueID = value;
                    this.SendPropertyChanged("LeagueID");
                    this.OnLeagueIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionID", DbType = "VarChar(50)")]
        public string PostionID
        {
            get
            {
                return this._PostionID;
            }
            set
            {
                if ((this._PostionID != value))
                {
                    if (this._Postions.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnPostionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PostionID = value;
                    this.SendPropertyChanged("PostionID");
                    this.OnPostionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DepartmentCode", DbType = "VarChar(50)")]
        public string DepartmentCode
        {
            get
            {
                return this._DepartmentCode;
            }
            set
            {
                if ((this._DepartmentCode != value))
                {
                    this.OnDepartmentCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DepartmentCode = value;
                    this.SendPropertyChanged("DepartmentCode");
                    this.OnDepartmentCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostionCode", DbType = "VarChar(50)")]
        public string PostionCode
        {
            get
            {
                return this._PostionCode;
            }
            set
            {
                if ((this._PostionCode != value))
                {
                    this.OnPostionCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PostionCode = value;
                    this.SendPropertyChanged("PostionCode");
                    this.OnPostionCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssessmentMethod", DbType = "VarChar(50)")]
        public string AssessmentMethod
        {
            get
            {
                return this._AssessmentMethod;
            }
            set
            {
                if ((this._AssessmentMethod != value))
                {
                    this.OnAssessmentMethodChanging(value);
                    this.SendPropertyChanging();
                    this._AssessmentMethod = value;
                    this.SendPropertyChanged("AssessmentMethod");
                    this.OnAssessmentMethodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssessmentTime", DbType = "VarChar(50)")]
        public string AssessmentTime
        {
            get
            {
                return this._AssessmentTime;
            }
            set
            {
                if ((this._AssessmentTime != value))
                {
                    this.OnAssessmentTimeChanging(value);
                    this.SendPropertyChanging();
                    this._AssessmentTime = value;
                    this.SendPropertyChanged("AssessmentTime");
                    this.OnAssessmentTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50)")]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegionID", DbType = "VarChar(50)")]
        public string RegionID
        {
            get
            {
                return this._RegionID;
            }
            set
            {
                if ((this._RegionID != value))
                {
                    this.OnRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._RegionID = value;
                    this.SendPropertyChanged("RegionID");
                    this.OnRegionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SchedulingID", DbType = "VarChar(50)")]
        public string SchedulingID
        {
            get
            {
                return this._SchedulingID;
            }
            set
            {
                if ((this._SchedulingID != value))
                {
                    this.OnSchedulingIDChanging(value);
                    this.SendPropertyChanging();
                    this._SchedulingID = value;
                    this.SendPropertyChanged("SchedulingID");
                    this.OnSchedulingIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Admins", Storage = "_Admins", ThisKey = "ID", OtherKey = "StaffID")]
        public EntitySet<Admins> Admins
        {
            get
            {
                return this._Admins;
            }
            set
            {
                this._Admins.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_BankCards", Storage = "_BankCards", ThisKey = "ID", OtherKey = "ID", IsUnique = true, IsForeignKey = false)]
        public BankCards BankCards
        {
            get
            {
                return this._BankCards.Entity;
            }
            set
            {
                BankCards previousValue = this._BankCards.Entity;
                if (((previousValue != value)
                            || (this._BankCards.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._BankCards.Entity = null;
                        previousValue.Staffs = null;
                    }
                    this._BankCards.Entity = value;
                    if ((value != null))
                    {
                        value.Staffs = this;
                    }
                    this.SendPropertyChanged("BankCards");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Labours", Storage = "_Labours", ThisKey = "ID", OtherKey = "ID", IsUnique = true, IsForeignKey = false)]
        public Labours Labours
        {
            get
            {
                return this._Labours.Entity;
            }
            set
            {
                Labours previousValue = this._Labours.Entity;
                if (((previousValue != value)
                            || (this._Labours.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Labours.Entity = null;
                        previousValue.Staffs = null;
                    }
                    this._Labours.Entity = value;
                    if ((value != null))
                    {
                        value.Staffs = this;
                    }
                    this.SendPropertyChanged("Labours");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_PayBills", Storage = "_PayBills", ThisKey = "ID", OtherKey = "StaffID")]
        public EntitySet<PayBills> PayBills
        {
            get
            {
                return this._PayBills;
            }
            set
            {
                this._PayBills.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Staffs_Personals", Storage = "_Personals", ThisKey = "ID", OtherKey = "ID", IsUnique = true, IsForeignKey = false)]
        public Personals Personals
        {
            get
            {
                return this._Personals.Entity;
            }
            set
            {
                Personals previousValue = this._Personals.Entity;
                if (((previousValue != value)
                            || (this._Personals.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Personals.Entity = null;
                        previousValue.Staffs = null;
                    }
                    this._Personals.Entity = value;
                    if ((value != null))
                    {
                        value.Staffs = this;
                    }
                    this.SendPropertyChanged("Personals");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Postions_Staffs", Storage = "_Postions", ThisKey = "PostionID", OtherKey = "ID", IsForeignKey = true)]
        public Postions Postions
        {
            get
            {
                return this._Postions.Entity;
            }
            set
            {
                Postions previousValue = this._Postions.Entity;
                if (((previousValue != value)
                            || (this._Postions.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Postions.Entity = null;
                        previousValue.Staffs.Remove(this);
                    }
                    this._Postions.Entity = value;
                    if ((value != null))
                    {
                        value.Staffs.Add(this);
                        this._PostionID = value.ID;
                    }
                    else
                    {
                        this._PostionID = default(string);
                    }
                    this.SendPropertyChanged("Postions");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Admins(Admins entity)
        {
            this.SendPropertyChanging();
            entity.Staffs = this;
        }

        private void detach_Admins(Admins entity)
        {
            this.SendPropertyChanging();
            entity.Staffs = null;
        }

        private void attach_PayBills(PayBills entity)
        {
            this.SendPropertyChanging();
            entity.Staffs = this;
        }

        private void detach_PayBills(PayBills entity)
        {
            this.SendPropertyChanging();
            entity.Staffs = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.StaffWxs")]
    public partial class StaffWxs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _UnionID;

        private string _OpenID;

        private string _ID;

        private string _Nickname;

        private System.Nullable<int> _Sex;

        private string _Province;

        private string _City;

        private string _Country;

        private string _HeadImgurl;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUnionIDChanging(string value);
        partial void OnUnionIDChanged();
        partial void OnOpenIDChanging(string value);
        partial void OnOpenIDChanged();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNicknameChanging(string value);
        partial void OnNicknameChanged();
        partial void OnSexChanging(System.Nullable<int> value);
        partial void OnSexChanged();
        partial void OnProvinceChanging(string value);
        partial void OnProvinceChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        partial void OnHeadImgurlChanging(string value);
        partial void OnHeadImgurlChanged();
        #endregion

        public StaffWxs()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UnionID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string UnionID
        {
            get
            {
                return this._UnionID;
            }
            set
            {
                if ((this._UnionID != value))
                {
                    this.OnUnionIDChanging(value);
                    this.SendPropertyChanging();
                    this._UnionID = value;
                    this.SendPropertyChanged("UnionID");
                    this.OnUnionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OpenID", DbType = "VarChar(50)")]
        public string OpenID
        {
            get
            {
                return this._OpenID;
            }
            set
            {
                if ((this._OpenID != value))
                {
                    this.OnOpenIDChanging(value);
                    this.SendPropertyChanging();
                    this._OpenID = value;
                    this.SendPropertyChanged("OpenID");
                    this.OnOpenIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nickname", DbType = "NVarChar(10)")]
        public string Nickname
        {
            get
            {
                return this._Nickname;
            }
            set
            {
                if ((this._Nickname != value))
                {
                    this.OnNicknameChanging(value);
                    this.SendPropertyChanging();
                    this._Nickname = value;
                    this.SendPropertyChanged("Nickname");
                    this.OnNicknameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sex", DbType = "Int")]
        public System.Nullable<int> Sex
        {
            get
            {
                return this._Sex;
            }
            set
            {
                if ((this._Sex != value))
                {
                    this.OnSexChanging(value);
                    this.SendPropertyChanging();
                    this._Sex = value;
                    this.SendPropertyChanged("Sex");
                    this.OnSexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Province", DbType = "NVarChar(50)")]
        public string Province
        {
            get
            {
                return this._Province;
            }
            set
            {
                if ((this._Province != value))
                {
                    this.OnProvinceChanging(value);
                    this.SendPropertyChanging();
                    this._Province = value;
                    this.SendPropertyChanged("Province");
                    this.OnProvinceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(50)")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Country", DbType = "NVarChar(50)")]
        public string Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this.OnCountryChanging(value);
                    this.SendPropertyChanging();
                    this._Country = value;
                    this.SendPropertyChanged("Country");
                    this.OnCountryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HeadImgurl", DbType = "VarChar(200)")]
        public string HeadImgurl
        {
            get
            {
                return this._HeadImgurl;
            }
            set
            {
                if ((this._HeadImgurl != value))
                {
                    this.OnHeadImgurlChanging(value);
                    this.SendPropertyChanging();
                    this._HeadImgurl = value;
                    this.SendPropertyChanged("HeadImgurl");
                    this.OnHeadImgurlChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Temp_DyjAttend")]
    public partial class Temp_DyjAttend : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private string _DyjID;

        private System.Nullable<System.DateTime> _Date;

        private System.Nullable<System.DateTime> _StartTime;

        private System.Nullable<System.DateTime> _EndTime;

        private string _BeginIP;

        private string _EndIP;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnDyjIDChanging(string value);
        partial void OnDyjIDChanged();
        partial void OnDateChanging(System.Nullable<System.DateTime> value);
        partial void OnDateChanged();
        partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnStartTimeChanged();
        partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnEndTimeChanged();
        partial void OnBeginIPChanging(string value);
        partial void OnBeginIPChanged();
        partial void OnEndIPChanging(string value);
        partial void OnEndIPChanged();
        #endregion

        public Temp_DyjAttend()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjID", DbType = "VarChar(50)")]
        public string DyjID
        {
            get
            {
                return this._DyjID;
            }
            set
            {
                if ((this._DyjID != value))
                {
                    this.OnDyjIDChanging(value);
                    this.SendPropertyChanging();
                    this._DyjID = value;
                    this.SendPropertyChanged("DyjID");
                    this.OnDyjIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date")]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if ((this._StartTime != value))
                {
                    this.OnStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartTime = value;
                    this.SendPropertyChanged("StartTime");
                    this.OnStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if ((this._EndTime != value))
                {
                    this.OnEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndTime = value;
                    this.SendPropertyChanged("EndTime");
                    this.OnEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BeginIP", DbType = "VarChar(50)")]
        public string BeginIP
        {
            get
            {
                return this._BeginIP;
            }
            set
            {
                if ((this._BeginIP != value))
                {
                    this.OnBeginIPChanging(value);
                    this.SendPropertyChanging();
                    this._BeginIP = value;
                    this.SendPropertyChanged("BeginIP");
                    this.OnBeginIPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndIP", DbType = "VarChar(50)")]
        public string EndIP
        {
            get
            {
                return this._EndIP;
            }
            set
            {
                if ((this._EndIP != value))
                {
                    this.OnEndIPChanging(value);
                    this.SendPropertyChanging();
                    this._EndIP = value;
                    this.SendPropertyChanged("EndIP");
                    this.OnEndIPChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Tokens")]
    public partial class Tokens : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private int _Type;

        private string _OutID;

        private string _Token;

        private System.DateTime _CreateDate;

        private EntityRef<Admins> _Admins;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnOutIDChanging(string value);
        partial void OnOutIDChanged();
        partial void OnTokenChanging(string value);
        partial void OnTokenChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        #endregion

        public Tokens()
        {
            this._Admins = default(EntityRef<Admins>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OutID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string OutID
        {
            get
            {
                return this._OutID;
            }
            set
            {
                if ((this._OutID != value))
                {
                    if (this._Admins.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnOutIDChanging(value);
                    this.SendPropertyChanging();
                    this._OutID = value;
                    this.SendPropertyChanged("OutID");
                    this.OnOutIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Token", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Token
        {
            get
            {
                return this._Token;
            }
            set
            {
                if ((this._Token != value))
                {
                    this.OnTokenChanging(value);
                    this.SendPropertyChanging();
                    this._Token = value;
                    this.SendPropertyChanged("Token");
                    this.OnTokenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Admins_Tokens", Storage = "_Admins", ThisKey = "OutID", OtherKey = "ID", IsForeignKey = true)]
        public Admins Admins
        {
            get
            {
                return this._Admins.Entity;
            }
            set
            {
                Admins previousValue = this._Admins.Entity;
                if (((previousValue != value)
                            || (this._Admins.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Admins.Entity = null;
                        previousValue.Tokens.Remove(this);
                    }
                    this._Admins.Entity = value;
                    if ((value != null))
                    {
                        value.Tokens.Add(this);
                        this._OutID = value.ID;
                    }
                    else
                    {
                        this._OutID = default(string);
                    }
                    this.SendPropertyChanged("Admins");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.VoteFlows")]
    public partial class VoteFlows : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private int _Type;

        private string _CreatorID;

        private string _ModifyID;

        private System.DateTime _CreateDate;

        private System.DateTime _ModifyDate;

        private EntitySet<VoteSteps> _VoteSteps;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnCreatorIDChanging(string value);
        partial void OnCreatorIDChanged();
        partial void OnModifyIDChanging(string value);
        partial void OnModifyIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnModifyDateChanging(System.DateTime value);
        partial void OnModifyDateChanged();
        #endregion

        public VoteFlows()
        {
            this._VoteSteps = new EntitySet<VoteSteps>(new Action<VoteSteps>(this.attach_VoteSteps), new Action<VoteSteps>(this.detach_VoteSteps));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this.OnCreatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._CreatorID = value;
                    this.SendPropertyChanged("CreatorID");
                    this.OnCreatorIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyID", DbType = "VarChar(50)")]
        public string ModifyID
        {
            get
            {
                return this._ModifyID;
            }
            set
            {
                if ((this._ModifyID != value))
                {
                    this.OnModifyIDChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyID = value;
                    this.SendPropertyChanged("ModifyID");
                    this.OnModifyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifyDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ModifyDate
        {
            get
            {
                return this._ModifyDate;
            }
            set
            {
                if ((this._ModifyDate != value))
                {
                    this.OnModifyDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifyDate = value;
                    this.SendPropertyChanged("ModifyDate");
                    this.OnModifyDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "VoteFlows_VoteSteps", Storage = "_VoteSteps", ThisKey = "ID", OtherKey = "VoteFlowID")]
        public EntitySet<VoteSteps> VoteSteps
        {
            get
            {
                return this._VoteSteps;
            }
            set
            {
                this._VoteSteps.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_VoteSteps(VoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.VoteFlows = this;
        }

        private void detach_VoteSteps(VoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.VoteFlows = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.VoteSteps")]
    public partial class VoteSteps : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _Name;

        private string _VoteFlowID;

        private System.DateTime _CreateDate;

        private int _OrderIndex;

        private string _AdminID;

        private string _PositionID;

        private string _Uri;

        private EntitySet<ApplyVoteSteps> _ApplyVoteSteps;

        private EntityRef<VoteFlows> _VoteFlows;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnVoteFlowIDChanging(string value);
        partial void OnVoteFlowIDChanged();
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
        partial void OnOrderIndexChanging(int value);
        partial void OnOrderIndexChanged();
        partial void OnAdminIDChanging(string value);
        partial void OnAdminIDChanged();
        partial void OnPositionIDChanging(string value);
        partial void OnPositionIDChanged();
        partial void OnUriChanging(string value);
        partial void OnUriChanged();
        #endregion

        public VoteSteps()
        {
            this._ApplyVoteSteps = new EntitySet<ApplyVoteSteps>(new Action<ApplyVoteSteps>(this.attach_ApplyVoteSteps), new Action<ApplyVoteSteps>(this.detach_ApplyVoteSteps));
            this._VoteFlows = default(EntityRef<VoteFlows>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteFlowID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string VoteFlowID
        {
            get
            {
                return this._VoteFlowID;
            }
            set
            {
                if ((this._VoteFlowID != value))
                {
                    if (this._VoteFlows.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnVoteFlowIDChanging(value);
                    this.SendPropertyChanging();
                    this._VoteFlowID = value;
                    this.SendPropertyChanged("VoteFlowID");
                    this.OnVoteFlowIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderIndex", DbType = "Int NOT NULL")]
        public int OrderIndex
        {
            get
            {
                return this._OrderIndex;
            }
            set
            {
                if ((this._OrderIndex != value))
                {
                    this.OnOrderIndexChanging(value);
                    this.SendPropertyChanging();
                    this._OrderIndex = value;
                    this.SendPropertyChanged("OrderIndex");
                    this.OnOrderIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50)")]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this.OnAdminIDChanging(value);
                    this.SendPropertyChanging();
                    this._AdminID = value;
                    this.SendPropertyChanged("AdminID");
                    this.OnAdminIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PositionID", DbType = "VarChar(50)")]
        public string PositionID
        {
            get
            {
                return this._PositionID;
            }
            set
            {
                if ((this._PositionID != value))
                {
                    this.OnPositionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PositionID = value;
                    this.SendPropertyChanged("PositionID");
                    this.OnPositionIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Uri", DbType = "VarChar(2000)")]
        public string Uri
        {
            get
            {
                return this._Uri;
            }
            set
            {
                if ((this._Uri != value))
                {
                    this.OnUriChanging(value);
                    this.SendPropertyChanging();
                    this._Uri = value;
                    this.SendPropertyChanged("Uri");
                    this.OnUriChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "VoteSteps_ApplyVoteSteps", Storage = "_ApplyVoteSteps", ThisKey = "ID", OtherKey = "VoteStepID")]
        public EntitySet<ApplyVoteSteps> ApplyVoteSteps
        {
            get
            {
                return this._ApplyVoteSteps;
            }
            set
            {
                this._ApplyVoteSteps.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "VoteFlows_VoteSteps", Storage = "_VoteFlows", ThisKey = "VoteFlowID", OtherKey = "ID", IsForeignKey = true)]
        public VoteFlows VoteFlows
        {
            get
            {
                return this._VoteFlows.Entity;
            }
            set
            {
                VoteFlows previousValue = this._VoteFlows.Entity;
                if (((previousValue != value)
                            || (this._VoteFlows.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._VoteFlows.Entity = null;
                        previousValue.VoteSteps.Remove(this);
                    }
                    this._VoteFlows.Entity = value;
                    if ((value != null))
                    {
                        value.VoteSteps.Add(this);
                        this._VoteFlowID = value.ID;
                    }
                    else
                    {
                        this._VoteFlowID = default(string);
                    }
                    this.SendPropertyChanged("VoteFlows");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ApplyVoteSteps(ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.VoteSteps = this;
        }

        private void detach_ApplyVoteSteps(ApplyVoteSteps entity)
        {
            this.SendPropertyChanging();
            entity.VoteSteps = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AdminAdvantagesTopView")]
    public partial class AdminAdvantagesTopView
    {

        private string _AdminID;

        private string _Manufacturers;

        private string _PartNumbers;

        public AdminAdvantagesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this._AdminID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Manufacturers", DbType = "NVarChar(MAX)")]
        public string Manufacturers
        {
            get
            {
                return this._Manufacturers;
            }
            set
            {
                if ((this._Manufacturers != value))
                {
                    this._Manufacturers = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PartNumbers", DbType = "NVarChar(MAX)")]
        public string PartNumbers
        {
            get
            {
                return this._PartNumbers;
            }
            set
            {
                if ((this._PartNumbers != value))
                {
                    this._PartNumbers = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.WorkCitiesTopView")]
    public partial class WorkCitiesTopView
    {

        private string _ID;

        private string _Name;

        private int _Status;

        public WorkCitiesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AdminsBussinessTopView")]
    public partial class AdminsBussinessTopView
    {

        private string _ID;

        private string _StaffID;

        private string _UserName;

        private string _RealName;

        private string _SelCode;

        private System.Nullable<System.DateTime> _LastLoginDate;

        private int _Status;

        private string _Name;

        private string _RoleID;

        private string _RoleName;

        private string _bussiness;

        public AdminsBussinessTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this._UserName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RealName
        {
            get
            {
                return this._RealName;
            }
            set
            {
                if ((this._RealName != value))
                {
                    this._RealName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this._SelCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleName", DbType = "NVarChar(150)")]
        public string RoleName
        {
            get
            {
                return this._RoleName;
            }
            set
            {
                if ((this._RoleName != value))
                {
                    this._RoleName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bussiness", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string bussiness
        {
            get
            {
                return this._bussiness;
            }
            set
            {
                if ((this._bussiness != value))
                {
                    this._bussiness = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AdminsInfoTopView")]
    public partial class AdminsInfoTopView
    {

        private string _ID;

        private string _StaffID;

        private string _UserName;

        private string _RealName;

        private string _SelCode;

        private string _RoleID;

        private System.DateTime _CreateDate;

        private System.Nullable<System.DateTime> _UpdateDate;

        private int _Status;

        private System.Nullable<System.DateTime> _LastLoginDate;

        private string _IDCard;

        private string _Image;

        private string _NativePlace;

        private string _HomeAddress;

        private string _PassAddress;

        private string _Volk;

        private string _PoliticalOutlook;

        private System.Nullable<double> _Height;

        private System.Nullable<double> _Weight;

        private string _Blood;

        private string _Education;

        private string _GraduatInstitutions;

        private string _Major;

        private System.Nullable<bool> _IsMarry;

        private string _Mobile;

        private string _Email;

        public AdminsInfoTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this._UserName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RealName
        {
            get
            {
                return this._RealName;
            }
            set
            {
                if ((this._RealName != value))
                {
                    this._RealName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this._SelCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this._CreateDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this._UpdateDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDCard", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string IDCard
        {
            get
            {
                return this._IDCard;
            }
            set
            {
                if ((this._IDCard != value))
                {
                    this._IDCard = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Image", DbType = "VarChar(200)")]
        public string Image
        {
            get
            {
                return this._Image;
            }
            set
            {
                if ((this._Image != value))
                {
                    this._Image = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NativePlace", DbType = "NVarChar(150)")]
        public string NativePlace
        {
            get
            {
                return this._NativePlace;
            }
            set
            {
                if ((this._NativePlace != value))
                {
                    this._NativePlace = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HomeAddress", DbType = "NVarChar(150)")]
        public string HomeAddress
        {
            get
            {
                return this._HomeAddress;
            }
            set
            {
                if ((this._HomeAddress != value))
                {
                    this._HomeAddress = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassAddress", DbType = "NVarChar(150)")]
        public string PassAddress
        {
            get
            {
                return this._PassAddress;
            }
            set
            {
                if ((this._PassAddress != value))
                {
                    this._PassAddress = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Volk", DbType = "VarChar(50)")]
        public string Volk
        {
            get
            {
                return this._Volk;
            }
            set
            {
                if ((this._Volk != value))
                {
                    this._Volk = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoliticalOutlook", DbType = "VarChar(50)")]
        public string PoliticalOutlook
        {
            get
            {
                return this._PoliticalOutlook;
            }
            set
            {
                if ((this._PoliticalOutlook != value))
                {
                    this._PoliticalOutlook = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Height", DbType = "Float")]
        public System.Nullable<double> Height
        {
            get
            {
                return this._Height;
            }
            set
            {
                if ((this._Height != value))
                {
                    this._Height = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Weight", DbType = "Float")]
        public System.Nullable<double> Weight
        {
            get
            {
                return this._Weight;
            }
            set
            {
                if ((this._Weight != value))
                {
                    this._Weight = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Blood", DbType = "VarChar(50)")]
        public string Blood
        {
            get
            {
                return this._Blood;
            }
            set
            {
                if ((this._Blood != value))
                {
                    this._Blood = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Education", DbType = "VarChar(50)")]
        public string Education
        {
            get
            {
                return this._Education;
            }
            set
            {
                if ((this._Education != value))
                {
                    this._Education = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GraduatInstitutions", DbType = "VarChar(50)")]
        public string GraduatInstitutions
        {
            get
            {
                return this._GraduatInstitutions;
            }
            set
            {
                if ((this._GraduatInstitutions != value))
                {
                    this._GraduatInstitutions = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Major", DbType = "VarChar(50)")]
        public string Major
        {
            get
            {
                return this._Major;
            }
            set
            {
                if ((this._Major != value))
                {
                    this._Major = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsMarry", DbType = "Bit")]
        public System.Nullable<bool> IsMarry
        {
            get
            {
                return this._IsMarry;
            }
            set
            {
                if ((this._IsMarry != value))
                {
                    this._IsMarry = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(50)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this._Mobile = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(50)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this._Email = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AdminsTopView")]
    public partial class AdminsTopView
    {

        private string _ID;

        private string _StaffID;

        private string _UserName;

        private string _RealName;

        private string _SelCode;

        private int _Status;

        private System.Nullable<System.DateTime> _LastLoginDate;

        private string _RoleID;

        private string _RoleName;

        private System.Nullable<int> _RoleStatus;

        private string _OriginID;

        public AdminsTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this._UserName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RealName
        {
            get
            {
                return this._RealName;
            }
            set
            {
                if ((this._RealName != value))
                {
                    this._RealName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this._SelCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleName", DbType = "NVarChar(150)")]
        public string RoleName
        {
            get
            {
                return this._RoleName;
            }
            set
            {
                if ((this._RoleName != value))
                {
                    this._RoleName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleStatus", DbType = "Int")]
        public System.Nullable<int> RoleStatus
        {
            get
            {
                return this._RoleStatus;
            }
            set
            {
                if ((this._RoleStatus != value))
                {
                    this._RoleStatus = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginID", DbType = "VarChar(50)")]
        public string OriginID
        {
            get
            {
                return this._OriginID;
            }
            set
            {
                if ((this._OriginID != value))
                {
                    this._OriginID = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AdminsWmsView")]
    public partial class AdminsWmsView
    {

        private string _ID;

        private string _StaffID;

        private string _UserName;

        private string _RealName;

        private string _SelCode;

        private System.Nullable<System.DateTime> _LastLoginDate;

        private int _Status;

        private string _Name;

        private string _RoleID;

        private string _RoleName;

        private string _bussiness;

        public AdminsWmsView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50)")]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this._UserName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RealName
        {
            get
            {
                return this._RealName;
            }
            set
            {
                if ((this._RealName != value))
                {
                    this._RealName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SelCode
        {
            get
            {
                return this._SelCode;
            }
            set
            {
                if ((this._SelCode != value))
                {
                    this._SelCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleID", DbType = "VarChar(50)")]
        public string RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoleName", DbType = "NVarChar(150)")]
        public string RoleName
        {
            get
            {
                return this._RoleName;
            }
            set
            {
                if ((this._RoleName != value))
                {
                    this._RoleName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bussiness", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string bussiness
        {
            get
            {
                return this._bussiness;
            }
            set
            {
                if ((this._bussiness != value))
                {
                    this._bussiness = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ApprovalsStatisticsView")]
    public partial class ApprovalsStatisticsView
    {

        private string _ApplicationID;

        private string _VoteFlowID;

        private string _Title;

        private string _Context;

        private string _ApplicantID;

        private string _CreatorID;

        private System.DateTime _CreateDate;

        private int _Status;

        private System.Nullable<int> _Type;

        private string _VoteFlowName;

        private string _VoteFlowsID;

        private string _ApplyVoteStepsID;

        private string _VoteStepID;

        private string _ApproveID;

        private string _VoteStepName;

        private string _PositionID;

        private string _Uri;

        public ApprovalsStatisticsView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this._ApplicationID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteFlowID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string VoteFlowID
        {
            get
            {
                return this._VoteFlowID;
            }
            set
            {
                if ((this._VoteFlowID != value))
                {
                    this._VoteFlowID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this._Title = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Context", DbType = "NVarChar(MAX) NOT NULL", CanBeNull = false)]
        public string Context
        {
            get
            {
                return this._Context;
            }
            set
            {
                if ((this._Context != value))
                {
                    this._Context = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicantID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicantID
        {
            get
            {
                return this._ApplicantID;
            }
            set
            {
                if ((this._ApplicantID != value))
                {
                    this._ApplicantID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatorID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatorID
        {
            get
            {
                return this._CreatorID;
            }
            set
            {
                if ((this._CreatorID != value))
                {
                    this._CreatorID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this._CreateDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int")]
        public System.Nullable<int> Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this._Type = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteFlowName", DbType = "VarChar(50)")]
        public string VoteFlowName
        {
            get
            {
                return this._VoteFlowName;
            }
            set
            {
                if ((this._VoteFlowName != value))
                {
                    this._VoteFlowName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteFlowsID", DbType = "VarChar(50)")]
        public string VoteFlowsID
        {
            get
            {
                return this._VoteFlowsID;
            }
            set
            {
                if ((this._VoteFlowsID != value))
                {
                    this._VoteFlowsID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplyVoteStepsID", DbType = "VarChar(50)")]
        public string ApplyVoteStepsID
        {
            get
            {
                return this._ApplyVoteStepsID;
            }
            set
            {
                if ((this._ApplyVoteStepsID != value))
                {
                    this._ApplyVoteStepsID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteStepID", DbType = "VarChar(50)")]
        public string VoteStepID
        {
            get
            {
                return this._VoteStepID;
            }
            set
            {
                if ((this._VoteStepID != value))
                {
                    this._VoteStepID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApproveID", DbType = "VarChar(50)")]
        public string ApproveID
        {
            get
            {
                return this._ApproveID;
            }
            set
            {
                if ((this._ApproveID != value))
                {
                    this._ApproveID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoteStepName", DbType = "VarChar(50)")]
        public string VoteStepName
        {
            get
            {
                return this._VoteStepName;
            }
            set
            {
                if ((this._VoteStepName != value))
                {
                    this._VoteStepName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PositionID", DbType = "VarChar(50)")]
        public string PositionID
        {
            get
            {
                return this._PositionID;
            }
            set
            {
                if ((this._PositionID != value))
                {
                    this._PositionID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Uri", DbType = "VarChar(2000)")]
        public string Uri
        {
            get
            {
                return this._Uri;
            }
            set
            {
                if ((this._Uri != value))
                {
                    this._Uri = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BomQuotesTopView")]
    public partial class BomQuotesTopView
    {

        private string _PartNumber;

        private string _Manufacturer;

        private string _PackageCase;

        private string _Supplier;

        private string _Packaging;

        private string _Sign;

        private System.Nullable<int> _Quantity;

        private int _Moq;

        private int _Currency;

        private decimal _UnitPrice;

        public BomQuotesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PartNumber", DbType = "VarChar(200) NOT NULL", CanBeNull = false)]
        public string PartNumber
        {
            get
            {
                return this._PartNumber;
            }
            set
            {
                if ((this._PartNumber != value))
                {
                    this._PartNumber = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Manufacturer", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string Manufacturer
        {
            get
            {
                return this._Manufacturer;
            }
            set
            {
                if ((this._Manufacturer != value))
                {
                    this._Manufacturer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PackageCase", DbType = "VarChar(50)")]
        public string PackageCase
        {
            get
            {
                return this._PackageCase;
            }
            set
            {
                if ((this._PackageCase != value))
                {
                    this._PackageCase = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Supplier", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Supplier
        {
            get
            {
                return this._Supplier;
            }
            set
            {
                if ((this._Supplier != value))
                {
                    this._Supplier = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Packaging", DbType = "VarChar(50)")]
        public string Packaging
        {
            get
            {
                return this._Packaging;
            }
            set
            {
                if ((this._Packaging != value))
                {
                    this._Packaging = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sign", DbType = "VarChar(50)")]
        public string Sign
        {
            get
            {
                return this._Sign;
            }
            set
            {
                if ((this._Sign != value))
                {
                    this._Sign = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Quantity", DbType = "Int")]
        public System.Nullable<int> Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                if ((this._Quantity != value))
                {
                    this._Quantity = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Moq", DbType = "Int NOT NULL")]
        public int Moq
        {
            get
            {
                return this._Moq;
            }
            set
            {
                if ((this._Moq != value))
                {
                    this._Moq = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Currency", DbType = "Int NOT NULL")]
        public int Currency
        {
            get
            {
                return this._Currency;
            }
            set
            {
                if ((this._Currency != value))
                {
                    this._Currency = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UnitPrice", DbType = "Decimal(18,7) NOT NULL")]
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if ((this._UnitPrice != value))
                {
                    this._UnitPrice = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CompaniesTopView")]
    public partial class CompaniesTopView
    {

        private string _ID;

        private int _Type;

        private int _Range;

        private int _Status;

        private string _Name;

        private string _District;

        public CompaniesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this._Type = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Range", DbType = "Int NOT NULL")]
        public int Range
        {
            get
            {
                return this._Range;
            }
            set
            {
                if ((this._Range != value))
                {
                    this._Range = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_District", DbType = "VarChar(50)")]
        public string District
        {
            get
            {
                return this._District;
            }
            set
            {
                if ((this._District != value))
                {
                    this._District = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LogsAttendTopView")]
    public partial class LogsAttendTopView
    {

        private System.DateTime _Date;

        private string _StaffID;

        private string _Name;

        private string _Am;

        private string _Pm;

        public LogsAttendTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date NOT NULL")]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    this._Date = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Am", DbType = "VarChar(100)")]
        public string Am
        {
            get
            {
                return this._Am;
            }
            set
            {
                if ((this._Am != value))
                {
                    this._Am = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pm", DbType = "VarChar(100)")]
        public string Pm
        {
            get
            {
                return this._Pm;
            }
            set
            {
                if ((this._Pm != value))
                {
                    this._Pm = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsRoleComposeTopView")]
    public partial class MapsRoleComposeTopView
    {

        private string _ID;

        private string _ChildID;

        public MapsRoleComposeTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChildID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ChildID
        {
            get
            {
                return this._ChildID;
            }
            set
            {
                if ((this._ChildID != value))
                {
                    this._ChildID = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MapsWareHouseView")]
    public partial class MapsWareHouseView
    {

        private string _AdminID;

        private string _WareHouseID;

        public MapsWareHouseView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this._AdminID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WareHouseID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string WareHouseID
        {
            get
            {
                return this._WareHouseID;
            }
            set
            {
                if ((this._WareHouseID != value))
                {
                    this._WareHouseID = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PastsAttendTopView")]
    public partial class PastsAttendTopView
    {

        private System.DateTime _Date;

        private string _ID;

        private string _AmOrPm;

        private string _Name;

        private string _StaffID;

        private string _SchedulingID;

        private System.Nullable<System.DateTime> _StartTime;

        private System.Nullable<System.DateTime> _EndTime;

        private int _InFact;

        private System.Nullable<bool> _IsLater;

        private System.Nullable<bool> _IsEarly;

        private System.Nullable<bool> _OnWorkRemedy;

        private System.Nullable<bool> _OffWorkRemedy;

        public PastsAttendTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "Date NOT NULL")]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    this._Date = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmOrPm", DbType = "VarChar(2) NOT NULL", CanBeNull = false)]
        public string AmOrPm
        {
            get
            {
                return this._AmOrPm;
            }
            set
            {
                if ((this._AmOrPm != value))
                {
                    this._AmOrPm = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this._StaffID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SchedulingID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string SchedulingID
        {
            get
            {
                return this._SchedulingID;
            }
            set
            {
                if ((this._SchedulingID != value))
                {
                    this._SchedulingID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if ((this._StartTime != value))
                {
                    this._StartTime = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if ((this._EndTime != value))
                {
                    this._EndTime = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InFact", DbType = "Int NOT NULL")]
        public int InFact
        {
            get
            {
                return this._InFact;
            }
            set
            {
                if ((this._InFact != value))
                {
                    this._InFact = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsLater", DbType = "Bit")]
        public System.Nullable<bool> IsLater
        {
            get
            {
                return this._IsLater;
            }
            set
            {
                if ((this._IsLater != value))
                {
                    this._IsLater = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsEarly", DbType = "Bit")]
        public System.Nullable<bool> IsEarly
        {
            get
            {
                return this._IsEarly;
            }
            set
            {
                if ((this._IsEarly != value))
                {
                    this._IsEarly = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OnWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OnWorkRemedy
        {
            get
            {
                return this._OnWorkRemedy;
            }
            set
            {
                if ((this._OnWorkRemedy != value))
                {
                    this._OnWorkRemedy = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OffWorkRemedy", DbType = "Bit")]
        public System.Nullable<bool> OffWorkRemedy
        {
            get
            {
                return this._OffWorkRemedy;
            }
            set
            {
                if ((this._OffWorkRemedy != value))
                {
                    this._OffWorkRemedy = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.StaffsTopView")]
    public partial class StaffsTopView
    {

        private string _ID;

        private string _Name;

        private string _Code;

        private string _DyjCompanyCode;

        private string _DyjDepartmentCode;

        private string _DyjCode;

        private string _AdminID;

        private string _WorkCity;

        public StaffsTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "VarChar(50)")]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this._Code = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjCompanyCode", DbType = "VarChar(50)")]
        public string DyjCompanyCode
        {
            get
            {
                return this._DyjCompanyCode;
            }
            set
            {
                if ((this._DyjCompanyCode != value))
                {
                    this._DyjCompanyCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjDepartmentCode", DbType = "VarChar(50)")]
        public string DyjDepartmentCode
        {
            get
            {
                return this._DyjDepartmentCode;
            }
            set
            {
                if ((this._DyjDepartmentCode != value))
                {
                    this._DyjDepartmentCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjCode", DbType = "VarChar(50)")]
        public string DyjCode
        {
            get
            {
                return this._DyjCode;
            }
            set
            {
                if ((this._DyjCode != value))
                {
                    this._DyjCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AdminID
        {
            get
            {
                return this._AdminID;
            }
            set
            {
                if ((this._AdminID != value))
                {
                    this._AdminID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkCity", DbType = "VarChar(50)")]
        public string WorkCity
        {
            get
            {
                return this._WorkCity;
            }
            set
            {
                if ((this._WorkCity != value))
                {
                    this._WorkCity = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SubsWarehousesTopView")]
    public partial class SubsWarehousesTopView
    {

        private string _ID;

        private string _Title;

        private string _EnterpriseID;

        private string _Name;

        private string _WsCode;

        private string _Address;

        private string _Postzip;

        private int _Grade;

        private string _DyjCode;

        private int _District;

        private string _Corporation;

        private string _Uscc;

        private string _RegAddress;

        private int _Status;

        private int _ConsinStatus;

        public SubsWarehousesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(50)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this._Title = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this._EnterpriseID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WsCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string WsCode
        {
            get
            {
                return this._WsCode;
            }
            set
            {
                if ((this._WsCode != value))
                {
                    this._WsCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Postzip", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Postzip
        {
            get
            {
                return this._Postzip;
            }
            set
            {
                if ((this._Postzip != value))
                {
                    this._Postzip = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Grade", DbType = "Int NOT NULL")]
        public int Grade
        {
            get
            {
                return this._Grade;
            }
            set
            {
                if ((this._Grade != value))
                {
                    this._Grade = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DyjCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string DyjCode
        {
            get
            {
                return this._DyjCode;
            }
            set
            {
                if ((this._DyjCode != value))
                {
                    this._DyjCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_District", DbType = "Int NOT NULL")]
        public int District
        {
            get
            {
                return this._District;
            }
            set
            {
                if ((this._District != value))
                {
                    this._District = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Corporation", DbType = "NVarChar(50)")]
        public string Corporation
        {
            get
            {
                return this._Corporation;
            }
            set
            {
                if ((this._Corporation != value))
                {
                    this._Corporation = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Uscc", DbType = "VarChar(50)")]
        public string Uscc
        {
            get
            {
                return this._Uscc;
            }
            set
            {
                if ((this._Uscc != value))
                {
                    this._Uscc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegAddress", DbType = "NVarChar(150)")]
        public string RegAddress
        {
            get
            {
                return this._RegAddress;
            }
            set
            {
                if ((this._RegAddress != value))
                {
                    this._RegAddress = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsinStatus", DbType = "Int NOT NULL")]
        public int ConsinStatus
        {
            get
            {
                return this._ConsinStatus;
            }
            set
            {
                if ((this._ConsinStatus != value))
                {
                    this._ConsinStatus = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.WarehousePlatesTopView")]
    public partial class WarehousePlatesTopView
    {

        private string _ID;

        private string _Title;

        private string _Address;

        private string _Code;

        private string _Postzip;

        private int _Status;

        private string _EnterpriseID;

        private string _WarehouseName;

        private string _WarehouseAddress;

        private string _WsCode;

        private int _WarehouseStatus;

        public WarehousePlatesTopView()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(50)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this._Title = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this._Code = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Postzip", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Postzip
        {
            get
            {
                return this._Postzip;
            }
            set
            {
                if ((this._Postzip != value))
                {
                    this._Postzip = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this._Status = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EnterpriseID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string EnterpriseID
        {
            get
            {
                return this._EnterpriseID;
            }
            set
            {
                if ((this._EnterpriseID != value))
                {
                    this._EnterpriseID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string WarehouseName
        {
            get
            {
                return this._WarehouseName;
            }
            set
            {
                if ((this._WarehouseName != value))
                {
                    this._WarehouseName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseAddress", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string WarehouseAddress
        {
            get
            {
                return this._WarehouseAddress;
            }
            set
            {
                if ((this._WarehouseAddress != value))
                {
                    this._WarehouseAddress = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WsCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string WsCode
        {
            get
            {
                return this._WsCode;
            }
            set
            {
                if ((this._WsCode != value))
                {
                    this._WsCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseStatus", DbType = "Int NOT NULL")]
        public int WarehouseStatus
        {
            get
            {
                return this._WarehouseStatus;
            }
            set
            {
                if ((this._WarehouseStatus != value))
                {
                    this._WarehouseStatus = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Vacations")]
    public partial class Vacations : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _StaffID;

        private int _Type;

        private System.Nullable<System.DateTime> _StartTime;

        private System.Nullable<System.DateTime> _EndTime;

        private System.Nullable<decimal> _Total;

        private decimal _Lefts;

        private System.Nullable<System.DateTime> _CreateDate;

        private System.Nullable<System.DateTime> _UpdateDate;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnStaffIDChanging(string value);
        partial void OnStaffIDChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnStartTimeChanged();
        partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnEndTimeChanged();
        partial void OnTotalChanging(System.Nullable<decimal> value);
        partial void OnTotalChanged();
        partial void OnLeftsChanging(decimal value);
        partial void OnLeftsChanged();
        partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
        partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateChanged();
        #endregion

        public Vacations()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaffID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string StaffID
        {
            get
            {
                return this._StaffID;
            }
            set
            {
                if ((this._StaffID != value))
                {
                    this.OnStaffIDChanging(value);
                    this.SendPropertyChanging();
                    this._StaffID = value;
                    this.SendPropertyChanged("StaffID");
                    this.OnStaffIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                if ((this._StartTime != value))
                {
                    this.OnStartTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartTime = value;
                    this.SendPropertyChanged("StartTime");
                    this.OnStartTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                if ((this._EndTime != value))
                {
                    this.OnEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndTime = value;
                    this.SendPropertyChanged("EndTime");
                    this.OnEndTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Total", DbType = "Decimal(18,7)")]
        public System.Nullable<decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging(value);
                    this.SendPropertyChanging();
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lefts", DbType = "Decimal(18,7) NOT NULL")]
        public decimal Lefts
        {
            get
            {
                return this._Lefts;
            }
            set
            {
                if ((this._Lefts != value))
                {
                    this.OnLeftsChanging(value);
                    this.SendPropertyChanging();
                    this._Lefts = value;
                    this.SendPropertyChanged("Lefts");
                    this.OnLeftsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                if ((this._UpdateDate != value))
                {
                    this.OnUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDate = value;
                    this.SendPropertyChanged("UpdateDate");
                    this.OnUpdateDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Menus")]
    public partial class Menus : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ID;

        private string _FatherID;

        private string _Name;

        private string _Company;

        private string _RightUrl;

        private string _IconUrl;

        private string _FirstUrl;

        private string _LogoUrl;

        private string _HelpUrl;

        private System.Nullable<int> _OrderIndex;

        private int _Status;

        private System.Nullable<bool> _IsLocal;

        private EntitySet<MapsRole> _MapsRole;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(string value);
        partial void OnIDChanged();
        partial void OnFatherIDChanging(string value);
        partial void OnFatherIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        partial void OnRightUrlChanging(string value);
        partial void OnRightUrlChanged();
        partial void OnIconUrlChanging(string value);
        partial void OnIconUrlChanged();
        partial void OnFirstUrlChanging(string value);
        partial void OnFirstUrlChanged();
        partial void OnLogoUrlChanging(string value);
        partial void OnLogoUrlChanged();
        partial void OnHelpUrlChanging(string value);
        partial void OnHelpUrlChanged();
        partial void OnOrderIndexChanging(System.Nullable<int> value);
        partial void OnOrderIndexChanged();
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
        partial void OnIsLocalChanging(System.Nullable<bool> value);
        partial void OnIsLocalChanged();
        #endregion

        public Menus()
        {
            this._MapsRole = new EntitySet<MapsRole>(new Action<MapsRole>(this.attach_MapsRole), new Action<MapsRole>(this.detach_MapsRole));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FatherID", DbType = "VarChar(50)")]
        public string FatherID
        {
            get
            {
                return this._FatherID;
            }
            set
            {
                if ((this._FatherID != value))
                {
                    this.OnFatherIDChanging(value);
                    this.SendPropertyChanging();
                    this._FatherID = value;
                    this.SendPropertyChanged("FatherID");
                    this.OnFatherIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company", DbType = "NVarChar(150)")]
        public string Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                if ((this._Company != value))
                {
                    this.OnCompanyChanging(value);
                    this.SendPropertyChanging();
                    this._Company = value;
                    this.SendPropertyChanged("Company");
                    this.OnCompanyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RightUrl", DbType = "VarChar(200)")]
        public string RightUrl
        {
            get
            {
                return this._RightUrl;
            }
            set
            {
                if ((this._RightUrl != value))
                {
                    this.OnRightUrlChanging(value);
                    this.SendPropertyChanging();
                    this._RightUrl = value;
                    this.SendPropertyChanged("RightUrl");
                    this.OnRightUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IconUrl", DbType = "VarChar(200)")]
        public string IconUrl
        {
            get
            {
                return this._IconUrl;
            }
            set
            {
                if ((this._IconUrl != value))
                {
                    this.OnIconUrlChanging(value);
                    this.SendPropertyChanging();
                    this._IconUrl = value;
                    this.SendPropertyChanged("IconUrl");
                    this.OnIconUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstUrl", DbType = "VarChar(200)")]
        public string FirstUrl
        {
            get
            {
                return this._FirstUrl;
            }
            set
            {
                if ((this._FirstUrl != value))
                {
                    this.OnFirstUrlChanging(value);
                    this.SendPropertyChanging();
                    this._FirstUrl = value;
                    this.SendPropertyChanged("FirstUrl");
                    this.OnFirstUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LogoUrl", DbType = "VarChar(200)")]
        public string LogoUrl
        {
            get
            {
                return this._LogoUrl;
            }
            set
            {
                if ((this._LogoUrl != value))
                {
                    this.OnLogoUrlChanging(value);
                    this.SendPropertyChanging();
                    this._LogoUrl = value;
                    this.SendPropertyChanged("LogoUrl");
                    this.OnLogoUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HelpUrl", DbType = "VarChar(200)")]
        public string HelpUrl
        {
            get
            {
                return this._HelpUrl;
            }
            set
            {
                if ((this._HelpUrl != value))
                {
                    this.OnHelpUrlChanging(value);
                    this.SendPropertyChanging();
                    this._HelpUrl = value;
                    this.SendPropertyChanged("HelpUrl");
                    this.OnHelpUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderIndex", DbType = "Int")]
        public System.Nullable<int> OrderIndex
        {
            get
            {
                return this._OrderIndex;
            }
            set
            {
                if ((this._OrderIndex != value))
                {
                    this.OnOrderIndexChanging(value);
                    this.SendPropertyChanging();
                    this._OrderIndex = value;
                    this.SendPropertyChanged("OrderIndex");
                    this.OnOrderIndexChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int NOT NULL")]
        public int Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsLocal", DbType = "Bit")]
        public System.Nullable<bool> IsLocal
        {
            get
            {
                return this._IsLocal;
            }
            set
            {
                if ((this._IsLocal != value))
                {
                    this.OnIsLocalChanging(value);
                    this.SendPropertyChanging();
                    this._IsLocal = value;
                    this.SendPropertyChanged("IsLocal");
                    this.OnIsLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Menus_MapsRole", Storage = "_MapsRole", ThisKey = "ID", OtherKey = "MenuID")]
        public EntitySet<MapsRole> MapsRole
        {
            get
            {
                return this._MapsRole;
            }
            set
            {
                this._MapsRole.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_MapsRole(MapsRole entity)
        {
            this.SendPropertyChanging();
            entity.Menus = this;
        }

        private void detach_MapsRole(MapsRole entity)
        {
            this.SendPropertyChanging();
            entity.Menus = null;
        }
    }

    public partial class P_ImportWageDataResult
    {

        private string _Column1;

        public P_ImportWageDataResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "", Storage = "_Column1", DbType = "NVarChar(MAX)")]
        public string Column1
        {
            get
            {
                return this._Column1;
            }
            set
            {
                if ((this._Column1 != value))
                {
                    this._Column1 = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
