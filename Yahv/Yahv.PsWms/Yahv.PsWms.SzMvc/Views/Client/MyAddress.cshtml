@{Html.RenderAction("_PartialAddress", "Client");}

<div id="vConsignee" v-cloak>
    <div class="query_wrap">
        <button v-on:click="add_Consignee" class="btn btn1">新增收货地址</button>
        <span class="ml20">您已创建<span style="color:#71b247;">{{data.consignees.length}}</span>个收货地址，最多可创建<span style="color:#71b247;">20</span>个</span>
    </div>
    <div v-loading="loading">
        <table class="common_tb1 mt30">
            <tr>
                <th width="36px">序号</th>
                <th width="80px">联系人</th>
                <th width="150px">收货单位</th>
                <th width="250px">收货地址</th>
                <th width="80px">手机</th>
                <th width="80px">邮箱</th>
                <th width="50px">是否默认</th>
                <th width="150px">操作</th>
            </tr>
            <tr v-if="(index<=1&&!isAll1)||isAll1" v-for="(item,index) in data.consignees">
                <td>{{index+1}}</td>
                <td>{{item.Contact}}</td>
                <td>{{item.Title}}</td>
                <td>{{item.Address}}</td>
                <td>{{item.Phone}}</td>
                <td>{{item.Email}}</td>
                <td>{{item.IsDefault}}</td>
                <td class="operate">
                    <a v-on:click="edit_Consignee(item.ID)">编辑</a>
                    <a v-if="item.IsDefault == false" v-on:click="setDefault(item.ID)">设为默认</a>
                    <a v-on:click="del_Consignee(item.ID)">删除</a>
                </td>
            </tr>
            <tr v-if="data.consignees.length==0"><td colspan="10">暂无数据</td></tr>
            <tr v-if="data.consignees.length>2">
                <td colspan="10">
                    <a v-on:click="isAll1=!isAll1">
                        <span v-if="!isAll1">查看全部<i class="el-icon-arrow-down ml4"></i></span>
                        <span v-else>收起<i class="el-icon-arrow-up ml4"></i></span>
                    </a>
                </td>
            </tr>
        </table>
    </div>
    <el-dialog :title="dialogFormName" :lock-scroll="false" width="40%" :visible.sync="dialogFormVisible" v-on:close="dialog_Closed" :close-on-click-modal="false">
        <my-consignee ref="header" v-if="dialogFormVisible"></my-consignee>
        <div slot="footer" class="dialog-footer" style="padding-right:20px;">
            <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
            <el-button type="primary" v-on:click="onSubmit_ruleForm('header')">确 定</el-button>
        </div>
    </el-dialog>
</div>
<div id="vConsignor" style="margin-top:80px;" v-cloak>
    <div class="query_wrap">
        <button v-on:click="add_Consignor" class="btn btn1">新增提货地址</button>
        <span class="ml20">您已创建<span style="color:#71b247;">{{data.consignors.length}}</span>个提货地址，最多可创建<span style="color:#71b247;">20</span>个</span>
    </div>
    <div v-loading="loading">
        <table class="common_tb1 mt30">
            <tr>
                <th width="36px">序号</th>
                <th width="80px">联系人</th>
                <th width="150px">提货单位</th>
                <th width="250px">提货地址</th>
                <th width="80px">手机</th>
                <th width="80px">邮箱</th>
                <th width="50px">是否默认</th>
                <th width="150px">操作</th>
            </tr>
            <tr v-if="(index<=1&&!isAll2)||isAll2" v-for="(item,index) in data.consignors">
                <td>{{index+1}}</td>
                <td>{{item.Contact}}</td>
                <td>{{item.Title}}</td>
                <td>{{item.Address}}</td>
                <td>{{item.Phone}}</td>
                <td>{{item.Email}}</td>
                <td>{{item.IsDefault}}</td>
                <td class="operate">
                    <a v-on:click="edit_Consignor(item.ID)">编辑</a>
                    <a v-if="item.IsDefault == false" v-on:click="setDefault(item.ID)">设为默认</a>
                    <a v-on:click="del_Consignor(item.ID)">删除</a>
                </td>
            </tr>
            <tr v-if="data.consignors.length==0"><td colspan="10">暂无数据</td></tr>
            <tr v-if="data.consignors.length>2">
                <td colspan="10">
                    <a v-on:click="isAll2=!isAll2">
                        <span v-if="!isAll2">查看全部<i class="el-icon-arrow-down ml4"></i></span>
                        <span v-else>收起<i class="el-icon-arrow-up ml4"></i></span>
                    </a>
                </td>
            </tr>
        </table>
    </div>
    <el-dialog :title="dialogFormName" :lock-scroll="false" width="40%" :visible.sync="dialogFormVisible" v-on:close="dialog_Closed" :close-on-click-modal="false">
        <my-consignee ref="header"></my-consignee>
        <div slot="footer" class="dialog-footer" style="padding-right:20px;">
            <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
            <el-button type="primary" v-on:click="onSubmit_ruleForm('header')">确 定</el-button>
        </div>
    </el-dialog>
</div>
<script>
    var vConsignee = new Vue({
        el: "#vConsignee",
        data: {
            data: {
                consignees: {},
            },
            dialogFormName: "",  //弹框名称
            loading: false,
            dialogFormVisible: false,

            isAll1: false,
        },
        methods: {
            //刷新列表
            handleMyConsigneesList: function () {
                var that = this;
                axios({
                    url: "/Client/GetMyConsigneesList",
                    method: "post",
                    data: {
                    }
                }).then(function (res) {
                    that.data.consignees = JSON.parse(res.data.consignees);
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //新增收货地址
            add_Consignee: function () {
                var that = this;
                if (this.data.consignees.length >= 20) {
                    that.onAlert("error", "最多只能新增20个收货地址！");
                    return;
                }
                that.dialogFormName = "新增收货地址";
                //新增收货地址的弹框页面
                that.dialogFormVisible = true;
                setTimeout(function () {
                    that.$refs.header.$refs.form1.resetFields();
                    that.$refs.header.form1.ClientAddress = [];
                    that.$refs.header.form1.ID = "";
                }, 0);
            },

            //收货地址编辑,获取编辑前旧地址
            edit_Consignee: function (id) {
                var that = this;
                axios({
                    url: "/Client/GetAddressInfo",
                    method: "post",
                    data: {
                        id: id
                    }
                }).then(function (res) {
                    that.dialogFormName = "编辑收货地址";
                    that.dialogFormVisible = true;
                    setTimeout(function () {
                        that.$refs.header.$refs.form1.resetFields();
                        that.$refs.header.form1 = JSON.parse(res.data.data);
                    }, 0)
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },

            //删除地址
            del_Consignee: function (id) {
                var that = this;
                this.$confirm('您确定要删除该收货地址吗？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning',
                    lockScroll: false,
                }).then(function () {
                    axios({
                        url: "/Client/DeleteAddress",
                        method: "post",
                        data: {
                            id: id
                        }
                    }).then(function (res) {
                        that.handleMyConsigneesList(); //刷新列表
                        that.onAlert(res.data.type, res.data.msg);

                    }).catch(function (error) {
                        that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                    });
                }).catch(function () {
                    //取消
                });
            },
            //设为默认地址
            setDefault: function (id) {
                var that = this;
                axios({
                    url: "/Client/SetDefault",
                    method: "post",
                    data: {
                        id: id
                    }
                }).then(function (res) {
                    that.handleMyConsigneesList(); //刷新列表
                    if (res.data.type == "error") {
                        that.onAlert(res.data.type, res.data.msg);
                    }
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //弹框关闭后事件
            dialog_Closed: function () {
                //初始化列表值
                this.$refs.header.$refs.form1.resetFields();
                this.$refs.header.$refs.form1.ClientAddress = [];
            },
            onSubmit_ruleForm: function (header) {
                var that = this;
                this.$refs.header.$refs.form1.validate(function (valid) {
                    if (valid) {
                        that.dialogFormVisible = false;
                        axios({
                            url: "/Client/ConsigneeSubmit",
                            method: "post",
                            data: that.$refs.header.form1,
                        }).then(function (response) {
                            that.handleMyConsigneesList(); //刷新列表
                            that.onAlert(response.data.type, response.data.msg);
                        }).catch(function (error) {
                            that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                        });
                    } else {
                        //验证失败
                    }
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type
                });
            }
        },
        mounted: function () {
            this.handleMyConsigneesList();
        },
    });

    var vConsignor = new Vue({
        el: "#vConsignor",
        data: {
            data: {
                consignors: {},
            },
            dialogFormName: "",  //弹框名称
            loading: false,
            dialogFormVisible: false,
            isAll2: false,
        },
        methods: {
            //刷新列表
            handleMyConsignorsList: function () {
                var that = this;
                axios({
                    url: "/Client/GetMyConsignorsList",
                    method: "post",
                    data: {
                    }
                }).then(function (res) {
                    that.data.consignors = JSON.parse(res.data.consignors);
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //新增提货地址
            add_Consignor: function () {
                var that = this;
                if (this.data.consignors.length >= 20) {
                    that.onAlert("error", "最多只能新增20个提货地址！");
                    return;
                }
                that.dialogFormName = "新增提货地址";
                //新增提货地址的弹框页面
                that.dialogFormVisible = true;
                setTimeout(function () {
                    that.$refs.header.$refs.form1.resetFields();
                    that.$refs.header.form1.ClientAddress = [];
                    that.$refs.header.form1.ID = "";
                }, 0);
            },

            //提货地址编辑,获取编辑前旧地址
            edit_Consignor: function (id) {
                var that = this;
                axios({
                    url: "/Client/GetAddressInfo",
                    method: "post",
                    data: {
                        id: id
                    }
                }).then(function (res) {
                    that.dialogFormName = "编辑提货地址";
                    that.dialogFormVisible = true;
                    setTimeout(function () {
                        that.$refs.header.$refs.form1.resetFields();
                        that.$refs.header.form1 = JSON.parse(res.data.data);
                       // vConsignee.$refs.header.handPlaceChange();
                    }, 0)
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },

            //删除地址
            del_Consignor: function (id) {
                var that = this;
                this.$confirm('您确定要删除该提货地址吗？', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning',
                    lockScroll: false,
                }).then(function () {
                    axios({
                        url: "/Client/DeleteAddress",
                        method: "post",
                        data: {
                            id: id
                        }
                    }).then(function (res) {
                        that.handleMyConsignorsList(); //刷新列表
                        that.onAlert(res.data.type, res.data.msg);

                    }).catch(function (error) {
                        that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                    });
                }).catch(function () {
                    //取消
                });
            },
            //设为默认地址
            setDefault: function (id) {
                var that = this;
                axios({
                    url: "/Client/SetDefault",
                    method: "post",
                    data: {
                        id: id
                    }
                }).then(function (res) {
                    that.handleMyConsignorsList(); //刷新列表
                    if (res.data.type == "error") {
                        that.onAlert(res.data.type, res.data.msg);
                    }
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //弹框关闭后事件
            dialog_Closed: function () {
                //初始化列表值
                this.$refs.header.$refs.form1.resetFields();
                this.$refs.header.$refs.form1.ClientAddress = [];
            },
            onSubmit_ruleForm: function (header) {
                var that = this;
                this.$refs.header.$refs.form1.validate(function (valid) {
                    if (valid) {
                        that.dialogFormVisible = false;
                        axios({
                            url: "/Client/ConsignorSubmit",
                            method: "post",
                            data: that.$refs.header.form1,
                        }).then(function (response) {
                            that.handleMyConsignorsList(); //刷新列表
                            that.onAlert(response.data.type, response.data.msg);
                        }).catch(function (error) {
                            that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                        });
                    } else {
                        //验证失败
                    }
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type
                });
            }
        },
        mounted: function () {
            this.handleMyConsignorsList();
        },
    });
</script>