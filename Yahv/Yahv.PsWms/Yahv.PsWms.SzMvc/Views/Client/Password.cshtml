
<div id="password" v-cloak style="height: 600px;">
    <div>
        <el-form :model="ruleForm" :rules="rules" status-icon ref="ruleForm" label-width="110px" class="elform_padding">
            <el-form-item label="原密码：" prop="Password">
                <el-input type="password" v-model="ruleForm.Password" size="mini" placeholder="请输入原密码" style="width: 40%" auto-complete="off"></el-input>
            </el-form-item>

            <el-form-item label="新密码：" prop="NewPassword">
                <el-input type="password" v-model="ruleForm.NewPassword" size="mini" placeholder="请输入新密码" style="width: 40%" auto-complete="off"></el-input>
            </el-form-item>

            <el-form-item label="确认密码：" prop="ConfirmPassword">
                <el-input type="password" v-model="ruleForm.ConfirmPassword" size="mini" placeholder="请输入确认密码" style="width: 40%" auto-complete="off"></el-input>
            </el-form-item>

            <el-form-item class="btn_bottom">
                <el-button v-on:click="onSubmit()" class="btn2 ml12 fl ml0">保存</el-button>
            </el-form-item>
        </el-form>
    </div>
</div>
<script>
    var password = new Vue({
        el: "#password",
        data: function () {
            var that = this;
            var validatePass = function (rule, value, callback) {
                if (value == '' || value == null) {
                    callback(new Error('请输入原密码'));
                } else {
                    if (that.ruleForm.NewPassword != '' && that.ruleForm.NewPassword != null) {
                        that.$refs.ruleForm.validateField('NewPassword');
                    }
                    callback();
                }
            }
            var validateNewPass = function (rule, value, callback) {
                if (value == '' || value == null) {
                    callback(new Error('请输入新密码'));
                } else if (!ValidPassword(callback, value)) {
                } else {
                    if (that.ruleForm.Password === value) {
                        callback(new Error('新密码与原密码不能相同'));
                    } else if (that.ruleForm.ConfirmPassword != '' && that.ruleForm.ConfirmPassword != null) {
                        that.$refs.ruleForm.validateField('ConfirmPassword');
                    }
                    callback();
                }
            };
            var validateConfirmPass = function (rule, value, callback) {
                if (value == '' || value == null) {
                    callback(new Error('请再次输入新密码'));
                } else if (value !== that.ruleForm.NewPassword) {
                    callback(new Error('两次输入密码不一致!'));
                } else {
                    callback();
                }
            };
            return {
                ruleForm: {
                    Password: "",
                    NewPassword: "",
                    ConfirmPassword: ""
                },
                rules: {
                    Password: [
                        { required: true, validator: validatePass, trigger: 'blur' }
                    ],
                    NewPassword: [
                        { required: true, validator: validateNewPass, trigger: 'blur' }
                    ],
                    ConfirmPassword: [
                        { required: true, validator: validateConfirmPass, trigger: 'blur' }
                    ]
                }
            };
        },
        methods: {
            onSubmit: function () {
                var that = this;
                this.$refs.ruleForm.validate(function (valid) {
                    if (valid) {
                        axios({
                            url: "/Client/ChangePassword",
                            method: "post",
                            data: that.ruleForm,
                        }).then(function (response) {
                            that.onAlert(response.data.type, response.data.msg);
                            that.$refs.ruleForm.resetFields();
                        }).catch(function (error) {
                            that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                        });
                    } else {
                        //验证失败
                        return false;
                    }
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type
                });
            }
        }
    });
</script>                            