@{
    Layout = "~/Views/Shared/_NoticeLayout.cshtml";
}

<div id="log" v-cloak style="margin-left: 2%; margin-top: 5px;">
    <div class="query_wrap" ref="viewBox1" v-on:scroll="ss('viewBox1')">
        <div class="clearfix mt20">
            <div class="fl">
                <span class="title">ActionName:</span>
                <el-select style="width: 1018px;" class="mr16" size="small" multiple v-model="queryActionNameInt" filterable clearable>
                    <el-option v-for="item in actionNameOptions"
                               :key="item.value"
                               :label="item.text"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
        </div>
        <div class="clearfix mt20">
            <div class="fl">
                <span class="title">MainID:</span>
                <el-input style="width: 250px; margin-left: 30px;" size="mini" v-model="queryMainID" @@keyup.enter.native="queryData"></el-input>
            </div>
            <div class="fl ml30">
                <span class="title">CreateDate:</span>
                <el-date-picker style="width: 500px;" size="small" v-model="queryDateValue"
                                type="datetimerange"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期"
                                :default-value="datetimenow">
                </el-date-picker>
            </div>
            <button v-on:click="doQuery()" class="btn btn1 ml40">查询</button>
            <button v-on:click="clearQueryCondition()" class="btn btn2 ml12">重置</button>
        </div>
    </div>
    <div class="tb_wrap" v-loading="loading">
        <table class="common_tb1 mt30">
            <tr>
                <th width="36px">序号</th>
                <th width="200px">ID</th>
                <th width="150px">ActionName</th>
                <th width="220px">MainID</th>
                <th width="300px">Url</th>
                <th width="100px">CreateDate</th>
                <th width="110px">操作</th>
            </tr>
            <tr v-for="(item,index) in dataList">
                <td>{{(pageIndex-1)*pageSize+index+1}}</td>
                <td>{{item.LogID}}</td>
                <td align="left">{{item.ActionName}}</td>
                <td align="left">{{item.MainID}}</td>
                <td align="left">{{item.Url}}</td>
                <td>{{item.CreateDateDes}}</td>
                <td class="operate">
                    <a v-on:click="detail(item)">查看</a>
                </td>
            </tr>
            <tr v-if="dataList.length==0">
                <td colspan="8">暂无数据</td>
            </tr>
        </table>
        <div class="foot">
            <el-pagination class="fr" style="margin-top: 20px;" v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange"
                           :current-page="pageIndex"
                           :page-sizes="[5, 10, 20, 40]"
                           :page-size="pageSize"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="total">
            </el-pagination>
        </div>
    </div>

    <el-dialog title="详情" :lock-scroll="false" width="96%" :visible.sync="dialogDetailVisible" :close-on-click-modal="false">
        <div>
            <span>LogID：{{detailInfo.LogID}}</span>
            <span style="margin-left: 40px;">CreateDateDes：{{detailInfo.CreateDateDes}}</span>
            <span style="margin-left: 40px;">ActionName：{{detailInfo.ActionName}}</span>
            <span class="query_wrap">
                <button v-on:click="formatjson()" class="btn btn1 ml40" style="float: right;">格式化</button>
            </span>
        </div>
        <div style="margin-top: 5px;">
            <span>MainID：{{detailInfo.MainID}}</span>
            <span style="margin-left: 200px;">Url：{{detailInfo.Url}}</span>
        </div>
        <div style="margin-top: 15px;">
            <textarea rows="30" style="width: 90%; margin-left: 5%; resize: none;" v-model="detailInfo.Content"></textarea>
        </div>
    </el-dialog>

</div>
<script>
    var log = new Vue({
        el: "#log",
        data: function () {
            return {
                actionNameOptions: [],
                queryActionNameInt: [],
                queryDateValue: "",
                queryCreateDateBegin: "", //查询条件-开始时间
                queryCreateDateEnd: "", //查询条件-结束时间
                queryMainID: "",
                loading: false,

                dataList: [],
                total: 0,
                pageIndex: 1,
                pageSize: 20,

                dialogDetailVisible: false,

                detailInfo: {
                    LogID: '',
                    ActionName: '',
                    MainID: '',
                    Url: '',
                    CreateDateDes: '',
                    Content: '',
                },

                datetimenow: new Date(),
            }
        },
        watch: {
            queryDateValue: function (newVal, oldVal) {
                this.syncDateBeginEnd();
            },
        },
        methods: {
            //该time begin end
            syncDateBeginEnd: function () {
                if (this.queryDateValue != "" && this.queryDateValue != null) {
                    var start = new Date(this.queryDateValue[0]);
                    var startDate = start.getFullYear() + '-' + (start.getMonth() + 1) + '-' + start.getDate()
                        + ' ' + start.getHours() + ':' + start.getMinutes() + ':' + start.getSeconds();
                    var end = new Date(this.queryDateValue[1]);
                    var endDate = end.getFullYear() + '-' + (end.getMonth() + 1) + '-' + end.getDate()
                        + ' ' + end.getHours() + ':' + end.getMinutes() + ':' + end.getSeconds();
                    this.queryCreateDateBegin = startDate;
                    this.queryCreateDateEnd = endDate;
                } else {
                    this.queryCreateDateBegin = "";
                    this.queryCreateDateEnd = "";
                }
            },
            //修改 pageSize
            handleSizeChange: function (size) {
                this.pageSize = size;
                this.paging();
            },
            //修改 pageIndex
            handleCurrentChange: function (currentPage) {
                this.pageIndex = currentPage;
                this.paging();
            },
            //执行分页查询
            paging: function () {
                var that = this;
                that.loading = true;
                axios({
                    url: "/Notice/GetLogList",
                    method: "post",
                    data: {
                        page: that.pageIndex,
                        rows: that.pageSize,
                        MainID: that.queryMainID,
                        CreateDateBegin: that.queryCreateDateBegin,
                        CreateDateEnd: that.queryCreateDateEnd,
                        ActionNameInt: that.queryActionNameInt,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [
                        function (data) {
                            var ret = '';
                            for (var it in data) {
                                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';
                            }
                            return ret;
                        }
                    ]
                }).then(function (response) {
                    that.dataList = response.data.data.list;
                    that.total = response.data.data.total;
                    that.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //消息提示框
            onAlert: function (type, message) {
                this.$message({
                    message: message,
                    type: type,
                    offset: 100
                });
            },
            //查看
            detail: function (item) {
                this.dialogDetailVisible = true;
                var that = this;
                that.loading = true;
                axios({
                    url: "/Notice/GetLogDetail",
                    method: "post",
                    data: {
                        LogID: item.LogID,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    },
                    transformRequest: [
                        function (data) {
                            var ret = '';
                            for (var it in data) {
                                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';
                            }
                            return ret;
                        }
                    ]
                }).then(function (response) {
                    that.detailInfo.LogID = response.data.data.LogID;
                    that.detailInfo.ActionName = response.data.data.ActionName;
                    that.detailInfo.MainID = response.data.data.MainID;
                    that.detailInfo.Url = response.data.data.Url;
                    that.detailInfo.CreateDateDes = response.data.data.CreateDateDes;
                    that.detailInfo.Content = response.data.data.Content;
                    that.loading = false;
                }).catch(function (error) {
                    that.onAlert("warning", "系统发生错误，请稍后重试或联系客服");
                });
            },
            //查询按钮点击
            doQuery: function () {
                this.pageIndex = 1;
                this.paging();
            },
            //重置查询条件
            clearQueryCondition: function () {
                this.queryActionNameInt = [];
                this.queryDateValue = [new Date(new Date().getTime() - 24 * 60 * 60 * 1000), new Date()];
                this.syncDateBeginEnd();
                //this.queryCreateDateBegin = "";
                //this.queryCreateDateEnd = "";
                this.queryMainID = "";
                this.pageIndex = 1;
                this.pageSize = 20;
                this.paging();
            },
            //格式化json
            formatjson: function () {
                if (typeof this.detailInfo.Content == 'string') {
                    try {
                        this.detailInfo.Content = JSON.stringify(JSON.parse(this.detailInfo.Content), null, "\t");
                    } catch (e) {
                        console.log('error：' + e);
                    }
                }
            },
        },
        mounted: function () {
            this.queryDateValue = [new Date(new Date().getTime() - 24 * 60 * 60 * 1000), new Date()];
            this.syncDateBeginEnd();
            this.paging();
        },
        created: function () {
            var that = this;
            axios.get('/Miscellaneous/LogActionNames', { params: {} })
                .then(function (res) {
                    if (res.data.success == 200) {
                        that.actionNameOptions = res.data.result;
                    }
                })
                .catch(function (err) {
                    console.log(err);
                });
        },
    });
</script>