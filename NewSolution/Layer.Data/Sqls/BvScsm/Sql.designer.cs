#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.BvScsm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BvScsm3")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdminChains(AdminChains instance);
    partial void UpdateAdminChains(AdminChains instance);
    partial void DeleteAdminChains(AdminChains instance);
    partial void InsertVendors(Vendors instance);
    partial void UpdateVendors(Vendors instance);
    partial void DeleteVendors(Vendors instance);
    partial void InsertBeneficiaries(Beneficiaries instance);
    partial void UpdateBeneficiaries(Beneficiaries instance);
    partial void DeleteBeneficiaries(Beneficiaries instance);
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    partial void InsertCompanies(Companies instance);
    partial void UpdateCompanies(Companies instance);
    partial void DeleteCompanies(Companies instance);
    partial void InsertConsignees(Consignees instance);
    partial void UpdateConsignees(Consignees instance);
    partial void DeleteConsignees(Consignees instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertDeclaration(Declaration instance);
    partial void UpdateDeclaration(Declaration instance);
    partial void DeleteDeclaration(Declaration instance);
    partial void InsertDeclarationCustomsCode(DeclarationCustomsCode instance);
    partial void UpdateDeclarationCustomsCode(DeclarationCustomsCode instance);
    partial void DeleteDeclarationCustomsCode(DeclarationCustomsCode instance);
    partial void InsertDeclarationNotice(DeclarationNotice instance);
    partial void UpdateDeclarationNotice(DeclarationNotice instance);
    partial void DeleteDeclarationNotice(DeclarationNotice instance);
    partial void InsertDeclarationNoticeFiles(DeclarationNoticeFiles instance);
    partial void UpdateDeclarationNoticeFiles(DeclarationNoticeFiles instance);
    partial void DeleteDeclarationNoticeFiles(DeclarationNoticeFiles instance);
    partial void InsertDeclarationNoticeItems(DeclarationNoticeItems instance);
    partial void UpdateDeclarationNoticeItems(DeclarationNoticeItems instance);
    partial void DeleteDeclarationNoticeItems(DeclarationNoticeItems instance);
    partial void InsertDeclarationNoticePacking(DeclarationNoticePacking instance);
    partial void UpdateDeclarationNoticePacking(DeclarationNoticePacking instance);
    partial void DeleteDeclarationNoticePacking(DeclarationNoticePacking instance);
    partial void InsertDeclarationNoticePackingItems(DeclarationNoticePackingItems instance);
    partial void UpdateDeclarationNoticePackingItems(DeclarationNoticePackingItems instance);
    partial void DeleteDeclarationNoticePackingItems(DeclarationNoticePackingItems instance);
    partial void InsertDeclarationOrder(DeclarationOrder instance);
    partial void UpdateDeclarationOrder(DeclarationOrder instance);
    partial void DeleteDeclarationOrder(DeclarationOrder instance);
    partial void InsertDeclarationOrderFiles(DeclarationOrderFiles instance);
    partial void UpdateDeclarationOrderFiles(DeclarationOrderFiles instance);
    partial void DeleteDeclarationOrderFiles(DeclarationOrderFiles instance);
    partial void InsertDeliverers(Deliverers instance);
    partial void UpdateDeliverers(Deliverers instance);
    partial void DeleteDeliverers(Deliverers instance);
    partial void InsertExitNoticeItems(ExitNoticeItems instance);
    partial void UpdateExitNoticeItems(ExitNoticeItems instance);
    partial void DeleteExitNoticeItems(ExitNoticeItems instance);
    partial void InsertExitNotices(ExitNotices instance);
    partial void UpdateExitNotices(ExitNotices instance);
    partial void DeleteExitNotices(ExitNotices instance);
    partial void InsertExitOrderItems(ExitOrderItems instance);
    partial void UpdateExitOrderItems(ExitOrderItems instance);
    partial void DeleteExitOrderItems(ExitOrderItems instance);
    partial void InsertExitOrders(ExitOrders instance);
    partial void UpdateExitOrders(ExitOrders instance);
    partial void DeleteExitOrders(ExitOrders instance);
    partial void InsertInputs(Inputs instance);
    partial void UpdateInputs(Inputs instance);
    partial void DeleteInputs(Inputs instance);
    partial void InsertInvoices(Invoices instance);
    partial void UpdateInvoices(Invoices instance);
    partial void DeleteInvoices(Invoices instance);
    partial void InsertMapsAdminVendor(MapsAdminVendor instance);
    partial void UpdateMapsAdminVendor(MapsAdminVendor instance);
    partial void DeleteMapsAdminVendor(MapsAdminVendor instance);
    partial void InsertOutputs(Outputs instance);
    partial void UpdateOutputs(Outputs instance);
    partial void DeleteOutputs(Outputs instance);
    partial void InsertPackingOrderItems(PackingOrderItems instance);
    partial void UpdatePackingOrderItems(PackingOrderItems instance);
    partial void DeletePackingOrderItems(PackingOrderItems instance);
    partial void InsertPackingOrders(PackingOrders instance);
    partial void UpdatePackingOrders(PackingOrders instance);
    partial void DeletePackingOrders(PackingOrders instance);
    partial void InsertPackingProductItems(PackingProductItems instance);
    partial void UpdatePackingProductItems(PackingProductItems instance);
    partial void DeletePackingProductItems(PackingProductItems instance);
    partial void InsertProducts(Products instance);
    partial void UpdateProducts(Products instance);
    partial void DeleteProducts(Products instance);
    partial void InsertPurchaseFiles(PurchaseFiles instance);
    partial void UpdatePurchaseFiles(PurchaseFiles instance);
    partial void DeletePurchaseFiles(PurchaseFiles instance);
    partial void InsertPurchaseItems(PurchaseItems instance);
    partial void UpdatePurchaseItems(PurchaseItems instance);
    partial void DeletePurchaseItems(PurchaseItems instance);
    partial void InsertPurchaseLogs(PurchaseLogs instance);
    partial void UpdatePurchaseLogs(PurchaseLogs instance);
    partial void DeletePurchaseLogs(PurchaseLogs instance);
    partial void InsertPurchaseOrders(PurchaseOrders instance);
    partial void UpdatePurchaseOrders(PurchaseOrders instance);
    partial void DeletePurchaseOrders(PurchaseOrders instance);
    partial void InsertSalesOrderFiles(SalesOrderFiles instance);
    partial void UpdateSalesOrderFiles(SalesOrderFiles instance);
    partial void DeleteSalesOrderFiles(SalesOrderFiles instance);
    partial void InsertSalesOrderItems(SalesOrderItems instance);
    partial void UpdateSalesOrderItems(SalesOrderItems instance);
    partial void DeleteSalesOrderItems(SalesOrderItems instance);
    partial void InsertSalesOrderLogs(SalesOrderLogs instance);
    partial void UpdateSalesOrderLogs(SalesOrderLogs instance);
    partial void DeleteSalesOrderLogs(SalesOrderLogs instance);
    partial void InsertSalesOrders(SalesOrders instance);
    partial void UpdateSalesOrders(SalesOrders instance);
    partial void DeleteSalesOrders(SalesOrders instance);
    partial void InsertDeclarationOrder1(DeclarationOrder1 instance);
    partial void UpdateDeclarationOrder1(DeclarationOrder1 instance);
    partial void DeleteDeclarationOrder1(DeclarationOrder1 instance);
    partial void InsertDeclarationNoticeItems1(DeclarationNoticeItems1 instance);
    partial void UpdateDeclarationNoticeItems1(DeclarationNoticeItems1 instance);
    partial void DeleteDeclarationNoticeItems1(DeclarationNoticeItems1 instance);
    partial void InsertDeclarationNotice1(DeclarationNotice1 instance);
    partial void UpdateDeclarationNotice1(DeclarationNotice1 instance);
    partial void DeleteDeclarationNotice1(DeclarationNotice1 instance);
    partial void InsertDeclaration1(Declaration1 instance);
    partial void UpdateDeclaration1(Declaration1 instance);
    partial void DeleteDeclaration1(Declaration1 instance);
    partial void InsertCustomsHead(CustomsHead instance);
    partial void UpdateCustomsHead(CustomsHead instance);
    partial void DeleteCustomsHead(CustomsHead instance);
    partial void InsertCustomsCodeModelHis(CustomsCodeModelHis instance);
    partial void UpdateCustomsCodeModelHis(CustomsCodeModelHis instance);
    partial void DeleteCustomsCodeModelHis(CustomsCodeModelHis instance);
    partial void InsertCustomsCode(CustomsCode instance);
    partial void UpdateCustomsCode(CustomsCode instance);
    partial void DeleteCustomsCode(CustomsCode instance);
    partial void InsertArrivalFiles(ArrivalFiles instance);
    partial void UpdateArrivalFiles(ArrivalFiles instance);
    partial void DeleteArrivalFiles(ArrivalFiles instance);
    partial void InsertArrivalItems(ArrivalItems instance);
    partial void UpdateArrivalItems(ArrivalItems instance);
    partial void DeleteArrivalItems(ArrivalItems instance);
    partial void InsertArrivals(Arrivals instance);
    partial void UpdateArrivals(Arrivals instance);
    partial void DeleteArrivals(Arrivals instance);
    partial void InsertEntryNoticeItems(EntryNoticeItems instance);
    partial void UpdateEntryNoticeItems(EntryNoticeItems instance);
    partial void DeleteEntryNoticeItems(EntryNoticeItems instance);
    partial void InsertEntryNotices(EntryNotices instance);
    partial void UpdateEntryNotices(EntryNotices instance);
    partial void DeleteEntryNotices(EntryNotices instance);
    partial void InsertFormEntrys(FormEntrys instance);
    partial void UpdateFormEntrys(FormEntrys instance);
    partial void DeleteFormEntrys(FormEntrys instance);
    partial void InsertPurchaseForms(PurchaseForms instance);
    partial void UpdatePurchaseForms(PurchaseForms instance);
    partial void DeletePurchaseForms(PurchaseForms instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.BvScsm3ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminChains> AdminChains
		{
			get
			{
				return this.GetTable<AdminChains>();
			}
		}
		
		public System.Data.Linq.Table<Vendors> Vendors
		{
			get
			{
				return this.GetTable<Vendors>();
			}
		}
		
		public System.Data.Linq.Table<Beneficiaries> Beneficiaries
		{
			get
			{
				return this.GetTable<Beneficiaries>();
			}
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
		
		public System.Data.Linq.Table<Companies> Companies
		{
			get
			{
				return this.GetTable<Companies>();
			}
		}
		
		public System.Data.Linq.Table<Consignees> Consignees
		{
			get
			{
				return this.GetTable<Consignees>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<Declaration> Declaration
		{
			get
			{
				return this.GetTable<Declaration>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationCustomsCode> DeclarationCustomsCode
		{
			get
			{
				return this.GetTable<DeclarationCustomsCode>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNotice> DeclarationNotice
		{
			get
			{
				return this.GetTable<DeclarationNotice>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNoticeFiles> DeclarationNoticeFiles
		{
			get
			{
				return this.GetTable<DeclarationNoticeFiles>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNoticeItems> DeclarationNoticeItems
		{
			get
			{
				return this.GetTable<DeclarationNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNoticePacking> DeclarationNoticePacking
		{
			get
			{
				return this.GetTable<DeclarationNoticePacking>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNoticePackingItems> DeclarationNoticePackingItems
		{
			get
			{
				return this.GetTable<DeclarationNoticePackingItems>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationOrder> DeclarationOrder
		{
			get
			{
				return this.GetTable<DeclarationOrder>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationOrderFiles> DeclarationOrderFiles
		{
			get
			{
				return this.GetTable<DeclarationOrderFiles>();
			}
		}
		
		public System.Data.Linq.Table<Deliverers> Deliverers
		{
			get
			{
				return this.GetTable<Deliverers>();
			}
		}
		
		public System.Data.Linq.Table<ExitNoticeItems> ExitNoticeItems
		{
			get
			{
				return this.GetTable<ExitNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<ExitNotices> ExitNotices
		{
			get
			{
				return this.GetTable<ExitNotices>();
			}
		}
		
		public System.Data.Linq.Table<ExitOrderItems> ExitOrderItems
		{
			get
			{
				return this.GetTable<ExitOrderItems>();
			}
		}
		
		public System.Data.Linq.Table<ExitOrders> ExitOrders
		{
			get
			{
				return this.GetTable<ExitOrders>();
			}
		}
		
		public System.Data.Linq.Table<Inputs> Inputs
		{
			get
			{
				return this.GetTable<Inputs>();
			}
		}
		
		public System.Data.Linq.Table<Invoices> Invoices
		{
			get
			{
				return this.GetTable<Invoices>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdminVendor> MapsAdminVendor
		{
			get
			{
				return this.GetTable<MapsAdminVendor>();
			}
		}
		
		public System.Data.Linq.Table<MapsDeclarationOrderPacking> MapsDeclarationOrderPacking
		{
			get
			{
				return this.GetTable<MapsDeclarationOrderPacking>();
			}
		}
		
		public System.Data.Linq.Table<Outputs> Outputs
		{
			get
			{
				return this.GetTable<Outputs>();
			}
		}
		
		public System.Data.Linq.Table<PackingOrderItems> PackingOrderItems
		{
			get
			{
				return this.GetTable<PackingOrderItems>();
			}
		}
		
		public System.Data.Linq.Table<PackingOrders> PackingOrders
		{
			get
			{
				return this.GetTable<PackingOrders>();
			}
		}
		
		public System.Data.Linq.Table<PackingProductItems> PackingProductItems
		{
			get
			{
				return this.GetTable<PackingProductItems>();
			}
		}
		
		public System.Data.Linq.Table<Products> Products
		{
			get
			{
				return this.GetTable<Products>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseFiles> PurchaseFiles
		{
			get
			{
				return this.GetTable<PurchaseFiles>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseItems> PurchaseItems
		{
			get
			{
				return this.GetTable<PurchaseItems>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseLogs> PurchaseLogs
		{
			get
			{
				return this.GetTable<PurchaseLogs>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this.GetTable<PurchaseOrders>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderFiles> SalesOrderFiles
		{
			get
			{
				return this.GetTable<SalesOrderFiles>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderItems> SalesOrderItems
		{
			get
			{
				return this.GetTable<SalesOrderItems>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderLogs> SalesOrderLogs
		{
			get
			{
				return this.GetTable<SalesOrderLogs>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrders> SalesOrders
		{
			get
			{
				return this.GetTable<SalesOrders>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationOrderItems> DeclarationOrderItems
		{
			get
			{
				return this.GetTable<DeclarationOrderItems>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationOrder1> DeclarationOrder1
		{
			get
			{
				return this.GetTable<DeclarationOrder1>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNoticeItems1> DeclarationNoticeItems1
		{
			get
			{
				return this.GetTable<DeclarationNoticeItems1>();
			}
		}
		
		public System.Data.Linq.Table<DeclarationNotice1> DeclarationNotice1
		{
			get
			{
				return this.GetTable<DeclarationNotice1>();
			}
		}
		
		public System.Data.Linq.Table<Declaration1> Declaration1
		{
			get
			{
				return this.GetTable<Declaration1>();
			}
		}
		
		public System.Data.Linq.Table<CustomsHead> CustomsHead
		{
			get
			{
				return this.GetTable<CustomsHead>();
			}
		}
		
		public System.Data.Linq.Table<CustomsCodeModelHis> CustomsCodeModelHis
		{
			get
			{
				return this.GetTable<CustomsCodeModelHis>();
			}
		}
		
		public System.Data.Linq.Table<CustomsCode> CustomsCode
		{
			get
			{
				return this.GetTable<CustomsCode>();
			}
		}
		
		public System.Data.Linq.Table<ArrivalFiles> ArrivalFiles
		{
			get
			{
				return this.GetTable<ArrivalFiles>();
			}
		}
		
		public System.Data.Linq.Table<ArrivalItems> ArrivalItems
		{
			get
			{
				return this.GetTable<ArrivalItems>();
			}
		}
		
		public System.Data.Linq.Table<Arrivals> Arrivals
		{
			get
			{
				return this.GetTable<Arrivals>();
			}
		}
		
		public System.Data.Linq.Table<EntryNoticeItems> EntryNoticeItems
		{
			get
			{
				return this.GetTable<EntryNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<EntryNotices> EntryNotices
		{
			get
			{
				return this.GetTable<EntryNotices>();
			}
		}
		
		public System.Data.Linq.Table<FormEntrys> FormEntrys
		{
			get
			{
				return this.GetTable<FormEntrys>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseForms> PurchaseForms
		{
			get
			{
				return this.GetTable<PurchaseForms>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminChains")]
	public partial class AdminChains : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNotices> _ExitNotices;
		
		private EntitySet<ExitOrders> _ExitOrders;
		
		private EntitySet<Inputs> _Inputs;
		
		private EntitySet<MapsAdminVendor> _MapsAdminVendor;
		
		private EntitySet<PackingOrders> _PackingOrders;
		
		private EntitySet<PurchaseFiles> _PurchaseFiles;
		
		private EntitySet<PurchaseLogs> _PurchaseLogs;
		
		private EntitySet<PurchaseOrders> _PurchaseOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public AdminChains()
		{
			this._ExitNotices = new EntitySet<ExitNotices>(new Action<ExitNotices>(this.attach_ExitNotices), new Action<ExitNotices>(this.detach_ExitNotices));
			this._ExitOrders = new EntitySet<ExitOrders>(new Action<ExitOrders>(this.attach_ExitOrders), new Action<ExitOrders>(this.detach_ExitOrders));
			this._Inputs = new EntitySet<Inputs>(new Action<Inputs>(this.attach_Inputs), new Action<Inputs>(this.detach_Inputs));
			this._MapsAdminVendor = new EntitySet<MapsAdminVendor>(new Action<MapsAdminVendor>(this.attach_MapsAdminVendor), new Action<MapsAdminVendor>(this.detach_MapsAdminVendor));
			this._PackingOrders = new EntitySet<PackingOrders>(new Action<PackingOrders>(this.attach_PackingOrders), new Action<PackingOrders>(this.detach_PackingOrders));
			this._PurchaseFiles = new EntitySet<PurchaseFiles>(new Action<PurchaseFiles>(this.attach_PurchaseFiles), new Action<PurchaseFiles>(this.detach_PurchaseFiles));
			this._PurchaseLogs = new EntitySet<PurchaseLogs>(new Action<PurchaseLogs>(this.attach_PurchaseLogs), new Action<PurchaseLogs>(this.detach_PurchaseLogs));
			this._PurchaseOrders = new EntitySet<PurchaseOrders>(new Action<PurchaseOrders>(this.attach_PurchaseOrders), new Action<PurchaseOrders>(this.detach_PurchaseOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_ExitNotices", Storage="_ExitNotices", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<ExitNotices> ExitNotices
		{
			get
			{
				return this._ExitNotices;
			}
			set
			{
				this._ExitNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_ExitOrders", Storage="_ExitOrders", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<ExitOrders> ExitOrders
		{
			get
			{
				return this._ExitOrders;
			}
			set
			{
				this._ExitOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_Inputs", Storage="_Inputs", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<Inputs> Inputs
		{
			get
			{
				return this._Inputs;
			}
			set
			{
				this._Inputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_MapsAdminVendor", Storage="_MapsAdminVendor", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<MapsAdminVendor> MapsAdminVendor
		{
			get
			{
				return this._MapsAdminVendor;
			}
			set
			{
				this._MapsAdminVendor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PackingOrders", Storage="_PackingOrders", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<PackingOrders> PackingOrders
		{
			get
			{
				return this._PackingOrders;
			}
			set
			{
				this._PackingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseFiles", Storage="_PurchaseFiles", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<PurchaseFiles> PurchaseFiles
		{
			get
			{
				return this._PurchaseFiles;
			}
			set
			{
				this._PurchaseFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseLogs", Storage="_PurchaseLogs", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<PurchaseLogs> PurchaseLogs
		{
			get
			{
				return this._PurchaseLogs;
			}
			set
			{
				this._PurchaseLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseOrders", Storage="_PurchaseOrders", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_MapsAdminVendor(MapsAdminVendor entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_MapsAdminVendor(MapsAdminVendor entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
		
		private void attach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.AdminChains = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendors")]
	public partial class Vendors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private System.Nullable<int> _Grade;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNoticeItems> _ExitNoticeItems;
		
		private EntitySet<ExitOrderItems> _ExitOrderItems;
		
		private EntitySet<Inputs> _Inputs;
		
		private EntitySet<MapsAdminVendor> _MapsAdminVendor;
		
		private EntitySet<PackingProductItems> _PackingProductItems;
		
		private EntitySet<Products> _Products;
		
		private EntitySet<PurchaseItems> _PurchaseItems;
		
		private EntitySet<SalesOrderItems> _SalesOrderItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Vendors()
		{
			this._ExitNoticeItems = new EntitySet<ExitNoticeItems>(new Action<ExitNoticeItems>(this.attach_ExitNoticeItems), new Action<ExitNoticeItems>(this.detach_ExitNoticeItems));
			this._ExitOrderItems = new EntitySet<ExitOrderItems>(new Action<ExitOrderItems>(this.attach_ExitOrderItems), new Action<ExitOrderItems>(this.detach_ExitOrderItems));
			this._Inputs = new EntitySet<Inputs>(new Action<Inputs>(this.attach_Inputs), new Action<Inputs>(this.detach_Inputs));
			this._MapsAdminVendor = new EntitySet<MapsAdminVendor>(new Action<MapsAdminVendor>(this.attach_MapsAdminVendor), new Action<MapsAdminVendor>(this.detach_MapsAdminVendor));
			this._PackingProductItems = new EntitySet<PackingProductItems>(new Action<PackingProductItems>(this.attach_PackingProductItems), new Action<PackingProductItems>(this.detach_PackingProductItems));
			this._Products = new EntitySet<Products>(new Action<Products>(this.attach_Products), new Action<Products>(this.detach_Products));
			this._PurchaseItems = new EntitySet<PurchaseItems>(new Action<PurchaseItems>(this.attach_PurchaseItems), new Action<PurchaseItems>(this.detach_PurchaseItems));
			this._SalesOrderItems = new EntitySet<SalesOrderItems>(new Action<SalesOrderItems>(this.attach_SalesOrderItems), new Action<SalesOrderItems>(this.detach_SalesOrderItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_ExitNoticeItems", Storage="_ExitNoticeItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<ExitNoticeItems> ExitNoticeItems
		{
			get
			{
				return this._ExitNoticeItems;
			}
			set
			{
				this._ExitNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_ExitOrderItems", Storage="_ExitOrderItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<ExitOrderItems> ExitOrderItems
		{
			get
			{
				return this._ExitOrderItems;
			}
			set
			{
				this._ExitOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_Inputs", Storage="_Inputs", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<Inputs> Inputs
		{
			get
			{
				return this._Inputs;
			}
			set
			{
				this._Inputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_MapsAdminVendor", Storage="_MapsAdminVendor", ThisKey="ID", OtherKey="VendorID")]
		public EntitySet<MapsAdminVendor> MapsAdminVendor
		{
			get
			{
				return this._MapsAdminVendor;
			}
			set
			{
				this._MapsAdminVendor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_PackingProductItems", Storage="_PackingProductItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<PackingProductItems> PackingProductItems
		{
			get
			{
				return this._PackingProductItems;
			}
			set
			{
				this._PackingProductItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_Products", Storage="_Products", ThisKey="ID", OtherKey="ManufacturerID")]
		public EntitySet<Products> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_PurchaseItems", Storage="_PurchaseItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<PurchaseItems> PurchaseItems
		{
			get
			{
				return this._PurchaseItems;
			}
			set
			{
				this._PurchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_SalesOrderItems", Storage="_SalesOrderItems", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<SalesOrderItems> SalesOrderItems
		{
			get
			{
				return this._SalesOrderItems;
			}
			set
			{
				this._SalesOrderItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_MapsAdminVendor(MapsAdminVendor entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_MapsAdminVendor(MapsAdminVendor entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_Products(Products entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_Products(Products entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
		
		private void attach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beneficiaries")]
	public partial class Beneficiaries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CompanyID;
		
		private string _ContactID;
		
		private int _Currency;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _SwiftCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PurchaseOrders> _PurchaseOrders;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Beneficiaries()
		{
			this._PurchaseOrders = new EntitySet<PurchaseOrders>(new Action<PurchaseOrders>(this.attach_PurchaseOrders), new Action<PurchaseOrders>(this.detach_PurchaseOrders));
			this._Companies = default(EntityRef<Companies>);
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(2000)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_PurchaseOrders", Storage="_PurchaseOrders", ThisKey="ID", OtherKey="BeneficiaryID")]
		public EntitySet<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Beneficiaries", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Beneficiaries.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Beneficiaries.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Beneficiaries", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Beneficiaries.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Beneficiaries.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _ContactID;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Clients()
		{
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Clients", Storage="_Contacts", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Clients = null;
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Clients = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Beneficiaries> _Beneficiaries;
		
		private EntitySet<Consignees> _Consignees;
		
		private EntitySet<Contacts> _Contacts;
		
		private EntitySet<Deliverers> _Deliverers;
		
		private EntitySet<PurchaseOrders> _PurchaseOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Companies()
		{
			this._Beneficiaries = new EntitySet<Beneficiaries>(new Action<Beneficiaries>(this.attach_Beneficiaries), new Action<Beneficiaries>(this.detach_Beneficiaries));
			this._Consignees = new EntitySet<Consignees>(new Action<Consignees>(this.attach_Consignees), new Action<Consignees>(this.detach_Consignees));
			this._Contacts = new EntitySet<Contacts>(new Action<Contacts>(this.attach_Contacts), new Action<Contacts>(this.detach_Contacts));
			this._Deliverers = new EntitySet<Deliverers>(new Action<Deliverers>(this.attach_Deliverers), new Action<Deliverers>(this.detach_Deliverers));
			this._PurchaseOrders = new EntitySet<PurchaseOrders>(new Action<PurchaseOrders>(this.attach_PurchaseOrders), new Action<PurchaseOrders>(this.detach_PurchaseOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Beneficiaries", Storage="_Beneficiaries", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Beneficiaries> Beneficiaries
		{
			get
			{
				return this._Beneficiaries;
			}
			set
			{
				this._Beneficiaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Consignees", Storage="_Consignees", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Consignees> Consignees
		{
			get
			{
				return this._Consignees;
			}
			set
			{
				this._Consignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Contacts", Storage="_Contacts", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Contacts> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Deliverers", Storage="_Deliverers", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Deliverers> Deliverers
		{
			get
			{
				return this._Deliverers;
			}
			set
			{
				this._Deliverers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_PurchaseOrders", Storage="_PurchaseOrders", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Beneficiaries(Beneficiaries entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Beneficiaries(Beneficiaries entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_Deliverers(Deliverers entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Deliverers(Deliverers entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consignees")]
	public partial class Consignees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CompanyID;
		
		private string _ContactID;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNotices> _ExitNotices;
		
		private EntitySet<ExitOrders> _ExitOrders;
		
		private EntitySet<PackingOrders> _PackingOrders;
		
		private EntitySet<PurchaseOrders> _PurchaseOrders;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Consignees()
		{
			this._ExitNotices = new EntitySet<ExitNotices>(new Action<ExitNotices>(this.attach_ExitNotices), new Action<ExitNotices>(this.detach_ExitNotices));
			this._ExitOrders = new EntitySet<ExitOrders>(new Action<ExitOrders>(this.attach_ExitOrders), new Action<ExitOrders>(this.detach_ExitOrders));
			this._PackingOrders = new EntitySet<PackingOrders>(new Action<PackingOrders>(this.attach_PackingOrders), new Action<PackingOrders>(this.detach_PackingOrders));
			this._PurchaseOrders = new EntitySet<PurchaseOrders>(new Action<PurchaseOrders>(this.attach_PurchaseOrders), new Action<PurchaseOrders>(this.detach_PurchaseOrders));
			this._Companies = default(EntityRef<Companies>);
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_ExitNotices", Storage="_ExitNotices", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<ExitNotices> ExitNotices
		{
			get
			{
				return this._ExitNotices;
			}
			set
			{
				this._ExitNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_ExitOrders", Storage="_ExitOrders", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<ExitOrders> ExitOrders
		{
			get
			{
				return this._ExitOrders;
			}
			set
			{
				this._ExitOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_PackingOrders", Storage="_PackingOrders", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<PackingOrders> PackingOrders
		{
			get
			{
				return this._PackingOrders;
			}
			set
			{
				this._PackingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_PurchaseOrders", Storage="_PurchaseOrders", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Consignees", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Consignees.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Consignees.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Consignees", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Consignees.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Consignees.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = this;
		}
		
		private void detach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = null;
		}
		
		private void attach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = this;
		}
		
		private void detach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = null;
		}
		
		private void attach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = this;
		}
		
		private void detach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = null;
		}
		
		private void attach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Consignees = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CompanyID;
		
		private string _Position;
		
		private string _Email;
		
		private string _Moblie;
		
		private string _Tel;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Beneficiaries> _Beneficiaries;
		
		private EntityRef<Clients> _Clients;
		
		private EntitySet<Consignees> _Consignees;
		
		private EntitySet<Deliverers> _Deliverers;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMoblieChanging(string value);
    partial void OnMoblieChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Contacts()
		{
			this._Beneficiaries = new EntitySet<Beneficiaries>(new Action<Beneficiaries>(this.attach_Beneficiaries), new Action<Beneficiaries>(this.detach_Beneficiaries));
			this._Clients = default(EntityRef<Clients>);
			this._Consignees = new EntitySet<Consignees>(new Action<Consignees>(this.attach_Consignees), new Action<Consignees>(this.detach_Consignees));
			this._Deliverers = new EntitySet<Deliverers>(new Action<Deliverers>(this.attach_Deliverers), new Action<Deliverers>(this.detach_Deliverers));
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moblie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Moblie
		{
			get
			{
				return this._Moblie;
			}
			set
			{
				if ((this._Moblie != value))
				{
					this.OnMoblieChanging(value);
					this.SendPropertyChanging();
					this._Moblie = value;
					this.SendPropertyChanged("Moblie");
					this.OnMoblieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Beneficiaries", Storage="_Beneficiaries", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Beneficiaries> Beneficiaries
		{
			get
			{
				return this._Beneficiaries;
			}
			set
			{
				this._Beneficiaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Clients", Storage="_Clients", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Contacts = null;
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Contacts = this;
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Consignees", Storage="_Consignees", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Consignees> Consignees
		{
			get
			{
				return this._Consignees;
			}
			set
			{
				this._Consignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Deliverers", Storage="_Deliverers", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Deliverers> Deliverers
		{
			get
			{
				return this._Deliverers;
			}
			set
			{
				this._Deliverers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Contacts", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Beneficiaries(Beneficiaries entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Beneficiaries(Beneficiaries entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_Deliverers(Deliverers entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Deliverers(Deliverers entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Declaration")]
	public partial class Declaration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationOrderID;
		
		private string _ContractNo;
		
		private string _InvoiceNo;
		
		private string _TransactionMode;
		
		private string _TradingNation;
		
		private string _VoyageNumber;
		
		private string _BillOfLoadNumber;
		
		private int _PackagingType;
		
		private int _PackageNumber;
		
		private decimal _NetWeight;
		
		private decimal _GrossWeight;
		
		private int _Port;
		
		private int _DeclareScene;
		
		private string _ShippingType;
		
		private string _DeclarationType;
		
		private System.DateTime _DeclarationDate;
		
		private string _DeclarationUnit;
		
		private string _DeclarationUnitCustomsCode;
		
		private string _DeclarationUnitOGCode;
		
		private string _ConsigneeAndConsigner;
		
		private string _ConsigneeAndConsignerCustomsCode;
		
		private string _ConsigneeAndConsignerOGCode;
		
		private bool _IsInspactoin;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationOrder> _DeclarationOrder;
		
		private EntityRef<DeclarationOrder1> _DeclarationOrder1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationOrderIDChanging(string value);
    partial void OnDeclarationOrderIDChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnTransactionModeChanging(string value);
    partial void OnTransactionModeChanged();
    partial void OnTradingNationChanging(string value);
    partial void OnTradingNationChanged();
    partial void OnVoyageNumberChanging(string value);
    partial void OnVoyageNumberChanged();
    partial void OnBillOfLoadNumberChanging(string value);
    partial void OnBillOfLoadNumberChanged();
    partial void OnPackagingTypeChanging(int value);
    partial void OnPackagingTypeChanged();
    partial void OnPackageNumberChanging(int value);
    partial void OnPackageNumberChanged();
    partial void OnNetWeightChanging(decimal value);
    partial void OnNetWeightChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnPortChanging(int value);
    partial void OnPortChanged();
    partial void OnDeclareSceneChanging(int value);
    partial void OnDeclareSceneChanged();
    partial void OnShippingTypeChanging(string value);
    partial void OnShippingTypeChanged();
    partial void OnDeclarationTypeChanging(string value);
    partial void OnDeclarationTypeChanged();
    partial void OnDeclarationDateChanging(System.DateTime value);
    partial void OnDeclarationDateChanged();
    partial void OnDeclarationUnitChanging(string value);
    partial void OnDeclarationUnitChanged();
    partial void OnDeclarationUnitCustomsCodeChanging(string value);
    partial void OnDeclarationUnitCustomsCodeChanged();
    partial void OnDeclarationUnitOGCodeChanging(string value);
    partial void OnDeclarationUnitOGCodeChanged();
    partial void OnConsigneeAndConsignerChanging(string value);
    partial void OnConsigneeAndConsignerChanged();
    partial void OnConsigneeAndConsignerCustomsCodeChanging(string value);
    partial void OnConsigneeAndConsignerCustomsCodeChanged();
    partial void OnConsigneeAndConsignerOGCodeChanging(string value);
    partial void OnConsigneeAndConsignerOGCodeChanged();
    partial void OnIsInspactoinChanging(bool value);
    partial void OnIsInspactoinChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public Declaration()
		{
			this._DeclarationOrder = default(EntityRef<DeclarationOrder>);
			this._DeclarationOrder1 = default(EntityRef<DeclarationOrder1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationOrderID
		{
			get
			{
				return this._DeclarationOrderID;
			}
			set
			{
				if ((this._DeclarationOrderID != value))
				{
					if ((this._DeclarationOrder.HasLoadedOrAssignedValue || this._DeclarationOrder1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationOrderIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationOrderID = value;
					this.SendPropertyChanged("DeclarationOrderID");
					this.OnDeclarationOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionMode
		{
			get
			{
				return this._TransactionMode;
			}
			set
			{
				if ((this._TransactionMode != value))
				{
					this.OnTransactionModeChanging(value);
					this.SendPropertyChanging();
					this._TransactionMode = value;
					this.SendPropertyChanged("TransactionMode");
					this.OnTransactionModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradingNation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TradingNation
		{
			get
			{
				return this._TradingNation;
			}
			set
			{
				if ((this._TradingNation != value))
				{
					this.OnTradingNationChanging(value);
					this.SendPropertyChanging();
					this._TradingNation = value;
					this.SendPropertyChanged("TradingNation");
					this.OnTradingNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoyageNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VoyageNumber
		{
			get
			{
				return this._VoyageNumber;
			}
			set
			{
				if ((this._VoyageNumber != value))
				{
					this.OnVoyageNumberChanging(value);
					this.SendPropertyChanging();
					this._VoyageNumber = value;
					this.SendPropertyChanged("VoyageNumber");
					this.OnVoyageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillOfLoadNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillOfLoadNumber
		{
			get
			{
				return this._BillOfLoadNumber;
			}
			set
			{
				if ((this._BillOfLoadNumber != value))
				{
					this.OnBillOfLoadNumberChanging(value);
					this.SendPropertyChanging();
					this._BillOfLoadNumber = value;
					this.SendPropertyChanged("BillOfLoadNumber");
					this.OnBillOfLoadNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingType", DbType="Int NOT NULL")]
		public int PackagingType
		{
			get
			{
				return this._PackagingType;
			}
			set
			{
				if ((this._PackagingType != value))
				{
					this.OnPackagingTypeChanging(value);
					this.SendPropertyChanging();
					this._PackagingType = value;
					this.SendPropertyChanged("PackagingType");
					this.OnPackagingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageNumber", DbType="Int NOT NULL")]
		public int PackageNumber
		{
			get
			{
				return this._PackageNumber;
			}
			set
			{
				if ((this._PackageNumber != value))
				{
					this.OnPackageNumberChanging(value);
					this.SendPropertyChanging();
					this._PackageNumber = value;
					this.SendPropertyChanged("PackageNumber");
					this.OnPackageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal NetWeight
		{
			get
			{
				return this._NetWeight;
			}
			set
			{
				if ((this._NetWeight != value))
				{
					this.OnNetWeightChanging(value);
					this.SendPropertyChanging();
					this._NetWeight = value;
					this.SendPropertyChanged("NetWeight");
					this.OnNetWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int NOT NULL")]
		public int Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareScene", DbType="Int NOT NULL")]
		public int DeclareScene
		{
			get
			{
				return this._DeclareScene;
			}
			set
			{
				if ((this._DeclareScene != value))
				{
					this.OnDeclareSceneChanging(value);
					this.SendPropertyChanging();
					this._DeclareScene = value;
					this.SendPropertyChanged("DeclareScene");
					this.OnDeclareSceneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShippingType
		{
			get
			{
				return this._ShippingType;
			}
			set
			{
				if ((this._ShippingType != value))
				{
					this.OnShippingTypeChanging(value);
					this.SendPropertyChanging();
					this._ShippingType = value;
					this.SendPropertyChanged("ShippingType");
					this.OnShippingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationType
		{
			get
			{
				return this._DeclarationType;
			}
			set
			{
				if ((this._DeclarationType != value))
				{
					this.OnDeclarationTypeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationType = value;
					this.SendPropertyChanged("DeclarationType");
					this.OnDeclarationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeclarationDate
		{
			get
			{
				return this._DeclarationDate;
			}
			set
			{
				if ((this._DeclarationDate != value))
				{
					this.OnDeclarationDateChanging(value);
					this.SendPropertyChanging();
					this._DeclarationDate = value;
					this.SendPropertyChanged("DeclarationDate");
					this.OnDeclarationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationUnit", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeclarationUnit
		{
			get
			{
				return this._DeclarationUnit;
			}
			set
			{
				if ((this._DeclarationUnit != value))
				{
					this.OnDeclarationUnitChanging(value);
					this.SendPropertyChanging();
					this._DeclarationUnit = value;
					this.SendPropertyChanged("DeclarationUnit");
					this.OnDeclarationUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationUnitCustomsCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationUnitCustomsCode
		{
			get
			{
				return this._DeclarationUnitCustomsCode;
			}
			set
			{
				if ((this._DeclarationUnitCustomsCode != value))
				{
					this.OnDeclarationUnitCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationUnitCustomsCode = value;
					this.SendPropertyChanged("DeclarationUnitCustomsCode");
					this.OnDeclarationUnitCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationUnitOGCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationUnitOGCode
		{
			get
			{
				return this._DeclarationUnitOGCode;
			}
			set
			{
				if ((this._DeclarationUnitOGCode != value))
				{
					this.OnDeclarationUnitOGCodeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationUnitOGCode = value;
					this.SendPropertyChanged("DeclarationUnitOGCode");
					this.OnDeclarationUnitOGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsigner", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ConsigneeAndConsigner
		{
			get
			{
				return this._ConsigneeAndConsigner;
			}
			set
			{
				if ((this._ConsigneeAndConsigner != value))
				{
					this.OnConsigneeAndConsignerChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsigner = value;
					this.SendPropertyChanged("ConsigneeAndConsigner");
					this.OnConsigneeAndConsignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsignerCustomsCode", DbType="NVarChar(50)")]
		public string ConsigneeAndConsignerCustomsCode
		{
			get
			{
				return this._ConsigneeAndConsignerCustomsCode;
			}
			set
			{
				if ((this._ConsigneeAndConsignerCustomsCode != value))
				{
					this.OnConsigneeAndConsignerCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsignerCustomsCode = value;
					this.SendPropertyChanged("ConsigneeAndConsignerCustomsCode");
					this.OnConsigneeAndConsignerCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsignerOGCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeAndConsignerOGCode
		{
			get
			{
				return this._ConsigneeAndConsignerOGCode;
			}
			set
			{
				if ((this._ConsigneeAndConsignerOGCode != value))
				{
					this.OnConsigneeAndConsignerOGCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsignerOGCode = value;
					this.SendPropertyChanged("ConsigneeAndConsignerOGCode");
					this.OnConsigneeAndConsignerOGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInspactoin", DbType="Bit NOT NULL")]
		public bool IsInspactoin
		{
			get
			{
				return this._IsInspactoin;
			}
			set
			{
				if ((this._IsInspactoin != value))
				{
					this.OnIsInspactoinChanging(value);
					this.SendPropertyChanging();
					this._IsInspactoin = value;
					this.SendPropertyChanged("IsInspactoin");
					this.OnIsInspactoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_Declaration", Storage="_DeclarationOrder", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder DeclarationOrder
		{
			get
			{
				return this._DeclarationOrder.Entity;
			}
			set
			{
				DeclarationOrder previousValue = this._DeclarationOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder.Entity = null;
						previousValue.Declaration.Remove(this);
					}
					this._DeclarationOrder.Entity = value;
					if ((value != null))
					{
						value.Declaration.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_Declaration", Storage="_DeclarationOrder1", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder1 DeclarationOrder1
		{
			get
			{
				return this._DeclarationOrder1.Entity;
			}
			set
			{
				DeclarationOrder1 previousValue = this._DeclarationOrder1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder1.Entity = null;
						previousValue.Declaration.Remove(this);
					}
					this._DeclarationOrder1.Entity = value;
					if ((value != null))
					{
						value.Declaration.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationCustomsCode")]
	public partial class DeclarationCustomsCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeItemID;
		
		private string _ProductCode;
		
		private string _ProductName;
		
		private string _Elements;
		
		private string _FirstLegalUnit;
		
		private string _SecondLegalUnit;
		
		private System.Nullable<decimal> _FirstQuantity;
		
		private System.Nullable<decimal> _SecondQuantity;
		
		private System.Nullable<decimal> _MFNTaxRate;
		
		private System.Nullable<decimal> _ProvisionalTaxRate;
		
		private System.Nullable<decimal> _ValueAddTaxRate;
		
		private string _CustomsSupervisionCondition;
		
		private string _CIQType;
		
		private string _CIQCode;
		
		private string _ProductDescription;
		
		private string _ModelInfoClassification;
		
		private string _ModelInfoClassificationValue;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationNoticeItems> _DeclarationNoticeItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeItemIDChanging(string value);
    partial void OnDeclarationNoticeItemIDChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnElementsChanging(string value);
    partial void OnElementsChanged();
    partial void OnFirstLegalUnitChanging(string value);
    partial void OnFirstLegalUnitChanged();
    partial void OnSecondLegalUnitChanging(string value);
    partial void OnSecondLegalUnitChanged();
    partial void OnFirstQuantityChanging(System.Nullable<decimal> value);
    partial void OnFirstQuantityChanged();
    partial void OnSecondQuantityChanging(System.Nullable<decimal> value);
    partial void OnSecondQuantityChanged();
    partial void OnMFNTaxRateChanging(System.Nullable<decimal> value);
    partial void OnMFNTaxRateChanged();
    partial void OnProvisionalTaxRateChanging(System.Nullable<decimal> value);
    partial void OnProvisionalTaxRateChanged();
    partial void OnValueAddTaxRateChanging(System.Nullable<decimal> value);
    partial void OnValueAddTaxRateChanged();
    partial void OnCustomsSupervisionConditionChanging(string value);
    partial void OnCustomsSupervisionConditionChanged();
    partial void OnCIQTypeChanging(string value);
    partial void OnCIQTypeChanged();
    partial void OnCIQCodeChanging(string value);
    partial void OnCIQCodeChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnModelInfoClassificationChanging(string value);
    partial void OnModelInfoClassificationChanged();
    partial void OnModelInfoClassificationValueChanging(string value);
    partial void OnModelInfoClassificationValueChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationCustomsCode()
		{
			this._DeclarationNoticeItems = default(EntityRef<DeclarationNoticeItems>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeItemID
		{
			get
			{
				return this._DeclarationNoticeItemID;
			}
			set
			{
				if ((this._DeclarationNoticeItemID != value))
				{
					if (this._DeclarationNoticeItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeItemIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeItemID = value;
					this.SendPropertyChanged("DeclarationNoticeItemID");
					this.OnDeclarationNoticeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLegalUnit", DbType="NVarChar(50)")]
		public string FirstLegalUnit
		{
			get
			{
				return this._FirstLegalUnit;
			}
			set
			{
				if ((this._FirstLegalUnit != value))
				{
					this.OnFirstLegalUnitChanging(value);
					this.SendPropertyChanging();
					this._FirstLegalUnit = value;
					this.SendPropertyChanged("FirstLegalUnit");
					this.OnFirstLegalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLegalUnit", DbType="NVarChar(50)")]
		public string SecondLegalUnit
		{
			get
			{
				return this._SecondLegalUnit;
			}
			set
			{
				if ((this._SecondLegalUnit != value))
				{
					this.OnSecondLegalUnitChanging(value);
					this.SendPropertyChanging();
					this._SecondLegalUnit = value;
					this.SendPropertyChanged("SecondLegalUnit");
					this.OnSecondLegalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> FirstQuantity
		{
			get
			{
				return this._FirstQuantity;
			}
			set
			{
				if ((this._FirstQuantity != value))
				{
					this.OnFirstQuantityChanging(value);
					this.SendPropertyChanging();
					this._FirstQuantity = value;
					this.SendPropertyChanged("FirstQuantity");
					this.OnFirstQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SecondQuantity
		{
			get
			{
				return this._SecondQuantity;
			}
			set
			{
				if ((this._SecondQuantity != value))
				{
					this.OnSecondQuantityChanging(value);
					this.SendPropertyChanging();
					this._SecondQuantity = value;
					this.SendPropertyChanged("SecondQuantity");
					this.OnSecondQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFNTaxRate", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> MFNTaxRate
		{
			get
			{
				return this._MFNTaxRate;
			}
			set
			{
				if ((this._MFNTaxRate != value))
				{
					this.OnMFNTaxRateChanging(value);
					this.SendPropertyChanging();
					this._MFNTaxRate = value;
					this.SendPropertyChanged("MFNTaxRate");
					this.OnMFNTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionalTaxRate", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ProvisionalTaxRate
		{
			get
			{
				return this._ProvisionalTaxRate;
			}
			set
			{
				if ((this._ProvisionalTaxRate != value))
				{
					this.OnProvisionalTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ProvisionalTaxRate = value;
					this.SendPropertyChanged("ProvisionalTaxRate");
					this.OnProvisionalTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueAddTaxRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ValueAddTaxRate
		{
			get
			{
				return this._ValueAddTaxRate;
			}
			set
			{
				if ((this._ValueAddTaxRate != value))
				{
					this.OnValueAddTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ValueAddTaxRate = value;
					this.SendPropertyChanged("ValueAddTaxRate");
					this.OnValueAddTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsSupervisionCondition", DbType="NVarChar(100)")]
		public string CustomsSupervisionCondition
		{
			get
			{
				return this._CustomsSupervisionCondition;
			}
			set
			{
				if ((this._CustomsSupervisionCondition != value))
				{
					this.OnCustomsSupervisionConditionChanging(value);
					this.SendPropertyChanging();
					this._CustomsSupervisionCondition = value;
					this.SendPropertyChanged("CustomsSupervisionCondition");
					this.OnCustomsSupervisionConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQType", DbType="NVarChar(100)")]
		public string CIQType
		{
			get
			{
				return this._CIQType;
			}
			set
			{
				if ((this._CIQType != value))
				{
					this.OnCIQTypeChanging(value);
					this.SendPropertyChanging();
					this._CIQType = value;
					this.SendPropertyChanged("CIQType");
					this.OnCIQTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="NVarChar(100)")]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this.OnCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._CIQCode = value;
					this.SendPropertyChanged("CIQCode");
					this.OnCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="NVarChar(500)")]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelInfoClassification", DbType="NVarChar(200)")]
		public string ModelInfoClassification
		{
			get
			{
				return this._ModelInfoClassification;
			}
			set
			{
				if ((this._ModelInfoClassification != value))
				{
					this.OnModelInfoClassificationChanging(value);
					this.SendPropertyChanging();
					this._ModelInfoClassification = value;
					this.SendPropertyChanged("ModelInfoClassification");
					this.OnModelInfoClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelInfoClassificationValue", DbType="NVarChar(200)")]
		public string ModelInfoClassificationValue
		{
			get
			{
				return this._ModelInfoClassificationValue;
			}
			set
			{
				if ((this._ModelInfoClassificationValue != value))
				{
					this.OnModelInfoClassificationValueChanging(value);
					this.SendPropertyChanging();
					this._ModelInfoClassificationValue = value;
					this.SendPropertyChanged("ModelInfoClassificationValue");
					this.OnModelInfoClassificationValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticeItems_DeclarationCustomsCode", Storage="_DeclarationNoticeItems", ThisKey="DeclarationNoticeItemID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNoticeItems DeclarationNoticeItems
		{
			get
			{
				return this._DeclarationNoticeItems.Entity;
			}
			set
			{
				DeclarationNoticeItems previousValue = this._DeclarationNoticeItems.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNoticeItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNoticeItems.Entity = null;
						previousValue.DeclarationCustomsCode.Remove(this);
					}
					this._DeclarationNoticeItems.Entity = value;
					if ((value != null))
					{
						value.DeclarationCustomsCode.Add(this);
						this._DeclarationNoticeItemID = value.ID;
					}
					else
					{
						this._DeclarationNoticeItemID = default(string);
					}
					this.SendPropertyChanged("DeclarationNoticeItems");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNotice")]
	public partial class DeclarationNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private string _Code;
		
		private string _MemberID;
		
		private System.Nullable<int> _OrderType;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<DeclarationNoticeFiles> _DeclarationNoticeFiles;
		
		private EntitySet<DeclarationNoticeItems> _DeclarationNoticeItems;
		
		private EntitySet<DeclarationNoticePacking> _DeclarationNoticePacking;
		
		private EntitySet<DeclarationOrder> _DeclarationOrder;
		
		private EntitySet<DeclarationOrder1> _DeclarationOrder1;
		
		private EntitySet<DeclarationNoticeItems1> _DeclarationNoticeItems1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnMemberIDChanging(string value);
    partial void OnMemberIDChanged();
    partial void OnOrderTypeChanging(System.Nullable<int> value);
    partial void OnOrderTypeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public DeclarationNotice()
		{
			this._DeclarationNoticeFiles = new EntitySet<DeclarationNoticeFiles>(new Action<DeclarationNoticeFiles>(this.attach_DeclarationNoticeFiles), new Action<DeclarationNoticeFiles>(this.detach_DeclarationNoticeFiles));
			this._DeclarationNoticeItems = new EntitySet<DeclarationNoticeItems>(new Action<DeclarationNoticeItems>(this.attach_DeclarationNoticeItems), new Action<DeclarationNoticeItems>(this.detach_DeclarationNoticeItems));
			this._DeclarationNoticePacking = new EntitySet<DeclarationNoticePacking>(new Action<DeclarationNoticePacking>(this.attach_DeclarationNoticePacking), new Action<DeclarationNoticePacking>(this.detach_DeclarationNoticePacking));
			this._DeclarationOrder = new EntitySet<DeclarationOrder>(new Action<DeclarationOrder>(this.attach_DeclarationOrder), new Action<DeclarationOrder>(this.detach_DeclarationOrder));
			this._DeclarationOrder1 = new EntitySet<DeclarationOrder1>(new Action<DeclarationOrder1>(this.attach_DeclarationOrder1), new Action<DeclarationOrder1>(this.detach_DeclarationOrder1));
			this._DeclarationNoticeItems1 = new EntitySet<DeclarationNoticeItems1>(new Action<DeclarationNoticeItems1>(this.attach_DeclarationNoticeItems1), new Action<DeclarationNoticeItems1>(this.detach_DeclarationNoticeItems1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="VarChar(50)")]
		public string MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Int")]
		public System.Nullable<int> OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeFiles", Storage="_DeclarationNoticeFiles", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticeFiles> DeclarationNoticeFiles
		{
			get
			{
				return this._DeclarationNoticeFiles;
			}
			set
			{
				this._DeclarationNoticeFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeItems", Storage="_DeclarationNoticeItems", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticeItems> DeclarationNoticeItems
		{
			get
			{
				return this._DeclarationNoticeItems;
			}
			set
			{
				this._DeclarationNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticePacking", Storage="_DeclarationNoticePacking", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticePacking> DeclarationNoticePacking
		{
			get
			{
				return this._DeclarationNoticePacking;
			}
			set
			{
				this._DeclarationNoticePacking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationOrder", Storage="_DeclarationOrder", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationOrder> DeclarationOrder
		{
			get
			{
				return this._DeclarationOrder;
			}
			set
			{
				this._DeclarationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationOrder1", Storage="_DeclarationOrder1", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationOrder1> DeclarationOrder1
		{
			get
			{
				return this._DeclarationOrder1;
			}
			set
			{
				this._DeclarationOrder1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeItems1", Storage="_DeclarationNoticeItems1", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticeItems1> DeclarationNoticeItems1
		{
			get
			{
				return this._DeclarationNoticeItems1;
			}
			set
			{
				this._DeclarationNoticeItems1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeclarationNoticeFiles(DeclarationNoticeFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationNoticeFiles(DeclarationNoticeFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
		
		private void attach_DeclarationNoticeItems(DeclarationNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationNoticeItems(DeclarationNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
		
		private void attach_DeclarationNoticePacking(DeclarationNoticePacking entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationNoticePacking(DeclarationNoticePacking entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
		
		private void attach_DeclarationOrder(DeclarationOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationOrder(DeclarationOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
		
		private void attach_DeclarationOrder1(DeclarationOrder1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationOrder1(DeclarationOrder1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
		
		private void attach_DeclarationNoticeItems1(DeclarationNoticeItems1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = this;
		}
		
		private void detach_DeclarationNoticeItems1(DeclarationNoticeItems1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNoticeFiles")]
	public partial class DeclarationNoticeFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private int _FileFormat;
		
		private string _URL;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(int value);
    partial void OnFileFormatChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationNoticeFiles()
		{
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if (this._DeclarationNotice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="Int NOT NULL")]
		public int FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeFiles", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationNoticeFiles.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticeFiles.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNoticeItems")]
	public partial class DeclarationNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _ProductID;
		
		private string _DealUnit;
		
		private decimal _UnitPrice;
		
		private decimal _Count;
		
		private int _Currency;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<DeclarationCustomsCode> _DeclarationCustomsCode;
		
		private EntitySet<DeclarationNoticePackingItems> _DeclarationNoticePackingItems;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
		private EntityRef<DeclarationNotice1> _DeclarationNotice1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnDealUnitChanging(string value);
    partial void OnDealUnitChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationNoticeItems()
		{
			this._DeclarationCustomsCode = new EntitySet<DeclarationCustomsCode>(new Action<DeclarationCustomsCode>(this.attach_DeclarationCustomsCode), new Action<DeclarationCustomsCode>(this.detach_DeclarationCustomsCode));
			this._DeclarationNoticePackingItems = new EntitySet<DeclarationNoticePackingItems>(new Action<DeclarationNoticePackingItems>(this.attach_DeclarationNoticePackingItems), new Action<DeclarationNoticePackingItems>(this.detach_DeclarationNoticePackingItems));
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			this._DeclarationNotice1 = default(EntityRef<DeclarationNotice1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if ((this._DeclarationNotice.HasLoadedOrAssignedValue || this._DeclarationNotice1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealUnit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DealUnit
		{
			get
			{
				return this._DealUnit;
			}
			set
			{
				if ((this._DealUnit != value))
				{
					this.OnDealUnitChanging(value);
					this.SendPropertyChanging();
					this._DealUnit = value;
					this.SendPropertyChanged("DealUnit");
					this.OnDealUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,7) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticeItems_DeclarationCustomsCode", Storage="_DeclarationCustomsCode", ThisKey="ID", OtherKey="DeclarationNoticeItemID")]
		public EntitySet<DeclarationCustomsCode> DeclarationCustomsCode
		{
			get
			{
				return this._DeclarationCustomsCode;
			}
			set
			{
				this._DeclarationCustomsCode.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticeItems_DeclarationNoticePackingItems", Storage="_DeclarationNoticePackingItems", ThisKey="ID", OtherKey="DeclarationNoticeItemID")]
		public EntitySet<DeclarationNoticePackingItems> DeclarationNoticePackingItems
		{
			get
			{
				return this._DeclarationNoticePackingItems;
			}
			set
			{
				this._DeclarationNoticePackingItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeItems", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationNoticeItems.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticeItems.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationNoticeItems", Storage="_DeclarationNotice1", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice1 DeclarationNotice1
		{
			get
			{
				return this._DeclarationNotice1.Entity;
			}
			set
			{
				DeclarationNotice1 previousValue = this._DeclarationNotice1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice1.Entity = null;
						previousValue.DeclarationNoticeItems.Remove(this);
					}
					this._DeclarationNotice1.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticeItems.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeclarationCustomsCode(DeclarationCustomsCode entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticeItems = this;
		}
		
		private void detach_DeclarationCustomsCode(DeclarationCustomsCode entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticeItems = null;
		}
		
		private void attach_DeclarationNoticePackingItems(DeclarationNoticePackingItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticeItems = this;
		}
		
		private void detach_DeclarationNoticePackingItems(DeclarationNoticePackingItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticeItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNoticePacking")]
	public partial class DeclarationNoticePacking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _PackingNo;
		
		private decimal _GrossWeight;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<DeclarationNoticePackingItems> _DeclarationNoticePackingItems;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnPackingNoChanging(string value);
    partial void OnPackingNoChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationNoticePacking()
		{
			this._DeclarationNoticePackingItems = new EntitySet<DeclarationNoticePackingItems>(new Action<DeclarationNoticePackingItems>(this.attach_DeclarationNoticePackingItems), new Action<DeclarationNoticePackingItems>(this.detach_DeclarationNoticePackingItems));
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if (this._DeclarationNotice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackingNo
		{
			get
			{
				return this._PackingNo;
			}
			set
			{
				if ((this._PackingNo != value))
				{
					this.OnPackingNoChanging(value);
					this.SendPropertyChanging();
					this._PackingNo = value;
					this.SendPropertyChanged("PackingNo");
					this.OnPackingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticePacking_DeclarationNoticePackingItems", Storage="_DeclarationNoticePackingItems", ThisKey="ID", OtherKey="DeclarationNoticePackingID")]
		public EntitySet<DeclarationNoticePackingItems> DeclarationNoticePackingItems
		{
			get
			{
				return this._DeclarationNoticePackingItems;
			}
			set
			{
				this._DeclarationNoticePackingItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticePacking", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationNoticePacking.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticePacking.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeclarationNoticePackingItems(DeclarationNoticePackingItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticePacking = this;
		}
		
		private void detach_DeclarationNoticePackingItems(DeclarationNoticePackingItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNoticePacking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNoticePackingItems")]
	public partial class DeclarationNoticePackingItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticePackingID;
		
		private string _DeclarationNoticeItemID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private decimal _Weight;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationNoticeItems> _DeclarationNoticeItems;
		
		private EntityRef<DeclarationNoticePacking> _DeclarationNoticePacking;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticePackingIDChanging(string value);
    partial void OnDeclarationNoticePackingIDChanged();
    partial void OnDeclarationNoticeItemIDChanging(string value);
    partial void OnDeclarationNoticeItemIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationNoticePackingItems()
		{
			this._DeclarationNoticeItems = default(EntityRef<DeclarationNoticeItems>);
			this._DeclarationNoticePacking = default(EntityRef<DeclarationNoticePacking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticePackingID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticePackingID
		{
			get
			{
				return this._DeclarationNoticePackingID;
			}
			set
			{
				if ((this._DeclarationNoticePackingID != value))
				{
					if (this._DeclarationNoticePacking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticePackingIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticePackingID = value;
					this.SendPropertyChanged("DeclarationNoticePackingID");
					this.OnDeclarationNoticePackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeItemID
		{
			get
			{
				return this._DeclarationNoticeItemID;
			}
			set
			{
				if ((this._DeclarationNoticeItemID != value))
				{
					if (this._DeclarationNoticeItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeItemIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeItemID = value;
					this.SendPropertyChanged("DeclarationNoticeItemID");
					this.OnDeclarationNoticeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticeItems_DeclarationNoticePackingItems", Storage="_DeclarationNoticeItems", ThisKey="DeclarationNoticeItemID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNoticeItems DeclarationNoticeItems
		{
			get
			{
				return this._DeclarationNoticeItems.Entity;
			}
			set
			{
				DeclarationNoticeItems previousValue = this._DeclarationNoticeItems.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNoticeItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNoticeItems.Entity = null;
						previousValue.DeclarationNoticePackingItems.Remove(this);
					}
					this._DeclarationNoticeItems.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticePackingItems.Add(this);
						this._DeclarationNoticeItemID = value.ID;
					}
					else
					{
						this._DeclarationNoticeItemID = default(string);
					}
					this.SendPropertyChanged("DeclarationNoticeItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNoticePacking_DeclarationNoticePackingItems", Storage="_DeclarationNoticePacking", ThisKey="DeclarationNoticePackingID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNoticePacking DeclarationNoticePacking
		{
			get
			{
				return this._DeclarationNoticePacking.Entity;
			}
			set
			{
				DeclarationNoticePacking previousValue = this._DeclarationNoticePacking.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNoticePacking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNoticePacking.Entity = null;
						previousValue.DeclarationNoticePackingItems.Remove(this);
					}
					this._DeclarationNoticePacking.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticePackingItems.Add(this);
						this._DeclarationNoticePackingID = value.ID;
					}
					else
					{
						this._DeclarationNoticePackingID = default(string);
					}
					this.SendPropertyChanged("DeclarationNoticePacking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationOrder")]
	public partial class DeclarationOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private string _Code;
		
		private string _MemberID;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<Declaration> _Declaration;
		
		private EntitySet<DeclarationOrderFiles> _DeclarationOrderFiles;
		
		private EntitySet<Declaration1> _Declaration1;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
		private EntityRef<DeclarationNotice1> _DeclarationNotice1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnMemberIDChanging(string value);
    partial void OnMemberIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationOrder()
		{
			this._Declaration = new EntitySet<Declaration>(new Action<Declaration>(this.attach_Declaration), new Action<Declaration>(this.detach_Declaration));
			this._DeclarationOrderFiles = new EntitySet<DeclarationOrderFiles>(new Action<DeclarationOrderFiles>(this.attach_DeclarationOrderFiles), new Action<DeclarationOrderFiles>(this.detach_DeclarationOrderFiles));
			this._Declaration1 = new EntitySet<Declaration1>(new Action<Declaration1>(this.attach_Declaration1), new Action<Declaration1>(this.detach_Declaration1));
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			this._DeclarationNotice1 = default(EntityRef<DeclarationNotice1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if ((this._DeclarationNotice.HasLoadedOrAssignedValue || this._DeclarationNotice1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_Declaration", Storage="_Declaration", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<Declaration> Declaration
		{
			get
			{
				return this._Declaration;
			}
			set
			{
				this._Declaration.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_DeclarationOrderFiles", Storage="_DeclarationOrderFiles", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<DeclarationOrderFiles> DeclarationOrderFiles
		{
			get
			{
				return this._DeclarationOrderFiles;
			}
			set
			{
				this._DeclarationOrderFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_Declaration1", Storage="_Declaration1", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<Declaration1> Declaration1
		{
			get
			{
				return this._Declaration1;
			}
			set
			{
				this._Declaration1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationOrder", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationOrder.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrder.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationOrder", Storage="_DeclarationNotice1", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice1 DeclarationNotice1
		{
			get
			{
				return this._DeclarationNotice1.Entity;
			}
			set
			{
				DeclarationNotice1 previousValue = this._DeclarationNotice1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice1.Entity = null;
						previousValue.DeclarationOrder.Remove(this);
					}
					this._DeclarationNotice1.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrder.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Declaration(Declaration entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = this;
		}
		
		private void detach_Declaration(Declaration entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = null;
		}
		
		private void attach_DeclarationOrderFiles(DeclarationOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = this;
		}
		
		private void detach_DeclarationOrderFiles(DeclarationOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = null;
		}
		
		private void attach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = this;
		}
		
		private void detach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationOrderFiles")]
	public partial class DeclarationOrderFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationOrderID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private int _FileFormat;
		
		private string _URL;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationOrder> _DeclarationOrder;
		
		private EntityRef<DeclarationOrder1> _DeclarationOrder1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationOrderIDChanging(string value);
    partial void OnDeclarationOrderIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(int value);
    partial void OnFileFormatChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationOrderFiles()
		{
			this._DeclarationOrder = default(EntityRef<DeclarationOrder>);
			this._DeclarationOrder1 = default(EntityRef<DeclarationOrder1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationOrderID
		{
			get
			{
				return this._DeclarationOrderID;
			}
			set
			{
				if ((this._DeclarationOrderID != value))
				{
					if ((this._DeclarationOrder.HasLoadedOrAssignedValue || this._DeclarationOrder1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationOrderIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationOrderID = value;
					this.SendPropertyChanged("DeclarationOrderID");
					this.OnDeclarationOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="Int NOT NULL")]
		public int FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_DeclarationOrderFiles", Storage="_DeclarationOrder", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder DeclarationOrder
		{
			get
			{
				return this._DeclarationOrder.Entity;
			}
			set
			{
				DeclarationOrder previousValue = this._DeclarationOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder.Entity = null;
						previousValue.DeclarationOrderFiles.Remove(this);
					}
					this._DeclarationOrder.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrderFiles.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_DeclarationOrderFiles", Storage="_DeclarationOrder1", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder1 DeclarationOrder1
		{
			get
			{
				return this._DeclarationOrder1.Entity;
			}
			set
			{
				DeclarationOrder1 previousValue = this._DeclarationOrder1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder1.Entity = null;
						previousValue.DeclarationOrderFiles.Remove(this);
					}
					this._DeclarationOrder1.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrderFiles.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deliverers")]
	public partial class Deliverers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _CompanyID;
		
		private string _ContactID;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNotices> _ExitNotices;
		
		private EntitySet<ExitOrders> _ExitOrders;
		
		private EntitySet<PurchaseOrders> _PurchaseOrders;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Deliverers()
		{
			this._ExitNotices = new EntitySet<ExitNotices>(new Action<ExitNotices>(this.attach_ExitNotices), new Action<ExitNotices>(this.detach_ExitNotices));
			this._ExitOrders = new EntitySet<ExitOrders>(new Action<ExitOrders>(this.attach_ExitOrders), new Action<ExitOrders>(this.detach_ExitOrders));
			this._PurchaseOrders = new EntitySet<PurchaseOrders>(new Action<PurchaseOrders>(this.attach_PurchaseOrders), new Action<PurchaseOrders>(this.detach_PurchaseOrders));
			this._Companies = default(EntityRef<Companies>);
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_ExitNotices", Storage="_ExitNotices", ThisKey="ID", OtherKey="DelivererID")]
		public EntitySet<ExitNotices> ExitNotices
		{
			get
			{
				return this._ExitNotices;
			}
			set
			{
				this._ExitNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_ExitOrders", Storage="_ExitOrders", ThisKey="ID", OtherKey="DelivererID")]
		public EntitySet<ExitOrders> ExitOrders
		{
			get
			{
				return this._ExitOrders;
			}
			set
			{
				this._ExitOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_PurchaseOrders", Storage="_PurchaseOrders", ThisKey="ID", OtherKey="DelivererID")]
		public EntitySet<PurchaseOrders> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Deliverers", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Deliverers.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Deliverers.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Deliverers", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Deliverers.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Deliverers.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = this;
		}
		
		private void detach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = null;
		}
		
		private void attach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = this;
		}
		
		private void detach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = null;
		}
		
		private void attach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrders entity)
		{
			this.SendPropertyChanging();
			entity.Deliverers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExitNoticeItems")]
	public partial class ExitNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ExitNoticeID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private decimal _Weight;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<ExitNotices> _ExitNotices;
		
		private EntityRef<Products> _Products;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnExitNoticeIDChanging(string value);
    partial void OnExitNoticeIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExitNoticeItems()
		{
			this._Vendors = default(EntityRef<Vendors>);
			this._ExitNotices = default(EntityRef<ExitNotices>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExitNoticeID
		{
			get
			{
				return this._ExitNoticeID;
			}
			set
			{
				if ((this._ExitNoticeID != value))
				{
					if (this._ExitNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExitNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._ExitNoticeID = value;
					this.SendPropertyChanged("ExitNoticeID");
					this.OnExitNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_ExitNoticeItems", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.ExitNoticeItems.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.ExitNoticeItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_ExitNoticeItems", Storage="_ExitNotices", ThisKey="ExitNoticeID", OtherKey="ID", IsForeignKey=true)]
		public ExitNotices ExitNotices
		{
			get
			{
				return this._ExitNotices.Entity;
			}
			set
			{
				ExitNotices previousValue = this._ExitNotices.Entity;
				if (((previousValue != value) 
							|| (this._ExitNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExitNotices.Entity = null;
						previousValue.ExitNoticeItems.Remove(this);
					}
					this._ExitNotices.Entity = value;
					if ((value != null))
					{
						value.ExitNoticeItems.Add(this);
						this._ExitNoticeID = value.ID;
					}
					else
					{
						this._ExitNoticeID = default(string);
					}
					this.SendPropertyChanged("ExitNotices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ExitNoticeItems", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ExitNoticeItems.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ExitNoticeItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExitNotices")]
	public partial class ExitNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _SalesOrderID;
		
		private int _ExitType;
		
		private int _DeliveryType;
		
		private string _CompanyCode;
		
		private string _WareCode;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNoticeItems> _ExitNoticeItems;
		
		private EntitySet<ExitOrders> _ExitOrders;
		
		private EntitySet<PackingOrders> _PackingOrders;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<Consignees> _Consignees;
		
		private EntityRef<Deliverers> _Deliverers;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnExitTypeChanging(int value);
    partial void OnExitTypeChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnWareCodeChanging(string value);
    partial void OnWareCodeChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExitNotices()
		{
			this._ExitNoticeItems = new EntitySet<ExitNoticeItems>(new Action<ExitNoticeItems>(this.attach_ExitNoticeItems), new Action<ExitNoticeItems>(this.detach_ExitNoticeItems));
			this._ExitOrders = new EntitySet<ExitOrders>(new Action<ExitOrders>(this.attach_ExitOrders), new Action<ExitOrders>(this.detach_ExitOrders));
			this._PackingOrders = new EntitySet<PackingOrders>(new Action<PackingOrders>(this.attach_PackingOrders), new Action<PackingOrders>(this.detach_PackingOrders));
			this._AdminChains = default(EntityRef<AdminChains>);
			this._Consignees = default(EntityRef<Consignees>);
			this._Deliverers = default(EntityRef<Deliverers>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitType", DbType="Int NOT NULL")]
		public int ExitType
		{
			get
			{
				return this._ExitType;
			}
			set
			{
				if ((this._ExitType != value))
				{
					this.OnExitTypeChanging(value);
					this.SendPropertyChanging();
					this._ExitType = value;
					this.SendPropertyChanged("ExitType");
					this.OnExitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WareCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WareCode
		{
			get
			{
				return this._WareCode;
			}
			set
			{
				if ((this._WareCode != value))
				{
					this.OnWareCodeChanging(value);
					this.SendPropertyChanging();
					this._WareCode = value;
					this.SendPropertyChanged("WareCode");
					this.OnWareCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Consignees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					if (this._Deliverers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_ExitNoticeItems", Storage="_ExitNoticeItems", ThisKey="ID", OtherKey="ExitNoticeID")]
		public EntitySet<ExitNoticeItems> ExitNoticeItems
		{
			get
			{
				return this._ExitNoticeItems;
			}
			set
			{
				this._ExitNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_ExitOrders", Storage="_ExitOrders", ThisKey="ID", OtherKey="ExitNoticeID")]
		public EntitySet<ExitOrders> ExitOrders
		{
			get
			{
				return this._ExitOrders;
			}
			set
			{
				this._ExitOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_PackingOrders", Storage="_PackingOrders", ThisKey="ID", OtherKey="ExitNoticeID")]
		public EntitySet<PackingOrders> PackingOrders
		{
			get
			{
				return this._PackingOrders;
			}
			set
			{
				this._PackingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_ExitNotices", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.ExitNotices.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.ExitNotices.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_ExitNotices", Storage="_Consignees", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Consignees Consignees
		{
			get
			{
				return this._Consignees.Entity;
			}
			set
			{
				Consignees previousValue = this._Consignees.Entity;
				if (((previousValue != value) 
							|| (this._Consignees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consignees.Entity = null;
						previousValue.ExitNotices.Remove(this);
					}
					this._Consignees.Entity = value;
					if ((value != null))
					{
						value.ExitNotices.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Consignees");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_ExitNotices", Storage="_Deliverers", ThisKey="DelivererID", OtherKey="ID", IsForeignKey=true)]
		public Deliverers Deliverers
		{
			get
			{
				return this._Deliverers.Entity;
			}
			set
			{
				Deliverers previousValue = this._Deliverers.Entity;
				if (((previousValue != value) 
							|| (this._Deliverers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deliverers.Entity = null;
						previousValue.ExitNotices.Remove(this);
					}
					this._Deliverers.Entity = value;
					if ((value != null))
					{
						value.ExitNotices.Add(this);
						this._DelivererID = value.ID;
					}
					else
					{
						this._DelivererID = default(string);
					}
					this.SendPropertyChanged("Deliverers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_ExitNotices", Storage="_SalesOrders", ThisKey="SalesOrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.ExitNotices.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.ExitNotices.Add(this);
						this._SalesOrderID = value.ID;
					}
					else
					{
						this._SalesOrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = this;
		}
		
		private void detach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = null;
		}
		
		private void attach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = this;
		}
		
		private void detach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = null;
		}
		
		private void attach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = this;
		}
		
		private void detach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.ExitNotices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExitOrderItems")]
	public partial class ExitOrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ExitOrderID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private decimal _Weight;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<ExitOrders> _ExitOrders;
		
		private EntityRef<Products> _Products;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnExitOrderIDChanging(string value);
    partial void OnExitOrderIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExitOrderItems()
		{
			this._Vendors = default(EntityRef<Vendors>);
			this._ExitOrders = default(EntityRef<ExitOrders>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExitOrderID
		{
			get
			{
				return this._ExitOrderID;
			}
			set
			{
				if ((this._ExitOrderID != value))
				{
					if (this._ExitOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExitOrderIDChanging(value);
					this.SendPropertyChanging();
					this._ExitOrderID = value;
					this.SendPropertyChanged("ExitOrderID");
					this.OnExitOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_ExitOrderItems", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.ExitOrderItems.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.ExitOrderItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitOrders_ExitOrderItems", Storage="_ExitOrders", ThisKey="ExitOrderID", OtherKey="ID", IsForeignKey=true)]
		public ExitOrders ExitOrders
		{
			get
			{
				return this._ExitOrders.Entity;
			}
			set
			{
				ExitOrders previousValue = this._ExitOrders.Entity;
				if (((previousValue != value) 
							|| (this._ExitOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExitOrders.Entity = null;
						previousValue.ExitOrderItems.Remove(this);
					}
					this._ExitOrders.Entity = value;
					if ((value != null))
					{
						value.ExitOrderItems.Add(this);
						this._ExitOrderID = value.ID;
					}
					else
					{
						this._ExitOrderID = default(string);
					}
					this.SendPropertyChanged("ExitOrders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ExitOrderItems", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ExitOrderItems.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ExitOrderItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExitOrders")]
	public partial class ExitOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _SalesOrderID;
		
		private string _ExitNoticeID;
		
		private int _ExitType;
		
		private int _DeliveryType;
		
		private string _CompanyCode;
		
		private string _WareCode;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitOrderItems> _ExitOrderItems;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<Consignees> _Consignees;
		
		private EntityRef<Deliverers> _Deliverers;
		
		private EntityRef<ExitNotices> _ExitNotices;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnExitNoticeIDChanging(string value);
    partial void OnExitNoticeIDChanged();
    partial void OnExitTypeChanging(int value);
    partial void OnExitTypeChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnWareCodeChanging(string value);
    partial void OnWareCodeChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExitOrders()
		{
			this._ExitOrderItems = new EntitySet<ExitOrderItems>(new Action<ExitOrderItems>(this.attach_ExitOrderItems), new Action<ExitOrderItems>(this.detach_ExitOrderItems));
			this._AdminChains = default(EntityRef<AdminChains>);
			this._Consignees = default(EntityRef<Consignees>);
			this._Deliverers = default(EntityRef<Deliverers>);
			this._ExitNotices = default(EntityRef<ExitNotices>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExitNoticeID
		{
			get
			{
				return this._ExitNoticeID;
			}
			set
			{
				if ((this._ExitNoticeID != value))
				{
					if (this._ExitNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExitNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._ExitNoticeID = value;
					this.SendPropertyChanged("ExitNoticeID");
					this.OnExitNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitType", DbType="Int NOT NULL")]
		public int ExitType
		{
			get
			{
				return this._ExitType;
			}
			set
			{
				if ((this._ExitType != value))
				{
					this.OnExitTypeChanging(value);
					this.SendPropertyChanging();
					this._ExitType = value;
					this.SendPropertyChanged("ExitType");
					this.OnExitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WareCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WareCode
		{
			get
			{
				return this._WareCode;
			}
			set
			{
				if ((this._WareCode != value))
				{
					this.OnWareCodeChanging(value);
					this.SendPropertyChanging();
					this._WareCode = value;
					this.SendPropertyChanged("WareCode");
					this.OnWareCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Consignees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					if (this._Deliverers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitOrders_ExitOrderItems", Storage="_ExitOrderItems", ThisKey="ID", OtherKey="ExitOrderID")]
		public EntitySet<ExitOrderItems> ExitOrderItems
		{
			get
			{
				return this._ExitOrderItems;
			}
			set
			{
				this._ExitOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_ExitOrders", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.ExitOrders.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.ExitOrders.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_ExitOrders", Storage="_Consignees", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Consignees Consignees
		{
			get
			{
				return this._Consignees.Entity;
			}
			set
			{
				Consignees previousValue = this._Consignees.Entity;
				if (((previousValue != value) 
							|| (this._Consignees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consignees.Entity = null;
						previousValue.ExitOrders.Remove(this);
					}
					this._Consignees.Entity = value;
					if ((value != null))
					{
						value.ExitOrders.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Consignees");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_ExitOrders", Storage="_Deliverers", ThisKey="DelivererID", OtherKey="ID", IsForeignKey=true)]
		public Deliverers Deliverers
		{
			get
			{
				return this._Deliverers.Entity;
			}
			set
			{
				Deliverers previousValue = this._Deliverers.Entity;
				if (((previousValue != value) 
							|| (this._Deliverers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deliverers.Entity = null;
						previousValue.ExitOrders.Remove(this);
					}
					this._Deliverers.Entity = value;
					if ((value != null))
					{
						value.ExitOrders.Add(this);
						this._DelivererID = value.ID;
					}
					else
					{
						this._DelivererID = default(string);
					}
					this.SendPropertyChanged("Deliverers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_ExitOrders", Storage="_ExitNotices", ThisKey="ExitNoticeID", OtherKey="ID", IsForeignKey=true)]
		public ExitNotices ExitNotices
		{
			get
			{
				return this._ExitNotices.Entity;
			}
			set
			{
				ExitNotices previousValue = this._ExitNotices.Entity;
				if (((previousValue != value) 
							|| (this._ExitNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExitNotices.Entity = null;
						previousValue.ExitOrders.Remove(this);
					}
					this._ExitNotices.Entity = value;
					if ((value != null))
					{
						value.ExitOrders.Add(this);
						this._ExitNoticeID = value.ID;
					}
					else
					{
						this._ExitNoticeID = default(string);
					}
					this.SendPropertyChanged("ExitNotices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_ExitOrders", Storage="_SalesOrders", ThisKey="SalesOrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.ExitOrders.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.ExitOrders.Add(this);
						this._SalesOrderID = value.ID;
					}
					else
					{
						this._SalesOrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.ExitOrders = this;
		}
		
		private void detach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.ExitOrders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inputs")]
	public partial class Inputs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _UnitPrice;
		
		private int _Currency;
		
		private decimal _Count;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Outputs> _Outputs;
		
		private EntitySet<PurchaseItems> _PurchaseItems;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<Products> _Products;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Inputs()
		{
			this._Outputs = new EntitySet<Outputs>(new Action<Outputs>(this.attach_Outputs), new Action<Outputs>(this.detach_Outputs));
			this._PurchaseItems = new EntitySet<PurchaseItems>(new Action<PurchaseItems>(this.attach_PurchaseItems), new Action<PurchaseItems>(this.detach_PurchaseItems));
			this._AdminChains = default(EntityRef<AdminChains>);
			this._Vendors = default(EntityRef<Vendors>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,7) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inputs_Outputs", Storage="_Outputs", ThisKey="ID", OtherKey="InputID")]
		public EntitySet<Outputs> Outputs
		{
			get
			{
				return this._Outputs;
			}
			set
			{
				this._Outputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inputs_PurchaseItems", Storage="_PurchaseItems", ThisKey="ID", OtherKey="InputID")]
		public EntitySet<PurchaseItems> PurchaseItems
		{
			get
			{
				return this._PurchaseItems;
			}
			set
			{
				this._PurchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_Inputs", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.Inputs.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.Inputs.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_Inputs", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.Inputs.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.Inputs.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Inputs", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.Inputs.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.Inputs.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Outputs(Outputs entity)
		{
			this.SendPropertyChanging();
			entity.Inputs = this;
		}
		
		private void detach_Outputs(Outputs entity)
		{
			this.SendPropertyChanging();
			entity.Inputs = null;
		}
		
		private void attach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Inputs = this;
		}
		
		private void detach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Inputs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CompanyCode;
		
		private string _Title;
		
		private string _Code;
		
		private string _BankAccount;
		
		private string _Address;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Invoices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdminVendor")]
	public partial class MapsAdminVendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _VendorID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<MapsAdminVendor> _MapsAdminVendor2;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<MapsAdminVendor> _MapsAdminVendor1;
		
		private EntityRef<Vendors> _Vendors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnVendorIDChanging(string value);
    partial void OnVendorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public MapsAdminVendor()
		{
			this._MapsAdminVendor2 = default(EntityRef<MapsAdminVendor>);
			this._AdminChains = default(EntityRef<AdminChains>);
			this._MapsAdminVendor1 = default(EntityRef<MapsAdminVendor>);
			this._Vendors = default(EntityRef<Vendors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if ((this._AdminChains.HasLoadedOrAssignedValue || this._MapsAdminVendor1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					if ((this._MapsAdminVendor1.HasLoadedOrAssignedValue || this._Vendors.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapsAdminVendor_MapsAdminVendor", Storage="_MapsAdminVendor2", ThisKey="AdminID,VendorID", OtherKey="AdminID,VendorID", IsUnique=true, IsForeignKey=false)]
		public MapsAdminVendor MapsAdminVendor2
		{
			get
			{
				return this._MapsAdminVendor2.Entity;
			}
			set
			{
				MapsAdminVendor previousValue = this._MapsAdminVendor2.Entity;
				if (((previousValue != value) 
							|| (this._MapsAdminVendor2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapsAdminVendor2.Entity = null;
						previousValue.MapsAdminVendor1 = null;
					}
					this._MapsAdminVendor2.Entity = value;
					if ((value != null))
					{
						value.MapsAdminVendor1 = this;
					}
					this.SendPropertyChanged("MapsAdminVendor2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_MapsAdminVendor", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.MapsAdminVendor.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.MapsAdminVendor.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapsAdminVendor_MapsAdminVendor", Storage="_MapsAdminVendor1", ThisKey="AdminID,VendorID", OtherKey="AdminID,VendorID", IsForeignKey=true)]
		public MapsAdminVendor MapsAdminVendor1
		{
			get
			{
				return this._MapsAdminVendor1.Entity;
			}
			set
			{
				MapsAdminVendor previousValue = this._MapsAdminVendor1.Entity;
				if (((previousValue != value) 
							|| (this._MapsAdminVendor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapsAdminVendor1.Entity = null;
						previousValue.MapsAdminVendor2 = null;
					}
					this._MapsAdminVendor1.Entity = value;
					if ((value != null))
					{
						value.MapsAdminVendor2 = this;
						this._AdminID = value.AdminID;
						this._VendorID = value.VendorID;
					}
					else
					{
						this._AdminID = default(string);
						this._VendorID = default(string);
					}
					this.SendPropertyChanged("MapsAdminVendor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_MapsAdminVendor", Storage="_Vendors", ThisKey="VendorID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.MapsAdminVendor.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.MapsAdminVendor.Add(this);
						this._VendorID = value.ID;
					}
					else
					{
						this._VendorID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsDeclarationOrderPacking")]
	public partial class MapsDeclarationOrderPacking
	{
		
		private string _DeclarationOrderID;
		
		private string _DeclarationNoticePackingID;
		
		private System.DateTime _CreateTime;
		
		public MapsDeclarationOrderPacking()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationOrderID
		{
			get
			{
				return this._DeclarationOrderID;
			}
			set
			{
				if ((this._DeclarationOrderID != value))
				{
					this._DeclarationOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticePackingID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticePackingID
		{
			get
			{
				return this._DeclarationNoticePackingID;
			}
			set
			{
				if ((this._DeclarationNoticePackingID != value))
				{
					this._DeclarationNoticePackingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Outputs")]
	public partial class Outputs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _InputID;
		
		private decimal _Count;
		
		private decimal _UnitPrice;
		
		private int _Currency;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<Inputs> _Inputs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Outputs()
		{
			this._Inputs = default(EntityRef<Inputs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					if (this._Inputs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,7) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inputs_Outputs", Storage="_Inputs", ThisKey="InputID", OtherKey="ID", IsForeignKey=true)]
		public Inputs Inputs
		{
			get
			{
				return this._Inputs.Entity;
			}
			set
			{
				Inputs previousValue = this._Inputs.Entity;
				if (((previousValue != value) 
							|| (this._Inputs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inputs.Entity = null;
						previousValue.Outputs.Remove(this);
					}
					this._Inputs.Entity = value;
					if ((value != null))
					{
						value.Outputs.Add(this);
						this._InputID = value.ID;
					}
					else
					{
						this._InputID = default(string);
					}
					this.SendPropertyChanged("Inputs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingOrderItems")]
	public partial class PackingOrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PackingOrderID;
		
		private string _PackingNo;
		
		private decimal _GrossWeight;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PackingProductItems> _PackingProductItems;
		
		private EntityRef<PackingOrders> _PackingOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPackingOrderIDChanging(string value);
    partial void OnPackingOrderIDChanged();
    partial void OnPackingNoChanging(string value);
    partial void OnPackingNoChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PackingOrderItems()
		{
			this._PackingProductItems = new EntitySet<PackingProductItems>(new Action<PackingProductItems>(this.attach_PackingProductItems), new Action<PackingProductItems>(this.detach_PackingProductItems));
			this._PackingOrders = default(EntityRef<PackingOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackingOrderID
		{
			get
			{
				return this._PackingOrderID;
			}
			set
			{
				if ((this._PackingOrderID != value))
				{
					if (this._PackingOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PackingOrderID = value;
					this.SendPropertyChanged("PackingOrderID");
					this.OnPackingOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackingNo
		{
			get
			{
				return this._PackingNo;
			}
			set
			{
				if ((this._PackingNo != value))
				{
					this.OnPackingNoChanging(value);
					this.SendPropertyChanging();
					this._PackingNo = value;
					this.SendPropertyChanged("PackingNo");
					this.OnPackingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingOrderItems_PackingProductItems", Storage="_PackingProductItems", ThisKey="ID", OtherKey="PackingOrderItemID")]
		public EntitySet<PackingProductItems> PackingProductItems
		{
			get
			{
				return this._PackingProductItems;
			}
			set
			{
				this._PackingProductItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingOrders_PackingOrderItems", Storage="_PackingOrders", ThisKey="PackingOrderID", OtherKey="ID", IsForeignKey=true)]
		public PackingOrders PackingOrders
		{
			get
			{
				return this._PackingOrders.Entity;
			}
			set
			{
				PackingOrders previousValue = this._PackingOrders.Entity;
				if (((previousValue != value) 
							|| (this._PackingOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackingOrders.Entity = null;
						previousValue.PackingOrderItems.Remove(this);
					}
					this._PackingOrders.Entity = value;
					if ((value != null))
					{
						value.PackingOrderItems.Add(this);
						this._PackingOrderID = value.ID;
					}
					else
					{
						this._PackingOrderID = default(string);
					}
					this.SendPropertyChanged("PackingOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.PackingOrderItems = this;
		}
		
		private void detach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.PackingOrderItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingOrders")]
	public partial class PackingOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _SalesOrderID;
		
		private string _ExitNoticeID;
		
		private string _ContractNo;
		
		private string _ConsigneeID;
		
		private int _Count;
		
		private decimal _GrossWeight;
		
		private System.Nullable<int> _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PackingOrderItems> _PackingOrderItems;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<Consignees> _Consignees;
		
		private EntityRef<ExitNotices> _ExitNotices;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnExitNoticeIDChanging(string value);
    partial void OnExitNoticeIDChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PackingOrders()
		{
			this._PackingOrderItems = new EntitySet<PackingOrderItems>(new Action<PackingOrderItems>(this.attach_PackingOrderItems), new Action<PackingOrderItems>(this.detach_PackingOrderItems));
			this._AdminChains = default(EntityRef<AdminChains>);
			this._Consignees = default(EntityRef<Consignees>);
			this._ExitNotices = default(EntityRef<ExitNotices>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExitNoticeID
		{
			get
			{
				return this._ExitNoticeID;
			}
			set
			{
				if ((this._ExitNoticeID != value))
				{
					if (this._ExitNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExitNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._ExitNoticeID = value;
					this.SendPropertyChanged("ExitNoticeID");
					this.OnExitNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Consignees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingOrders_PackingOrderItems", Storage="_PackingOrderItems", ThisKey="ID", OtherKey="PackingOrderID")]
		public EntitySet<PackingOrderItems> PackingOrderItems
		{
			get
			{
				return this._PackingOrderItems;
			}
			set
			{
				this._PackingOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PackingOrders", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.PackingOrders.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.PackingOrders.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_PackingOrders", Storage="_Consignees", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Consignees Consignees
		{
			get
			{
				return this._Consignees.Entity;
			}
			set
			{
				Consignees previousValue = this._Consignees.Entity;
				if (((previousValue != value) 
							|| (this._Consignees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consignees.Entity = null;
						previousValue.PackingOrders.Remove(this);
					}
					this._Consignees.Entity = value;
					if ((value != null))
					{
						value.PackingOrders.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Consignees");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExitNotices_PackingOrders", Storage="_ExitNotices", ThisKey="ExitNoticeID", OtherKey="ID", IsForeignKey=true)]
		public ExitNotices ExitNotices
		{
			get
			{
				return this._ExitNotices.Entity;
			}
			set
			{
				ExitNotices previousValue = this._ExitNotices.Entity;
				if (((previousValue != value) 
							|| (this._ExitNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExitNotices.Entity = null;
						previousValue.PackingOrders.Remove(this);
					}
					this._ExitNotices.Entity = value;
					if ((value != null))
					{
						value.PackingOrders.Add(this);
						this._ExitNoticeID = value.ID;
					}
					else
					{
						this._ExitNoticeID = default(string);
					}
					this.SendPropertyChanged("ExitNotices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_PackingOrders", Storage="_SalesOrders", ThisKey="SalesOrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.PackingOrders.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.PackingOrders.Add(this);
						this._SalesOrderID = value.ID;
					}
					else
					{
						this._SalesOrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackingOrderItems(PackingOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.PackingOrders = this;
		}
		
		private void detach_PackingOrderItems(PackingOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.PackingOrders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingProductItems")]
	public partial class PackingProductItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PackingOrderItemID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private decimal _Weight;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<PackingOrderItems> _PackingOrderItems;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<Products> _Products;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPackingOrderItemIDChanging(string value);
    partial void OnPackingOrderItemIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PackingProductItems()
		{
			this._PackingOrderItems = default(EntityRef<PackingOrderItems>);
			this._Vendors = default(EntityRef<Vendors>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingOrderItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackingOrderItemID
		{
			get
			{
				return this._PackingOrderItemID;
			}
			set
			{
				if ((this._PackingOrderItemID != value))
				{
					if (this._PackingOrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._PackingOrderItemID = value;
					this.SendPropertyChanged("PackingOrderItemID");
					this.OnPackingOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingOrderItems_PackingProductItems", Storage="_PackingOrderItems", ThisKey="PackingOrderItemID", OtherKey="ID", IsForeignKey=true)]
		public PackingOrderItems PackingOrderItems
		{
			get
			{
				return this._PackingOrderItems.Entity;
			}
			set
			{
				PackingOrderItems previousValue = this._PackingOrderItems.Entity;
				if (((previousValue != value) 
							|| (this._PackingOrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackingOrderItems.Entity = null;
						previousValue.PackingProductItems.Remove(this);
					}
					this._PackingOrderItems.Entity = value;
					if ((value != null))
					{
						value.PackingProductItems.Add(this);
						this._PackingOrderItemID = value.ID;
					}
					else
					{
						this._PackingOrderItemID = default(string);
					}
					this.SendPropertyChanged("PackingOrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_PackingProductItems", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.PackingProductItems.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.PackingProductItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PackingProductItems", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.PackingProductItems.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.PackingProductItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Products : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _ManufacturerID;
		
		private int _Category;
		
		private string _PackageCase;
		
		private string _Packaging;
		
		private string _Batch;
		
		private string _DateCode;
		
		private decimal _Weight;
		
		private System.Xml.Linq.XElement _Properties;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNoticeItems> _ExitNoticeItems;
		
		private EntitySet<ExitOrderItems> _ExitOrderItems;
		
		private EntitySet<Inputs> _Inputs;
		
		private EntitySet<PackingProductItems> _PackingProductItems;
		
		private EntitySet<PurchaseItems> _PurchaseItems;
		
		private EntitySet<SalesOrderItems> _SalesOrderItems;
		
		private EntityRef<Vendors> _Vendors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnDateCodeChanging(string value);
    partial void OnDateCodeChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnPropertiesChanging(System.Xml.Linq.XElement value);
    partial void OnPropertiesChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Products()
		{
			this._ExitNoticeItems = new EntitySet<ExitNoticeItems>(new Action<ExitNoticeItems>(this.attach_ExitNoticeItems), new Action<ExitNoticeItems>(this.detach_ExitNoticeItems));
			this._ExitOrderItems = new EntitySet<ExitOrderItems>(new Action<ExitOrderItems>(this.attach_ExitOrderItems), new Action<ExitOrderItems>(this.detach_ExitOrderItems));
			this._Inputs = new EntitySet<Inputs>(new Action<Inputs>(this.attach_Inputs), new Action<Inputs>(this.detach_Inputs));
			this._PackingProductItems = new EntitySet<PackingProductItems>(new Action<PackingProductItems>(this.attach_PackingProductItems), new Action<PackingProductItems>(this.detach_PackingProductItems));
			this._PurchaseItems = new EntitySet<PurchaseItems>(new Action<PurchaseItems>(this.attach_PurchaseItems), new Action<PurchaseItems>(this.detach_PurchaseItems));
			this._SalesOrderItems = new EntitySet<SalesOrderItems>(new Action<SalesOrderItems>(this.attach_SalesOrderItems), new Action<SalesOrderItems>(this.detach_SalesOrderItems));
			this._Vendors = default(EntityRef<Vendors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this.OnDateCodeChanging(value);
					this.SendPropertyChanging();
					this._DateCode = value;
					this.SendPropertyChanged("DateCode");
					this.OnDateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,7) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ExitNoticeItems", Storage="_ExitNoticeItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<ExitNoticeItems> ExitNoticeItems
		{
			get
			{
				return this._ExitNoticeItems;
			}
			set
			{
				this._ExitNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ExitOrderItems", Storage="_ExitOrderItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<ExitOrderItems> ExitOrderItems
		{
			get
			{
				return this._ExitOrderItems;
			}
			set
			{
				this._ExitOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Inputs", Storage="_Inputs", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<Inputs> Inputs
		{
			get
			{
				return this._Inputs;
			}
			set
			{
				this._Inputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PackingProductItems", Storage="_PackingProductItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<PackingProductItems> PackingProductItems
		{
			get
			{
				return this._PackingProductItems;
			}
			set
			{
				this._PackingProductItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PurchaseItems", Storage="_PurchaseItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<PurchaseItems> PurchaseItems
		{
			get
			{
				return this._PurchaseItems;
			}
			set
			{
				this._PurchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_SalesOrderItems", Storage="_SalesOrderItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<SalesOrderItems> SalesOrderItems
		{
			get
			{
				return this._SalesOrderItems;
			}
			set
			{
				this._SalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_Products", Storage="_Vendors", ThisKey="ManufacturerID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ManufacturerID = value.ID;
					}
					else
					{
						this._ManufacturerID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ExitNoticeItems(ExitNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ExitOrderItems(ExitOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_Inputs(Inputs entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_PackingProductItems(PackingProductItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseFiles")]
	public partial class PurchaseFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _ItemID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private int _FileFormat;
		
		private string _URL;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<PurchaseItems> _PurchaseItems;
		
		private EntityRef<PurchaseOrders> _PurchaseOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(int value);
    partial void OnFileFormatChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PurchaseFiles()
		{
			this._AdminChains = default(EntityRef<AdminChains>);
			this._PurchaseItems = default(EntityRef<PurchaseItems>);
			this._PurchaseOrders = default(EntityRef<PurchaseOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._PurchaseOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(50)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._PurchaseItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="Int NOT NULL")]
		public int FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseFiles", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.PurchaseFiles.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.PurchaseFiles.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseFiles", Storage="_PurchaseItems", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseItems PurchaseItems
		{
			get
			{
				return this._PurchaseItems.Entity;
			}
			set
			{
				PurchaseItems previousValue = this._PurchaseItems.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseItems.Entity = null;
						previousValue.PurchaseFiles.Remove(this);
					}
					this._PurchaseItems.Entity = value;
					if ((value != null))
					{
						value.PurchaseFiles.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(string);
					}
					this.SendPropertyChanged("PurchaseItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseFiles", Storage="_PurchaseOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseOrders PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders.Entity;
			}
			set
			{
				PurchaseOrders previousValue = this._PurchaseOrders.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrders.Entity = null;
						previousValue.PurchaseFiles.Remove(this);
					}
					this._PurchaseOrders.Entity = value;
					if ((value != null))
					{
						value.PurchaseFiles.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("PurchaseOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseItems")]
	public partial class PurchaseItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _InputID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private int _Currency;
		
		private decimal _UnitPrice;
		
		private decimal _Weight;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PurchaseFiles> _PurchaseFiles;
		
		private EntitySet<PurchaseLogs> _PurchaseLogs;
		
		private EntitySet<PurchaseForms> _PurchaseForms;
		
		private EntityRef<Inputs> _Inputs;
		
		private EntityRef<Products> _Products;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<PurchaseOrders> _PurchaseOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PurchaseItems()
		{
			this._PurchaseFiles = new EntitySet<PurchaseFiles>(new Action<PurchaseFiles>(this.attach_PurchaseFiles), new Action<PurchaseFiles>(this.detach_PurchaseFiles));
			this._PurchaseLogs = new EntitySet<PurchaseLogs>(new Action<PurchaseLogs>(this.attach_PurchaseLogs), new Action<PurchaseLogs>(this.detach_PurchaseLogs));
			this._PurchaseForms = new EntitySet<PurchaseForms>(new Action<PurchaseForms>(this.attach_PurchaseForms), new Action<PurchaseForms>(this.detach_PurchaseForms));
			this._Inputs = default(EntityRef<Inputs>);
			this._Products = default(EntityRef<Products>);
			this._Vendors = default(EntityRef<Vendors>);
			this._PurchaseOrders = default(EntityRef<PurchaseOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._PurchaseOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					if (this._Inputs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,7) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseFiles", Storage="_PurchaseFiles", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<PurchaseFiles> PurchaseFiles
		{
			get
			{
				return this._PurchaseFiles;
			}
			set
			{
				this._PurchaseFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseLogs", Storage="_PurchaseLogs", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<PurchaseLogs> PurchaseLogs
		{
			get
			{
				return this._PurchaseLogs;
			}
			set
			{
				this._PurchaseLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseForms", Storage="_PurchaseForms", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<PurchaseForms> PurchaseForms
		{
			get
			{
				return this._PurchaseForms;
			}
			set
			{
				this._PurchaseForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inputs_PurchaseItems", Storage="_Inputs", ThisKey="InputID", OtherKey="ID", IsForeignKey=true)]
		public Inputs Inputs
		{
			get
			{
				return this._Inputs.Entity;
			}
			set
			{
				Inputs previousValue = this._Inputs.Entity;
				if (((previousValue != value) 
							|| (this._Inputs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inputs.Entity = null;
						previousValue.PurchaseItems.Remove(this);
					}
					this._Inputs.Entity = value;
					if ((value != null))
					{
						value.PurchaseItems.Add(this);
						this._InputID = value.ID;
					}
					else
					{
						this._InputID = default(string);
					}
					this.SendPropertyChanged("Inputs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PurchaseItems", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.PurchaseItems.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.PurchaseItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_PurchaseItems", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.PurchaseItems.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.PurchaseItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseItems", Storage="_PurchaseOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseOrders PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders.Entity;
			}
			set
			{
				PurchaseOrders previousValue = this._PurchaseOrders.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrders.Entity = null;
						previousValue.PurchaseItems.Remove(this);
					}
					this._PurchaseOrders.Entity = value;
					if ((value != null))
					{
						value.PurchaseItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("PurchaseOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = this;
		}
		
		private void detach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = null;
		}
		
		private void attach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = this;
		}
		
		private void detach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = null;
		}
		
		private void attach_PurchaseForms(PurchaseForms entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = this;
		}
		
		private void detach_PurchaseForms(PurchaseForms entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseLogs")]
	public partial class PurchaseLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _ItemID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<PurchaseItems> _PurchaseItems;
		
		private EntityRef<PurchaseOrders> _PurchaseOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PurchaseLogs()
		{
			this._AdminChains = default(EntityRef<AdminChains>);
			this._PurchaseItems = default(EntityRef<PurchaseItems>);
			this._PurchaseOrders = default(EntityRef<PurchaseOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._PurchaseOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(50)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._PurchaseItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseLogs", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.PurchaseLogs.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.PurchaseLogs.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseLogs", Storage="_PurchaseItems", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseItems PurchaseItems
		{
			get
			{
				return this._PurchaseItems.Entity;
			}
			set
			{
				PurchaseItems previousValue = this._PurchaseItems.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseItems.Entity = null;
						previousValue.PurchaseLogs.Remove(this);
					}
					this._PurchaseItems.Entity = value;
					if ((value != null))
					{
						value.PurchaseLogs.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(string);
					}
					this.SendPropertyChanged("PurchaseItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseLogs", Storage="_PurchaseOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseOrders PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders.Entity;
			}
			set
			{
				PurchaseOrders previousValue = this._PurchaseOrders.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrders.Entity = null;
						previousValue.PurchaseLogs.Remove(this);
					}
					this._PurchaseOrders.Entity = value;
					if ((value != null))
					{
						value.PurchaseLogs.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("PurchaseOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseOrders")]
	public partial class PurchaseOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _CompanyID;
		
		private string _DelivererID;
		
		private string _ConsigneeID;
		
		private string _BeneficiaryID;
		
		private string _WaybillCode;
		
		private string _District;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<PurchaseFiles> _PurchaseFiles;
		
		private EntitySet<PurchaseItems> _PurchaseItems;
		
		private EntitySet<PurchaseLogs> _PurchaseLogs;
		
		private EntityRef<AdminChains> _AdminChains;
		
		private EntityRef<Beneficiaries> _Beneficiaries;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Consignees> _Consignees;
		
		private EntityRef<Deliverers> _Deliverers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnBeneficiaryIDChanging(string value);
    partial void OnBeneficiaryIDChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PurchaseOrders()
		{
			this._PurchaseFiles = new EntitySet<PurchaseFiles>(new Action<PurchaseFiles>(this.attach_PurchaseFiles), new Action<PurchaseFiles>(this.detach_PurchaseFiles));
			this._PurchaseItems = new EntitySet<PurchaseItems>(new Action<PurchaseItems>(this.attach_PurchaseItems), new Action<PurchaseItems>(this.detach_PurchaseItems));
			this._PurchaseLogs = new EntitySet<PurchaseLogs>(new Action<PurchaseLogs>(this.attach_PurchaseLogs), new Action<PurchaseLogs>(this.detach_PurchaseLogs));
			this._AdminChains = default(EntityRef<AdminChains>);
			this._Beneficiaries = default(EntityRef<Beneficiaries>);
			this._Companies = default(EntityRef<Companies>);
			this._Consignees = default(EntityRef<Consignees>);
			this._Deliverers = default(EntityRef<Deliverers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminChains.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					if (this._Deliverers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Consignees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					if (this._Beneficiaries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseFiles", Storage="_PurchaseFiles", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<PurchaseFiles> PurchaseFiles
		{
			get
			{
				return this._PurchaseFiles;
			}
			set
			{
				this._PurchaseFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseItems", Storage="_PurchaseItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<PurchaseItems> PurchaseItems
		{
			get
			{
				return this._PurchaseItems;
			}
			set
			{
				this._PurchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrders_PurchaseLogs", Storage="_PurchaseLogs", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<PurchaseLogs> PurchaseLogs
		{
			get
			{
				return this._PurchaseLogs;
			}
			set
			{
				this._PurchaseLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminChains_PurchaseOrders", Storage="_AdminChains", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public AdminChains AdminChains
		{
			get
			{
				return this._AdminChains.Entity;
			}
			set
			{
				AdminChains previousValue = this._AdminChains.Entity;
				if (((previousValue != value) 
							|| (this._AdminChains.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminChains.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._AdminChains.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminChains");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_PurchaseOrders", Storage="_Beneficiaries", ThisKey="BeneficiaryID", OtherKey="ID", IsForeignKey=true)]
		public Beneficiaries Beneficiaries
		{
			get
			{
				return this._Beneficiaries.Entity;
			}
			set
			{
				Beneficiaries previousValue = this._Beneficiaries.Entity;
				if (((previousValue != value) 
							|| (this._Beneficiaries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Beneficiaries.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._Beneficiaries.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._BeneficiaryID = value.ID;
					}
					else
					{
						this._BeneficiaryID = default(string);
					}
					this.SendPropertyChanged("Beneficiaries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_PurchaseOrders", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignees_PurchaseOrders", Storage="_Consignees", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Consignees Consignees
		{
			get
			{
				return this._Consignees.Entity;
			}
			set
			{
				Consignees previousValue = this._Consignees.Entity;
				if (((previousValue != value) 
							|| (this._Consignees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consignees.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._Consignees.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Consignees");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deliverers_PurchaseOrders", Storage="_Deliverers", ThisKey="DelivererID", OtherKey="ID", IsForeignKey=true)]
		public Deliverers Deliverers
		{
			get
			{
				return this._Deliverers.Entity;
			}
			set
			{
				Deliverers previousValue = this._Deliverers.Entity;
				if (((previousValue != value) 
							|| (this._Deliverers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deliverers.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._Deliverers.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._DelivererID = value.ID;
					}
					else
					{
						this._DelivererID = default(string);
					}
					this.SendPropertyChanged("Deliverers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = this;
		}
		
		private void detach_PurchaseFiles(PurchaseFiles entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = null;
		}
		
		private void attach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = this;
		}
		
		private void detach_PurchaseItems(PurchaseItems entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = null;
		}
		
		private void attach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = this;
		}
		
		private void detach_PurchaseLogs(PurchaseLogs entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesOrderFiles")]
	public partial class SalesOrderFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SalesOrderID;
		
		private string _SalesOrderItemID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private int _FileFormat;
		
		private string _URL;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<SalesOrderItems> _SalesOrderItems;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesOrderItemIDChanging(string value);
    partial void OnSalesOrderItemIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(int value);
    partial void OnFileFormatChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SalesOrderFiles()
		{
			this._SalesOrderItems = default(EntityRef<SalesOrderItems>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._SalesOrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderItemID", DbType="VarChar(50)")]
		public string SalesOrderItemID
		{
			get
			{
				return this._SalesOrderItemID;
			}
			set
			{
				if ((this._SalesOrderItemID != value))
				{
					this.OnSalesOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderItemID = value;
					this.SendPropertyChanged("SalesOrderItemID");
					this.OnSalesOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="Int NOT NULL")]
		public int FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderItems_SalesOrderFiles", Storage="_SalesOrderItems", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrderItems SalesOrderItems
		{
			get
			{
				return this._SalesOrderItems.Entity;
			}
			set
			{
				SalesOrderItems previousValue = this._SalesOrderItems.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrderItems.Entity = null;
						previousValue.SalesOrderFiles = null;
					}
					this._SalesOrderItems.Entity = value;
					if ((value != null))
					{
						value.SalesOrderFiles = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("SalesOrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderFiles", Storage="_SalesOrders", ThisKey="SalesOrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.SalesOrderFiles.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.SalesOrderFiles.Add(this);
						this._SalesOrderID = value.ID;
					}
					else
					{
						this._SalesOrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesOrderItems")]
	public partial class SalesOrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SalesOrderID;
		
		private string _OutputID;
		
		private string _ProductID;
		
		private string _SupplierID;
		
		private string _Origin;
		
		private decimal _Count;
		
		private decimal _UnitPrice;
		
		private int _Currency;
		
		private System.DateTime _DeliverDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<SalesOrderFiles> _SalesOrderFiles;
		
		private EntitySet<SalesOrderLogs> _SalesOrderLogs;
		
		private EntityRef<Products> _Products;
		
		private EntityRef<Vendors> _Vendors;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnOutputIDChanging(string value);
    partial void OnOutputIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnDeliverDateChanging(System.DateTime value);
    partial void OnDeliverDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SalesOrderItems()
		{
			this._SalesOrderFiles = default(EntityRef<SalesOrderFiles>);
			this._SalesOrderLogs = new EntitySet<SalesOrderLogs>(new Action<SalesOrderLogs>(this.attach_SalesOrderLogs), new Action<SalesOrderLogs>(this.detach_SalesOrderLogs));
			this._Products = default(EntityRef<Products>);
			this._Vendors = default(EntityRef<Vendors>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OutputID
		{
			get
			{
				return this._OutputID;
			}
			set
			{
				if ((this._OutputID != value))
				{
					this.OnOutputIDChanging(value);
					this.SendPropertyChanging();
					this._OutputID = value;
					this.SendPropertyChanged("OutputID");
					this.OnOutputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,7) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliverDate
		{
			get
			{
				return this._DeliverDate;
			}
			set
			{
				if ((this._DeliverDate != value))
				{
					this.OnDeliverDateChanging(value);
					this.SendPropertyChanging();
					this._DeliverDate = value;
					this.SendPropertyChanged("DeliverDate");
					this.OnDeliverDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderItems_SalesOrderFiles", Storage="_SalesOrderFiles", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public SalesOrderFiles SalesOrderFiles
		{
			get
			{
				return this._SalesOrderFiles.Entity;
			}
			set
			{
				SalesOrderFiles previousValue = this._SalesOrderFiles.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrderFiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrderFiles.Entity = null;
						previousValue.SalesOrderItems = null;
					}
					this._SalesOrderFiles.Entity = value;
					if ((value != null))
					{
						value.SalesOrderItems = this;
					}
					this.SendPropertyChanged("SalesOrderFiles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderItems_SalesOrderLogs", Storage="_SalesOrderLogs", ThisKey="ID", OtherKey="OrderItemID")]
		public EntitySet<SalesOrderLogs> SalesOrderLogs
		{
			get
			{
				return this._SalesOrderLogs;
			}
			set
			{
				this._SalesOrderLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_SalesOrderItems", Storage="_Products", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.SalesOrderItems.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.SalesOrderItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_SalesOrderItems", Storage="_Vendors", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.SalesOrderItems.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.SalesOrderItems.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderItems", Storage="_SalesOrders", ThisKey="SalesOrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.SalesOrderItems.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.SalesOrderItems.Add(this);
						this._SalesOrderID = value.ID;
					}
					else
					{
						this._SalesOrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderLogs(SalesOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderItems = this;
		}
		
		private void detach_SalesOrderLogs(SalesOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesOrderLogs")]
	public partial class SalesOrderLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _OrderItemID;
		
		private string _AdminID;
		
		private System.Xml.Linq.XElement _Properties;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<SalesOrderItems> _SalesOrderItems;
		
		private EntityRef<SalesOrders> _SalesOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPropertiesChanging(System.Xml.Linq.XElement value);
    partial void OnPropertiesChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SalesOrderLogs()
		{
			this._SalesOrderItems = default(EntityRef<SalesOrderItems>);
			this._SalesOrders = default(EntityRef<SalesOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._SalesOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					if (this._SalesOrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderItems_SalesOrderLogs", Storage="_SalesOrderItems", ThisKey="OrderItemID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrderItems SalesOrderItems
		{
			get
			{
				return this._SalesOrderItems.Entity;
			}
			set
			{
				SalesOrderItems previousValue = this._SalesOrderItems.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrderItems.Entity = null;
						previousValue.SalesOrderLogs.Remove(this);
					}
					this._SalesOrderItems.Entity = value;
					if ((value != null))
					{
						value.SalesOrderLogs.Add(this);
						this._OrderItemID = value.ID;
					}
					else
					{
						this._OrderItemID = default(string);
					}
					this.SendPropertyChanged("SalesOrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderLogs", Storage="_SalesOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public SalesOrders SalesOrders
		{
			get
			{
				return this._SalesOrders.Entity;
			}
			set
			{
				SalesOrders previousValue = this._SalesOrders.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrders.Entity = null;
						previousValue.SalesOrderLogs.Remove(this);
					}
					this._SalesOrders.Entity = value;
					if ((value != null))
					{
						value.SalesOrderLogs.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("SalesOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesOrders")]
	public partial class SalesOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private string _AdminID;
		
		private string _CompanyCode;
		
		private string _BeneficiaryID;
		
		private int _PaymentTerm;
		
		private int _TransportMode;
		
		private string _ContactID;
		
		private System.DateTime _OrderDate;
		
		private int _District;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<ExitNotices> _ExitNotices;
		
		private EntitySet<ExitOrders> _ExitOrders;
		
		private EntitySet<PackingOrders> _PackingOrders;
		
		private EntitySet<SalesOrderFiles> _SalesOrderFiles;
		
		private EntitySet<SalesOrderItems> _SalesOrderItems;
		
		private EntitySet<SalesOrderLogs> _SalesOrderLogs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnBeneficiaryIDChanging(string value);
    partial void OnBeneficiaryIDChanged();
    partial void OnPaymentTermChanging(int value);
    partial void OnPaymentTermChanged();
    partial void OnTransportModeChanging(int value);
    partial void OnTransportModeChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDistrictChanging(int value);
    partial void OnDistrictChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SalesOrders()
		{
			this._ExitNotices = new EntitySet<ExitNotices>(new Action<ExitNotices>(this.attach_ExitNotices), new Action<ExitNotices>(this.detach_ExitNotices));
			this._ExitOrders = new EntitySet<ExitOrders>(new Action<ExitOrders>(this.attach_ExitOrders), new Action<ExitOrders>(this.detach_ExitOrders));
			this._PackingOrders = new EntitySet<PackingOrders>(new Action<PackingOrders>(this.attach_PackingOrders), new Action<PackingOrders>(this.detach_PackingOrders));
			this._SalesOrderFiles = new EntitySet<SalesOrderFiles>(new Action<SalesOrderFiles>(this.attach_SalesOrderFiles), new Action<SalesOrderFiles>(this.detach_SalesOrderFiles));
			this._SalesOrderItems = new EntitySet<SalesOrderItems>(new Action<SalesOrderItems>(this.attach_SalesOrderItems), new Action<SalesOrderItems>(this.detach_SalesOrderItems));
			this._SalesOrderLogs = new EntitySet<SalesOrderLogs>(new Action<SalesOrderLogs>(this.attach_SalesOrderLogs), new Action<SalesOrderLogs>(this.detach_SalesOrderLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerm", DbType="Int NOT NULL")]
		public int PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportMode", DbType="Int NOT NULL")]
		public int TransportMode
		{
			get
			{
				return this._TransportMode;
			}
			set
			{
				if ((this._TransportMode != value))
				{
					this.OnTransportModeChanging(value);
					this.SendPropertyChanging();
					this._TransportMode = value;
					this.SendPropertyChanged("TransportMode");
					this.OnTransportModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="Int NOT NULL")]
		public int District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_ExitNotices", Storage="_ExitNotices", ThisKey="ID", OtherKey="SalesOrderID")]
		public EntitySet<ExitNotices> ExitNotices
		{
			get
			{
				return this._ExitNotices;
			}
			set
			{
				this._ExitNotices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_ExitOrders", Storage="_ExitOrders", ThisKey="ID", OtherKey="SalesOrderID")]
		public EntitySet<ExitOrders> ExitOrders
		{
			get
			{
				return this._ExitOrders;
			}
			set
			{
				this._ExitOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_PackingOrders", Storage="_PackingOrders", ThisKey="ID", OtherKey="SalesOrderID")]
		public EntitySet<PackingOrders> PackingOrders
		{
			get
			{
				return this._PackingOrders;
			}
			set
			{
				this._PackingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderFiles", Storage="_SalesOrderFiles", ThisKey="ID", OtherKey="SalesOrderID")]
		public EntitySet<SalesOrderFiles> SalesOrderFiles
		{
			get
			{
				return this._SalesOrderFiles;
			}
			set
			{
				this._SalesOrderFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderItems", Storage="_SalesOrderItems", ThisKey="ID", OtherKey="SalesOrderID")]
		public EntitySet<SalesOrderItems> SalesOrderItems
		{
			get
			{
				return this._SalesOrderItems;
			}
			set
			{
				this._SalesOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrders_SalesOrderLogs", Storage="_SalesOrderLogs", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<SalesOrderLogs> SalesOrderLogs
		{
			get
			{
				return this._SalesOrderLogs;
			}
			set
			{
				this._SalesOrderLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_ExitNotices(ExitNotices entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
		
		private void attach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_ExitOrders(ExitOrders entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
		
		private void attach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_PackingOrders(PackingOrders entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
		
		private void attach_SalesOrderFiles(SalesOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_SalesOrderFiles(SalesOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
		
		private void attach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_SalesOrderItems(SalesOrderItems entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
		
		private void attach_SalesOrderLogs(SalesOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = this;
		}
		
		private void detach_SalesOrderLogs(SalesOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private int _Status;
		
		private string _Summary;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this._LoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationOrderItems")]
	public partial class DeclarationOrderItems
	{
		
		private string _ID;
		
		private string _DeclarationOrderID;
		
		private string _ProductID;
		
		private string _CustomsCode;
		
		private decimal _UnitPrice;
		
		private decimal _DealCount;
		
		private System.Nullable<decimal> _FirstLegalCount;
		
		private System.Nullable<decimal> _SecondLegalCount;
		
		private string _DealUnit;
		
		private string _Elements;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		public DeclarationOrderItems()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationOrderID
		{
			get
			{
				return this._DeclarationOrderID;
			}
			set
			{
				if ((this._DeclarationOrderID != value))
				{
					this._DeclarationOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsCode", DbType="VarChar(50)")]
		public string CustomsCode
		{
			get
			{
				return this._CustomsCode;
			}
			set
			{
				if ((this._CustomsCode != value))
				{
					this._CustomsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCount", DbType="Decimal(18,7) NOT NULL")]
		public decimal DealCount
		{
			get
			{
				return this._DealCount;
			}
			set
			{
				if ((this._DealCount != value))
				{
					this._DealCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLegalCount", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> FirstLegalCount
		{
			get
			{
				return this._FirstLegalCount;
			}
			set
			{
				if ((this._FirstLegalCount != value))
				{
					this._FirstLegalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLegalCount", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SecondLegalCount
		{
			get
			{
				return this._SecondLegalCount;
			}
			set
			{
				if ((this._SecondLegalCount != value))
				{
					this._SecondLegalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealUnit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DealUnit
		{
			get
			{
				return this._DealUnit;
			}
			set
			{
				if ((this._DealUnit != value))
				{
					this._DealUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(200)")]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this._Elements = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationOrder")]
	public partial class DeclarationOrder1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _ServiceID;
		
		private string _AdminID;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private int _SourceType;
		
		private string _CompanyID;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<Declaration> _Declaration;
		
		private EntitySet<DeclarationOrderFiles> _DeclarationOrderFiles;
		
		private EntitySet<Declaration1> _Declaration1;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
		private EntityRef<DeclarationNotice1> _DeclarationNotice1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnSourceTypeChanging(int value);
    partial void OnSourceTypeChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationOrder1()
		{
			this._Declaration = new EntitySet<Declaration>(new Action<Declaration>(this.attach_Declaration), new Action<Declaration>(this.detach_Declaration));
			this._DeclarationOrderFiles = new EntitySet<DeclarationOrderFiles>(new Action<DeclarationOrderFiles>(this.attach_DeclarationOrderFiles), new Action<DeclarationOrderFiles>(this.detach_DeclarationOrderFiles));
			this._Declaration1 = new EntitySet<Declaration1>(new Action<Declaration1>(this.attach_Declaration1), new Action<Declaration1>(this.detach_Declaration1));
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			this._DeclarationNotice1 = default(EntityRef<DeclarationNotice1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if ((this._DeclarationNotice.HasLoadedOrAssignedValue || this._DeclarationNotice1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int NOT NULL")]
		public int SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this.OnSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceType = value;
					this.SendPropertyChanged("SourceType");
					this.OnSourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_Declaration", Storage="_Declaration", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<Declaration> Declaration
		{
			get
			{
				return this._Declaration;
			}
			set
			{
				this._Declaration.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_DeclarationOrderFiles", Storage="_DeclarationOrderFiles", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<DeclarationOrderFiles> DeclarationOrderFiles
		{
			get
			{
				return this._DeclarationOrderFiles;
			}
			set
			{
				this._DeclarationOrderFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_Declaration1", Storage="_Declaration1", ThisKey="ID", OtherKey="DeclarationOrderID")]
		public EntitySet<Declaration1> Declaration1
		{
			get
			{
				return this._Declaration1;
			}
			set
			{
				this._Declaration1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationOrder1", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationOrder1.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrder1.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationOrder1", Storage="_DeclarationNotice1", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice1 DeclarationNotice1
		{
			get
			{
				return this._DeclarationNotice1.Entity;
			}
			set
			{
				DeclarationNotice1 previousValue = this._DeclarationNotice1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice1.Entity = null;
						previousValue.DeclarationOrder1.Remove(this);
					}
					this._DeclarationNotice1.Entity = value;
					if ((value != null))
					{
						value.DeclarationOrder1.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Declaration(Declaration entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = this;
		}
		
		private void detach_Declaration(Declaration entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = null;
		}
		
		private void attach_DeclarationOrderFiles(DeclarationOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = this;
		}
		
		private void detach_DeclarationOrderFiles(DeclarationOrderFiles entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = null;
		}
		
		private void attach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = this;
		}
		
		private void detach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationOrder1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNoticeItems")]
	public partial class DeclarationNoticeItems1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationNoticeID;
		
		private string _ProductID;
		
		private string _DealUnit;
		
		private decimal _UnitPrice;
		
		private decimal _Count;
		
		private int _Currency;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationNotice> _DeclarationNotice;
		
		private EntityRef<DeclarationNotice1> _DeclarationNotice1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationNoticeIDChanging(string value);
    partial void OnDeclarationNoticeIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnDealUnitChanging(string value);
    partial void OnDealUnitChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public DeclarationNoticeItems1()
		{
			this._DeclarationNotice = default(EntityRef<DeclarationNotice>);
			this._DeclarationNotice1 = default(EntityRef<DeclarationNotice1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationNoticeID
		{
			get
			{
				return this._DeclarationNoticeID;
			}
			set
			{
				if ((this._DeclarationNoticeID != value))
				{
					if ((this._DeclarationNotice.HasLoadedOrAssignedValue || this._DeclarationNotice1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationNoticeID = value;
					this.SendPropertyChanged("DeclarationNoticeID");
					this.OnDeclarationNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealUnit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DealUnit
		{
			get
			{
				return this._DealUnit;
			}
			set
			{
				if ((this._DealUnit != value))
				{
					this.OnDealUnitChanging(value);
					this.SendPropertyChanging();
					this._DealUnit = value;
					this.SendPropertyChanged("DealUnit");
					this.OnDealUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,7) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice_DeclarationNoticeItems1", Storage="_DeclarationNotice", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice DeclarationNotice
		{
			get
			{
				return this._DeclarationNotice.Entity;
			}
			set
			{
				DeclarationNotice previousValue = this._DeclarationNotice.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice.Entity = null;
						previousValue.DeclarationNoticeItems1.Remove(this);
					}
					this._DeclarationNotice.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticeItems1.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationNoticeItems1", Storage="_DeclarationNotice1", ThisKey="DeclarationNoticeID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationNotice1 DeclarationNotice1
		{
			get
			{
				return this._DeclarationNotice1.Entity;
			}
			set
			{
				DeclarationNotice1 previousValue = this._DeclarationNotice1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationNotice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationNotice1.Entity = null;
						previousValue.DeclarationNoticeItems1.Remove(this);
					}
					this._DeclarationNotice1.Entity = value;
					if ((value != null))
					{
						value.DeclarationNoticeItems1.Add(this);
						this._DeclarationNoticeID = value.ID;
					}
					else
					{
						this._DeclarationNoticeID = default(string);
					}
					this.SendPropertyChanged("DeclarationNotice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclarationNotice")]
	public partial class DeclarationNotice1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _ServiceID;
		
		private string _SalesOrderID;
		
		private string _ConsigneeID;
		
		private string _DelivererID;
		
		private string _CompanyID;
		
		private int _SourceType;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<DeclarationNoticeItems> _DeclarationNoticeItems;
		
		private EntitySet<DeclarationOrder> _DeclarationOrder;
		
		private EntitySet<DeclarationOrder1> _DeclarationOrder1;
		
		private EntitySet<DeclarationNoticeItems1> _DeclarationNoticeItems1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnSalesOrderIDChanging(string value);
    partial void OnSalesOrderIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnSourceTypeChanging(int value);
    partial void OnSourceTypeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public DeclarationNotice1()
		{
			this._DeclarationNoticeItems = new EntitySet<DeclarationNoticeItems>(new Action<DeclarationNoticeItems>(this.attach_DeclarationNoticeItems), new Action<DeclarationNoticeItems>(this.detach_DeclarationNoticeItems));
			this._DeclarationOrder = new EntitySet<DeclarationOrder>(new Action<DeclarationOrder>(this.attach_DeclarationOrder), new Action<DeclarationOrder>(this.detach_DeclarationOrder));
			this._DeclarationOrder1 = new EntitySet<DeclarationOrder1>(new Action<DeclarationOrder1>(this.attach_DeclarationOrder1), new Action<DeclarationOrder1>(this.detach_DeclarationOrder1));
			this._DeclarationNoticeItems1 = new EntitySet<DeclarationNoticeItems1>(new Action<DeclarationNoticeItems1>(this.attach_DeclarationNoticeItems1), new Action<DeclarationNoticeItems1>(this.detach_DeclarationNoticeItems1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int NOT NULL")]
		public int SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this.OnSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceType = value;
					this.SendPropertyChanged("SourceType");
					this.OnSourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationNoticeItems", Storage="_DeclarationNoticeItems", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticeItems> DeclarationNoticeItems
		{
			get
			{
				return this._DeclarationNoticeItems;
			}
			set
			{
				this._DeclarationNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationOrder", Storage="_DeclarationOrder", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationOrder> DeclarationOrder
		{
			get
			{
				return this._DeclarationOrder;
			}
			set
			{
				this._DeclarationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationOrder1", Storage="_DeclarationOrder1", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationOrder1> DeclarationOrder1
		{
			get
			{
				return this._DeclarationOrder1;
			}
			set
			{
				this._DeclarationOrder1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationNotice1_DeclarationNoticeItems1", Storage="_DeclarationNoticeItems1", ThisKey="ID", OtherKey="DeclarationNoticeID")]
		public EntitySet<DeclarationNoticeItems1> DeclarationNoticeItems1
		{
			get
			{
				return this._DeclarationNoticeItems1;
			}
			set
			{
				this._DeclarationNoticeItems1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeclarationNoticeItems(DeclarationNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = this;
		}
		
		private void detach_DeclarationNoticeItems(DeclarationNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = null;
		}
		
		private void attach_DeclarationOrder(DeclarationOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = this;
		}
		
		private void detach_DeclarationOrder(DeclarationOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = null;
		}
		
		private void attach_DeclarationOrder1(DeclarationOrder1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = this;
		}
		
		private void detach_DeclarationOrder1(DeclarationOrder1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = null;
		}
		
		private void attach_DeclarationNoticeItems1(DeclarationNoticeItems1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = this;
		}
		
		private void detach_DeclarationNoticeItems1(DeclarationNoticeItems1 entity)
		{
			this.SendPropertyChanging();
			entity.DeclarationNotice1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Declaration")]
	public partial class Declaration1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclarationOrderID;
		
		private string _CustomsHeadID;
		
		private string _ContractNo;
		
		private string _InvoiceNo;
		
		private string _VoyageNumber;
		
		private string _BillOfLoadNumber;
		
		private int _PackagingType;
		
		private int _PackageNumber;
		
		private decimal _NetWeight;
		
		private decimal _GrossWeight;
		
		private System.DateTime _DeclarationDate;
		
		private string _ConsigneeAndConsigner;
		
		private string _ConsigneeAndConsignerCustomsCode;
		
		private string _ConsigneeAndConsignerOGCode;
		
		private bool _IsInspactoin;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<DeclarationOrder> _DeclarationOrder;
		
		private EntityRef<DeclarationOrder1> _DeclarationOrder1;
		
		private EntityRef<CustomsHead> _CustomsHead;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclarationOrderIDChanging(string value);
    partial void OnDeclarationOrderIDChanged();
    partial void OnCustomsHeadIDChanging(string value);
    partial void OnCustomsHeadIDChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnVoyageNumberChanging(string value);
    partial void OnVoyageNumberChanged();
    partial void OnBillOfLoadNumberChanging(string value);
    partial void OnBillOfLoadNumberChanged();
    partial void OnPackagingTypeChanging(int value);
    partial void OnPackagingTypeChanged();
    partial void OnPackageNumberChanging(int value);
    partial void OnPackageNumberChanged();
    partial void OnNetWeightChanging(decimal value);
    partial void OnNetWeightChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnDeclarationDateChanging(System.DateTime value);
    partial void OnDeclarationDateChanged();
    partial void OnConsigneeAndConsignerChanging(string value);
    partial void OnConsigneeAndConsignerChanged();
    partial void OnConsigneeAndConsignerCustomsCodeChanging(string value);
    partial void OnConsigneeAndConsignerCustomsCodeChanged();
    partial void OnConsigneeAndConsignerOGCodeChanging(string value);
    partial void OnConsigneeAndConsignerOGCodeChanged();
    partial void OnIsInspactoinChanging(bool value);
    partial void OnIsInspactoinChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public Declaration1()
		{
			this._DeclarationOrder = default(EntityRef<DeclarationOrder>);
			this._DeclarationOrder1 = default(EntityRef<DeclarationOrder1>);
			this._CustomsHead = default(EntityRef<CustomsHead>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationOrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationOrderID
		{
			get
			{
				return this._DeclarationOrderID;
			}
			set
			{
				if ((this._DeclarationOrderID != value))
				{
					if ((this._DeclarationOrder.HasLoadedOrAssignedValue || this._DeclarationOrder1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationOrderIDChanging(value);
					this.SendPropertyChanging();
					this._DeclarationOrderID = value;
					this.SendPropertyChanged("DeclarationOrderID");
					this.OnDeclarationOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomsHeadID
		{
			get
			{
				return this._CustomsHeadID;
			}
			set
			{
				if ((this._CustomsHeadID != value))
				{
					if (this._CustomsHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomsHeadIDChanging(value);
					this.SendPropertyChanging();
					this._CustomsHeadID = value;
					this.SendPropertyChanged("CustomsHeadID");
					this.OnCustomsHeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoyageNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VoyageNumber
		{
			get
			{
				return this._VoyageNumber;
			}
			set
			{
				if ((this._VoyageNumber != value))
				{
					this.OnVoyageNumberChanging(value);
					this.SendPropertyChanging();
					this._VoyageNumber = value;
					this.SendPropertyChanged("VoyageNumber");
					this.OnVoyageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillOfLoadNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillOfLoadNumber
		{
			get
			{
				return this._BillOfLoadNumber;
			}
			set
			{
				if ((this._BillOfLoadNumber != value))
				{
					this.OnBillOfLoadNumberChanging(value);
					this.SendPropertyChanging();
					this._BillOfLoadNumber = value;
					this.SendPropertyChanged("BillOfLoadNumber");
					this.OnBillOfLoadNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingType", DbType="Int NOT NULL")]
		public int PackagingType
		{
			get
			{
				return this._PackagingType;
			}
			set
			{
				if ((this._PackagingType != value))
				{
					this.OnPackagingTypeChanging(value);
					this.SendPropertyChanging();
					this._PackagingType = value;
					this.SendPropertyChanged("PackagingType");
					this.OnPackagingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageNumber", DbType="Int NOT NULL")]
		public int PackageNumber
		{
			get
			{
				return this._PackageNumber;
			}
			set
			{
				if ((this._PackageNumber != value))
				{
					this.OnPackageNumberChanging(value);
					this.SendPropertyChanging();
					this._PackageNumber = value;
					this.SendPropertyChanged("PackageNumber");
					this.OnPackageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal NetWeight
		{
			get
			{
				return this._NetWeight;
			}
			set
			{
				if ((this._NetWeight != value))
				{
					this.OnNetWeightChanging(value);
					this.SendPropertyChanging();
					this._NetWeight = value;
					this.SendPropertyChanged("NetWeight");
					this.OnNetWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeclarationDate
		{
			get
			{
				return this._DeclarationDate;
			}
			set
			{
				if ((this._DeclarationDate != value))
				{
					this.OnDeclarationDateChanging(value);
					this.SendPropertyChanging();
					this._DeclarationDate = value;
					this.SendPropertyChanged("DeclarationDate");
					this.OnDeclarationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsigner", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ConsigneeAndConsigner
		{
			get
			{
				return this._ConsigneeAndConsigner;
			}
			set
			{
				if ((this._ConsigneeAndConsigner != value))
				{
					this.OnConsigneeAndConsignerChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsigner = value;
					this.SendPropertyChanged("ConsigneeAndConsigner");
					this.OnConsigneeAndConsignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsignerCustomsCode", DbType="NVarChar(50)")]
		public string ConsigneeAndConsignerCustomsCode
		{
			get
			{
				return this._ConsigneeAndConsignerCustomsCode;
			}
			set
			{
				if ((this._ConsigneeAndConsignerCustomsCode != value))
				{
					this.OnConsigneeAndConsignerCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsignerCustomsCode = value;
					this.SendPropertyChanged("ConsigneeAndConsignerCustomsCode");
					this.OnConsigneeAndConsignerCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAndConsignerOGCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeAndConsignerOGCode
		{
			get
			{
				return this._ConsigneeAndConsignerOGCode;
			}
			set
			{
				if ((this._ConsigneeAndConsignerOGCode != value))
				{
					this.OnConsigneeAndConsignerOGCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAndConsignerOGCode = value;
					this.SendPropertyChanged("ConsigneeAndConsignerOGCode");
					this.OnConsigneeAndConsignerOGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInspactoin", DbType="Bit NOT NULL")]
		public bool IsInspactoin
		{
			get
			{
				return this._IsInspactoin;
			}
			set
			{
				if ((this._IsInspactoin != value))
				{
					this.OnIsInspactoinChanging(value);
					this.SendPropertyChanging();
					this._IsInspactoin = value;
					this.SendPropertyChanged("IsInspactoin");
					this.OnIsInspactoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder_Declaration1", Storage="_DeclarationOrder", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder DeclarationOrder
		{
			get
			{
				return this._DeclarationOrder.Entity;
			}
			set
			{
				DeclarationOrder previousValue = this._DeclarationOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder.Entity = null;
						previousValue.Declaration1.Remove(this);
					}
					this._DeclarationOrder.Entity = value;
					if ((value != null))
					{
						value.Declaration1.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclarationOrder1_Declaration1", Storage="_DeclarationOrder1", ThisKey="DeclarationOrderID", OtherKey="ID", IsForeignKey=true)]
		public DeclarationOrder1 DeclarationOrder1
		{
			get
			{
				return this._DeclarationOrder1.Entity;
			}
			set
			{
				DeclarationOrder1 previousValue = this._DeclarationOrder1.Entity;
				if (((previousValue != value) 
							|| (this._DeclarationOrder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclarationOrder1.Entity = null;
						previousValue.Declaration1.Remove(this);
					}
					this._DeclarationOrder1.Entity = value;
					if ((value != null))
					{
						value.Declaration1.Add(this);
						this._DeclarationOrderID = value.ID;
					}
					else
					{
						this._DeclarationOrderID = default(string);
					}
					this.SendPropertyChanged("DeclarationOrder1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsHead_Declaration1", Storage="_CustomsHead", ThisKey="CustomsHeadID", OtherKey="ID", IsForeignKey=true)]
		public CustomsHead CustomsHead
		{
			get
			{
				return this._CustomsHead.Entity;
			}
			set
			{
				CustomsHead previousValue = this._CustomsHead.Entity;
				if (((previousValue != value) 
							|| (this._CustomsHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomsHead.Entity = null;
						previousValue.Declaration1.Remove(this);
					}
					this._CustomsHead.Entity = value;
					if ((value != null))
					{
						value.Declaration1.Add(this);
						this._CustomsHeadID = value.ID;
					}
					else
					{
						this._CustomsHeadID = default(string);
					}
					this.SendPropertyChanged("CustomsHead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsHead")]
	public partial class CustomsHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Port;
		
		private string _DeclarationScene;
		
		private string _DomesticCustomsCode;
		
		private string _DomesticOrgCode;
		
		private string _DomesticCIQCode;
		
		private string _DomesticName;
		
		private string _Overseas;
		
		private string _DeclarationCompanyCustomsCode;
		
		private string _DeclarationCompanyOrgCode;
		
		private string _DeclarationCompanyCIQCode;
		
		private string _DeclarationCompanyName;
		
		private int _ShippingType;
		
		private string _SupervisionMode;
		
		private int _NatureOfExemption;
		
		private string _CountryOfOrigin;
		
		private string _StopPort;
		
		private string _StartPort;
		
		private int _TransactionMode;
		
		private string _TradeCountry;
		
		private string _DomesticEntryPort;
		
		private string _GoodsStorageLocation;
		
		private string _DeclarationType;
		
		private string _ShippingMarks;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<Declaration1> _Declaration1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnDeclarationSceneChanging(string value);
    partial void OnDeclarationSceneChanged();
    partial void OnDomesticCustomsCodeChanging(string value);
    partial void OnDomesticCustomsCodeChanged();
    partial void OnDomesticOrgCodeChanging(string value);
    partial void OnDomesticOrgCodeChanged();
    partial void OnDomesticCIQCodeChanging(string value);
    partial void OnDomesticCIQCodeChanged();
    partial void OnDomesticNameChanging(string value);
    partial void OnDomesticNameChanged();
    partial void OnOverseasChanging(string value);
    partial void OnOverseasChanged();
    partial void OnDeclarationCompanyCustomsCodeChanging(string value);
    partial void OnDeclarationCompanyCustomsCodeChanged();
    partial void OnDeclarationCompanyOrgCodeChanging(string value);
    partial void OnDeclarationCompanyOrgCodeChanged();
    partial void OnDeclarationCompanyCIQCodeChanging(string value);
    partial void OnDeclarationCompanyCIQCodeChanged();
    partial void OnDeclarationCompanyNameChanging(string value);
    partial void OnDeclarationCompanyNameChanged();
    partial void OnShippingTypeChanging(int value);
    partial void OnShippingTypeChanged();
    partial void OnSupervisionModeChanging(string value);
    partial void OnSupervisionModeChanged();
    partial void OnNatureOfExemptionChanging(int value);
    partial void OnNatureOfExemptionChanged();
    partial void OnCountryOfOriginChanging(string value);
    partial void OnCountryOfOriginChanged();
    partial void OnStopPortChanging(string value);
    partial void OnStopPortChanged();
    partial void OnStartPortChanging(string value);
    partial void OnStartPortChanged();
    partial void OnTransactionModeChanging(int value);
    partial void OnTransactionModeChanged();
    partial void OnTradeCountryChanging(string value);
    partial void OnTradeCountryChanged();
    partial void OnDomesticEntryPortChanging(string value);
    partial void OnDomesticEntryPortChanged();
    partial void OnGoodsStorageLocationChanging(string value);
    partial void OnGoodsStorageLocationChanged();
    partial void OnDeclarationTypeChanging(string value);
    partial void OnDeclarationTypeChanged();
    partial void OnShippingMarksChanging(string value);
    partial void OnShippingMarksChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public CustomsHead()
		{
			this._Declaration1 = new EntitySet<Declaration1>(new Action<Declaration1>(this.attach_Declaration1), new Action<Declaration1>(this.detach_Declaration1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationScene", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DeclarationScene
		{
			get
			{
				return this._DeclarationScene;
			}
			set
			{
				if ((this._DeclarationScene != value))
				{
					this.OnDeclarationSceneChanging(value);
					this.SendPropertyChanging();
					this._DeclarationScene = value;
					this.SendPropertyChanged("DeclarationScene");
					this.OnDeclarationSceneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticCustomsCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DomesticCustomsCode
		{
			get
			{
				return this._DomesticCustomsCode;
			}
			set
			{
				if ((this._DomesticCustomsCode != value))
				{
					this.OnDomesticCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._DomesticCustomsCode = value;
					this.SendPropertyChanged("DomesticCustomsCode");
					this.OnDomesticCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticOrgCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DomesticOrgCode
		{
			get
			{
				return this._DomesticOrgCode;
			}
			set
			{
				if ((this._DomesticOrgCode != value))
				{
					this.OnDomesticOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._DomesticOrgCode = value;
					this.SendPropertyChanged("DomesticOrgCode");
					this.OnDomesticOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticCIQCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DomesticCIQCode
		{
			get
			{
				return this._DomesticCIQCode;
			}
			set
			{
				if ((this._DomesticCIQCode != value))
				{
					this.OnDomesticCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._DomesticCIQCode = value;
					this.SendPropertyChanged("DomesticCIQCode");
					this.OnDomesticCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DomesticName
		{
			get
			{
				return this._DomesticName;
			}
			set
			{
				if ((this._DomesticName != value))
				{
					this.OnDomesticNameChanging(value);
					this.SendPropertyChanging();
					this._DomesticName = value;
					this.SendPropertyChanged("DomesticName");
					this.OnDomesticNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overseas", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Overseas
		{
			get
			{
				return this._Overseas;
			}
			set
			{
				if ((this._Overseas != value))
				{
					this.OnOverseasChanging(value);
					this.SendPropertyChanging();
					this._Overseas = value;
					this.SendPropertyChanged("Overseas");
					this.OnOverseasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationCompanyCustomsCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DeclarationCompanyCustomsCode
		{
			get
			{
				return this._DeclarationCompanyCustomsCode;
			}
			set
			{
				if ((this._DeclarationCompanyCustomsCode != value))
				{
					this.OnDeclarationCompanyCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationCompanyCustomsCode = value;
					this.SendPropertyChanged("DeclarationCompanyCustomsCode");
					this.OnDeclarationCompanyCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationCompanyOrgCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclarationCompanyOrgCode
		{
			get
			{
				return this._DeclarationCompanyOrgCode;
			}
			set
			{
				if ((this._DeclarationCompanyOrgCode != value))
				{
					this.OnDeclarationCompanyOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationCompanyOrgCode = value;
					this.SendPropertyChanged("DeclarationCompanyOrgCode");
					this.OnDeclarationCompanyOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationCompanyCIQCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DeclarationCompanyCIQCode
		{
			get
			{
				return this._DeclarationCompanyCIQCode;
			}
			set
			{
				if ((this._DeclarationCompanyCIQCode != value))
				{
					this.OnDeclarationCompanyCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationCompanyCIQCode = value;
					this.SendPropertyChanged("DeclarationCompanyCIQCode");
					this.OnDeclarationCompanyCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationCompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeclarationCompanyName
		{
			get
			{
				return this._DeclarationCompanyName;
			}
			set
			{
				if ((this._DeclarationCompanyName != value))
				{
					this.OnDeclarationCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._DeclarationCompanyName = value;
					this.SendPropertyChanged("DeclarationCompanyName");
					this.OnDeclarationCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingType", DbType="Int NOT NULL")]
		public int ShippingType
		{
			get
			{
				return this._ShippingType;
			}
			set
			{
				if ((this._ShippingType != value))
				{
					this.OnShippingTypeChanging(value);
					this.SendPropertyChanging();
					this._ShippingType = value;
					this.SendPropertyChanged("ShippingType");
					this.OnShippingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisionMode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SupervisionMode
		{
			get
			{
				return this._SupervisionMode;
			}
			set
			{
				if ((this._SupervisionMode != value))
				{
					this.OnSupervisionModeChanging(value);
					this.SendPropertyChanging();
					this._SupervisionMode = value;
					this.SendPropertyChanged("SupervisionMode");
					this.OnSupervisionModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatureOfExemption", DbType="Int NOT NULL")]
		public int NatureOfExemption
		{
			get
			{
				return this._NatureOfExemption;
			}
			set
			{
				if ((this._NatureOfExemption != value))
				{
					this.OnNatureOfExemptionChanging(value);
					this.SendPropertyChanging();
					this._NatureOfExemption = value;
					this.SendPropertyChanged("NatureOfExemption");
					this.OnNatureOfExemptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryOfOrigin", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CountryOfOrigin
		{
			get
			{
				return this._CountryOfOrigin;
			}
			set
			{
				if ((this._CountryOfOrigin != value))
				{
					this.OnCountryOfOriginChanging(value);
					this.SendPropertyChanging();
					this._CountryOfOrigin = value;
					this.SendPropertyChanged("CountryOfOrigin");
					this.OnCountryOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopPort", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StopPort
		{
			get
			{
				return this._StopPort;
			}
			set
			{
				if ((this._StopPort != value))
				{
					this.OnStopPortChanging(value);
					this.SendPropertyChanging();
					this._StopPort = value;
					this.SendPropertyChanged("StopPort");
					this.OnStopPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPort", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StartPort
		{
			get
			{
				return this._StartPort;
			}
			set
			{
				if ((this._StartPort != value))
				{
					this.OnStartPortChanging(value);
					this.SendPropertyChanging();
					this._StartPort = value;
					this.SendPropertyChanged("StartPort");
					this.OnStartPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMode", DbType="Int NOT NULL")]
		public int TransactionMode
		{
			get
			{
				return this._TransactionMode;
			}
			set
			{
				if ((this._TransactionMode != value))
				{
					this.OnTransactionModeChanging(value);
					this.SendPropertyChanging();
					this._TransactionMode = value;
					this.SendPropertyChanged("TransactionMode");
					this.OnTransactionModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeCountry", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TradeCountry
		{
			get
			{
				return this._TradeCountry;
			}
			set
			{
				if ((this._TradeCountry != value))
				{
					this.OnTradeCountryChanging(value);
					this.SendPropertyChanging();
					this._TradeCountry = value;
					this.SendPropertyChanged("TradeCountry");
					this.OnTradeCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomesticEntryPort", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DomesticEntryPort
		{
			get
			{
				return this._DomesticEntryPort;
			}
			set
			{
				if ((this._DomesticEntryPort != value))
				{
					this.OnDomesticEntryPortChanging(value);
					this.SendPropertyChanging();
					this._DomesticEntryPort = value;
					this.SendPropertyChanged("DomesticEntryPort");
					this.OnDomesticEntryPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsStorageLocation", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GoodsStorageLocation
		{
			get
			{
				return this._GoodsStorageLocation;
			}
			set
			{
				if ((this._GoodsStorageLocation != value))
				{
					this.OnGoodsStorageLocationChanging(value);
					this.SendPropertyChanging();
					this._GoodsStorageLocation = value;
					this.SendPropertyChanged("GoodsStorageLocation");
					this.OnGoodsStorageLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DeclarationType
		{
			get
			{
				return this._DeclarationType;
			}
			set
			{
				if ((this._DeclarationType != value))
				{
					this.OnDeclarationTypeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationType = value;
					this.SendPropertyChanged("DeclarationType");
					this.OnDeclarationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMarks", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ShippingMarks
		{
			get
			{
				return this._ShippingMarks;
			}
			set
			{
				if ((this._ShippingMarks != value))
				{
					this.OnShippingMarksChanging(value);
					this.SendPropertyChanging();
					this._ShippingMarks = value;
					this.SendPropertyChanged("ShippingMarks");
					this.OnShippingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsHead_Declaration1", Storage="_Declaration1", ThisKey="ID", OtherKey="CustomsHeadID")]
		public EntitySet<Declaration1> Declaration1
		{
			get
			{
				return this._Declaration1;
			}
			set
			{
				this._Declaration1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.CustomsHead = this;
		}
		
		private void detach_Declaration1(Declaration1 entity)
		{
			this.SendPropertyChanging();
			entity.CustomsHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsCodeModelHis")]
	public partial class CustomsCodeModelHis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Model;
		
		private string _CustomsCode;
		
		private string _Elemets;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<CustomsCode> _CustomsCode1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCustomsCodeChanging(string value);
    partial void OnCustomsCodeChanged();
    partial void OnElemetsChanging(string value);
    partial void OnElemetsChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public CustomsCodeModelHis()
		{
			this._CustomsCode1 = default(EntityRef<CustomsCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomsCode
		{
			get
			{
				return this._CustomsCode;
			}
			set
			{
				if ((this._CustomsCode != value))
				{
					if (this._CustomsCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomsCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomsCode = value;
					this.SendPropertyChanged("CustomsCode");
					this.OnCustomsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elemets", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Elemets
		{
			get
			{
				return this._Elemets;
			}
			set
			{
				if ((this._Elemets != value))
				{
					this.OnElemetsChanging(value);
					this.SendPropertyChanging();
					this._Elemets = value;
					this.SendPropertyChanged("Elemets");
					this.OnElemetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsCode_CustomsCodeModelHis", Storage="_CustomsCode1", ThisKey="CustomsCode", OtherKey="ID", IsForeignKey=true)]
		public CustomsCode CustomsCode1
		{
			get
			{
				return this._CustomsCode1.Entity;
			}
			set
			{
				CustomsCode previousValue = this._CustomsCode1.Entity;
				if (((previousValue != value) 
							|| (this._CustomsCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomsCode1.Entity = null;
						previousValue.CustomsCodeModelHis.Remove(this);
					}
					this._CustomsCode1.Entity = value;
					if ((value != null))
					{
						value.CustomsCodeModelHis.Add(this);
						this._CustomsCode = value.ID;
					}
					else
					{
						this._CustomsCode = default(string);
					}
					this.SendPropertyChanged("CustomsCode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsCode")]
	public partial class CustomsCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProductName;
		
		private string _Elements;
		
		private string _FirstLegalUnit;
		
		private string _SecondLegalUnit;
		
		private System.Nullable<decimal> _MFNTaxRate;
		
		private System.Nullable<decimal> _ProvisionalTaxRate;
		
		private System.Nullable<decimal> _ValueAddTaxRate;
		
		private string _CustomsSupervisionCondition;
		
		private string _CIQType;
		
		private string _CIQCode;
		
		private string _ProductDescription;
		
		private string _ModelInfoClassification;
		
		private string _ModelInfoClassificationValue;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<CustomsCodeModelHis> _CustomsCodeModelHis;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnElementsChanging(string value);
    partial void OnElementsChanged();
    partial void OnFirstLegalUnitChanging(string value);
    partial void OnFirstLegalUnitChanged();
    partial void OnSecondLegalUnitChanging(string value);
    partial void OnSecondLegalUnitChanged();
    partial void OnMFNTaxRateChanging(System.Nullable<decimal> value);
    partial void OnMFNTaxRateChanged();
    partial void OnProvisionalTaxRateChanging(System.Nullable<decimal> value);
    partial void OnProvisionalTaxRateChanged();
    partial void OnValueAddTaxRateChanging(System.Nullable<decimal> value);
    partial void OnValueAddTaxRateChanged();
    partial void OnCustomsSupervisionConditionChanging(string value);
    partial void OnCustomsSupervisionConditionChanged();
    partial void OnCIQTypeChanging(string value);
    partial void OnCIQTypeChanged();
    partial void OnCIQCodeChanging(string value);
    partial void OnCIQCodeChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnModelInfoClassificationChanging(string value);
    partial void OnModelInfoClassificationChanged();
    partial void OnModelInfoClassificationValueChanging(string value);
    partial void OnModelInfoClassificationValueChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public CustomsCode()
		{
			this._CustomsCodeModelHis = new EntitySet<CustomsCodeModelHis>(new Action<CustomsCodeModelHis>(this.attach_CustomsCodeModelHis), new Action<CustomsCodeModelHis>(this.detach_CustomsCodeModelHis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLegalUnit", DbType="NVarChar(50)")]
		public string FirstLegalUnit
		{
			get
			{
				return this._FirstLegalUnit;
			}
			set
			{
				if ((this._FirstLegalUnit != value))
				{
					this.OnFirstLegalUnitChanging(value);
					this.SendPropertyChanging();
					this._FirstLegalUnit = value;
					this.SendPropertyChanged("FirstLegalUnit");
					this.OnFirstLegalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLegalUnit", DbType="NVarChar(50)")]
		public string SecondLegalUnit
		{
			get
			{
				return this._SecondLegalUnit;
			}
			set
			{
				if ((this._SecondLegalUnit != value))
				{
					this.OnSecondLegalUnitChanging(value);
					this.SendPropertyChanging();
					this._SecondLegalUnit = value;
					this.SendPropertyChanged("SecondLegalUnit");
					this.OnSecondLegalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFNTaxRate", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> MFNTaxRate
		{
			get
			{
				return this._MFNTaxRate;
			}
			set
			{
				if ((this._MFNTaxRate != value))
				{
					this.OnMFNTaxRateChanging(value);
					this.SendPropertyChanging();
					this._MFNTaxRate = value;
					this.SendPropertyChanged("MFNTaxRate");
					this.OnMFNTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionalTaxRate", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ProvisionalTaxRate
		{
			get
			{
				return this._ProvisionalTaxRate;
			}
			set
			{
				if ((this._ProvisionalTaxRate != value))
				{
					this.OnProvisionalTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ProvisionalTaxRate = value;
					this.SendPropertyChanged("ProvisionalTaxRate");
					this.OnProvisionalTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueAddTaxRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ValueAddTaxRate
		{
			get
			{
				return this._ValueAddTaxRate;
			}
			set
			{
				if ((this._ValueAddTaxRate != value))
				{
					this.OnValueAddTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ValueAddTaxRate = value;
					this.SendPropertyChanged("ValueAddTaxRate");
					this.OnValueAddTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsSupervisionCondition", DbType="NVarChar(100)")]
		public string CustomsSupervisionCondition
		{
			get
			{
				return this._CustomsSupervisionCondition;
			}
			set
			{
				if ((this._CustomsSupervisionCondition != value))
				{
					this.OnCustomsSupervisionConditionChanging(value);
					this.SendPropertyChanging();
					this._CustomsSupervisionCondition = value;
					this.SendPropertyChanged("CustomsSupervisionCondition");
					this.OnCustomsSupervisionConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQType", DbType="NVarChar(100)")]
		public string CIQType
		{
			get
			{
				return this._CIQType;
			}
			set
			{
				if ((this._CIQType != value))
				{
					this.OnCIQTypeChanging(value);
					this.SendPropertyChanging();
					this._CIQType = value;
					this.SendPropertyChanged("CIQType");
					this.OnCIQTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="NVarChar(100)")]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this.OnCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._CIQCode = value;
					this.SendPropertyChanged("CIQCode");
					this.OnCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="NVarChar(500)")]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelInfoClassification", DbType="NVarChar(200)")]
		public string ModelInfoClassification
		{
			get
			{
				return this._ModelInfoClassification;
			}
			set
			{
				if ((this._ModelInfoClassification != value))
				{
					this.OnModelInfoClassificationChanging(value);
					this.SendPropertyChanging();
					this._ModelInfoClassification = value;
					this.SendPropertyChanged("ModelInfoClassification");
					this.OnModelInfoClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelInfoClassificationValue", DbType="NVarChar(200)")]
		public string ModelInfoClassificationValue
		{
			get
			{
				return this._ModelInfoClassificationValue;
			}
			set
			{
				if ((this._ModelInfoClassificationValue != value))
				{
					this.OnModelInfoClassificationValueChanging(value);
					this.SendPropertyChanging();
					this._ModelInfoClassificationValue = value;
					this.SendPropertyChanged("ModelInfoClassificationValue");
					this.OnModelInfoClassificationValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsCode_CustomsCodeModelHis", Storage="_CustomsCodeModelHis", ThisKey="ID", OtherKey="CustomsCode")]
		public EntitySet<CustomsCodeModelHis> CustomsCodeModelHis
		{
			get
			{
				return this._CustomsCodeModelHis;
			}
			set
			{
				this._CustomsCodeModelHis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomsCodeModelHis(CustomsCodeModelHis entity)
		{
			this.SendPropertyChanging();
			entity.CustomsCode1 = this;
		}
		
		private void detach_CustomsCodeModelHis(CustomsCodeModelHis entity)
		{
			this.SendPropertyChanging();
			entity.CustomsCode1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArrivalFiles")]
	public partial class ArrivalFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ArrivalID;
		
		private string _ArrivalItemID;
		
		private string _Name;
		
		private bool _IsItem;
		
		private int _FileType;
		
		private string _Url;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnArrivalIDChanging(string value);
    partial void OnArrivalIDChanged();
    partial void OnArrivalItemIDChanging(string value);
    partial void OnArrivalItemIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsItemChanging(bool value);
    partial void OnIsItemChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public ArrivalFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalID", DbType="VarChar(50)")]
		public string ArrivalID
		{
			get
			{
				return this._ArrivalID;
			}
			set
			{
				if ((this._ArrivalID != value))
				{
					this.OnArrivalIDChanging(value);
					this.SendPropertyChanging();
					this._ArrivalID = value;
					this.SendPropertyChanged("ArrivalID");
					this.OnArrivalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalItemID", DbType="VarChar(50)")]
		public string ArrivalItemID
		{
			get
			{
				return this._ArrivalItemID;
			}
			set
			{
				if ((this._ArrivalItemID != value))
				{
					this.OnArrivalItemIDChanging(value);
					this.SendPropertyChanging();
					this._ArrivalItemID = value;
					this.SendPropertyChanged("ArrivalItemID");
					this.OnArrivalItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItem", DbType="Bit NOT NULL")]
		public bool IsItem
		{
			get
			{
				return this._IsItem;
			}
			set
			{
				if ((this._IsItem != value))
				{
					this.OnIsItemChanging(value);
					this.SendPropertyChanging();
					this._IsItem = value;
					this.SendPropertyChanged("IsItem");
					this.OnIsItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArrivalItems")]
	public partial class ArrivalItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InputID;
		
		private string _ArrivalID;
		
		private int _ArrivalType;
		
		private string _EntryNoticeItemID;
		
		private string _ProductID;
		
		private decimal _Count;
		
		private int _Currency;
		
		private string _Origin;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<decimal> _NetWeight;
		
		private System.Nullable<decimal> _GrossWeight;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnArrivalIDChanging(string value);
    partial void OnArrivalIDChanged();
    partial void OnArrivalTypeChanging(int value);
    partial void OnArrivalTypeChanged();
    partial void OnEntryNoticeItemIDChanging(string value);
    partial void OnEntryNoticeItemIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnNetWeightChanging(System.Nullable<decimal> value);
    partial void OnNetWeightChanged();
    partial void OnGrossWeightChanging(System.Nullable<decimal> value);
    partial void OnGrossWeightChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public ArrivalItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArrivalID
		{
			get
			{
				return this._ArrivalID;
			}
			set
			{
				if ((this._ArrivalID != value))
				{
					this.OnArrivalIDChanging(value);
					this.SendPropertyChanging();
					this._ArrivalID = value;
					this.SendPropertyChanged("ArrivalID");
					this.OnArrivalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalType", DbType="Int NOT NULL")]
		public int ArrivalType
		{
			get
			{
				return this._ArrivalType;
			}
			set
			{
				if ((this._ArrivalType != value))
				{
					this.OnArrivalTypeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalType = value;
					this.SendPropertyChanged("ArrivalType");
					this.OnArrivalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryNoticeItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EntryNoticeItemID
		{
			get
			{
				return this._EntryNoticeItemID;
			}
			set
			{
				if ((this._EntryNoticeItemID != value))
				{
					this.OnEntryNoticeItemIDChanging(value);
					this.SendPropertyChanging();
					this._EntryNoticeItemID = value;
					this.SendPropertyChanged("EntryNoticeItemID");
					this.OnEntryNoticeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,4) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(200)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> NetWeight
		{
			get
			{
				return this._NetWeight;
			}
			set
			{
				if ((this._NetWeight != value))
				{
					this.OnNetWeightChanging(value);
					this.SendPropertyChanging();
					this._NetWeight = value;
					this.SendPropertyChanged("NetWeight");
					this.OnNetWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrivals")]
	public partial class Arrivals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _WaybillCode;
		
		private string _DelivererID;
		
		private string _ConsigneeID;
		
		private string _CompanyCode;
		
		private string _AdminID;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Arrivals()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntryNoticeItems")]
	public partial class EntryNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InputID;
		
		private string _EntryNoticeID;
		
		private string _ProductID;
		
		private bool _IsUnpack;
		
		private string _Origin;
		
		private int _Count;
		
		private string _Note;
		
		private int _Status;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnEntryNoticeIDChanging(string value);
    partial void OnEntryNoticeIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnIsUnpackChanging(bool value);
    partial void OnIsUnpackChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public EntryNoticeItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EntryNoticeID
		{
			get
			{
				return this._EntryNoticeID;
			}
			set
			{
				if ((this._EntryNoticeID != value))
				{
					this.OnEntryNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._EntryNoticeID = value;
					this.SendPropertyChanged("EntryNoticeID");
					this.OnEntryNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnpack", DbType="Bit NOT NULL")]
		public bool IsUnpack
		{
			get
			{
				return this._IsUnpack;
			}
			set
			{
				if ((this._IsUnpack != value))
				{
					this.OnIsUnpackChanging(value);
					this.SendPropertyChanging();
					this._IsUnpack = value;
					this.SendPropertyChanged("IsUnpack");
					this.OnIsUnpackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(200)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntryNotices")]
	public partial class EntryNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ServiceID;
		
		private string _PurchaseID;
		
		private string _AdminID;
		
		private string _CarrierID;
		
		private string _CompanyCode;
		
		private int _EntryType;
		
		private string _WareCode;
		
		private string _WaybillCode;
		
		private int _Status;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntityRef<EntryNotices> _EntryNotices2;
		
		private EntityRef<EntryNotices> _EntryNotices1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnPurchaseIDChanging(string value);
    partial void OnPurchaseIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCarrierIDChanging(string value);
    partial void OnCarrierIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnEntryTypeChanging(int value);
    partial void OnEntryTypeChanged();
    partial void OnWareCodeChanging(string value);
    partial void OnWareCodeChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public EntryNotices()
		{
			this._EntryNotices2 = default(EntityRef<EntryNotices>);
			this._EntryNotices1 = default(EntityRef<EntryNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._EntryNotices1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="VarChar(50)")]
		public string PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					this.OnCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._CarrierID = value;
					this.SendPropertyChanged("CarrierID");
					this.OnCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryType", DbType="Int NOT NULL")]
		public int EntryType
		{
			get
			{
				return this._EntryType;
			}
			set
			{
				if ((this._EntryType != value))
				{
					this.OnEntryTypeChanging(value);
					this.SendPropertyChanging();
					this._EntryType = value;
					this.SendPropertyChanged("EntryType");
					this.OnEntryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WareCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WareCode
		{
			get
			{
				return this._WareCode;
			}
			set
			{
				if ((this._WareCode != value))
				{
					this.OnWareCodeChanging(value);
					this.SendPropertyChanging();
					this._WareCode = value;
					this.SendPropertyChanged("WareCode");
					this.OnWareCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntryNotices_EntryNotices", Storage="_EntryNotices2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public EntryNotices EntryNotices2
		{
			get
			{
				return this._EntryNotices2.Entity;
			}
			set
			{
				EntryNotices previousValue = this._EntryNotices2.Entity;
				if (((previousValue != value) 
							|| (this._EntryNotices2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntryNotices2.Entity = null;
						previousValue.EntryNotices1 = null;
					}
					this._EntryNotices2.Entity = value;
					if ((value != null))
					{
						value.EntryNotices1 = this;
					}
					this.SendPropertyChanged("EntryNotices2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntryNotices_EntryNotices", Storage="_EntryNotices1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public EntryNotices EntryNotices1
		{
			get
			{
				return this._EntryNotices1.Entity;
			}
			set
			{
				EntryNotices previousValue = this._EntryNotices1.Entity;
				if (((previousValue != value) 
							|| (this._EntryNotices1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntryNotices1.Entity = null;
						previousValue.EntryNotices2 = null;
					}
					this._EntryNotices1.Entity = value;
					if ((value != null))
					{
						value.EntryNotices2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("EntryNotices1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormEntrys")]
	public partial class FormEntrys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InputID;
		
		private string _ServiceID;
		
		private string _ArrivalID;
		
		private string _CompanyCode;
		
		private string _WareCode;
		
		private string _ProductID;
		
		private string _CaseCode;
		
		private int _Count;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Measurement;
		
		private string _AdminID;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnServiceIDChanging(string value);
    partial void OnServiceIDChanged();
    partial void OnArrivalIDChanging(string value);
    partial void OnArrivalIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnWareCodeChanging(string value);
    partial void OnWareCodeChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnCaseCodeChanging(string value);
    partial void OnCaseCodeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnMeasurementChanging(System.Nullable<double> value);
    partial void OnMeasurementChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public FormEntrys()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ArrivalID
		{
			get
			{
				return this._ArrivalID;
			}
			set
			{
				if ((this._ArrivalID != value))
				{
					this.OnArrivalIDChanging(value);
					this.SendPropertyChanging();
					this._ArrivalID = value;
					this.SendPropertyChanged("ArrivalID");
					this.OnArrivalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WareCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WareCode
		{
			get
			{
				return this._WareCode;
			}
			set
			{
				if ((this._WareCode != value))
				{
					this.OnWareCodeChanging(value);
					this.SendPropertyChanging();
					this._WareCode = value;
					this.SendPropertyChanged("WareCode");
					this.OnWareCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CaseCode
		{
			get
			{
				return this._CaseCode;
			}
			set
			{
				if ((this._CaseCode != value))
				{
					this.OnCaseCodeChanging(value);
					this.SendPropertyChanging();
					this._CaseCode = value;
					this.SendPropertyChanged("CaseCode");
					this.OnCaseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measurement", DbType="Float")]
		public System.Nullable<double> Measurement
		{
			get
			{
				return this._Measurement;
			}
			set
			{
				if ((this._Measurement != value))
				{
					this.OnMeasurementChanging(value);
					this.SendPropertyChanging();
					this._Measurement = value;
					this.SendPropertyChanged("Measurement");
					this.OnMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseForms")]
	public partial class PurchaseForms : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ItemID;
		
		private string _WaybillCode;
		
		private decimal _Count;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<PurchaseItems> _PurchaseItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnCountChanging(decimal value);
    partial void OnCountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PurchaseForms()
		{
			this._PurchaseItems = default(EntityRef<PurchaseItems>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._PurchaseItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Decimal(18,5) NOT NULL")]
		public decimal Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseItems_PurchaseForms", Storage="_PurchaseItems", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseItems PurchaseItems
		{
			get
			{
				return this._PurchaseItems.Entity;
			}
			set
			{
				PurchaseItems previousValue = this._PurchaseItems.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseItems.Entity = null;
						previousValue.PurchaseForms.Remove(this);
					}
					this._PurchaseItems.Entity = value;
					if ((value != null))
					{
						value.PurchaseForms.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(string);
					}
					this.SendPropertyChanged("PurchaseItems");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
