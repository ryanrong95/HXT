#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.BvnOps
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BvnOps")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBeneficiaries(Beneficiaries instance);
    partial void UpdateBeneficiaries(Beneficiaries instance);
    partial void DeleteBeneficiaries(Beneficiaries instance);
    partial void InsertCompanies(Companies instance);
    partial void UpdateCompanies(Companies instance);
    partial void DeleteCompanies(Companies instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertOrderItems(OrderItems instance);
    partial void UpdateOrderItems(OrderItems instance);
    partial void DeleteOrderItems(OrderItems instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertParties(Parties instance);
    partial void UpdateParties(Parties instance);
    partial void DeleteParties(Parties instance);
    partial void InsertPremiums(Premiums instance);
    partial void UpdatePremiums(Premiums instance);
    partial void DeletePremiums(Premiums instance);
    partial void InsertPurchases(Purchases instance);
    partial void UpdatePurchases(Purchases instance);
    partial void DeletePurchases(Purchases instance);
    partial void InsertStandardProducts(StandardProducts instance);
    partial void UpdateStandardProducts(StandardProducts instance);
    partial void DeleteStandardProducts(StandardProducts instance);
    partial void InsertVendors(Vendors instance);
    partial void UpdateVendors(Vendors instance);
    partial void DeleteVendors(Vendors instance);
    partial void InsertWaybills(Waybills instance);
    partial void UpdateWaybills(Waybills instance);
    partial void DeleteWaybills(Waybills instance);
    partial void InsertWayItems(WayItems instance);
    partial void UpdateWayItems(WayItems instance);
    partial void DeleteWayItems(WayItems instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.BvnOpsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Beneficiaries> Beneficiaries
		{
			get
			{
				return this.GetTable<Beneficiaries>();
			}
		}
		
		public System.Data.Linq.Table<ClientsTopView> ClientsTopView
		{
			get
			{
				return this.GetTable<ClientsTopView>();
			}
		}
		
		public System.Data.Linq.Table<Companies> Companies
		{
			get
			{
				return this.GetTable<Companies>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<OrderItems> OrderItems
		{
			get
			{
				return this.GetTable<OrderItems>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<Parties> Parties
		{
			get
			{
				return this.GetTable<Parties>();
			}
		}
		
		public System.Data.Linq.Table<Premiums> Premiums
		{
			get
			{
				return this.GetTable<Premiums>();
			}
		}
		
		public System.Data.Linq.Table<Purchases> Purchases
		{
			get
			{
				return this.GetTable<Purchases>();
			}
		}
		
		public System.Data.Linq.Table<StandardProducts> StandardProducts
		{
			get
			{
				return this.GetTable<StandardProducts>();
			}
		}
		
		public System.Data.Linq.Table<Vendors> Vendors
		{
			get
			{
				return this.GetTable<Vendors>();
			}
		}
		
		public System.Data.Linq.Table<Waybills> Waybills
		{
			get
			{
				return this.GetTable<Waybills>();
			}
		}
		
		public System.Data.Linq.Table<WayItems> WayItems
		{
			get
			{
				return this.GetTable<WayItems>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beneficiaries")]
	public partial class Beneficiaries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Bank;
		
		private int _Methord;
		
		private int _Currency;
		
		private string _Address;
		
		private string _Account;
		
		private string _SwiftCode;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnMethordChanging(int value);
    partial void OnMethordChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Beneficiaries()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int NOT NULL")]
		public int Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this.OnMethordChanging(value);
					this.SendPropertyChanging();
					this._Methord = value;
					this.SendPropertyChanged("Methord");
					this.OnMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_Orders", Storage="_Orders", ThisKey="ID", OtherKey="BeneficiaryID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientsTopView")]
	public partial class ClientsTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _Mobile;
		
		private string _Email;
		
		public ClientsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Address;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Contacts> _Contacts;
		
		private EntitySet<Parties> _Parties;
		
		private EntityRef<Vendors> _Vendors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Companies()
		{
			this._Contacts = new EntitySet<Contacts>(new Action<Contacts>(this.attach_Contacts), new Action<Contacts>(this.detach_Contacts));
			this._Parties = new EntitySet<Parties>(new Action<Parties>(this.attach_Parties), new Action<Parties>(this.detach_Parties));
			this._Vendors = default(EntityRef<Vendors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Contacts", Storage="_Contacts", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Contacts> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Parties", Storage="_Parties", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Parties> Parties
		{
			get
			{
				return this._Parties;
			}
			set
			{
				this._Parties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Vendors", Storage="_Vendors", ThisKey="ID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.Companies = null;
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.Companies = this;
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_Parties(Parties entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Parties(Parties entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CompanyID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Tel;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Parties> _Parties;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Contacts()
		{
			this._Parties = new EntitySet<Parties>(new Action<Parties>(this.attach_Parties), new Action<Parties>(this.detach_Parties));
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Parties", Storage="_Parties", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Parties> Parties
		{
			get
			{
				return this._Parties;
			}
			set
			{
				this._Parties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Contacts", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parties(Parties entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Parties(Parties entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItems")]
	public partial class OrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _InputID;
		
		private int _Origin;
		
		private string _StandardID;
		
		private int _Count;
		
		private decimal _Price;
		
		private string _LeadTime;
		
		private decimal _Weight;
		
		private string _AdminID;
		
		private string _ClientID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<Premiums> _Premiums;
		
		private EntityRef<Purchases> _Purchases;
		
		private EntitySet<WayItems> _WayItems;
		
		private EntityRef<Orders> _Orders;
		
		private EntityRef<StandardProducts> _StandardProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnInputIDChanging(string value);
    partial void OnInputIDChanged();
    partial void OnOriginChanging(int value);
    partial void OnOriginChanged();
    partial void OnStandardIDChanging(string value);
    partial void OnStandardIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnLeadTimeChanging(string value);
    partial void OnLeadTimeChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderItems()
		{
			this._Premiums = new EntitySet<Premiums>(new Action<Premiums>(this.attach_Premiums), new Action<Premiums>(this.detach_Premiums));
			this._Purchases = default(EntityRef<Purchases>);
			this._WayItems = new EntitySet<WayItems>(new Action<WayItems>(this.attach_WayItems), new Action<WayItems>(this.detach_WayItems));
			this._Orders = default(EntityRef<Orders>);
			this._StandardProducts = default(EntityRef<StandardProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputID", DbType="VarChar(50)")]
		public string InputID
		{
			get
			{
				return this._InputID;
			}
			set
			{
				if ((this._InputID != value))
				{
					this.OnInputIDChanging(value);
					this.SendPropertyChanging();
					this._InputID = value;
					this.SendPropertyChanged("InputID");
					this.OnInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="Int NOT NULL")]
		public int Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StandardID
		{
			get
			{
				return this._StandardID;
			}
			set
			{
				if ((this._StandardID != value))
				{
					if (this._StandardProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIDChanging(value);
					this.SendPropertyChanging();
					this._StandardID = value;
					this.SendPropertyChanged("StandardID");
					this.OnStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadTime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeadTime
		{
			get
			{
				return this._LeadTime;
			}
			set
			{
				if ((this._LeadTime != value))
				{
					this.OnLeadTimeChanging(value);
					this.SendPropertyChanging();
					this._LeadTime = value;
					this.SendPropertyChanged("LeadTime");
					this.OnLeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,7) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_Premiums", Storage="_Premiums", ThisKey="ID", OtherKey="OrderItemID")]
		public EntitySet<Premiums> Premiums
		{
			get
			{
				return this._Premiums;
			}
			set
			{
				this._Premiums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_Purchases", Storage="_Purchases", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Purchases Purchases
		{
			get
			{
				return this._Purchases.Entity;
			}
			set
			{
				Purchases previousValue = this._Purchases.Entity;
				if (((previousValue != value) 
							|| (this._Purchases.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchases.Entity = null;
						previousValue.OrderItems = null;
					}
					this._Purchases.Entity = value;
					if ((value != null))
					{
						value.OrderItems = this;
					}
					this.SendPropertyChanged("Purchases");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_WayItems", Storage="_WayItems", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<WayItems> WayItems
		{
			get
			{
				return this._WayItems;
			}
			set
			{
				this._WayItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItems", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_OrderItems", Storage="_StandardProducts", ThisKey="StandardID", OtherKey="ID", IsForeignKey=true)]
		public StandardProducts StandardProducts
		{
			get
			{
				return this._StandardProducts.Entity;
			}
			set
			{
				StandardProducts previousValue = this._StandardProducts.Entity;
				if (((previousValue != value) 
							|| (this._StandardProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardProducts.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._StandardProducts.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._StandardID = value.ID;
					}
					else
					{
						this._StandardID = default(string);
					}
					this.SendPropertyChanged("StandardProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Premiums(Premiums entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = this;
		}
		
		private void detach_Premiums(Premiums entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = null;
		}
		
		private void attach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = this;
		}
		
		private void detach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.OrderItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DelivererID;
		
		private string _ConsigneeID;
		
		private string _BeneficiaryID;
		
		private string _AdminID;
		
		private int _Currency;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private EntitySet<OrderItems> _OrderItems;
		
		private EntitySet<Premiums> _Premiums;
		
		private EntitySet<WayItems> _WayItems;
		
		private EntityRef<Beneficiaries> _Beneficiaries;
		
		private EntityRef<Parties> _Parties;
		
		private EntityRef<Parties> _Parties1;
		
		private EntityRef<Parties> _Parties2;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDelivererIDChanging(string value);
    partial void OnDelivererIDChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnBeneficiaryIDChanging(string value);
    partial void OnBeneficiaryIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Orders()
		{
			this._OrderItems = new EntitySet<OrderItems>(new Action<OrderItems>(this.attach_OrderItems), new Action<OrderItems>(this.detach_OrderItems));
			this._Premiums = new EntitySet<Premiums>(new Action<Premiums>(this.attach_Premiums), new Action<Premiums>(this.detach_Premiums));
			this._WayItems = new EntitySet<WayItems>(new Action<WayItems>(this.attach_WayItems), new Action<WayItems>(this.detach_WayItems));
			this._Beneficiaries = default(EntityRef<Beneficiaries>);
			this._Parties = default(EntityRef<Parties>);
			this._Parties1 = default(EntityRef<Parties>);
			this._Parties2 = default(EntityRef<Parties>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivererID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DelivererID
		{
			get
			{
				return this._DelivererID;
			}
			set
			{
				if ((this._DelivererID != value))
				{
					if ((this._Parties.HasLoadedOrAssignedValue || this._Parties2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelivererIDChanging(value);
					this.SendPropertyChanging();
					this._DelivererID = value;
					this.SendPropertyChanged("DelivererID");
					this.OnDelivererIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Parties1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					if (this._Beneficiaries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItems", Storage="_OrderItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderItems> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Premiums", Storage="_Premiums", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<Premiums> Premiums
		{
			get
			{
				return this._Premiums;
			}
			set
			{
				this._Premiums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_WayItems", Storage="_WayItems", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<WayItems> WayItems
		{
			get
			{
				return this._WayItems;
			}
			set
			{
				this._WayItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_Orders", Storage="_Beneficiaries", ThisKey="BeneficiaryID", OtherKey="ID", IsForeignKey=true)]
		public Beneficiaries Beneficiaries
		{
			get
			{
				return this._Beneficiaries.Entity;
			}
			set
			{
				Beneficiaries previousValue = this._Beneficiaries.Entity;
				if (((previousValue != value) 
							|| (this._Beneficiaries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Beneficiaries.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Beneficiaries.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._BeneficiaryID = value.ID;
					}
					else
					{
						this._BeneficiaryID = default(string);
					}
					this.SendPropertyChanged("Beneficiaries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders", Storage="_Parties", ThisKey="DelivererID", OtherKey="ID", IsForeignKey=true)]
		public Parties Parties
		{
			get
			{
				return this._Parties.Entity;
			}
			set
			{
				Parties previousValue = this._Parties.Entity;
				if (((previousValue != value) 
							|| (this._Parties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parties.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Parties.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._DelivererID = value.ID;
					}
					else
					{
						this._DelivererID = default(string);
					}
					this.SendPropertyChanged("Parties");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders1", Storage="_Parties1", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Parties Parties1
		{
			get
			{
				return this._Parties1.Entity;
			}
			set
			{
				Parties previousValue = this._Parties1.Entity;
				if (((previousValue != value) 
							|| (this._Parties1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parties1.Entity = null;
						previousValue.Orders1.Remove(this);
					}
					this._Parties1.Entity = value;
					if ((value != null))
					{
						value.Orders1.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Parties1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders2", Storage="_Parties2", ThisKey="DelivererID", OtherKey="ID", IsForeignKey=true)]
		public Parties Parties2
		{
			get
			{
				return this._Parties2.Entity;
			}
			set
			{
				Parties previousValue = this._Parties2.Entity;
				if (((previousValue != value) 
							|| (this._Parties2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parties2.Entity = null;
						previousValue.Orders2.Remove(this);
					}
					this._Parties2.Entity = value;
					if ((value != null))
					{
						value.Orders2.Add(this);
						this._DelivererID = value.ID;
					}
					else
					{
						this._DelivererID = default(string);
					}
					this.SendPropertyChanged("Parties2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_Premiums(Premiums entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_Premiums(Premiums entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parties")]
	public partial class Parties : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ContactID;
		
		private string _CompanyID;
		
		private string _AdminID;
		
		private int _District;
		
		private string _Address;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<Orders> _Orders1;
		
		private EntitySet<Orders> _Orders2;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnDistrictChanging(int value);
    partial void OnDistrictChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Parties()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._Orders1 = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders1), new Action<Orders>(this.detach_Orders1));
			this._Orders2 = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders2), new Action<Orders>(this.detach_Orders2));
			this._Companies = default(EntityRef<Companies>);
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50)")]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="Int NOT NULL")]
		public int District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders", Storage="_Orders", ThisKey="ID", OtherKey="DelivererID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders1", Storage="_Orders1", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<Orders> Orders1
		{
			get
			{
				return this._Orders1;
			}
			set
			{
				this._Orders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parties_Orders2", Storage="_Orders2", ThisKey="ID", OtherKey="DelivererID")]
		public EntitySet<Orders> Orders2
		{
			get
			{
				return this._Orders2;
			}
			set
			{
				this._Orders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Parties", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Parties.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Parties.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Parties", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Parties.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Parties.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties = null;
		}
		
		private void attach_Orders1(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties1 = this;
		}
		
		private void detach_Orders1(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties1 = null;
		}
		
		private void attach_Orders2(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties2 = this;
		}
		
		private void detach_Orders2(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Parties2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Premiums")]
	public partial class Premiums : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _OrderItemID;
		
		private string _Name;
		
		private int _Count;
		
		private decimal _Price;
		
		private string _Summary;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<OrderItems> _OrderItems;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Premiums()
		{
			this._OrderItems = default(EntityRef<OrderItems>);
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					if (this._OrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_Premiums", Storage="_OrderItems", ThisKey="OrderItemID", OtherKey="ID", IsForeignKey=true)]
		public OrderItems OrderItems
		{
			get
			{
				return this._OrderItems.Entity;
			}
			set
			{
				OrderItems previousValue = this._OrderItems.Entity;
				if (((previousValue != value) 
							|| (this._OrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItems.Entity = null;
						previousValue.Premiums.Remove(this);
					}
					this._OrderItems.Entity = value;
					if ((value != null))
					{
						value.Premiums.Add(this);
						this._OrderItemID = value.ID;
					}
					else
					{
						this._OrderItemID = default(string);
					}
					this.SendPropertyChanged("OrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Premiums", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.Premiums.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.Premiums.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchases")]
	public partial class Purchases : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _IntputID;
		
		private System.Nullable<decimal> _Price;
		
		private string _LeadTime;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<Purchases> _Purchases2;
		
		private EntityRef<OrderItems> _OrderItems;
		
		private EntityRef<Purchases> _Purchases1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnIntputIDChanging(string value);
    partial void OnIntputIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnLeadTimeChanging(string value);
    partial void OnLeadTimeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Purchases()
		{
			this._Purchases2 = new EntitySet<Purchases>(new Action<Purchases>(this.attach_Purchases2), new Action<Purchases>(this.detach_Purchases2));
			this._OrderItems = default(EntityRef<OrderItems>);
			this._Purchases1 = default(EntityRef<Purchases>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._OrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntputID", DbType="VarChar(50)")]
		public string IntputID
		{
			get
			{
				return this._IntputID;
			}
			set
			{
				if ((this._IntputID != value))
				{
					if (this._Purchases1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntputIDChanging(value);
					this.SendPropertyChanging();
					this._IntputID = value;
					this.SendPropertyChanged("IntputID");
					this.OnIntputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadTime", DbType="NVarChar(50)")]
		public string LeadTime
		{
			get
			{
				return this._LeadTime;
			}
			set
			{
				if ((this._LeadTime != value))
				{
					this.OnLeadTimeChanging(value);
					this.SendPropertyChanging();
					this._LeadTime = value;
					this.SendPropertyChanged("LeadTime");
					this.OnLeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchases_Purchases", Storage="_Purchases2", ThisKey="ID", OtherKey="IntputID")]
		public EntitySet<Purchases> Purchases2
		{
			get
			{
				return this._Purchases2;
			}
			set
			{
				this._Purchases2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_Purchases", Storage="_OrderItems", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public OrderItems OrderItems
		{
			get
			{
				return this._OrderItems.Entity;
			}
			set
			{
				OrderItems previousValue = this._OrderItems.Entity;
				if (((previousValue != value) 
							|| (this._OrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItems.Entity = null;
						previousValue.Purchases = null;
					}
					this._OrderItems.Entity = value;
					if ((value != null))
					{
						value.Purchases = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("OrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchases_Purchases", Storage="_Purchases1", ThisKey="IntputID", OtherKey="ID", IsForeignKey=true)]
		public Purchases Purchases1
		{
			get
			{
				return this._Purchases1.Entity;
			}
			set
			{
				Purchases previousValue = this._Purchases1.Entity;
				if (((previousValue != value) 
							|| (this._Purchases1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchases1.Entity = null;
						previousValue.Purchases2.Remove(this);
					}
					this._Purchases1.Entity = value;
					if ((value != null))
					{
						value.Purchases2.Add(this);
						this._IntputID = value.ID;
					}
					else
					{
						this._IntputID = default(string);
					}
					this.SendPropertyChanged("Purchases1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases2(Purchases entity)
		{
			this.SendPropertyChanging();
			entity.Purchases1 = this;
		}
		
		private void detach_Purchases2(Purchases entity)
		{
			this.SendPropertyChanging();
			entity.Purchases1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardProducts")]
	public partial class StandardProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _ManufactruerID;
		
		private string _PackageCase;
		
		private string _Packaging;
		
		private string _Batch;
		
		private string _DateCode;
		
		private string _Description;
		
		private EntitySet<OrderItems> _OrderItems;
		
		private EntityRef<Vendors> _Vendors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnManufactruerIDChanging(string value);
    partial void OnManufactruerIDChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnDateCodeChanging(string value);
    partial void OnDateCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public StandardProducts()
		{
			this._OrderItems = new EntitySet<OrderItems>(new Action<OrderItems>(this.attach_OrderItems), new Action<OrderItems>(this.detach_OrderItems));
			this._Vendors = default(EntityRef<Vendors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactruerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufactruerID
		{
			get
			{
				return this._ManufactruerID;
			}
			set
			{
				if ((this._ManufactruerID != value))
				{
					if (this._Vendors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufactruerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufactruerID = value;
					this.SendPropertyChanged("ManufactruerID");
					this.OnManufactruerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this.OnDateCodeChanging(value);
					this.SendPropertyChanging();
					this._DateCode = value;
					this.SendPropertyChanged("DateCode");
					this.OnDateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_OrderItems", Storage="_OrderItems", ThisKey="ID", OtherKey="StandardID")]
		public EntitySet<OrderItems> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_StandardProducts", Storage="_Vendors", ThisKey="ManufactruerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Vendors Vendors
		{
			get
			{
				return this._Vendors.Entity;
			}
			set
			{
				Vendors previousValue = this._Vendors.Entity;
				if (((previousValue != value) 
							|| (this._Vendors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendors.Entity = null;
						previousValue.StandardProducts.Remove(this);
					}
					this._Vendors.Entity = value;
					if ((value != null))
					{
						value.StandardProducts.Add(this);
						this._ManufactruerID = value.CompanyID;
					}
					else
					{
						this._ManufactruerID = default(string);
					}
					this.SendPropertyChanged("Vendors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = this;
		}
		
		private void detach_OrderItems(OrderItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendors")]
	public partial class Vendors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyID;
		
		private int _Type;
		
		private EntitySet<StandardProducts> _StandardProducts;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public Vendors()
		{
			this._StandardProducts = new EntitySet<StandardProducts>(new Action<StandardProducts>(this.attach_StandardProducts), new Action<StandardProducts>(this.detach_StandardProducts));
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendors_StandardProducts", Storage="_StandardProducts", ThisKey="CompanyID", OtherKey="ManufactruerID")]
		public EntitySet<StandardProducts> StandardProducts
		{
			get
			{
				return this._StandardProducts;
			}
			set
			{
				this._StandardProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Vendors", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Vendors = null;
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Vendors = this;
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StandardProducts(StandardProducts entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = this;
		}
		
		private void detach_StandardProducts(StandardProducts entity)
		{
			this.SendPropertyChanging();
			entity.Vendors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Waybills")]
	public partial class Waybills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Carrier;
		
		private System.Nullable<decimal> _Weight;
		
		private EntitySet<WayItems> _WayItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCarrierChanging(string value);
    partial void OnCarrierChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    #endregion
		
		public Waybills()
		{
			this._WayItems = new EntitySet<WayItems>(new Action<WayItems>(this.attach_WayItems), new Action<WayItems>(this.detach_WayItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carrier", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Carrier
		{
			get
			{
				return this._Carrier;
			}
			set
			{
				if ((this._Carrier != value))
				{
					this.OnCarrierChanging(value);
					this.SendPropertyChanging();
					this._Carrier = value;
					this.SendPropertyChanged("Carrier");
					this.OnCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Waybills_WayItems", Storage="_WayItems", ThisKey="ID", OtherKey="WaybillID")]
		public EntitySet<WayItems> WayItems
		{
			get
			{
				return this._WayItems;
			}
			set
			{
				this._WayItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.Waybills = this;
		}
		
		private void detach_WayItems(WayItems entity)
		{
			this.SendPropertyChanging();
			entity.Waybills = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WayItems")]
	public partial class WayItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _WaybillID;
		
		private string _OrderID;
		
		private string _ItemID;
		
		private System.Nullable<decimal> _Weight;
		
		private EntityRef<OrderItems> _OrderItems;
		
		private EntityRef<Orders> _Orders;
		
		private EntityRef<Waybills> _Waybills;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnWaybillIDChanging(string value);
    partial void OnWaybillIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    #endregion
		
		public WayItems()
		{
			this._OrderItems = default(EntityRef<OrderItems>);
			this._Orders = default(EntityRef<Orders>);
			this._Waybills = default(EntityRef<Waybills>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillID
		{
			get
			{
				return this._WaybillID;
			}
			set
			{
				if ((this._WaybillID != value))
				{
					if (this._Waybills.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWaybillIDChanging(value);
					this.SendPropertyChanging();
					this._WaybillID = value;
					this.SendPropertyChanged("WaybillID");
					this.OnWaybillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(50)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._OrderItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItems_WayItems", Storage="_OrderItems", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public OrderItems OrderItems
		{
			get
			{
				return this._OrderItems.Entity;
			}
			set
			{
				OrderItems previousValue = this._OrderItems.Entity;
				if (((previousValue != value) 
							|| (this._OrderItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItems.Entity = null;
						previousValue.WayItems.Remove(this);
					}
					this._OrderItems.Entity = value;
					if ((value != null))
					{
						value.WayItems.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(string);
					}
					this.SendPropertyChanged("OrderItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_WayItems", Storage="_Orders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.WayItems.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.WayItems.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Waybills_WayItems", Storage="_Waybills", ThisKey="WaybillID", OtherKey="ID", IsForeignKey=true)]
		public Waybills Waybills
		{
			get
			{
				return this._Waybills.Entity;
			}
			set
			{
				Waybills previousValue = this._Waybills.Entity;
				if (((previousValue != value) 
							|| (this._Waybills.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Waybills.Entity = null;
						previousValue.WayItems.Remove(this);
					}
					this._Waybills.Entity = value;
					if ((value != null))
					{
						value.WayItems.Add(this);
						this._WaybillID = value.ID;
					}
					else
					{
						this._WaybillID = default(string);
					}
					this.SendPropertyChanged("Waybills");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
