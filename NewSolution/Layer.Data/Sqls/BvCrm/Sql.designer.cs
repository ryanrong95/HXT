#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.BvCrm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bv3crm")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertActions(Actions instance);
    partial void UpdateActions(Actions instance);
    partial void DeleteActions(Actions instance);
    partial void InsertAdminsProject(AdminsProject instance);
    partial void UpdateAdminsProject(AdminsProject instance);
    partial void DeleteAdminsProject(AdminsProject instance);
    partial void InsertApplies(Applies instance);
    partial void UpdateApplies(Applies instance);
    partial void DeleteApplies(Applies instance);
    partial void InsertApplySteps(ApplySteps instance);
    partial void UpdateApplySteps(ApplySteps instance);
    partial void DeleteApplySteps(ApplySteps instance);
    partial void InsertApproveFlows(ApproveFlows instance);
    partial void UpdateApproveFlows(ApproveFlows instance);
    partial void DeleteApproveFlows(ApproveFlows instance);
    partial void InsertApproveSteps(ApproveSteps instance);
    partial void UpdateApproveSteps(ApproveSteps instance);
    partial void DeleteApproveSteps(ApproveSteps instance);
    partial void InsertAreas(Areas instance);
    partial void UpdateAreas(Areas instance);
    partial void DeleteAreas(Areas instance);
    partial void InsertBeneficiaries(Beneficiaries instance);
    partial void UpdateBeneficiaries(Beneficiaries instance);
    partial void DeleteBeneficiaries(Beneficiaries instance);
    partial void InsertCatalogues(Catalogues instance);
    partial void UpdateCatalogues(Catalogues instance);
    partial void DeleteCatalogues(Catalogues instance);
    partial void InsertCharges(Charges instance);
    partial void UpdateCharges(Charges instance);
    partial void DeleteCharges(Charges instance);
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    partial void InsertClientShowers(ClientShowers instance);
    partial void UpdateClientShowers(ClientShowers instance);
    partial void DeleteClientShowers(ClientShowers instance);
    partial void InsertCompanies(Companies instance);
    partial void UpdateCompanies(Companies instance);
    partial void DeleteCompanies(Companies instance);
    partial void InsertCompeteProducts(CompeteProducts instance);
    partial void UpdateCompeteProducts(CompeteProducts instance);
    partial void DeleteCompeteProducts(CompeteProducts instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertConsignees(Consignees instance);
    partial void UpdateConsignees(Consignees instance);
    partial void DeleteConsignees(Consignees instance);
    partial void InsertDeclareProducts(DeclareProducts instance);
    partial void UpdateDeclareProducts(DeclareProducts instance);
    partial void DeleteDeclareProducts(DeclareProducts instance);
    partial void InsertDirectories(Directories instance);
    partial void UpdateDirectories(Directories instance);
    partial void DeleteDirectories(Directories instance);
    partial void InsertDistricts(Districts instance);
    partial void UpdateDistricts(Districts instance);
    partial void DeleteDistricts(Districts instance);
    partial void InsertDocuments(Documents instance);
    partial void UpdateDocuments(Documents instance);
    partial void DeleteDocuments(Documents instance);
    partial void InsertFiles(Files instance);
    partial void UpdateFiles(Files instance);
    partial void DeleteFiles(Files instance);
    partial void InsertIndustries(Industries instance);
    partial void UpdateIndustries(Industries instance);
    partial void DeleteIndustries(Industries instance);
    partial void InsertInvoices(Invoices instance);
    partial void UpdateInvoices(Invoices instance);
    partial void DeleteInvoices(Invoices instance);
    partial void InsertLevels(Levels instance);
    partial void UpdateLevels(Levels instance);
    partial void DeleteLevels(Levels instance);
    partial void InsertMapsAdmin(MapsAdmin instance);
    partial void UpdateMapsAdmin(MapsAdmin instance);
    partial void DeleteMapsAdmin(MapsAdmin instance);
    partial void InsertMapsClient(MapsClient instance);
    partial void UpdateMapsClient(MapsClient instance);
    partial void DeleteMapsClient(MapsClient instance);
    partial void InsertMapsDeclareCompany(MapsDeclareCompany instance);
    partial void UpdateMapsDeclareCompany(MapsDeclareCompany instance);
    partial void DeleteMapsDeclareCompany(MapsDeclareCompany instance);
    partial void InsertMapsDistrict(MapsDistrict instance);
    partial void UpdateMapsDistrict(MapsDistrict instance);
    partial void DeleteMapsDistrict(MapsDistrict instance);
    partial void InsertMapsNotice(MapsNotice instance);
    partial void UpdateMapsNotice(MapsNotice instance);
    partial void DeleteMapsNotice(MapsNotice instance);
    partial void InsertMapsProductItemEnquiry(MapsProductItemEnquiry instance);
    partial void UpdateMapsProductItemEnquiry(MapsProductItemEnquiry instance);
    partial void DeleteMapsProductItemEnquiry(MapsProductItemEnquiry instance);
    partial void InsertMapsProject(MapsProject instance);
    partial void UpdateMapsProject(MapsProject instance);
    partial void DeleteMapsProject(MapsProject instance);
    partial void InsertMapsReply(MapsReply instance);
    partial void UpdateMapsReply(MapsReply instance);
    partial void DeleteMapsReply(MapsReply instance);
    partial void InsertMapsReport(MapsReport instance);
    partial void UpdateMapsReport(MapsReport instance);
    partial void DeleteMapsReport(MapsReport instance);
    partial void InsertNotices(Notices instance);
    partial void UpdateNotices(Notices instance);
    partial void DeleteNotices(Notices instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertPreminums(Preminums instance);
    partial void UpdatePreminums(Preminums instance);
    partial void DeletePreminums(Preminums instance);
    partial void InsertProblems(Problems instance);
    partial void UpdateProblems(Problems instance);
    partial void DeleteProblems(Problems instance);
    partial void InsertProccesses(Proccesses instance);
    partial void UpdateProccesses(Proccesses instance);
    partial void DeleteProccesses(Proccesses instance);
    partial void InsertProductItemFiles(ProductItemFiles instance);
    partial void UpdateProductItemFiles(ProductItemFiles instance);
    partial void DeleteProductItemFiles(ProductItemFiles instance);
    partial void InsertProductItemSamples(ProductItemSamples instance);
    partial void UpdateProductItemSamples(ProductItemSamples instance);
    partial void DeleteProductItemSamples(ProductItemSamples instance);
    partial void InsertReplies(Replies instance);
    partial void UpdateReplies(Replies instance);
    partial void DeleteReplies(Replies instance);
    partial void InsertReports(Reports instance);
    partial void UpdateReports(Reports instance);
    partial void DeleteReports(Reports instance);
    partial void InsertScores(Scores instance);
    partial void UpdateScores(Scores instance);
    partial void DeleteScores(Scores instance);
    partial void InsertStandardProducts(StandardProducts instance);
    partial void UpdateStandardProducts(StandardProducts instance);
    partial void DeleteStandardProducts(StandardProducts instance);
    partial void InsertWarnings(Warnings instance);
    partial void UpdateWarnings(Warnings instance);
    partial void DeleteWarnings(Warnings instance);
    partial void InsertWorksOther(WorksOther instance);
    partial void UpdateWorksOther(WorksOther instance);
    partial void DeleteWorksOther(WorksOther instance);
    partial void InsertWorksWeekly(WorksWeekly instance);
    partial void UpdateWorksWeekly(WorksWeekly instance);
    partial void DeleteWorksWeekly(WorksWeekly instance);
    partial void InsertProjects(Projects instance);
    partial void UpdateProjects(Projects instance);
    partial void DeleteProjects(Projects instance);
    partial void InsertProductItems(ProductItems instance);
    partial void UpdateProductItems(ProductItems instance);
    partial void DeleteProductItems(ProductItems instance);
    partial void InsertProductItemEnquiries(ProductItemEnquiries instance);
    partial void UpdateProductItemEnquiries(ProductItemEnquiries instance);
    partial void DeleteProductItemEnquiries(ProductItemEnquiries instance);
    partial void InsertClientVisits(ClientVisits instance);
    partial void UpdateClientVisits(ClientVisits instance);
    partial void DeleteClientVisits(ClientVisits instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.bv3crmConnectionString5, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actions> Actions
		{
			get
			{
				return this.GetTable<Actions>();
			}
		}
		
		public System.Data.Linq.Table<AdminsProject> AdminsProject
		{
			get
			{
				return this.GetTable<AdminsProject>();
			}
		}
		
		public System.Data.Linq.Table<Applies> Applies
		{
			get
			{
				return this.GetTable<Applies>();
			}
		}
		
		public System.Data.Linq.Table<ApplySteps> ApplySteps
		{
			get
			{
				return this.GetTable<ApplySteps>();
			}
		}
		
		public System.Data.Linq.Table<ApproveFlows> ApproveFlows
		{
			get
			{
				return this.GetTable<ApproveFlows>();
			}
		}
		
		public System.Data.Linq.Table<ApproveSteps> ApproveSteps
		{
			get
			{
				return this.GetTable<ApproveSteps>();
			}
		}
		
		public System.Data.Linq.Table<Areas> Areas
		{
			get
			{
				return this.GetTable<Areas>();
			}
		}
		
		public System.Data.Linq.Table<Beneficiaries> Beneficiaries
		{
			get
			{
				return this.GetTable<Beneficiaries>();
			}
		}
		
		public System.Data.Linq.Table<Catalogues> Catalogues
		{
			get
			{
				return this.GetTable<Catalogues>();
			}
		}
		
		public System.Data.Linq.Table<Charges> Charges
		{
			get
			{
				return this.GetTable<Charges>();
			}
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
		
		public System.Data.Linq.Table<ClientShowers> ClientShowers
		{
			get
			{
				return this.GetTable<ClientShowers>();
			}
		}
		
		public System.Data.Linq.Table<Companies> Companies
		{
			get
			{
				return this.GetTable<Companies>();
			}
		}
		
		public System.Data.Linq.Table<CompeteProducts> CompeteProducts
		{
			get
			{
				return this.GetTable<CompeteProducts>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<Consignees> Consignees
		{
			get
			{
				return this.GetTable<Consignees>();
			}
		}
		
		public System.Data.Linq.Table<DeclareProducts> DeclareProducts
		{
			get
			{
				return this.GetTable<DeclareProducts>();
			}
		}
		
		public System.Data.Linq.Table<Directories> Directories
		{
			get
			{
				return this.GetTable<Directories>();
			}
		}
		
		public System.Data.Linq.Table<Districts> Districts
		{
			get
			{
				return this.GetTable<Districts>();
			}
		}
		
		public System.Data.Linq.Table<Documents> Documents
		{
			get
			{
				return this.GetTable<Documents>();
			}
		}
		
		public System.Data.Linq.Table<Files> Files
		{
			get
			{
				return this.GetTable<Files>();
			}
		}
		
		public System.Data.Linq.Table<Industries> Industries
		{
			get
			{
				return this.GetTable<Industries>();
			}
		}
		
		public System.Data.Linq.Table<Invoices> Invoices
		{
			get
			{
				return this.GetTable<Invoices>();
			}
		}
		
		public System.Data.Linq.Table<Levels> Levels
		{
			get
			{
				return this.GetTable<Levels>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdmin> MapsAdmin
		{
			get
			{
				return this.GetTable<MapsAdmin>();
			}
		}
		
		public System.Data.Linq.Table<MapsClient> MapsClient
		{
			get
			{
				return this.GetTable<MapsClient>();
			}
		}
		
		public System.Data.Linq.Table<MapsDeclareCompany> MapsDeclareCompany
		{
			get
			{
				return this.GetTable<MapsDeclareCompany>();
			}
		}
		
		public System.Data.Linq.Table<MapsDistrict> MapsDistrict
		{
			get
			{
				return this.GetTable<MapsDistrict>();
			}
		}
		
		public System.Data.Linq.Table<MapsDistrict_0531> MapsDistrict_0531
		{
			get
			{
				return this.GetTable<MapsDistrict_0531>();
			}
		}
		
		public System.Data.Linq.Table<MapsDistrict_bak1203> MapsDistrict_bak1203
		{
			get
			{
				return this.GetTable<MapsDistrict_bak1203>();
			}
		}
		
		public System.Data.Linq.Table<MapsNotice> MapsNotice
		{
			get
			{
				return this.GetTable<MapsNotice>();
			}
		}
		
		public System.Data.Linq.Table<MapsProductItemEnquiry> MapsProductItemEnquiry
		{
			get
			{
				return this.GetTable<MapsProductItemEnquiry>();
			}
		}
		
		public System.Data.Linq.Table<MapsProject> MapsProject
		{
			get
			{
				return this.GetTable<MapsProject>();
			}
		}
		
		public System.Data.Linq.Table<MapsReply> MapsReply
		{
			get
			{
				return this.GetTable<MapsReply>();
			}
		}
		
		public System.Data.Linq.Table<MapsReport> MapsReport
		{
			get
			{
				return this.GetTable<MapsReport>();
			}
		}
		
		public System.Data.Linq.Table<Notices> Notices
		{
			get
			{
				return this.GetTable<Notices>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<Preminums> Preminums
		{
			get
			{
				return this.GetTable<Preminums>();
			}
		}
		
		public System.Data.Linq.Table<Problems> Problems
		{
			get
			{
				return this.GetTable<Problems>();
			}
		}
		
		public System.Data.Linq.Table<Proccesses> Proccesses
		{
			get
			{
				return this.GetTable<Proccesses>();
			}
		}
		
		public System.Data.Linq.Table<ProductItemFiles> ProductItemFiles
		{
			get
			{
				return this.GetTable<ProductItemFiles>();
			}
		}
		
		public System.Data.Linq.Table<ProductItemSamples> ProductItemSamples
		{
			get
			{
				return this.GetTable<ProductItemSamples>();
			}
		}
		
		public System.Data.Linq.Table<Replies> Replies
		{
			get
			{
				return this.GetTable<Replies>();
			}
		}
		
		public System.Data.Linq.Table<Reports> Reports
		{
			get
			{
				return this.GetTable<Reports>();
			}
		}
		
		public System.Data.Linq.Table<Scores> Scores
		{
			get
			{
				return this.GetTable<Scores>();
			}
		}
		
		public System.Data.Linq.Table<StandardProducts> StandardProducts
		{
			get
			{
				return this.GetTable<StandardProducts>();
			}
		}
		
		public System.Data.Linq.Table<Warnings> Warnings
		{
			get
			{
				return this.GetTable<Warnings>();
			}
		}
		
		public System.Data.Linq.Table<WorksOther> WorksOther
		{
			get
			{
				return this.GetTable<WorksOther>();
			}
		}
		
		public System.Data.Linq.Table<WorksWeekly> WorksWeekly
		{
			get
			{
				return this.GetTable<WorksWeekly>();
			}
		}
		
		public System.Data.Linq.Table<AdminTopView> AdminTopView
		{
			get
			{
				return this.GetTable<AdminTopView>();
			}
		}
		
		public System.Data.Linq.Table<Projects> Projects
		{
			get
			{
				return this.GetTable<Projects>();
			}
		}
		
		public System.Data.Linq.Table<ProductItems> ProductItems
		{
			get
			{
				return this.GetTable<ProductItems>();
			}
		}
		
		public System.Data.Linq.Table<ProductItemEnquiries> ProductItemEnquiries
		{
			get
			{
				return this.GetTable<ProductItemEnquiries>();
			}
		}
		
		public System.Data.Linq.Table<ClientVisits> ClientVisits
		{
			get
			{
				return this.GetTable<ClientVisits>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actions")]
	public partial class Actions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _ClientID;
		
		private string _CompanyID;
		
		private int _Target;
		
		private int _Methord;
		
		private string _CatalogueID;
		
		private string _SaleManagerID;
		
		private string _SaleID;
		
		private string _AdminID;
		
		private string _Summary;
		
		private System.DateTime _PlanDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private EntitySet<Charges> _Charges;
		
		private EntitySet<Problems> _Problems;
		
		private EntitySet<Reports> _Reports;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Catalogues> _Catalogues;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnTargetChanging(int value);
    partial void OnTargetChanged();
    partial void OnMethordChanging(int value);
    partial void OnMethordChanged();
    partial void OnCatalogueIDChanging(string value);
    partial void OnCatalogueIDChanged();
    partial void OnSaleManagerIDChanging(string value);
    partial void OnSaleManagerIDChanged();
    partial void OnSaleIDChanging(string value);
    partial void OnSaleIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPlanDateChanging(System.DateTime value);
    partial void OnPlanDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Actions()
		{
			this._Charges = new EntitySet<Charges>(new Action<Charges>(this.attach_Charges), new Action<Charges>(this.detach_Charges));
			this._Problems = new EntitySet<Problems>(new Action<Problems>(this.attach_Problems), new Action<Problems>(this.detach_Problems));
			this._Reports = new EntitySet<Reports>(new Action<Reports>(this.attach_Reports), new Action<Reports>(this.detach_Reports));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Catalogues = default(EntityRef<Catalogues>);
			this._Clients = default(EntityRef<Clients>);
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="Int NOT NULL")]
		public int Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methord", DbType="Int NOT NULL")]
		public int Methord
		{
			get
			{
				return this._Methord;
			}
			set
			{
				if ((this._Methord != value))
				{
					this.OnMethordChanging(value);
					this.SendPropertyChanging();
					this._Methord = value;
					this.SendPropertyChanged("Methord");
					this.OnMethordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogueID", DbType="VarChar(50)")]
		public string CatalogueID
		{
			get
			{
				return this._CatalogueID;
			}
			set
			{
				if ((this._CatalogueID != value))
				{
					if (this._Catalogues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogueIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogueID = value;
					this.SendPropertyChanged("CatalogueID");
					this.OnCatalogueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleManagerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SaleManagerID
		{
			get
			{
				return this._SaleManagerID;
			}
			set
			{
				if ((this._SaleManagerID != value))
				{
					this.OnSaleManagerIDChanging(value);
					this.SendPropertyChanging();
					this._SaleManagerID = value;
					this.SendPropertyChanged("SaleManagerID");
					this.OnSaleManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SaleID
		{
			get
			{
				return this._SaleID;
			}
			set
			{
				if ((this._SaleID != value))
				{
					this.OnSaleIDChanging(value);
					this.SendPropertyChanging();
					this._SaleID = value;
					this.SendPropertyChanged("SaleID");
					this.OnSaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDate", DbType="DateTime NOT NULL")]
		public System.DateTime PlanDate
		{
			get
			{
				return this._PlanDate;
			}
			set
			{
				if ((this._PlanDate != value))
				{
					this.OnPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PlanDate = value;
					this.SendPropertyChanged("PlanDate");
					this.OnPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Charges", Storage="_Charges", ThisKey="ID", OtherKey="ActionID")]
		public EntitySet<Charges> Charges
		{
			get
			{
				return this._Charges;
			}
			set
			{
				this._Charges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Problems", Storage="_Problems", ThisKey="ID", OtherKey="ActionID")]
		public EntitySet<Problems> Problems
		{
			get
			{
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Reports", Storage="_Reports", ThisKey="ID", OtherKey="ActionID")]
		public EntitySet<Reports> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Actions", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Actions", Storage="_Catalogues", ThisKey="CatalogueID", OtherKey="ID", IsForeignKey=true)]
		public Catalogues Catalogues
		{
			get
			{
				return this._Catalogues.Entity;
			}
			set
			{
				Catalogues previousValue = this._Catalogues.Entity;
				if (((previousValue != value) 
							|| (this._Catalogues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogues.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._Catalogues.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._CatalogueID = value.ID;
					}
					else
					{
						this._CatalogueID = default(string);
					}
					this.SendPropertyChanged("Catalogues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Actions", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Actions", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Charges(Charges entity)
		{
			this.SendPropertyChanging();
			entity.Actions = this;
		}
		
		private void detach_Charges(Charges entity)
		{
			this.SendPropertyChanging();
			entity.Actions = null;
		}
		
		private void attach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Actions = this;
		}
		
		private void detach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Actions = null;
		}
		
		private void attach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Actions = this;
		}
		
		private void detach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Actions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsProject")]
	public partial class AdminsProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private int _JobType;
		
		private string _CompanyID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _WXID;
		
		private string _Token;
		
		private bool _IsAgree;
		
		private System.Nullable<int> _ScoreType;
		
		private System.Nullable<decimal> _SalaryBase;
		
		private string _DyjID;
		
		private EntitySet<Actions> _Actions;
		
		private EntitySet<Applies> _Applies;
		
		private EntitySet<ApplySteps> _ApplySteps;
		
		private EntitySet<Documents> _Documents;
		
		private EntitySet<MapsAdmin> _MapsAdmin;
		
		private EntitySet<MapsClient> _MapsClient;
		
		private EntitySet<MapsDistrict> _MapsDistrict;
		
		private EntitySet<MapsDistrict> _MapsDistrict1;
		
		private EntitySet<MapsNotice> _MapsNotice;
		
		private EntitySet<MapsReply> _MapsReply;
		
		private EntitySet<MapsReport> _MapsReport;
		
		private EntitySet<Notices> _Notices;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<Problems> _Problems;
		
		private EntitySet<Proccesses> _Proccesses;
		
		private EntitySet<Replies> _Replies;
		
		private EntitySet<Reports> _Reports;
		
		private EntitySet<WorksOther> _WorksOther;
		
		private EntitySet<WorksWeekly> _WorksWeekly;
		
		private EntitySet<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnJobTypeChanging(int value);
    partial void OnJobTypeChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnWXIDChanging(string value);
    partial void OnWXIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnIsAgreeChanging(bool value);
    partial void OnIsAgreeChanged();
    partial void OnScoreTypeChanging(System.Nullable<int> value);
    partial void OnScoreTypeChanged();
    partial void OnSalaryBaseChanging(System.Nullable<decimal> value);
    partial void OnSalaryBaseChanged();
    partial void OnDyjIDChanging(string value);
    partial void OnDyjIDChanged();
    #endregion
		
		public AdminsProject()
		{
			this._Actions = new EntitySet<Actions>(new Action<Actions>(this.attach_Actions), new Action<Actions>(this.detach_Actions));
			this._Applies = new EntitySet<Applies>(new Action<Applies>(this.attach_Applies), new Action<Applies>(this.detach_Applies));
			this._ApplySteps = new EntitySet<ApplySteps>(new Action<ApplySteps>(this.attach_ApplySteps), new Action<ApplySteps>(this.detach_ApplySteps));
			this._Documents = new EntitySet<Documents>(new Action<Documents>(this.attach_Documents), new Action<Documents>(this.detach_Documents));
			this._MapsAdmin = new EntitySet<MapsAdmin>(new Action<MapsAdmin>(this.attach_MapsAdmin), new Action<MapsAdmin>(this.detach_MapsAdmin));
			this._MapsClient = new EntitySet<MapsClient>(new Action<MapsClient>(this.attach_MapsClient), new Action<MapsClient>(this.detach_MapsClient));
			this._MapsDistrict = new EntitySet<MapsDistrict>(new Action<MapsDistrict>(this.attach_MapsDistrict), new Action<MapsDistrict>(this.detach_MapsDistrict));
			this._MapsDistrict1 = new EntitySet<MapsDistrict>(new Action<MapsDistrict>(this.attach_MapsDistrict1), new Action<MapsDistrict>(this.detach_MapsDistrict1));
			this._MapsNotice = new EntitySet<MapsNotice>(new Action<MapsNotice>(this.attach_MapsNotice), new Action<MapsNotice>(this.detach_MapsNotice));
			this._MapsReply = new EntitySet<MapsReply>(new Action<MapsReply>(this.attach_MapsReply), new Action<MapsReply>(this.detach_MapsReply));
			this._MapsReport = new EntitySet<MapsReport>(new Action<MapsReport>(this.attach_MapsReport), new Action<MapsReport>(this.detach_MapsReport));
			this._Notices = new EntitySet<Notices>(new Action<Notices>(this.attach_Notices), new Action<Notices>(this.detach_Notices));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._Problems = new EntitySet<Problems>(new Action<Problems>(this.attach_Problems), new Action<Problems>(this.detach_Problems));
			this._Proccesses = new EntitySet<Proccesses>(new Action<Proccesses>(this.attach_Proccesses), new Action<Proccesses>(this.detach_Proccesses));
			this._Replies = new EntitySet<Replies>(new Action<Replies>(this.attach_Replies), new Action<Replies>(this.detach_Replies));
			this._Reports = new EntitySet<Reports>(new Action<Reports>(this.attach_Reports), new Action<Reports>(this.detach_Reports));
			this._WorksOther = new EntitySet<WorksOther>(new Action<WorksOther>(this.attach_WorksOther), new Action<WorksOther>(this.detach_WorksOther));
			this._WorksWeekly = new EntitySet<WorksWeekly>(new Action<WorksWeekly>(this.attach_WorksWeekly), new Action<WorksWeekly>(this.detach_WorksWeekly));
			this._Projects = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects), new Action<Projects>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="Int NOT NULL")]
		public int JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this.OnJobTypeChanging(value);
					this.SendPropertyChanging();
					this._JobType = value;
					this.SendPropertyChanged("JobType");
					this.OnJobTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WXID", DbType="VarChar(50)")]
		public string WXID
		{
			get
			{
				return this._WXID;
			}
			set
			{
				if ((this._WXID != value))
				{
					this.OnWXIDChanging(value);
					this.SendPropertyChanging();
					this._WXID = value;
					this.SendPropertyChanged("WXID");
					this.OnWXIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit NOT NULL")]
		public bool IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreType", DbType="Int")]
		public System.Nullable<int> ScoreType
		{
			get
			{
				return this._ScoreType;
			}
			set
			{
				if ((this._ScoreType != value))
				{
					this.OnScoreTypeChanging(value);
					this.SendPropertyChanging();
					this._ScoreType = value;
					this.SendPropertyChanged("ScoreType");
					this.OnScoreTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBase", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SalaryBase
		{
			get
			{
				return this._SalaryBase;
			}
			set
			{
				if ((this._SalaryBase != value))
				{
					this.OnSalaryBaseChanging(value);
					this.SendPropertyChanging();
					this._SalaryBase = value;
					this.SendPropertyChanged("SalaryBase");
					this.OnSalaryBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="VarChar(50)")]
		public string DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Actions", Storage="_Actions", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Actions> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Applies", Storage="_Applies", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Applies> Applies
		{
			get
			{
				return this._Applies;
			}
			set
			{
				this._Applies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_ApplySteps", Storage="_ApplySteps", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<ApplySteps> ApplySteps
		{
			get
			{
				return this._ApplySteps;
			}
			set
			{
				this._ApplySteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Documents", Storage="_Documents", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Documents> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsAdmin", Storage="_MapsAdmin", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<MapsAdmin> MapsAdmin
		{
			get
			{
				return this._MapsAdmin;
			}
			set
			{
				this._MapsAdmin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsClient", Storage="_MapsClient", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<MapsClient> MapsClient
		{
			get
			{
				return this._MapsClient;
			}
			set
			{
				this._MapsClient.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsDistrict", Storage="_MapsDistrict", ThisKey="AdminID", OtherKey="LeadID")]
		public EntitySet<MapsDistrict> MapsDistrict
		{
			get
			{
				return this._MapsDistrict;
			}
			set
			{
				this._MapsDistrict.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsDistrict1", Storage="_MapsDistrict1", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<MapsDistrict> MapsDistrict1
		{
			get
			{
				return this._MapsDistrict1;
			}
			set
			{
				this._MapsDistrict1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsNotice", Storage="_MapsNotice", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<MapsNotice> MapsNotice
		{
			get
			{
				return this._MapsNotice;
			}
			set
			{
				this._MapsNotice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsReply", Storage="_MapsReply", ThisKey="AdminID", OtherKey="ReadAdminID")]
		public EntitySet<MapsReply> MapsReply
		{
			get
			{
				return this._MapsReply;
			}
			set
			{
				this._MapsReply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsReport", Storage="_MapsReport", ThisKey="AdminID", OtherKey="ReadAdminID")]
		public EntitySet<MapsReport> MapsReport
		{
			get
			{
				return this._MapsReport;
			}
			set
			{
				this._MapsReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Notices", Storage="_Notices", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Notices> Notices
		{
			get
			{
				return this._Notices;
			}
			set
			{
				this._Notices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Orders", Storage="_Orders", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Problems", Storage="_Problems", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Problems> Problems
		{
			get
			{
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Proccesses", Storage="_Proccesses", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Proccesses> Proccesses
		{
			get
			{
				return this._Proccesses;
			}
			set
			{
				this._Proccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Replies", Storage="_Replies", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Replies> Replies
		{
			get
			{
				return this._Replies;
			}
			set
			{
				this._Replies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Reports", Storage="_Reports", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Reports> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_WorksOther", Storage="_WorksOther", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<WorksOther> WorksOther
		{
			get
			{
				return this._WorksOther;
			}
			set
			{
				this._WorksOther.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_WorksWeekly", Storage="_WorksWeekly", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<WorksWeekly> WorksWeekly
		{
			get
			{
				return this._WorksWeekly;
			}
			set
			{
				this._WorksWeekly.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Projects", Storage="_Projects", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Projects> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Applies(Applies entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Applies(Applies entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_ApplySteps(ApplySteps entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_ApplySteps(ApplySteps entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Documents(Documents entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Documents(Documents entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsDistrict(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsDistrict(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsDistrict1(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject1 = this;
		}
		
		private void detach_MapsDistrict1(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject1 = null;
		}
		
		private void attach_MapsNotice(MapsNotice entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsNotice(MapsNotice entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsReply(MapsReply entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsReply(MapsReply entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_MapsReport(MapsReport entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_MapsReport(MapsReport entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Notices(Notices entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Notices(Notices entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Replies(Replies entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Replies(Replies entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_WorksOther(WorksOther entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_WorksOther(WorksOther entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_WorksWeekly(WorksWeekly entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_WorksWeekly(WorksWeekly entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
		
		private void attach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = this;
		}
		
		private void detach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.AdminsProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applies")]
	public partial class Applies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _MainID;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<ApplySteps> _ApplySteps;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Applies()
		{
			this._ApplySteps = new EntitySet<ApplySteps>(new Action<ApplySteps>(this.attach_ApplySteps), new Action<ApplySteps>(this.detach_ApplySteps));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applies_ApplySteps", Storage="_ApplySteps", ThisKey="ID", OtherKey="ApplyID")]
		public EntitySet<ApplySteps> ApplySteps
		{
			get
			{
				return this._ApplySteps;
			}
			set
			{
				this._ApplySteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Applies", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Applies.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Applies.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplySteps(ApplySteps entity)
		{
			this.SendPropertyChanging();
			entity.Applies = this;
		}
		
		private void detach_ApplySteps(ApplySteps entity)
		{
			this.SendPropertyChanging();
			entity.Applies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplySteps")]
	public partial class ApplySteps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplyID;
		
		private int _Step;
		
		private string _AdminID;
		
		private int _Status;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _Aprdate;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Applies> _Applies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAprdateChanging(System.Nullable<System.DateTime> value);
    partial void OnAprdateChanged();
    #endregion
		
		public ApplySteps()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Applies = default(EntityRef<Applies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					if (this._Applies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aprdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Aprdate
		{
			get
			{
				return this._Aprdate;
			}
			set
			{
				if ((this._Aprdate != value))
				{
					this.OnAprdateChanging(value);
					this.SendPropertyChanging();
					this._Aprdate = value;
					this.SendPropertyChanged("Aprdate");
					this.OnAprdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_ApplySteps", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.ApplySteps.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.ApplySteps.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applies_ApplySteps", Storage="_Applies", ThisKey="ApplyID", OtherKey="ID", IsForeignKey=true)]
		public Applies Applies
		{
			get
			{
				return this._Applies.Entity;
			}
			set
			{
				Applies previousValue = this._Applies.Entity;
				if (((previousValue != value) 
							|| (this._Applies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applies.Entity = null;
						previousValue.ApplySteps.Remove(this);
					}
					this._Applies.Entity = value;
					if ((value != null))
					{
						value.ApplySteps.Add(this);
						this._ApplyID = value.ID;
					}
					else
					{
						this._ApplyID = default(string);
					}
					this.SendPropertyChanged("Applies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApproveFlows")]
	public partial class ApproveFlows : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private bool _IsEdit;
		
		private EntitySet<ApproveSteps> _ApproveSteps;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsEditChanging(bool value);
    partial void OnIsEditChanged();
    #endregion
		
		public ApproveFlows()
		{
			this._ApproveSteps = new EntitySet<ApproveSteps>(new Action<ApproveSteps>(this.attach_ApproveSteps), new Action<ApproveSteps>(this.detach_ApproveSteps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdit", DbType="Bit NOT NULL")]
		public bool IsEdit
		{
			get
			{
				return this._IsEdit;
			}
			set
			{
				if ((this._IsEdit != value))
				{
					this.OnIsEditChanging(value);
					this.SendPropertyChanging();
					this._IsEdit = value;
					this.SendPropertyChanged("IsEdit");
					this.OnIsEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApproveFlows_ApproveSteps", Storage="_ApproveSteps", ThisKey="ID", OtherKey="FlowID")]
		public EntitySet<ApproveSteps> ApproveSteps
		{
			get
			{
				return this._ApproveSteps;
			}
			set
			{
				this._ApproveSteps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApproveSteps(ApproveSteps entity)
		{
			this.SendPropertyChanging();
			entity.ApproveFlows = this;
		}
		
		private void detach_ApproveSteps(ApproveSteps entity)
		{
			this.SendPropertyChanging();
			entity.ApproveFlows = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApproveSteps")]
	public partial class ApproveSteps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowID;
		
		private int _Step;
		
		private string _Name;
		
		private string _AdminID;
		
		private EntityRef<ApproveFlows> _ApproveFlows;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowIDChanging(string value);
    partial void OnFlowIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public ApproveSteps()
		{
			this._ApproveFlows = default(EntityRef<ApproveFlows>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._ApproveFlows.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApproveFlows_ApproveSteps", Storage="_ApproveFlows", ThisKey="FlowID", OtherKey="ID", IsForeignKey=true)]
		public ApproveFlows ApproveFlows
		{
			get
			{
				return this._ApproveFlows.Entity;
			}
			set
			{
				ApproveFlows previousValue = this._ApproveFlows.Entity;
				if (((previousValue != value) 
							|| (this._ApproveFlows.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApproveFlows.Entity = null;
						previousValue.ApproveSteps.Remove(this);
					}
					this._ApproveFlows.Entity = value;
					if ((value != null))
					{
						value.ApproveSteps.Add(this);
						this._FlowID = value.ID;
					}
					else
					{
						this._FlowID = default(string);
					}
					this.SendPropertyChanged("ApproveFlows");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Areas")]
	public partial class Areas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Areas> _Areas2;
		
		private EntitySet<Clients> _Clients;
		
		private EntityRef<Areas> _Areas1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Areas()
		{
			this._Areas2 = new EntitySet<Areas>(new Action<Areas>(this.attach_Areas2), new Action<Areas>(this.detach_Areas2));
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			this._Areas1 = default(EntityRef<Areas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					if (this._Areas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Areas_Areas", Storage="_Areas2", ThisKey="ID", OtherKey="FatherID")]
		public EntitySet<Areas> Areas2
		{
			get
			{
				return this._Areas2;
			}
			set
			{
				this._Areas2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Areas_Clients", Storage="_Clients", ThisKey="ID", OtherKey="AreaID")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Areas_Areas", Storage="_Areas1", ThisKey="FatherID", OtherKey="ID", IsForeignKey=true)]
		public Areas Areas1
		{
			get
			{
				return this._Areas1.Entity;
			}
			set
			{
				Areas previousValue = this._Areas1.Entity;
				if (((previousValue != value) 
							|| (this._Areas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Areas1.Entity = null;
						previousValue.Areas2.Remove(this);
					}
					this._Areas1.Entity = value;
					if ((value != null))
					{
						value.Areas2.Add(this);
						this._FatherID = value.ID;
					}
					else
					{
						this._FatherID = default(string);
					}
					this.SendPropertyChanged("Areas1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Areas2(Areas entity)
		{
			this.SendPropertyChanging();
			entity.Areas1 = this;
		}
		
		private void detach_Areas2(Areas entity)
		{
			this.SendPropertyChanging();
			entity.Areas1 = null;
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Areas = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Areas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beneficiaries")]
	public partial class Beneficiaries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Bank;
		
		private string _BankCode;
		
		private string _Address;
		
		private string _CompanyID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Beneficiaries()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(350)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_Orders", Storage="_Orders", ThisKey="ID", OtherKey="BeneficiaryID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Beneficiaries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalogues")]
	public partial class Catalogues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<Actions> _Actions;
		
		private EntitySet<DeclareProducts> _DeclareProducts;
		
		private EntitySet<MapsDeclareCompany> _MapsDeclareCompany;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<Preminums> _Preminums;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Catalogues()
		{
			this._Actions = new EntitySet<Actions>(new Action<Actions>(this.attach_Actions), new Action<Actions>(this.detach_Actions));
			this._DeclareProducts = new EntitySet<DeclareProducts>(new Action<DeclareProducts>(this.attach_DeclareProducts), new Action<DeclareProducts>(this.detach_DeclareProducts));
			this._MapsDeclareCompany = new EntitySet<MapsDeclareCompany>(new Action<MapsDeclareCompany>(this.attach_MapsDeclareCompany), new Action<MapsDeclareCompany>(this.detach_MapsDeclareCompany));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._Preminums = new EntitySet<Preminums>(new Action<Preminums>(this.attach_Preminums), new Action<Preminums>(this.detach_Preminums));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Actions", Storage="_Actions", ThisKey="ID", OtherKey="CatalogueID")]
		public EntitySet<Actions> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_DeclareProducts", Storage="_DeclareProducts", ThisKey="ID", OtherKey="CatalogueID")]
		public EntitySet<DeclareProducts> DeclareProducts
		{
			get
			{
				return this._DeclareProducts;
			}
			set
			{
				this._DeclareProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_MapsDeclareCompany", Storage="_MapsDeclareCompany", ThisKey="ID", OtherKey="CatalogueID")]
		public EntitySet<MapsDeclareCompany> MapsDeclareCompany
		{
			get
			{
				return this._MapsDeclareCompany;
			}
			set
			{
				this._MapsDeclareCompany.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Orders", Storage="_Orders", ThisKey="ID", OtherKey="CatalogueID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Preminums", Storage="_Preminums", ThisKey="ID", OtherKey="CatalogueID")]
		public EntitySet<Preminums> Preminums
		{
			get
			{
				return this._Preminums;
			}
			set
			{
				this._Preminums.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = this;
		}
		
		private void detach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = null;
		}
		
		private void attach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = this;
		}
		
		private void detach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = null;
		}
		
		private void attach_MapsDeclareCompany(MapsDeclareCompany entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = this;
		}
		
		private void detach_MapsDeclareCompany(MapsDeclareCompany entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = null;
		}
		
		private void attach_Preminums(Preminums entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = this;
		}
		
		private void detach_Preminums(Preminums entity)
		{
			this.SendPropertyChanging();
			entity.Catalogues = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Charges")]
	public partial class Charges : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ActionID;
		
		private string _Name;
		
		private string _AdminID;
		
		private System.Nullable<int> _Count;
		
		private decimal _Price;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<Actions> _Actions;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnActionIDChanging(string value);
    partial void OnActionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Charges()
		{
			this._Actions = default(EntityRef<Actions>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="VarChar(50)")]
		public string ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._Actions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Charges", Storage="_Actions", ThisKey="ActionID", OtherKey="ID", IsForeignKey=true)]
		public Actions Actions
		{
			get
			{
				return this._Actions.Entity;
			}
			set
			{
				Actions previousValue = this._Actions.Entity;
				if (((previousValue != value) 
							|| (this._Actions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actions.Entity = null;
						previousValue.Charges.Remove(this);
					}
					this._Actions.Entity = value;
					if ((value != null))
					{
						value.Charges.Add(this);
						this._ActionID = value.ID;
					}
					else
					{
						this._ActionID = default(string);
					}
					this.SendPropertyChanged("Actions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Charges", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Charges.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Charges.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private bool _IsSafe;
		
		private string _IndustryInvolved;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _AdminCode;
		
		private string _CUSCC;
		
		private string _AreaID;
		
		private EntitySet<Actions> _Actions;
		
		private EntitySet<Charges> _Charges;
		
		private EntityRef<ClientShowers> _ClientShowers;
		
		private EntitySet<Files> _Files;
		
		private EntitySet<MapsClient> _MapsClient;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<Reports> _Reports;
		
		private EntitySet<Projects> _Projects;
		
		private EntityRef<Areas> _Areas;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsSafeChanging(bool value);
    partial void OnIsSafeChanged();
    partial void OnIndustryInvolvedChanging(string value);
    partial void OnIndustryInvolvedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAdminCodeChanging(string value);
    partial void OnAdminCodeChanged();
    partial void OnCUSCCChanging(string value);
    partial void OnCUSCCChanged();
    partial void OnAreaIDChanging(string value);
    partial void OnAreaIDChanged();
    #endregion
		
		public Clients()
		{
			this._Actions = new EntitySet<Actions>(new Action<Actions>(this.attach_Actions), new Action<Actions>(this.detach_Actions));
			this._Charges = new EntitySet<Charges>(new Action<Charges>(this.attach_Charges), new Action<Charges>(this.detach_Charges));
			this._ClientShowers = default(EntityRef<ClientShowers>);
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._MapsClient = new EntitySet<MapsClient>(new Action<MapsClient>(this.attach_MapsClient), new Action<MapsClient>(this.detach_MapsClient));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._Reports = new EntitySet<Reports>(new Action<Reports>(this.attach_Reports), new Action<Reports>(this.detach_Reports));
			this._Projects = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects), new Action<Projects>(this.detach_Projects));
			this._Areas = default(EntityRef<Areas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSafe", DbType="Bit NOT NULL")]
		public bool IsSafe
		{
			get
			{
				return this._IsSafe;
			}
			set
			{
				if ((this._IsSafe != value))
				{
					this.OnIsSafeChanging(value);
					this.SendPropertyChanging();
					this._IsSafe = value;
					this.SendPropertyChanged("IsSafe");
					this.OnIsSafeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryInvolved", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string IndustryInvolved
		{
			get
			{
				return this._IndustryInvolved;
			}
			set
			{
				if ((this._IndustryInvolved != value))
				{
					this.OnIndustryInvolvedChanging(value);
					this.SendPropertyChanging();
					this._IndustryInvolved = value;
					this.SendPropertyChanged("IndustryInvolved");
					this.OnIndustryInvolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminCode
		{
			get
			{
				return this._AdminCode;
			}
			set
			{
				if ((this._AdminCode != value))
				{
					this.OnAdminCodeChanging(value);
					this.SendPropertyChanging();
					this._AdminCode = value;
					this.SendPropertyChanged("AdminCode");
					this.OnAdminCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSCC", DbType="VarChar(50)")]
		public string CUSCC
		{
			get
			{
				return this._CUSCC;
			}
			set
			{
				if ((this._CUSCC != value))
				{
					this.OnCUSCCChanging(value);
					this.SendPropertyChanging();
					this._CUSCC = value;
					this.SendPropertyChanged("CUSCC");
					this.OnCUSCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="VarChar(50)")]
		public string AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._Areas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Actions", Storage="_Actions", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Actions> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Charges", Storage="_Charges", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Charges> Charges
		{
			get
			{
				return this._Charges;
			}
			set
			{
				this._Charges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientShowers", Storage="_ClientShowers", ThisKey="ID", OtherKey="ClientID", IsUnique=true, IsForeignKey=false)]
		public ClientShowers ClientShowers
		{
			get
			{
				return this._ClientShowers.Entity;
			}
			set
			{
				ClientShowers previousValue = this._ClientShowers.Entity;
				if (((previousValue != value) 
							|| (this._ClientShowers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientShowers.Entity = null;
						previousValue.Clients = null;
					}
					this._ClientShowers.Entity = value;
					if ((value != null))
					{
						value.Clients = this;
					}
					this.SendPropertyChanged("ClientShowers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Files", Storage="_Files", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_MapsClient", Storage="_MapsClient", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<MapsClient> MapsClient
		{
			get
			{
				return this._MapsClient;
			}
			set
			{
				this._MapsClient.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Orders", Storage="_Orders", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Reports", Storage="_Reports", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Reports> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Projects", Storage="_Projects", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Projects> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Areas_Clients", Storage="_Areas", ThisKey="AreaID", OtherKey="ID", IsForeignKey=true)]
		public Areas Areas
		{
			get
			{
				return this._Areas.Entity;
			}
			set
			{
				Areas previousValue = this._Areas.Entity;
				if (((previousValue != value) 
							|| (this._Areas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Areas.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Areas.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._AreaID = value.ID;
					}
					else
					{
						this._AreaID = default(string);
					}
					this.SendPropertyChanged("Areas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Charges(Charges entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Charges(Charges entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientShowers")]
	public partial class ClientShowers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClientID;
		
		private string _NTextString;
		
		private EntityRef<Clients> _Clients;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnNTextStringChanging(string value);
    partial void OnNTextStringChanged();
    #endregion
		
		public ClientShowers()
		{
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NTextString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NTextString
		{
			get
			{
				return this._NTextString;
			}
			set
			{
				if ((this._NTextString != value))
				{
					this.OnNTextStringChanging(value);
					this.SendPropertyChanging();
					this._NTextString = value;
					this.SendPropertyChanged("NTextString");
					this.OnNTextStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientShowers", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientShowers = null;
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientShowers = this;
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private string _Code;
		
		private string _Summary;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<Actions> _Actions;
		
		private EntitySet<DeclareProducts> _DeclareProducts;
		
		private EntitySet<MapsAdmin> _MapsAdmin;
		
		private EntitySet<MapsClient> _MapsClient;
		
		private EntitySet<MapsDeclareCompany> _MapsDeclareCompany;
		
		private EntitySet<MapsProject> _MapsProject;
		
		private EntitySet<StandardProducts> _StandardProducts;
		
		private EntitySet<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Companies()
		{
			this._Actions = new EntitySet<Actions>(new Action<Actions>(this.attach_Actions), new Action<Actions>(this.detach_Actions));
			this._DeclareProducts = new EntitySet<DeclareProducts>(new Action<DeclareProducts>(this.attach_DeclareProducts), new Action<DeclareProducts>(this.detach_DeclareProducts));
			this._MapsAdmin = new EntitySet<MapsAdmin>(new Action<MapsAdmin>(this.attach_MapsAdmin), new Action<MapsAdmin>(this.detach_MapsAdmin));
			this._MapsClient = new EntitySet<MapsClient>(new Action<MapsClient>(this.attach_MapsClient), new Action<MapsClient>(this.detach_MapsClient));
			this._MapsDeclareCompany = new EntitySet<MapsDeclareCompany>(new Action<MapsDeclareCompany>(this.attach_MapsDeclareCompany), new Action<MapsDeclareCompany>(this.detach_MapsDeclareCompany));
			this._MapsProject = new EntitySet<MapsProject>(new Action<MapsProject>(this.attach_MapsProject), new Action<MapsProject>(this.detach_MapsProject));
			this._StandardProducts = new EntitySet<StandardProducts>(new Action<StandardProducts>(this.attach_StandardProducts), new Action<StandardProducts>(this.detach_StandardProducts));
			this._Projects = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects), new Action<Projects>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Actions", Storage="_Actions", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Actions> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_DeclareProducts", Storage="_DeclareProducts", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<DeclareProducts> DeclareProducts
		{
			get
			{
				return this._DeclareProducts;
			}
			set
			{
				this._DeclareProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsAdmin", Storage="_MapsAdmin", ThisKey="ID", OtherKey="ManufactureID")]
		public EntitySet<MapsAdmin> MapsAdmin
		{
			get
			{
				return this._MapsAdmin;
			}
			set
			{
				this._MapsAdmin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsClient", Storage="_MapsClient", ThisKey="ID", OtherKey="ManufacturerID")]
		public EntitySet<MapsClient> MapsClient
		{
			get
			{
				return this._MapsClient;
			}
			set
			{
				this._MapsClient.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsDeclareCompany", Storage="_MapsDeclareCompany", ThisKey="ID", OtherKey="ManufactureID")]
		public EntitySet<MapsDeclareCompany> MapsDeclareCompany
		{
			get
			{
				return this._MapsDeclareCompany;
			}
			set
			{
				this._MapsDeclareCompany.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsProject", Storage="_MapsProject", ThisKey="ID", OtherKey="ManufacturerID")]
		public EntitySet<MapsProject> MapsProject
		{
			get
			{
				return this._MapsProject;
			}
			set
			{
				this._MapsProject.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_StandardProducts", Storage="_StandardProducts", ThisKey="ID", OtherKey="ManufacturerID")]
		public EntitySet<StandardProducts> StandardProducts
		{
			get
			{
				return this._StandardProducts;
			}
			set
			{
				this._StandardProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Projects", Storage="_Projects", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Projects> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Actions(Actions entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_MapsDeclareCompany(MapsDeclareCompany entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_MapsDeclareCompany(MapsDeclareCompany entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_StandardProducts(StandardProducts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_StandardProducts(StandardProducts entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
		
		private void attach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Companies = this;
		}
		
		private void detach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Companies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompeteProducts")]
	public partial class CompeteProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Origin;
		
		private string _Name;
		
		private string _ManufacturerID;
		
		private string _Packaging;
		
		private string _PackageCase;
		
		private string _Batch;
		
		private string _DateCode;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<int> _Currency;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private string _OriginNumber;
		
		private EntitySet<ProductItems> _ProductItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnDateCodeChanging(string value);
    partial void OnDateCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCurrencyChanging(System.Nullable<int> value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnOriginNumberChanging(string value);
    partial void OnOriginNumberChanged();
    #endregion
		
		public CompeteProducts()
		{
			this._ProductItems = new EntitySet<ProductItems>(new Action<ProductItems>(this.attach_ProductItems), new Action<ProductItems>(this.detach_ProductItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(150)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50)")]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50)")]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50)")]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this.OnDateCodeChanging(value);
					this.SendPropertyChanging();
					this._DateCode = value;
					this.SendPropertyChanged("DateCode");
					this.OnDateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginNumber", DbType="VarChar(50)")]
		public string OriginNumber
		{
			get
			{
				return this._OriginNumber;
			}
			set
			{
				if ((this._OriginNumber != value))
				{
					this.OnOriginNumberChanging(value);
					this.SendPropertyChanging();
					this._OriginNumber = value;
					this.SendPropertyChanged("OriginNumber");
					this.OnOriginNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompeteProducts_ProductItems", Storage="_ProductItems", ThisKey="ID", OtherKey="CompeteID")]
		public EntitySet<ProductItems> ProductItems
		{
			get
			{
				return this._ProductItems;
			}
			set
			{
				this._ProductItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductItems(ProductItems entity)
		{
			this.SendPropertyChanging();
			entity.CompeteProducts = this;
		}
		
		private void detach_ProductItems(ProductItems entity)
		{
			this.SendPropertyChanging();
			entity.CompeteProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _Name;
		
		private int _Type;
		
		private string _CompanyID;
		
		private string _Position;
		
		private string _Email;
		
		private string _Moblie;
		
		private string _Tel;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Detail;
		
		private EntitySet<Consignees> _Consignees;
		
		private EntitySet<Orders> _Orders;
		
		private EntitySet<Problems> _Problems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMoblieChanging(string value);
    partial void OnMoblieChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public Contacts()
		{
			this._Consignees = new EntitySet<Consignees>(new Action<Consignees>(this.attach_Consignees), new Action<Consignees>(this.detach_Consignees));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._Problems = new EntitySet<Problems>(new Action<Problems>(this.attach_Problems), new Action<Problems>(this.detach_Problems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moblie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Moblie
		{
			get
			{
				return this._Moblie;
			}
			set
			{
				if ((this._Moblie != value))
				{
					this.OnMoblieChanging(value);
					this.SendPropertyChanging();
					this._Moblie = value;
					this.SendPropertyChanged("Moblie");
					this.OnMoblieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Consignees", Storage="_Consignees", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Consignees> Consignees
		{
			get
			{
				return this._Consignees;
			}
			set
			{
				this._Consignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Orders", Storage="_Orders", ThisKey="ID", OtherKey="ConsigneeID")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Problems", Storage="_Problems", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Problems> Problems
		{
			get
			{
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Consignees(Consignees entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
		
		private void attach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = this;
		}
		
		private void detach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Contacts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consignees")]
	public partial class Consignees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CompanyID;
		
		private string _ContactID;
		
		private string _ClientID;
		
		private string _Address;
		
		private string _Zipcode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Consignees()
		{
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="NVarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Consignees", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Consignees.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Consignees.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeclareProducts")]
	public partial class DeclareProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CatalogueID;
		
		private string _StandardID;
		
		private string _SupplierID;
		
		private int _Amount;
		
		private int _Currency;
		
		private decimal _UnitPrice;
		
		private string _Delivery;
		
		private System.Nullable<int> _Count;
		
		private int _Status;
		
		private System.Nullable<decimal> _Expect;
		
		private System.Nullable<System.DateTime> _ExpectDate;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private string _CompeteManu;
		
		private string _CompeteModel;
		
		private System.Nullable<decimal> _CompetePrice;
		
		private string _OriginNumber;
		
		private EntitySet<Preminums> _Preminums;
		
		private EntitySet<Proccesses> _Proccesses;
		
		private EntityRef<Catalogues> _Catalogues;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<StandardProducts> _StandardProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCatalogueIDChanging(string value);
    partial void OnCatalogueIDChanged();
    partial void OnStandardIDChanging(string value);
    partial void OnStandardIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnExpectChanging(System.Nullable<decimal> value);
    partial void OnExpectChanged();
    partial void OnExpectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectDateChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnCompeteManuChanging(string value);
    partial void OnCompeteManuChanged();
    partial void OnCompeteModelChanging(string value);
    partial void OnCompeteModelChanged();
    partial void OnCompetePriceChanging(System.Nullable<decimal> value);
    partial void OnCompetePriceChanged();
    partial void OnOriginNumberChanging(string value);
    partial void OnOriginNumberChanged();
    #endregion
		
		public DeclareProducts()
		{
			this._Preminums = new EntitySet<Preminums>(new Action<Preminums>(this.attach_Preminums), new Action<Preminums>(this.detach_Preminums));
			this._Proccesses = new EntitySet<Proccesses>(new Action<Proccesses>(this.attach_Proccesses), new Action<Proccesses>(this.detach_Proccesses));
			this._Catalogues = default(EntityRef<Catalogues>);
			this._Companies = default(EntityRef<Companies>);
			this._StandardProducts = default(EntityRef<StandardProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogueID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogueID
		{
			get
			{
				return this._CatalogueID;
			}
			set
			{
				if ((this._CatalogueID != value))
				{
					if (this._Catalogues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogueIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogueID = value;
					this.SendPropertyChanged("CatalogueID");
					this.OnCatalogueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StandardID
		{
			get
			{
				return this._StandardID;
			}
			set
			{
				if ((this._StandardID != value))
				{
					if (this._StandardProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIDChanging(value);
					this.SendPropertyChanging();
					this._StandardID = value;
					this.SendPropertyChanged("StandardID");
					this.OnStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50)")]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="NVarChar(50)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expect", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Expect
		{
			get
			{
				return this._Expect;
			}
			set
			{
				if ((this._Expect != value))
				{
					this.OnExpectChanging(value);
					this.SendPropertyChanging();
					this._Expect = value;
					this.SendPropertyChanged("Expect");
					this.OnExpectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectDate
		{
			get
			{
				return this._ExpectDate;
			}
			set
			{
				if ((this._ExpectDate != value))
				{
					this.OnExpectDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectDate = value;
					this.SendPropertyChanged("ExpectDate");
					this.OnExpectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompeteManu", DbType="NVarChar(50)")]
		public string CompeteManu
		{
			get
			{
				return this._CompeteManu;
			}
			set
			{
				if ((this._CompeteManu != value))
				{
					this.OnCompeteManuChanging(value);
					this.SendPropertyChanging();
					this._CompeteManu = value;
					this.SendPropertyChanged("CompeteManu");
					this.OnCompeteManuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompeteModel", DbType="VarChar(50)")]
		public string CompeteModel
		{
			get
			{
				return this._CompeteModel;
			}
			set
			{
				if ((this._CompeteModel != value))
				{
					this.OnCompeteModelChanging(value);
					this.SendPropertyChanging();
					this._CompeteModel = value;
					this.SendPropertyChanged("CompeteModel");
					this.OnCompeteModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetePrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> CompetePrice
		{
			get
			{
				return this._CompetePrice;
			}
			set
			{
				if ((this._CompetePrice != value))
				{
					this.OnCompetePriceChanging(value);
					this.SendPropertyChanging();
					this._CompetePrice = value;
					this.SendPropertyChanged("CompetePrice");
					this.OnCompetePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginNumber", DbType="VarChar(50)")]
		public string OriginNumber
		{
			get
			{
				return this._OriginNumber;
			}
			set
			{
				if ((this._OriginNumber != value))
				{
					this.OnOriginNumberChanging(value);
					this.SendPropertyChanging();
					this._OriginNumber = value;
					this.SendPropertyChanged("OriginNumber");
					this.OnOriginNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclareProducts_Preminums", Storage="_Preminums", ThisKey="ID", OtherKey="DeclareID")]
		public EntitySet<Preminums> Preminums
		{
			get
			{
				return this._Preminums;
			}
			set
			{
				this._Preminums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclareProducts_Proccesses", Storage="_Proccesses", ThisKey="ID", OtherKey="DeclareID")]
		public EntitySet<Proccesses> Proccesses
		{
			get
			{
				return this._Proccesses;
			}
			set
			{
				this._Proccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_DeclareProducts", Storage="_Catalogues", ThisKey="CatalogueID", OtherKey="ID", IsForeignKey=true)]
		public Catalogues Catalogues
		{
			get
			{
				return this._Catalogues.Entity;
			}
			set
			{
				Catalogues previousValue = this._Catalogues.Entity;
				if (((previousValue != value) 
							|| (this._Catalogues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogues.Entity = null;
						previousValue.DeclareProducts.Remove(this);
					}
					this._Catalogues.Entity = value;
					if ((value != null))
					{
						value.DeclareProducts.Add(this);
						this._CatalogueID = value.ID;
					}
					else
					{
						this._CatalogueID = default(string);
					}
					this.SendPropertyChanged("Catalogues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_DeclareProducts", Storage="_Companies", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.DeclareProducts.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.DeclareProducts.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_DeclareProducts", Storage="_StandardProducts", ThisKey="StandardID", OtherKey="ID", IsForeignKey=true)]
		public StandardProducts StandardProducts
		{
			get
			{
				return this._StandardProducts.Entity;
			}
			set
			{
				StandardProducts previousValue = this._StandardProducts.Entity;
				if (((previousValue != value) 
							|| (this._StandardProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardProducts.Entity = null;
						previousValue.DeclareProducts.Remove(this);
					}
					this._StandardProducts.Entity = value;
					if ((value != null))
					{
						value.DeclareProducts.Add(this);
						this._StandardID = value.ID;
					}
					else
					{
						this._StandardID = default(string);
					}
					this.SendPropertyChanged("StandardProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preminums(Preminums entity)
		{
			this.SendPropertyChanging();
			entity.DeclareProducts = this;
		}
		
		private void detach_Preminums(Preminums entity)
		{
			this.SendPropertyChanging();
			entity.DeclareProducts = null;
		}
		
		private void attach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.DeclareProducts = this;
		}
		
		private void detach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.DeclareProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Directories")]
	public partial class Directories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<Directories> _Directories2;
		
		private EntitySet<Documents> _Documents;
		
		private EntityRef<Directories> _Directories1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Directories()
		{
			this._Directories2 = new EntitySet<Directories>(new Action<Directories>(this.attach_Directories2), new Action<Directories>(this.detach_Directories2));
			this._Documents = new EntitySet<Documents>(new Action<Documents>(this.attach_Documents), new Action<Documents>(this.detach_Documents));
			this._Directories1 = default(EntityRef<Directories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					if (this._Directories1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Directories_Directories", Storage="_Directories2", ThisKey="ID", OtherKey="FatherID")]
		public EntitySet<Directories> Directories2
		{
			get
			{
				return this._Directories2;
			}
			set
			{
				this._Directories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Directories_Documents", Storage="_Documents", ThisKey="ID", OtherKey="DirectoryID")]
		public EntitySet<Documents> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Directories_Directories", Storage="_Directories1", ThisKey="FatherID", OtherKey="ID", IsForeignKey=true)]
		public Directories Directories1
		{
			get
			{
				return this._Directories1.Entity;
			}
			set
			{
				Directories previousValue = this._Directories1.Entity;
				if (((previousValue != value) 
							|| (this._Directories1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Directories1.Entity = null;
						previousValue.Directories2.Remove(this);
					}
					this._Directories1.Entity = value;
					if ((value != null))
					{
						value.Directories2.Add(this);
						this._FatherID = value.ID;
					}
					else
					{
						this._FatherID = default(string);
					}
					this.SendPropertyChanged("Directories1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Directories2(Directories entity)
		{
			this.SendPropertyChanging();
			entity.Directories1 = this;
		}
		
		private void detach_Directories2(Directories entity)
		{
			this.SendPropertyChanging();
			entity.Directories1 = null;
		}
		
		private void attach_Documents(Documents entity)
		{
			this.SendPropertyChanging();
			entity.Directories = this;
		}
		
		private void detach_Documents(Documents entity)
		{
			this.SendPropertyChanging();
			entity.Directories = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Districts")]
	public partial class Districts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private System.Nullable<int> _Level;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<Districts> _Districts2;
		
		private EntitySet<MapsDistrict> _MapsDistrict;
		
		private EntityRef<Districts> _Districts1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Districts()
		{
			this._Districts2 = new EntitySet<Districts>(new Action<Districts>(this.attach_Districts2), new Action<Districts>(this.detach_Districts2));
			this._MapsDistrict = new EntitySet<MapsDistrict>(new Action<MapsDistrict>(this.attach_MapsDistrict), new Action<MapsDistrict>(this.detach_MapsDistrict));
			this._Districts1 = default(EntityRef<Districts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					if (this._Districts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Districts_Districts", Storage="_Districts2", ThisKey="ID", OtherKey="FatherID")]
		public EntitySet<Districts> Districts2
		{
			get
			{
				return this._Districts2;
			}
			set
			{
				this._Districts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Districts_MapsDistrict", Storage="_MapsDistrict", ThisKey="ID", OtherKey="DistrictID")]
		public EntitySet<MapsDistrict> MapsDistrict
		{
			get
			{
				return this._MapsDistrict;
			}
			set
			{
				this._MapsDistrict.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Districts_Districts", Storage="_Districts1", ThisKey="FatherID", OtherKey="ID", IsForeignKey=true)]
		public Districts Districts1
		{
			get
			{
				return this._Districts1.Entity;
			}
			set
			{
				Districts previousValue = this._Districts1.Entity;
				if (((previousValue != value) 
							|| (this._Districts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Districts1.Entity = null;
						previousValue.Districts2.Remove(this);
					}
					this._Districts1.Entity = value;
					if ((value != null))
					{
						value.Districts2.Add(this);
						this._FatherID = value.ID;
					}
					else
					{
						this._FatherID = default(string);
					}
					this.SendPropertyChanged("Districts1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Districts2(Districts entity)
		{
			this.SendPropertyChanging();
			entity.Districts1 = this;
		}
		
		private void detach_Districts2(Districts entity)
		{
			this.SendPropertyChanging();
			entity.Districts1 = null;
		}
		
		private void attach_MapsDistrict(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.Districts = this;
		}
		
		private void detach_MapsDistrict(MapsDistrict entity)
		{
			this.SendPropertyChanging();
			entity.Districts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents")]
	public partial class Documents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DirectoryID;
		
		private string _Title;
		
		private int _Size;
		
		private string _Name;
		
		private string _Url;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Directories> _Directories;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDirectoryIDChanging(string value);
    partial void OnDirectoryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Documents()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Directories = default(EntityRef<Directories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectoryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DirectoryID
		{
			get
			{
				return this._DirectoryID;
			}
			set
			{
				if ((this._DirectoryID != value))
				{
					if (this._Directories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectoryIDChanging(value);
					this.SendPropertyChanging();
					this._DirectoryID = value;
					this.SendPropertyChanged("DirectoryID");
					this.OnDirectoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Documents", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Directories_Documents", Storage="_Directories", ThisKey="DirectoryID", OtherKey="ID", IsForeignKey=true)]
		public Directories Directories
		{
			get
			{
				return this._Directories.Entity;
			}
			set
			{
				Directories previousValue = this._Directories.Entity;
				if (((previousValue != value) 
							|| (this._Directories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Directories.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Directories.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._DirectoryID = value.ID;
					}
					else
					{
						this._DirectoryID = default(string);
					}
					this.SendPropertyChanged("Directories");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class Files : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ProjectID;
		
		private string _ReportID;
		
		private string _WorksOtherID;
		
		private string _WorksWeeklyID;
		
		private string _ContactID;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
		private string _Url;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _NoticeID;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Notices> _Notices;
		
		private EntityRef<Reports> _Reports;
		
		private EntityRef<WorksOther> _WorksOther;
		
		private EntityRef<WorksWeekly> _WorksWeekly;
		
		private EntityRef<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnWorksOtherIDChanging(string value);
    partial void OnWorksOtherIDChanged();
    partial void OnWorksWeeklyIDChanging(string value);
    partial void OnWorksWeeklyIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnNoticeIDChanging(string value);
    partial void OnNoticeIDChanged();
    #endregion
		
		public Files()
		{
			this._Clients = default(EntityRef<Clients>);
			this._Notices = default(EntityRef<Notices>);
			this._Reports = default(EntityRef<Reports>);
			this._WorksOther = default(EntityRef<WorksOther>);
			this._WorksWeekly = default(EntityRef<WorksWeekly>);
			this._Projects = default(EntityRef<Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50)")]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._Reports.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorksOtherID", DbType="VarChar(50)")]
		public string WorksOtherID
		{
			get
			{
				return this._WorksOtherID;
			}
			set
			{
				if ((this._WorksOtherID != value))
				{
					if (this._WorksOther.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorksOtherIDChanging(value);
					this.SendPropertyChanging();
					this._WorksOtherID = value;
					this.SendPropertyChanged("WorksOtherID");
					this.OnWorksOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorksWeeklyID", DbType="VarChar(50)")]
		public string WorksWeeklyID
		{
			get
			{
				return this._WorksWeeklyID;
			}
			set
			{
				if ((this._WorksWeeklyID != value))
				{
					if (this._WorksWeekly.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorksWeeklyIDChanging(value);
					this.SendPropertyChanging();
					this._WorksWeeklyID = value;
					this.SendPropertyChanged("WorksWeeklyID");
					this.OnWorksWeeklyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50)")]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="VarChar(50)")]
		public string NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					if (this._Notices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Files", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notices_Files", Storage="_Notices", ThisKey="NoticeID", OtherKey="ID", IsForeignKey=true)]
		public Notices Notices
		{
			get
			{
				return this._Notices.Entity;
			}
			set
			{
				Notices previousValue = this._Notices.Entity;
				if (((previousValue != value) 
							|| (this._Notices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Notices.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Notices.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._NoticeID = value.ID;
					}
					else
					{
						this._NoticeID = default(string);
					}
					this.SendPropertyChanged("Notices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Files", Storage="_Reports", ThisKey="ReportID", OtherKey="ID", IsForeignKey=true)]
		public Reports Reports
		{
			get
			{
				return this._Reports.Entity;
			}
			set
			{
				Reports previousValue = this._Reports.Entity;
				if (((previousValue != value) 
							|| (this._Reports.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reports.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Reports.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._ReportID = value.ID;
					}
					else
					{
						this._ReportID = default(string);
					}
					this.SendPropertyChanged("Reports");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorksOther_Files", Storage="_WorksOther", ThisKey="WorksOtherID", OtherKey="ID", IsForeignKey=true)]
		public WorksOther WorksOther
		{
			get
			{
				return this._WorksOther.Entity;
			}
			set
			{
				WorksOther previousValue = this._WorksOther.Entity;
				if (((previousValue != value) 
							|| (this._WorksOther.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorksOther.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._WorksOther.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._WorksOtherID = value.ID;
					}
					else
					{
						this._WorksOtherID = default(string);
					}
					this.SendPropertyChanged("WorksOther");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorksWeekly_Files", Storage="_WorksWeekly", ThisKey="WorksWeeklyID", OtherKey="ID", IsForeignKey=true)]
		public WorksWeekly WorksWeekly
		{
			get
			{
				return this._WorksWeekly.Entity;
			}
			set
			{
				WorksWeekly previousValue = this._WorksWeekly.Entity;
				if (((previousValue != value) 
							|| (this._WorksWeekly.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorksWeekly.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._WorksWeekly.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._WorksWeeklyID = value.ID;
					}
					else
					{
						this._WorksWeeklyID = default(string);
					}
					this.SendPropertyChanged("WorksWeekly");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Files", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Industries")]
	public partial class Industries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _EnglishName;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<Industries> _Industries2;
		
		private EntitySet<MapsClient> _MapsClient;
		
		private EntitySet<MapsProject> _MapsProject;
		
		private EntityRef<Industries> _Industries1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Industries()
		{
			this._Industries2 = new EntitySet<Industries>(new Action<Industries>(this.attach_Industries2), new Action<Industries>(this.detach_Industries2));
			this._MapsClient = new EntitySet<MapsClient>(new Action<MapsClient>(this.attach_MapsClient), new Action<MapsClient>(this.detach_MapsClient));
			this._MapsProject = new EntitySet<MapsProject>(new Action<MapsProject>(this.attach_MapsProject), new Action<MapsProject>(this.detach_MapsProject));
			this._Industries1 = default(EntityRef<Industries>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					if (this._Industries1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_Industries", Storage="_Industries2", ThisKey="ID", OtherKey="FatherID")]
		public EntitySet<Industries> Industries2
		{
			get
			{
				return this._Industries2;
			}
			set
			{
				this._Industries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_MapsClient", Storage="_MapsClient", ThisKey="ID", OtherKey="IndustryID")]
		public EntitySet<MapsClient> MapsClient
		{
			get
			{
				return this._MapsClient;
			}
			set
			{
				this._MapsClient.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_MapsProject", Storage="_MapsProject", ThisKey="ID", OtherKey="IndustryID")]
		public EntitySet<MapsProject> MapsProject
		{
			get
			{
				return this._MapsProject;
			}
			set
			{
				this._MapsProject.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_Industries", Storage="_Industries1", ThisKey="FatherID", OtherKey="ID", IsForeignKey=true)]
		public Industries Industries1
		{
			get
			{
				return this._Industries1.Entity;
			}
			set
			{
				Industries previousValue = this._Industries1.Entity;
				if (((previousValue != value) 
							|| (this._Industries1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Industries1.Entity = null;
						previousValue.Industries2.Remove(this);
					}
					this._Industries1.Entity = value;
					if ((value != null))
					{
						value.Industries2.Add(this);
						this._FatherID = value.ID;
					}
					else
					{
						this._FatherID = default(string);
					}
					this.SendPropertyChanged("Industries1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Industries2(Industries entity)
		{
			this.SendPropertyChanging();
			entity.Industries1 = this;
		}
		
		private void detach_Industries2(Industries entity)
		{
			this.SendPropertyChanging();
			entity.Industries1 = null;
		}
		
		private void attach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Industries = this;
		}
		
		private void detach_MapsClient(MapsClient entity)
		{
			this.SendPropertyChanging();
			entity.Industries = null;
		}
		
		private void attach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Industries = this;
		}
		
		private void detach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Industries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private int _Type;
		
		private string _CompanyID;
		
		private string _CompanyCode;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Bank;
		
		private string _BankAccount;
		
		private int _Status;
		
		private string _ConsigneeID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Invoices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50)")]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Levels")]
	public partial class Levels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
		private int _Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public Levels()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdmin")]
	public partial class MapsAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _ManufactureID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnManufactureIDChanging(string value);
    partial void OnManufactureIDChanged();
    #endregion
		
		public MapsAdmin()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureID", DbType="VarChar(50)")]
		public string ManufactureID
		{
			get
			{
				return this._ManufactureID;
			}
			set
			{
				if ((this._ManufactureID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufactureIDChanging(value);
					this.SendPropertyChanging();
					this._ManufactureID = value;
					this.SendPropertyChanged("ManufactureID");
					this.OnManufactureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsAdmin", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsAdmin.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsAdmin.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsAdmin", Storage="_Companies", ThisKey="ManufactureID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.MapsAdmin.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.MapsAdmin.Add(this);
						this._ManufactureID = value.ID;
					}
					else
					{
						this._ManufactureID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsClient")]
	public partial class MapsClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _AdminID;
		
		private string _IndustryID;
		
		private string _ManufacturerID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Industries> _Industries;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnIndustryIDChanging(string value);
    partial void OnIndustryIDChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    #endregion
		
		public MapsClient()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Clients = default(EntityRef<Clients>);
			this._Companies = default(EntityRef<Companies>);
			this._Industries = default(EntityRef<Industries>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryID", DbType="VarChar(50)")]
		public string IndustryID
		{
			get
			{
				return this._IndustryID;
			}
			set
			{
				if ((this._IndustryID != value))
				{
					if (this._Industries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIndustryIDChanging(value);
					this.SendPropertyChanging();
					this._IndustryID = value;
					this.SendPropertyChanged("IndustryID");
					this.OnIndustryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(50)")]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsClient", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsClient.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsClient.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_MapsClient", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.MapsClient.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.MapsClient.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsClient", Storage="_Companies", ThisKey="ManufacturerID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.MapsClient.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.MapsClient.Add(this);
						this._ManufacturerID = value.ID;
					}
					else
					{
						this._ManufacturerID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_MapsClient", Storage="_Industries", ThisKey="IndustryID", OtherKey="ID", IsForeignKey=true)]
		public Industries Industries
		{
			get
			{
				return this._Industries.Entity;
			}
			set
			{
				Industries previousValue = this._Industries.Entity;
				if (((previousValue != value) 
							|| (this._Industries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Industries.Entity = null;
						previousValue.MapsClient.Remove(this);
					}
					this._Industries.Entity = value;
					if ((value != null))
					{
						value.MapsClient.Add(this);
						this._IndustryID = value.ID;
					}
					else
					{
						this._IndustryID = default(string);
					}
					this.SendPropertyChanged("Industries");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsDeclareCompany")]
	public partial class MapsDeclareCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CatalogueID;
		
		private string _ManufactureID;
		
		private EntityRef<Catalogues> _Catalogues;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogueIDChanging(string value);
    partial void OnCatalogueIDChanged();
    partial void OnManufactureIDChanging(string value);
    partial void OnManufactureIDChanged();
    #endregion
		
		public MapsDeclareCompany()
		{
			this._Catalogues = default(EntityRef<Catalogues>);
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogueID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CatalogueID
		{
			get
			{
				return this._CatalogueID;
			}
			set
			{
				if ((this._CatalogueID != value))
				{
					if (this._Catalogues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogueIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogueID = value;
					this.SendPropertyChanged("CatalogueID");
					this.OnCatalogueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManufactureID
		{
			get
			{
				return this._ManufactureID;
			}
			set
			{
				if ((this._ManufactureID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufactureIDChanging(value);
					this.SendPropertyChanging();
					this._ManufactureID = value;
					this.SendPropertyChanged("ManufactureID");
					this.OnManufactureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_MapsDeclareCompany", Storage="_Catalogues", ThisKey="CatalogueID", OtherKey="ID", IsForeignKey=true)]
		public Catalogues Catalogues
		{
			get
			{
				return this._Catalogues.Entity;
			}
			set
			{
				Catalogues previousValue = this._Catalogues.Entity;
				if (((previousValue != value) 
							|| (this._Catalogues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogues.Entity = null;
						previousValue.MapsDeclareCompany.Remove(this);
					}
					this._Catalogues.Entity = value;
					if ((value != null))
					{
						value.MapsDeclareCompany.Add(this);
						this._CatalogueID = value.ID;
					}
					else
					{
						this._CatalogueID = default(string);
					}
					this.SendPropertyChanged("Catalogues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsDeclareCompany", Storage="_Companies", ThisKey="ManufactureID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.MapsDeclareCompany.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.MapsDeclareCompany.Add(this);
						this._ManufactureID = value.ID;
					}
					else
					{
						this._ManufactureID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsDistrict")]
	public partial class MapsDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DistrictID;
		
		private int _Type;
		
		private string _LeadID;
		
		private string _AdminID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<AdminsProject> _AdminsProject1;
		
		private EntityRef<Districts> _Districts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDistrictIDChanging(string value);
    partial void OnDistrictIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLeadIDChanging(string value);
    partial void OnLeadIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public MapsDistrict()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._AdminsProject1 = default(EntityRef<AdminsProject>);
			this._Districts = default(EntityRef<Districts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._Districts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadID", DbType="VarChar(50)")]
		public string LeadID
		{
			get
			{
				return this._LeadID;
			}
			set
			{
				if ((this._LeadID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeadIDChanging(value);
					this.SendPropertyChanging();
					this._LeadID = value;
					this.SendPropertyChanged("LeadID");
					this.OnLeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsDistrict", Storage="_AdminsProject", ThisKey="LeadID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsDistrict.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsDistrict.Add(this);
						this._LeadID = value.AdminID;
					}
					else
					{
						this._LeadID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsDistrict1", Storage="_AdminsProject1", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject1
		{
			get
			{
				return this._AdminsProject1.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject1.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject1.Entity = null;
						previousValue.MapsDistrict1.Remove(this);
					}
					this._AdminsProject1.Entity = value;
					if ((value != null))
					{
						value.MapsDistrict1.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Districts_MapsDistrict", Storage="_Districts", ThisKey="DistrictID", OtherKey="ID", IsForeignKey=true)]
		public Districts Districts
		{
			get
			{
				return this._Districts.Entity;
			}
			set
			{
				Districts previousValue = this._Districts.Entity;
				if (((previousValue != value) 
							|| (this._Districts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Districts.Entity = null;
						previousValue.MapsDistrict.Remove(this);
					}
					this._Districts.Entity = value;
					if ((value != null))
					{
						value.MapsDistrict.Add(this);
						this._DistrictID = value.ID;
					}
					else
					{
						this._DistrictID = default(string);
					}
					this.SendPropertyChanged("Districts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[MapsDistrict.0531]")]
	public partial class MapsDistrict_0531
	{
		
		private string _ID;
		
		private string _DistrictID;
		
		private int _Type;
		
		private string _LeadID;
		
		private string _AdminID;
		
		public MapsDistrict_0531()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadID", DbType="VarChar(50)")]
		public string LeadID
		{
			get
			{
				return this._LeadID;
			}
			set
			{
				if ((this._LeadID != value))
				{
					this._LeadID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[MapsDistrict.bak1203]")]
	public partial class MapsDistrict_bak1203
	{
		
		private string _ID;
		
		private string _DistrictID;
		
		private int _Type;
		
		private string _LeadID;
		
		private string _AdminID;
		
		public MapsDistrict_bak1203()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadID", DbType="VarChar(50)")]
		public string LeadID
		{
			get
			{
				return this._LeadID;
			}
			set
			{
				if ((this._LeadID != value))
				{
					this._LeadID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsNotice")]
	public partial class MapsNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NoticeID;
		
		private string _AdminID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Notices> _Notices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNoticeIDChanging(string value);
    partial void OnNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public MapsNotice()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Notices = default(EntityRef<Notices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					if (this._Notices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsNotice", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsNotice.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsNotice.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notices_MapsNotice", Storage="_Notices", ThisKey="NoticeID", OtherKey="ID", IsForeignKey=true)]
		public Notices Notices
		{
			get
			{
				return this._Notices.Entity;
			}
			set
			{
				Notices previousValue = this._Notices.Entity;
				if (((previousValue != value) 
							|| (this._Notices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Notices.Entity = null;
						previousValue.MapsNotice.Remove(this);
					}
					this._Notices.Entity = value;
					if ((value != null))
					{
						value.MapsNotice.Add(this);
						this._NoticeID = value.ID;
					}
					else
					{
						this._NoticeID = default(string);
					}
					this.SendPropertyChanged("Notices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsProductItemEnquiry")]
	public partial class MapsProductItemEnquiry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProductItemID;
		
		private string _ProductItemEnquiryID;
		
		private EntityRef<ProductItems> _ProductItems;
		
		private EntityRef<ProductItemEnquiries> _ProductItemEnquiries;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProductItemIDChanging(string value);
    partial void OnProductItemIDChanged();
    partial void OnProductItemEnquiryIDChanging(string value);
    partial void OnProductItemEnquiryIDChanged();
    #endregion
		
		public MapsProductItemEnquiry()
		{
			this._ProductItems = default(EntityRef<ProductItems>);
			this._ProductItemEnquiries = default(EntityRef<ProductItemEnquiries>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductItemID
		{
			get
			{
				return this._ProductItemID;
			}
			set
			{
				if ((this._ProductItemID != value))
				{
					if (this._ProductItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductItemIDChanging(value);
					this.SendPropertyChanging();
					this._ProductItemID = value;
					this.SendPropertyChanged("ProductItemID");
					this.OnProductItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductItemEnquiryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductItemEnquiryID
		{
			get
			{
				return this._ProductItemEnquiryID;
			}
			set
			{
				if ((this._ProductItemEnquiryID != value))
				{
					if (this._ProductItemEnquiries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductItemEnquiryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductItemEnquiryID = value;
					this.SendPropertyChanged("ProductItemEnquiryID");
					this.OnProductItemEnquiryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItems_MapsProductItemEnquiry", Storage="_ProductItems", ThisKey="ProductItemID", OtherKey="ID", IsForeignKey=true)]
		public ProductItems ProductItems
		{
			get
			{
				return this._ProductItems.Entity;
			}
			set
			{
				ProductItems previousValue = this._ProductItems.Entity;
				if (((previousValue != value) 
							|| (this._ProductItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductItems.Entity = null;
						previousValue.MapsProductItemEnquiry.Remove(this);
					}
					this._ProductItems.Entity = value;
					if ((value != null))
					{
						value.MapsProductItemEnquiry.Add(this);
						this._ProductItemID = value.ID;
					}
					else
					{
						this._ProductItemID = default(string);
					}
					this.SendPropertyChanged("ProductItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItemEnquiries_MapsProductItemEnquiry", Storage="_ProductItemEnquiries", ThisKey="ProductItemEnquiryID", OtherKey="ID", IsForeignKey=true)]
		public ProductItemEnquiries ProductItemEnquiries
		{
			get
			{
				return this._ProductItemEnquiries.Entity;
			}
			set
			{
				ProductItemEnquiries previousValue = this._ProductItemEnquiries.Entity;
				if (((previousValue != value) 
							|| (this._ProductItemEnquiries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductItemEnquiries.Entity = null;
						previousValue.MapsProductItemEnquiry.Remove(this);
					}
					this._ProductItemEnquiries.Entity = value;
					if ((value != null))
					{
						value.MapsProductItemEnquiry.Add(this);
						this._ProductItemEnquiryID = value.ID;
					}
					else
					{
						this._ProductItemEnquiryID = default(string);
					}
					this.SendPropertyChanged("ProductItemEnquiries");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsProject")]
	public partial class MapsProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProjectID;
		
		private string _IndustryID;
		
		private string _ProductItemID;
		
		private string _ManufacturerID;
		
		private EntityRef<Companies> _Companies;
		
		private EntityRef<Industries> _Industries;
		
		private EntityRef<Projects> _Projects;
		
		private EntityRef<ProductItems> _ProductItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnIndustryIDChanging(string value);
    partial void OnIndustryIDChanged();
    partial void OnProductItemIDChanging(string value);
    partial void OnProductItemIDChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    #endregion
		
		public MapsProject()
		{
			this._Companies = default(EntityRef<Companies>);
			this._Industries = default(EntityRef<Industries>);
			this._Projects = default(EntityRef<Projects>);
			this._ProductItems = default(EntityRef<ProductItems>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryID", DbType="VarChar(50)")]
		public string IndustryID
		{
			get
			{
				return this._IndustryID;
			}
			set
			{
				if ((this._IndustryID != value))
				{
					if (this._Industries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIndustryIDChanging(value);
					this.SendPropertyChanging();
					this._IndustryID = value;
					this.SendPropertyChanged("IndustryID");
					this.OnIndustryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductItemID", DbType="VarChar(50)")]
		public string ProductItemID
		{
			get
			{
				return this._ProductItemID;
			}
			set
			{
				if ((this._ProductItemID != value))
				{
					if (this._ProductItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductItemIDChanging(value);
					this.SendPropertyChanging();
					this._ProductItemID = value;
					this.SendPropertyChanged("ProductItemID");
					this.OnProductItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(50)")]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_MapsProject", Storage="_Companies", ThisKey="ManufacturerID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.MapsProject.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.MapsProject.Add(this);
						this._ManufacturerID = value.ID;
					}
					else
					{
						this._ManufacturerID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industries_MapsProject", Storage="_Industries", ThisKey="IndustryID", OtherKey="ID", IsForeignKey=true)]
		public Industries Industries
		{
			get
			{
				return this._Industries.Entity;
			}
			set
			{
				Industries previousValue = this._Industries.Entity;
				if (((previousValue != value) 
							|| (this._Industries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Industries.Entity = null;
						previousValue.MapsProject.Remove(this);
					}
					this._Industries.Entity = value;
					if ((value != null))
					{
						value.MapsProject.Add(this);
						this._IndustryID = value.ID;
					}
					else
					{
						this._IndustryID = default(string);
					}
					this.SendPropertyChanged("Industries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_MapsProject", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.MapsProject.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.MapsProject.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItems_MapsProject", Storage="_ProductItems", ThisKey="ProductItemID", OtherKey="ID", IsForeignKey=true)]
		public ProductItems ProductItems
		{
			get
			{
				return this._ProductItems.Entity;
			}
			set
			{
				ProductItems previousValue = this._ProductItems.Entity;
				if (((previousValue != value) 
							|| (this._ProductItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductItems.Entity = null;
						previousValue.MapsProject.Remove(this);
					}
					this._ProductItems.Entity = value;
					if ((value != null))
					{
						value.MapsProject.Add(this);
						this._ProductItemID = value.ID;
					}
					else
					{
						this._ProductItemID = default(string);
					}
					this.SendPropertyChanged("ProductItems");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsReply")]
	public partial class MapsReply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ReplyID;
		
		private string _ReadAdminID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Replies> _Replies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnReplyIDChanging(string value);
    partial void OnReplyIDChanged();
    partial void OnReadAdminIDChanging(string value);
    partial void OnReadAdminIDChanged();
    #endregion
		
		public MapsReply()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Replies = default(EntityRef<Replies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReplyID
		{
			get
			{
				return this._ReplyID;
			}
			set
			{
				if ((this._ReplyID != value))
				{
					if (this._Replies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReplyIDChanging(value);
					this.SendPropertyChanging();
					this._ReplyID = value;
					this.SendPropertyChanged("ReplyID");
					this.OnReplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAdminID", DbType="VarChar(50)")]
		public string ReadAdminID
		{
			get
			{
				return this._ReadAdminID;
			}
			set
			{
				if ((this._ReadAdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReadAdminIDChanging(value);
					this.SendPropertyChanging();
					this._ReadAdminID = value;
					this.SendPropertyChanged("ReadAdminID");
					this.OnReadAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsReply", Storage="_AdminsProject", ThisKey="ReadAdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsReply.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsReply.Add(this);
						this._ReadAdminID = value.AdminID;
					}
					else
					{
						this._ReadAdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Replies_MapsReply", Storage="_Replies", ThisKey="ReplyID", OtherKey="ID", IsForeignKey=true)]
		public Replies Replies
		{
			get
			{
				return this._Replies.Entity;
			}
			set
			{
				Replies previousValue = this._Replies.Entity;
				if (((previousValue != value) 
							|| (this._Replies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Replies.Entity = null;
						previousValue.MapsReply.Remove(this);
					}
					this._Replies.Entity = value;
					if ((value != null))
					{
						value.MapsReply.Add(this);
						this._ReplyID = value.ID;
					}
					else
					{
						this._ReplyID = default(string);
					}
					this.SendPropertyChanged("Replies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsReport")]
	public partial class MapsReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ReportID;
		
		private string _ReadAdminID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Reports> _Reports;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnReadAdminIDChanging(string value);
    partial void OnReadAdminIDChanged();
    #endregion
		
		public MapsReport()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Reports = default(EntityRef<Reports>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._Reports.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAdminID", DbType="VarChar(50)")]
		public string ReadAdminID
		{
			get
			{
				return this._ReadAdminID;
			}
			set
			{
				if ((this._ReadAdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReadAdminIDChanging(value);
					this.SendPropertyChanging();
					this._ReadAdminID = value;
					this.SendPropertyChanged("ReadAdminID");
					this.OnReadAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_MapsReport", Storage="_AdminsProject", ThisKey="ReadAdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.MapsReport.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.MapsReport.Add(this);
						this._ReadAdminID = value.AdminID;
					}
					else
					{
						this._ReadAdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_MapsReport", Storage="_Reports", ThisKey="ReportID", OtherKey="ID", IsForeignKey=true)]
		public Reports Reports
		{
			get
			{
				return this._Reports.Entity;
			}
			set
			{
				Reports previousValue = this._Reports.Entity;
				if (((previousValue != value) 
							|| (this._Reports.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reports.Entity = null;
						previousValue.MapsReport.Remove(this);
					}
					this._Reports.Entity = value;
					if ((value != null))
					{
						value.MapsReport.Add(this);
						this._ReportID = value.ID;
					}
					else
					{
						this._ReportID = default(string);
					}
					this.SendPropertyChanged("Reports");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notices")]
	public partial class Notices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Context;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Files> _Files;
		
		private EntitySet<MapsNotice> _MapsNotice;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Notices()
		{
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._MapsNotice = new EntitySet<MapsNotice>(new Action<MapsNotice>(this.attach_MapsNotice), new Action<MapsNotice>(this.detach_MapsNotice));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notices_Files", Storage="_Files", ThisKey="ID", OtherKey="NoticeID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notices_MapsNotice", Storage="_MapsNotice", ThisKey="ID", OtherKey="NoticeID")]
		public EntitySet<MapsNotice> MapsNotice
		{
			get
			{
				return this._MapsNotice;
			}
			set
			{
				this._MapsNotice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Notices", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Notices.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Notices.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Notices = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Notices = null;
		}
		
		private void attach_MapsNotice(MapsNotice entity)
		{
			this.SendPropertyChanging();
			entity.Notices = this;
		}
		
		private void detach_MapsNotice(MapsNotice entity)
		{
			this.SendPropertyChanging();
			entity.Notices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _CatalogueID;
		
		private string _AdminID;
		
		private int _Currency;
		
		private string _BeneficiaryID;
		
		private string _DeliveryAddress;
		
		private string _Address;
		
		private string _ConsigneeID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Beneficiaries> _Beneficiaries;
		
		private EntityRef<Catalogues> _Catalogues;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Contacts> _Contacts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnCatalogueIDChanging(string value);
    partial void OnCatalogueIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnBeneficiaryIDChanging(string value);
    partial void OnBeneficiaryIDChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnConsigneeIDChanging(string value);
    partial void OnConsigneeIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Orders()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Beneficiaries = default(EntityRef<Beneficiaries>);
			this._Catalogues = default(EntityRef<Catalogues>);
			this._Clients = default(EntityRef<Clients>);
			this._Contacts = default(EntityRef<Contacts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogueID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogueID
		{
			get
			{
				return this._CatalogueID;
			}
			set
			{
				if ((this._CatalogueID != value))
				{
					if (this._Catalogues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogueIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogueID = value;
					this.SendPropertyChanged("CatalogueID");
					this.OnCatalogueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					if (this._Beneficiaries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="NVarChar(500)")]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Orders", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Beneficiaries_Orders", Storage="_Beneficiaries", ThisKey="BeneficiaryID", OtherKey="ID", IsForeignKey=true)]
		public Beneficiaries Beneficiaries
		{
			get
			{
				return this._Beneficiaries.Entity;
			}
			set
			{
				Beneficiaries previousValue = this._Beneficiaries.Entity;
				if (((previousValue != value) 
							|| (this._Beneficiaries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Beneficiaries.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Beneficiaries.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._BeneficiaryID = value.ID;
					}
					else
					{
						this._BeneficiaryID = default(string);
					}
					this.SendPropertyChanged("Beneficiaries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Orders", Storage="_Catalogues", ThisKey="CatalogueID", OtherKey="ID", IsForeignKey=true)]
		public Catalogues Catalogues
		{
			get
			{
				return this._Catalogues.Entity;
			}
			set
			{
				Catalogues previousValue = this._Catalogues.Entity;
				if (((previousValue != value) 
							|| (this._Catalogues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogues.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Catalogues.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CatalogueID = value.ID;
					}
					else
					{
						this._CatalogueID = default(string);
					}
					this.SendPropertyChanged("Catalogues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Orders", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Orders", Storage="_Contacts", ThisKey="ConsigneeID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ConsigneeID = value.ID;
					}
					else
					{
						this._ConsigneeID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preminums")]
	public partial class Preminums : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CatalogueID;
		
		private string _DeclareID;
		
		private string _Name;
		
		private decimal _Price;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<Catalogues> _Catalogues;
		
		private EntityRef<DeclareProducts> _DeclareProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCatalogueIDChanging(string value);
    partial void OnCatalogueIDChanged();
    partial void OnDeclareIDChanging(string value);
    partial void OnDeclareIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Preminums()
		{
			this._Catalogues = default(EntityRef<Catalogues>);
			this._DeclareProducts = default(EntityRef<DeclareProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogueID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CatalogueID
		{
			get
			{
				return this._CatalogueID;
			}
			set
			{
				if ((this._CatalogueID != value))
				{
					if (this._Catalogues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatalogueIDChanging(value);
					this.SendPropertyChanging();
					this._CatalogueID = value;
					this.SendPropertyChanged("CatalogueID");
					this.OnCatalogueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareID", DbType="VarChar(50)")]
		public string DeclareID
		{
			get
			{
				return this._DeclareID;
			}
			set
			{
				if ((this._DeclareID != value))
				{
					if (this._DeclareProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclareIDChanging(value);
					this.SendPropertyChanging();
					this._DeclareID = value;
					this.SendPropertyChanged("DeclareID");
					this.OnDeclareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogues_Preminums", Storage="_Catalogues", ThisKey="CatalogueID", OtherKey="ID", IsForeignKey=true)]
		public Catalogues Catalogues
		{
			get
			{
				return this._Catalogues.Entity;
			}
			set
			{
				Catalogues previousValue = this._Catalogues.Entity;
				if (((previousValue != value) 
							|| (this._Catalogues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogues.Entity = null;
						previousValue.Preminums.Remove(this);
					}
					this._Catalogues.Entity = value;
					if ((value != null))
					{
						value.Preminums.Add(this);
						this._CatalogueID = value.ID;
					}
					else
					{
						this._CatalogueID = default(string);
					}
					this.SendPropertyChanged("Catalogues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclareProducts_Preminums", Storage="_DeclareProducts", ThisKey="DeclareID", OtherKey="ID", IsForeignKey=true)]
		public DeclareProducts DeclareProducts
		{
			get
			{
				return this._DeclareProducts.Entity;
			}
			set
			{
				DeclareProducts previousValue = this._DeclareProducts.Entity;
				if (((previousValue != value) 
							|| (this._DeclareProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclareProducts.Entity = null;
						previousValue.Preminums.Remove(this);
					}
					this._DeclareProducts.Entity = value;
					if ((value != null))
					{
						value.Preminums.Add(this);
						this._DeclareID = value.ID;
					}
					else
					{
						this._DeclareID = default(string);
					}
					this.SendPropertyChanged("DeclareProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Problems")]
	public partial class Problems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ActionID;
		
		private string _StandardID;
		
		private string _ReportID;
		
		private string _ContactID;
		
		private string _Context;
		
		private string _Answer;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private EntityRef<Actions> _Actions;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Contacts> _Contacts;
		
		private EntityRef<Reports> _Reports;
		
		private EntityRef<StandardProducts> _StandardProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnActionIDChanging(string value);
    partial void OnActionIDChanged();
    partial void OnStandardIDChanging(string value);
    partial void OnStandardIDChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnContactIDChanging(string value);
    partial void OnContactIDChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Problems()
		{
			this._Actions = default(EntityRef<Actions>);
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Contacts = default(EntityRef<Contacts>);
			this._Reports = default(EntityRef<Reports>);
			this._StandardProducts = default(EntityRef<StandardProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="VarChar(50)")]
		public string ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._Actions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardID", DbType="VarChar(50)")]
		public string StandardID
		{
			get
			{
				return this._StandardID;
			}
			set
			{
				if ((this._StandardID != value))
				{
					if (this._StandardProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIDChanging(value);
					this.SendPropertyChanging();
					this._StandardID = value;
					this.SendPropertyChanged("StandardID");
					this.OnStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50)")]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._Reports.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contacts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(500)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Problems", Storage="_Actions", ThisKey="ActionID", OtherKey="ID", IsForeignKey=true)]
		public Actions Actions
		{
			get
			{
				return this._Actions.Entity;
			}
			set
			{
				Actions previousValue = this._Actions.Entity;
				if (((previousValue != value) 
							|| (this._Actions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actions.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._Actions.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._ActionID = value.ID;
					}
					else
					{
						this._ActionID = default(string);
					}
					this.SendPropertyChanged("Actions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Problems", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacts_Problems", Storage="_Contacts", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contacts Contacts
		{
			get
			{
				return this._Contacts.Entity;
			}
			set
			{
				Contacts previousValue = this._Contacts.Entity;
				if (((previousValue != value) 
							|| (this._Contacts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacts.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._Contacts.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(string);
					}
					this.SendPropertyChanged("Contacts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Problems", Storage="_Reports", ThisKey="ReportID", OtherKey="ID", IsForeignKey=true)]
		public Reports Reports
		{
			get
			{
				return this._Reports.Entity;
			}
			set
			{
				Reports previousValue = this._Reports.Entity;
				if (((previousValue != value) 
							|| (this._Reports.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reports.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._Reports.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._ReportID = value.ID;
					}
					else
					{
						this._ReportID = default(string);
					}
					this.SendPropertyChanged("Reports");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_Problems", Storage="_StandardProducts", ThisKey="StandardID", OtherKey="ID", IsForeignKey=true)]
		public StandardProducts StandardProducts
		{
			get
			{
				return this._StandardProducts.Entity;
			}
			set
			{
				StandardProducts previousValue = this._StandardProducts.Entity;
				if (((previousValue != value) 
							|| (this._StandardProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardProducts.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._StandardProducts.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._StandardID = value.ID;
					}
					else
					{
						this._StandardID = default(string);
					}
					this.SendPropertyChanged("StandardProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proccesses")]
	public partial class Proccesses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DeclareID;
		
		private string _ProjectID;
		
		private int _Score;
		
		private string _AdminID;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<DeclareProducts> _DeclareProducts;
		
		private EntityRef<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeclareIDChanging(string value);
    partial void OnDeclareIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public Proccesses()
		{
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._DeclareProducts = default(EntityRef<DeclareProducts>);
			this._Projects = default(EntityRef<Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclareID
		{
			get
			{
				return this._DeclareID;
			}
			set
			{
				if ((this._DeclareID != value))
				{
					if (this._DeclareProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclareIDChanging(value);
					this.SendPropertyChanging();
					this._DeclareID = value;
					this.SendPropertyChanged("DeclareID");
					this.OnDeclareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Proccesses", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Proccesses.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Proccesses.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeclareProducts_Proccesses", Storage="_DeclareProducts", ThisKey="DeclareID", OtherKey="ID", IsForeignKey=true)]
		public DeclareProducts DeclareProducts
		{
			get
			{
				return this._DeclareProducts.Entity;
			}
			set
			{
				DeclareProducts previousValue = this._DeclareProducts.Entity;
				if (((previousValue != value) 
							|| (this._DeclareProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeclareProducts.Entity = null;
						previousValue.Proccesses.Remove(this);
					}
					this._DeclareProducts.Entity = value;
					if ((value != null))
					{
						value.Proccesses.Add(this);
						this._DeclareID = value.ID;
					}
					else
					{
						this._DeclareID = default(string);
					}
					this.SendPropertyChanged("DeclareProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Proccesses", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.Proccesses.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.Proccesses.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductItemFiles")]
	public partial class ProductItemFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ProductItemID;
		
		private int _Type;
		
		private string _Name;
		
		private string _Url;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _SubID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnProductItemIDChanging(string value);
    partial void OnProductItemIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSubIDChanging(string value);
    partial void OnSubIDChanged();
    #endregion
		
		public ProductItemFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductItemID
		{
			get
			{
				return this._ProductItemID;
			}
			set
			{
				if ((this._ProductItemID != value))
				{
					this.OnProductItemIDChanging(value);
					this.SendPropertyChanging();
					this._ProductItemID = value;
					this.SendPropertyChanged("ProductItemID");
					this.OnProductItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50)")]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					this.OnSubIDChanging(value);
					this.SendPropertyChanging();
					this._SubID = value;
					this.SendPropertyChanged("SubID");
					this.OnSubIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductItemSamples")]
	public partial class ProductItemSamples : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private decimal _UnitPrice;
		
		private int _Quantity;
		
		private decimal _TotalPrice;
		
		private System.DateTime _Date;
		
		private string _Contactor;
		
		private string _Phone;
		
		private string _Address;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnContactorChanging(string value);
    partial void OnContactorChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public ProductItemSamples()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contactor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Contactor
		{
			get
			{
				return this._Contactor;
			}
			set
			{
				if ((this._Contactor != value))
				{
					this.OnContactorChanging(value);
					this.SendPropertyChanging();
					this._Contactor = value;
					this.SendPropertyChanged("Contactor");
					this.OnContactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Replies")]
	public partial class Replies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _WorksOtherID;
		
		private string _WorksWeeklyID;
		
		private string _ReportID;
		
		private string _Context;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<MapsReply> _MapsReply;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Reports> _Reports;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnWorksOtherIDChanging(string value);
    partial void OnWorksOtherIDChanged();
    partial void OnWorksWeeklyIDChanging(string value);
    partial void OnWorksWeeklyIDChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Replies()
		{
			this._MapsReply = new EntitySet<MapsReply>(new Action<MapsReply>(this.attach_MapsReply), new Action<MapsReply>(this.detach_MapsReply));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Reports = default(EntityRef<Reports>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorksOtherID", DbType="VarChar(50)")]
		public string WorksOtherID
		{
			get
			{
				return this._WorksOtherID;
			}
			set
			{
				if ((this._WorksOtherID != value))
				{
					this.OnWorksOtherIDChanging(value);
					this.SendPropertyChanging();
					this._WorksOtherID = value;
					this.SendPropertyChanged("WorksOtherID");
					this.OnWorksOtherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorksWeeklyID", DbType="VarChar(50)")]
		public string WorksWeeklyID
		{
			get
			{
				return this._WorksWeeklyID;
			}
			set
			{
				if ((this._WorksWeeklyID != value))
				{
					this.OnWorksWeeklyIDChanging(value);
					this.SendPropertyChanging();
					this._WorksWeeklyID = value;
					this.SendPropertyChanged("WorksWeeklyID");
					this.OnWorksWeeklyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50)")]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._Reports.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Replies_MapsReply", Storage="_MapsReply", ThisKey="ID", OtherKey="ReplyID")]
		public EntitySet<MapsReply> MapsReply
		{
			get
			{
				return this._MapsReply;
			}
			set
			{
				this._MapsReply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Replies", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Replies.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Replies.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Replies", Storage="_Reports", ThisKey="ReportID", OtherKey="ID", IsForeignKey=true)]
		public Reports Reports
		{
			get
			{
				return this._Reports.Entity;
			}
			set
			{
				Reports previousValue = this._Reports.Entity;
				if (((previousValue != value) 
							|| (this._Reports.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reports.Entity = null;
						previousValue.Replies.Remove(this);
					}
					this._Reports.Entity = value;
					if ((value != null))
					{
						value.Replies.Add(this);
						this._ReportID = value.ID;
					}
					else
					{
						this._ReportID = default(string);
					}
					this.SendPropertyChanged("Reports");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsReply(MapsReply entity)
		{
			this.SendPropertyChanging();
			entity.Replies = this;
		}
		
		private void detach_MapsReply(MapsReply entity)
		{
			this.SendPropertyChanging();
			entity.Replies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Reports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ActionID;
		
		private string _ProjectID;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Context;
		
		private string _ClientID;
		
		private EntitySet<Files> _Files;
		
		private EntitySet<MapsReport> _MapsReport;
		
		private EntitySet<Problems> _Problems;
		
		private EntitySet<Replies> _Replies;
		
		private EntityRef<Actions> _Actions;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnActionIDChanging(string value);
    partial void OnActionIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    #endregion
		
		public Reports()
		{
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._MapsReport = new EntitySet<MapsReport>(new Action<MapsReport>(this.attach_MapsReport), new Action<MapsReport>(this.detach_MapsReport));
			this._Problems = new EntitySet<Problems>(new Action<Problems>(this.attach_Problems), new Action<Problems>(this.detach_Problems));
			this._Replies = new EntitySet<Replies>(new Action<Replies>(this.attach_Replies), new Action<Replies>(this.detach_Replies));
			this._Actions = default(EntityRef<Actions>);
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Clients = default(EntityRef<Clients>);
			this._Projects = default(EntityRef<Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="VarChar(50)")]
		public string ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._Actions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX)")]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Files", Storage="_Files", ThisKey="ID", OtherKey="ReportID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_MapsReport", Storage="_MapsReport", ThisKey="ID", OtherKey="ReportID")]
		public EntitySet<MapsReport> MapsReport
		{
			get
			{
				return this._MapsReport;
			}
			set
			{
				this._MapsReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Problems", Storage="_Problems", ThisKey="ID", OtherKey="ReportID")]
		public EntitySet<Problems> Problems
		{
			get
			{
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reports_Replies", Storage="_Replies", ThisKey="ID", OtherKey="ReportID")]
		public EntitySet<Replies> Replies
		{
			get
			{
				return this._Replies;
			}
			set
			{
				this._Replies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actions_Reports", Storage="_Actions", ThisKey="ActionID", OtherKey="ID", IsForeignKey=true)]
		public Actions Actions
		{
			get
			{
				return this._Actions.Entity;
			}
			set
			{
				Actions previousValue = this._Actions.Entity;
				if (((previousValue != value) 
							|| (this._Actions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actions.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._Actions.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._ActionID = value.ID;
					}
					else
					{
						this._ActionID = default(string);
					}
					this.SendPropertyChanged("Actions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Reports", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Reports", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Reports", Storage="_Projects", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Reports = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Reports = null;
		}
		
		private void attach_MapsReport(MapsReport entity)
		{
			this.SendPropertyChanging();
			entity.Reports = this;
		}
		
		private void detach_MapsReport(MapsReport entity)
		{
			this.SendPropertyChanging();
			entity.Reports = null;
		}
		
		private void attach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Reports = this;
		}
		
		private void detach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.Reports = null;
		}
		
		private void attach_Replies(Replies entity)
		{
			this.SendPropertyChanging();
			entity.Reports = this;
		}
		
		private void detach_Replies(Replies entity)
		{
			this.SendPropertyChanging();
			entity.Reports = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scores")]
	public partial class Scores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _ScoreType;
		
		private int _ReportScore;
		
		private int _ClientScore;
		
		private int _ProjectScore;
		
		private int _DIScore;
		
		private int _DWScore;
		
		private string _AdminID;
		
		private string _Year;
		
		private string _Month;
		
		private decimal _TotalScore;
		
		private System.Nullable<decimal> _Bonus;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnScoreTypeChanging(int value);
    partial void OnScoreTypeChanged();
    partial void OnReportScoreChanging(int value);
    partial void OnReportScoreChanged();
    partial void OnClientScoreChanging(int value);
    partial void OnClientScoreChanged();
    partial void OnProjectScoreChanging(int value);
    partial void OnProjectScoreChanged();
    partial void OnDIScoreChanging(int value);
    partial void OnDIScoreChanged();
    partial void OnDWScoreChanging(int value);
    partial void OnDWScoreChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnTotalScoreChanging(decimal value);
    partial void OnTotalScoreChanged();
    partial void OnBonusChanging(System.Nullable<decimal> value);
    partial void OnBonusChanged();
    #endregion
		
		public Scores()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreType", DbType="Int NOT NULL")]
		public int ScoreType
		{
			get
			{
				return this._ScoreType;
			}
			set
			{
				if ((this._ScoreType != value))
				{
					this.OnScoreTypeChanging(value);
					this.SendPropertyChanging();
					this._ScoreType = value;
					this.SendPropertyChanged("ScoreType");
					this.OnScoreTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportScore", DbType="Int NOT NULL")]
		public int ReportScore
		{
			get
			{
				return this._ReportScore;
			}
			set
			{
				if ((this._ReportScore != value))
				{
					this.OnReportScoreChanging(value);
					this.SendPropertyChanging();
					this._ReportScore = value;
					this.SendPropertyChanged("ReportScore");
					this.OnReportScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientScore", DbType="Int NOT NULL")]
		public int ClientScore
		{
			get
			{
				return this._ClientScore;
			}
			set
			{
				if ((this._ClientScore != value))
				{
					this.OnClientScoreChanging(value);
					this.SendPropertyChanging();
					this._ClientScore = value;
					this.SendPropertyChanged("ClientScore");
					this.OnClientScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectScore", DbType="Int NOT NULL")]
		public int ProjectScore
		{
			get
			{
				return this._ProjectScore;
			}
			set
			{
				if ((this._ProjectScore != value))
				{
					this.OnProjectScoreChanging(value);
					this.SendPropertyChanging();
					this._ProjectScore = value;
					this.SendPropertyChanged("ProjectScore");
					this.OnProjectScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIScore", DbType="Int NOT NULL")]
		public int DIScore
		{
			get
			{
				return this._DIScore;
			}
			set
			{
				if ((this._DIScore != value))
				{
					this.OnDIScoreChanging(value);
					this.SendPropertyChanging();
					this._DIScore = value;
					this.SendPropertyChanged("DIScore");
					this.OnDIScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DWScore", DbType="Int NOT NULL")]
		public int DWScore
		{
			get
			{
				return this._DWScore;
			}
			set
			{
				if ((this._DWScore != value))
				{
					this.OnDWScoreChanging(value);
					this.SendPropertyChanging();
					this._DWScore = value;
					this.SendPropertyChanged("DWScore");
					this.OnDWScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardProducts")]
	public partial class StandardProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Origin;
		
		private string _Name;
		
		private string _ManufacturerID;
		
		private string _Packaging;
		
		private string _PackageCase;
		
		private string _Batch;
		
		private string _DateCode;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<DeclareProducts> _DeclareProducts;
		
		private EntitySet<Problems> _Problems;
		
		private EntitySet<ProductItems> _ProductItems;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnPackagingChanging(string value);
    partial void OnPackagingChanged();
    partial void OnPackageCaseChanging(string value);
    partial void OnPackageCaseChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnDateCodeChanging(string value);
    partial void OnDateCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public StandardProducts()
		{
			this._DeclareProducts = new EntitySet<DeclareProducts>(new Action<DeclareProducts>(this.attach_DeclareProducts), new Action<DeclareProducts>(this.detach_DeclareProducts));
			this._Problems = new EntitySet<Problems>(new Action<Problems>(this.attach_Problems), new Action<Problems>(this.detach_Problems));
			this._ProductItems = new EntitySet<ProductItems>(new Action<ProductItems>(this.attach_ProductItems), new Action<ProductItems>(this.detach_ProductItems));
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(150)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packaging", DbType="VarChar(50)")]
		public string Packaging
		{
			get
			{
				return this._Packaging;
			}
			set
			{
				if ((this._Packaging != value))
				{
					this.OnPackagingChanging(value);
					this.SendPropertyChanging();
					this._Packaging = value;
					this.SendPropertyChanged("Packaging");
					this.OnPackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCase", DbType="VarChar(50)")]
		public string PackageCase
		{
			get
			{
				return this._PackageCase;
			}
			set
			{
				if ((this._PackageCase != value))
				{
					this.OnPackageCaseChanging(value);
					this.SendPropertyChanging();
					this._PackageCase = value;
					this.SendPropertyChanged("PackageCase");
					this.OnPackageCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode", DbType="VarChar(50)")]
		public string DateCode
		{
			get
			{
				return this._DateCode;
			}
			set
			{
				if ((this._DateCode != value))
				{
					this.OnDateCodeChanging(value);
					this.SendPropertyChanging();
					this._DateCode = value;
					this.SendPropertyChanged("DateCode");
					this.OnDateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_DeclareProducts", Storage="_DeclareProducts", ThisKey="ID", OtherKey="StandardID")]
		public EntitySet<DeclareProducts> DeclareProducts
		{
			get
			{
				return this._DeclareProducts;
			}
			set
			{
				this._DeclareProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_Problems", Storage="_Problems", ThisKey="ID", OtherKey="StandardID")]
		public EntitySet<Problems> Problems
		{
			get
			{
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_ProductItems", Storage="_ProductItems", ThisKey="ID", OtherKey="StandardID")]
		public EntitySet<ProductItems> ProductItems
		{
			get
			{
				return this._ProductItems;
			}
			set
			{
				this._ProductItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_StandardProducts", Storage="_Companies", ThisKey="ManufacturerID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.StandardProducts.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.StandardProducts.Add(this);
						this._ManufacturerID = value.ID;
					}
					else
					{
						this._ManufacturerID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = this;
		}
		
		private void detach_DeclareProducts(DeclareProducts entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = null;
		}
		
		private void attach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = this;
		}
		
		private void detach_Problems(Problems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = null;
		}
		
		private void attach_ProductItems(ProductItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = this;
		}
		
		private void detach_ProductItems(ProductItems entity)
		{
			this.SendPropertyChanging();
			entity.StandardProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warnings")]
	public partial class Warnings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _MainID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _AdminID;
		
		private int _Status;
		
		private string _Resource;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnResourceChanging(string value);
    partial void OnResourceChanged();
    #endregion
		
		public Warnings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Resource
		{
			get
			{
				return this._Resource;
			}
			set
			{
				if ((this._Resource != value))
				{
					this.OnResourceChanging(value);
					this.SendPropertyChanging();
					this._Resource = value;
					this.SendPropertyChanged("Resource");
					this.OnResourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorksOther")]
	public partial class WorksOther : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _Context;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _AdminID;
		
		private string _Subject;
		
		private EntitySet<Files> _Files;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    #endregion
		
		public WorksOther()
		{
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorksOther_Files", Storage="_Files", ThisKey="ID", OtherKey="WorksOtherID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_WorksOther", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.WorksOther.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.WorksOther.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.WorksOther = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.WorksOther = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorksWeekly")]
	public partial class WorksWeekly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Context;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _WeekOfYear;
		
		private int _Status;
		
		private string _AdminID;
		
		private EntitySet<Files> _Files;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnWeekOfYearChanging(int value);
    partial void OnWeekOfYearChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public WorksWeekly()
		{
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOfYear", DbType="Int NOT NULL")]
		public int WeekOfYear
		{
			get
			{
				return this._WeekOfYear;
			}
			set
			{
				if ((this._WeekOfYear != value))
				{
					this.OnWeekOfYearChanging(value);
					this.SendPropertyChanging();
					this._WeekOfYear = value;
					this.SendPropertyChanged("WeekOfYear");
					this.OnWeekOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorksWeekly_Files", Storage="_Files", ThisKey="ID", OtherKey="WorksWeeklyID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_WorksWeekly", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.WorksWeekly.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.WorksWeekly.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.WorksWeekly = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.WorksWeekly = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTopView")]
	public partial class AdminTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private int _Status;
		
		private string _Summary;
		
		public AdminTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this._LoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Projects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Name;
		
		private string _ProductName;
		
		private string _ClientID;
		
		private string _CompanyID;
		
		private decimal _Valuation;
		
		private int _Currency;
		
		private string _AdminID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _ModelDate;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private System.Nullable<int> _MonthYield;
		
		private string _Contactor;
		
		private string _Phone;
		
		private string _Address;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Summary;
		
		private System.Nullable<decimal> _ExpectTotal;
		
		private EntitySet<Files> _Files;
		
		private EntitySet<MapsProject> _MapsProject;
		
		private EntitySet<Proccesses> _Proccesses;
		
		private EntitySet<Reports> _Reports;
		
		private EntityRef<AdminsProject> _AdminsProject;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Companies> _Companies;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnValuationChanging(decimal value);
    partial void OnValuationChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnModelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModelDateChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnMonthYieldChanging(System.Nullable<int> value);
    partial void OnMonthYieldChanged();
    partial void OnContactorChanging(string value);
    partial void OnContactorChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnExpectTotalChanging(System.Nullable<decimal> value);
    partial void OnExpectTotalChanged();
    #endregion
		
		public Projects()
		{
			this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
			this._MapsProject = new EntitySet<MapsProject>(new Action<MapsProject>(this.attach_MapsProject), new Action<MapsProject>(this.detach_MapsProject));
			this._Proccesses = new EntitySet<Proccesses>(new Action<Proccesses>(this.attach_Proccesses), new Action<Proccesses>(this.detach_Proccesses));
			this._Reports = new EntitySet<Reports>(new Action<Reports>(this.attach_Reports), new Action<Reports>(this.detach_Reports));
			this._AdminsProject = default(EntityRef<AdminsProject>);
			this._Clients = default(EntityRef<Clients>);
			this._Companies = default(EntityRef<Companies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valuation", DbType="Decimal(18,5) NOT NULL")]
		public decimal Valuation
		{
			get
			{
				return this._Valuation;
			}
			set
			{
				if ((this._Valuation != value))
				{
					this.OnValuationChanging(value);
					this.SendPropertyChanging();
					this._Valuation = value;
					this.SendPropertyChanged("Valuation");
					this.OnValuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminsProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModelDate
		{
			get
			{
				return this._ModelDate;
			}
			set
			{
				if ((this._ModelDate != value))
				{
					this.OnModelDateChanging(value);
					this.SendPropertyChanging();
					this._ModelDate = value;
					this.SendPropertyChanged("ModelDate");
					this.OnModelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="Date")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYield", DbType="Int")]
		public System.Nullable<int> MonthYield
		{
			get
			{
				return this._MonthYield;
			}
			set
			{
				if ((this._MonthYield != value))
				{
					this.OnMonthYieldChanging(value);
					this.SendPropertyChanging();
					this._MonthYield = value;
					this.SendPropertyChanged("MonthYield");
					this.OnMonthYieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contactor", DbType="NVarChar(50)")]
		public string Contactor
		{
			get
			{
				return this._Contactor;
			}
			set
			{
				if ((this._Contactor != value))
				{
					this.OnContactorChanging(value);
					this.SendPropertyChanging();
					this._Contactor = value;
					this.SendPropertyChanged("Contactor");
					this.OnContactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectTotal", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> ExpectTotal
		{
			get
			{
				return this._ExpectTotal;
			}
			set
			{
				if ((this._ExpectTotal != value))
				{
					this.OnExpectTotalChanging(value);
					this.SendPropertyChanging();
					this._ExpectTotal = value;
					this.SendPropertyChanged("ExpectTotal");
					this.OnExpectTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Files", Storage="_Files", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<Files> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_MapsProject", Storage="_MapsProject", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<MapsProject> MapsProject
		{
			get
			{
				return this._MapsProject;
			}
			set
			{
				this._MapsProject.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Proccesses", Storage="_Proccesses", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<Proccesses> Proccesses
		{
			get
			{
				return this._Proccesses;
			}
			set
			{
				this._Proccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_Reports", Storage="_Reports", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<Reports> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminsProject_Projects", Storage="_AdminsProject", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminsProject AdminsProject
		{
			get
			{
				return this._AdminsProject.Entity;
			}
			set
			{
				AdminsProject previousValue = this._AdminsProject.Entity;
				if (((previousValue != value) 
							|| (this._AdminsProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminsProject.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._AdminsProject.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminsProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Projects", Storage="_Clients", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(string);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companies_Projects", Storage="_Companies", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Companies Companies
		{
			get
			{
				return this._Companies.Entity;
			}
			set
			{
				Companies previousValue = this._Companies.Entity;
				if (((previousValue != value) 
							|| (this._Companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companies.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Companies.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(string);
					}
					this.SendPropertyChanged("Companies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_Files(Files entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_Proccesses(Proccesses entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_Reports(Reports entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductItems")]
	public partial class ProductItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _StandardID;
		
		private string _CompeteID;
		
		private int _RefUnitQuantity;
		
		private int _RefQuantity;
		
		private decimal _RefUnitPrice;
		
		private int _ExpectRate;
		
		private System.Nullable<int> _ExpectQuantity;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _PMAdmin;
		
		private string _FAEAdmin;
		
		private string _SaleAdmin;
		
		private string _PurChaseAdmin;
		
		private string _AssistantAdmin;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _Count;
		
		private string _OriginNumber;
		
		private System.Nullable<System.DateTime> _ExpectDate;
		
		private string _Summary;
		
		private System.Nullable<decimal> _ExpectTotal;
		
		private EntitySet<MapsProductItemEnquiry> _MapsProductItemEnquiry;
		
		private EntitySet<MapsProject> _MapsProject;
		
		private EntityRef<CompeteProducts> _CompeteProducts;
		
		private EntityRef<StandardProducts> _StandardProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStandardIDChanging(string value);
    partial void OnStandardIDChanged();
    partial void OnCompeteIDChanging(string value);
    partial void OnCompeteIDChanged();
    partial void OnRefUnitQuantityChanging(int value);
    partial void OnRefUnitQuantityChanged();
    partial void OnRefQuantityChanging(int value);
    partial void OnRefQuantityChanged();
    partial void OnRefUnitPriceChanging(decimal value);
    partial void OnRefUnitPriceChanged();
    partial void OnExpectRateChanging(int value);
    partial void OnExpectRateChanged();
    partial void OnExpectQuantityChanging(System.Nullable<int> value);
    partial void OnExpectQuantityChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnPMAdminChanging(string value);
    partial void OnPMAdminChanged();
    partial void OnFAEAdminChanging(string value);
    partial void OnFAEAdminChanged();
    partial void OnSaleAdminChanging(string value);
    partial void OnSaleAdminChanged();
    partial void OnPurChaseAdminChanging(string value);
    partial void OnPurChaseAdminChanged();
    partial void OnAssistantAdminChanging(string value);
    partial void OnAssistantAdminChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnOriginNumberChanging(string value);
    partial void OnOriginNumberChanged();
    partial void OnExpectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnExpectTotalChanging(System.Nullable<decimal> value);
    partial void OnExpectTotalChanged();
    #endregion
		
		public ProductItems()
		{
			this._MapsProductItemEnquiry = new EntitySet<MapsProductItemEnquiry>(new Action<MapsProductItemEnquiry>(this.attach_MapsProductItemEnquiry), new Action<MapsProductItemEnquiry>(this.detach_MapsProductItemEnquiry));
			this._MapsProject = new EntitySet<MapsProject>(new Action<MapsProject>(this.attach_MapsProject), new Action<MapsProject>(this.detach_MapsProject));
			this._CompeteProducts = default(EntityRef<CompeteProducts>);
			this._StandardProducts = default(EntityRef<StandardProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StandardID
		{
			get
			{
				return this._StandardID;
			}
			set
			{
				if ((this._StandardID != value))
				{
					if (this._StandardProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIDChanging(value);
					this.SendPropertyChanging();
					this._StandardID = value;
					this.SendPropertyChanged("StandardID");
					this.OnStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompeteID", DbType="VarChar(50)")]
		public string CompeteID
		{
			get
			{
				return this._CompeteID;
			}
			set
			{
				if ((this._CompeteID != value))
				{
					if (this._CompeteProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompeteIDChanging(value);
					this.SendPropertyChanging();
					this._CompeteID = value;
					this.SendPropertyChanged("CompeteID");
					this.OnCompeteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefUnitQuantity", DbType="Int NOT NULL")]
		public int RefUnitQuantity
		{
			get
			{
				return this._RefUnitQuantity;
			}
			set
			{
				if ((this._RefUnitQuantity != value))
				{
					this.OnRefUnitQuantityChanging(value);
					this.SendPropertyChanging();
					this._RefUnitQuantity = value;
					this.SendPropertyChanged("RefUnitQuantity");
					this.OnRefUnitQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefQuantity", DbType="Int NOT NULL")]
		public int RefQuantity
		{
			get
			{
				return this._RefQuantity;
			}
			set
			{
				if ((this._RefQuantity != value))
				{
					this.OnRefQuantityChanging(value);
					this.SendPropertyChanging();
					this._RefQuantity = value;
					this.SendPropertyChanged("RefQuantity");
					this.OnRefQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefUnitPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal RefUnitPrice
		{
			get
			{
				return this._RefUnitPrice;
			}
			set
			{
				if ((this._RefUnitPrice != value))
				{
					this.OnRefUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._RefUnitPrice = value;
					this.SendPropertyChanged("RefUnitPrice");
					this.OnRefUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectRate", DbType="Int NOT NULL")]
		public int ExpectRate
		{
			get
			{
				return this._ExpectRate;
			}
			set
			{
				if ((this._ExpectRate != value))
				{
					this.OnExpectRateChanging(value);
					this.SendPropertyChanging();
					this._ExpectRate = value;
					this.SendPropertyChanged("ExpectRate");
					this.OnExpectRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectQuantity", DbType="Int")]
		public System.Nullable<int> ExpectQuantity
		{
			get
			{
				return this._ExpectQuantity;
			}
			set
			{
				if ((this._ExpectQuantity != value))
				{
					this.OnExpectQuantityChanging(value);
					this.SendPropertyChanging();
					this._ExpectQuantity = value;
					this.SendPropertyChanged("ExpectQuantity");
					this.OnExpectQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMAdmin", DbType="VarChar(50)")]
		public string PMAdmin
		{
			get
			{
				return this._PMAdmin;
			}
			set
			{
				if ((this._PMAdmin != value))
				{
					this.OnPMAdminChanging(value);
					this.SendPropertyChanging();
					this._PMAdmin = value;
					this.SendPropertyChanged("PMAdmin");
					this.OnPMAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAEAdmin", DbType="VarChar(50)")]
		public string FAEAdmin
		{
			get
			{
				return this._FAEAdmin;
			}
			set
			{
				if ((this._FAEAdmin != value))
				{
					this.OnFAEAdminChanging(value);
					this.SendPropertyChanging();
					this._FAEAdmin = value;
					this.SendPropertyChanged("FAEAdmin");
					this.OnFAEAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleAdmin", DbType="VarChar(50)")]
		public string SaleAdmin
		{
			get
			{
				return this._SaleAdmin;
			}
			set
			{
				if ((this._SaleAdmin != value))
				{
					this.OnSaleAdminChanging(value);
					this.SendPropertyChanging();
					this._SaleAdmin = value;
					this.SendPropertyChanged("SaleAdmin");
					this.OnSaleAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurChaseAdmin", DbType="VarChar(50)")]
		public string PurChaseAdmin
		{
			get
			{
				return this._PurChaseAdmin;
			}
			set
			{
				if ((this._PurChaseAdmin != value))
				{
					this.OnPurChaseAdminChanging(value);
					this.SendPropertyChanging();
					this._PurChaseAdmin = value;
					this.SendPropertyChanged("PurChaseAdmin");
					this.OnPurChaseAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssistantAdmin", DbType="VarChar(50)")]
		public string AssistantAdmin
		{
			get
			{
				return this._AssistantAdmin;
			}
			set
			{
				if ((this._AssistantAdmin != value))
				{
					this.OnAssistantAdminChanging(value);
					this.SendPropertyChanging();
					this._AssistantAdmin = value;
					this.SendPropertyChanged("AssistantAdmin");
					this.OnAssistantAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginNumber", DbType="VarChar(50)")]
		public string OriginNumber
		{
			get
			{
				return this._OriginNumber;
			}
			set
			{
				if ((this._OriginNumber != value))
				{
					this.OnOriginNumberChanging(value);
					this.SendPropertyChanging();
					this._OriginNumber = value;
					this.SendPropertyChanged("OriginNumber");
					this.OnOriginNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectDate
		{
			get
			{
				return this._ExpectDate;
			}
			set
			{
				if ((this._ExpectDate != value))
				{
					this.OnExpectDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectDate = value;
					this.SendPropertyChanged("ExpectDate");
					this.OnExpectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectTotal", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> ExpectTotal
		{
			get
			{
				return this._ExpectTotal;
			}
			set
			{
				if ((this._ExpectTotal != value))
				{
					this.OnExpectTotalChanging(value);
					this.SendPropertyChanging();
					this._ExpectTotal = value;
					this.SendPropertyChanged("ExpectTotal");
					this.OnExpectTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItems_MapsProductItemEnquiry", Storage="_MapsProductItemEnquiry", ThisKey="ID", OtherKey="ProductItemID")]
		public EntitySet<MapsProductItemEnquiry> MapsProductItemEnquiry
		{
			get
			{
				return this._MapsProductItemEnquiry;
			}
			set
			{
				this._MapsProductItemEnquiry.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItems_MapsProject", Storage="_MapsProject", ThisKey="ID", OtherKey="ProductItemID")]
		public EntitySet<MapsProject> MapsProject
		{
			get
			{
				return this._MapsProject;
			}
			set
			{
				this._MapsProject.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompeteProducts_ProductItems", Storage="_CompeteProducts", ThisKey="CompeteID", OtherKey="ID", IsForeignKey=true)]
		public CompeteProducts CompeteProducts
		{
			get
			{
				return this._CompeteProducts.Entity;
			}
			set
			{
				CompeteProducts previousValue = this._CompeteProducts.Entity;
				if (((previousValue != value) 
							|| (this._CompeteProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompeteProducts.Entity = null;
						previousValue.ProductItems.Remove(this);
					}
					this._CompeteProducts.Entity = value;
					if ((value != null))
					{
						value.ProductItems.Add(this);
						this._CompeteID = value.ID;
					}
					else
					{
						this._CompeteID = default(string);
					}
					this.SendPropertyChanged("CompeteProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardProducts_ProductItems", Storage="_StandardProducts", ThisKey="StandardID", OtherKey="ID", IsForeignKey=true)]
		public StandardProducts StandardProducts
		{
			get
			{
				return this._StandardProducts.Entity;
			}
			set
			{
				StandardProducts previousValue = this._StandardProducts.Entity;
				if (((previousValue != value) 
							|| (this._StandardProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardProducts.Entity = null;
						previousValue.ProductItems.Remove(this);
					}
					this._StandardProducts.Entity = value;
					if ((value != null))
					{
						value.ProductItems.Add(this);
						this._StandardID = value.ID;
					}
					else
					{
						this._StandardID = default(string);
					}
					this.SendPropertyChanged("StandardProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsProductItemEnquiry(MapsProductItemEnquiry entity)
		{
			this.SendPropertyChanging();
			entity.ProductItems = this;
		}
		
		private void detach_MapsProductItemEnquiry(MapsProductItemEnquiry entity)
		{
			this.SendPropertyChanging();
			entity.ProductItems = null;
		}
		
		private void attach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.ProductItems = this;
		}
		
		private void detach_MapsProject(MapsProject entity)
		{
			this.SendPropertyChanging();
			entity.ProductItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductItemEnquiries")]
	public partial class ProductItemEnquiries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private decimal _ReplyPrice;
		
		private System.DateTime _ReplyDate;
		
		private string _RFQ;
		
		private string _OriginModel;
		
		private int _MOQ;
		
		private System.Nullable<int> _MPQ;
		
		private int _Currency;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<decimal> _TaxRate;
		
		private System.Nullable<decimal> _Tariff;
		
		private System.Nullable<decimal> _OtherRate;
		
		private System.Nullable<decimal> _Cost;
		
		private System.DateTime _Validity;
		
		private System.Nullable<int> _ValidityCount;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.DateTime _ReportDate;
		
		private EntitySet<MapsProductItemEnquiry> _MapsProductItemEnquiry;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnReplyPriceChanging(decimal value);
    partial void OnReplyPriceChanged();
    partial void OnReplyDateChanging(System.DateTime value);
    partial void OnReplyDateChanged();
    partial void OnRFQChanging(string value);
    partial void OnRFQChanged();
    partial void OnOriginModelChanging(string value);
    partial void OnOriginModelChanged();
    partial void OnMOQChanging(int value);
    partial void OnMOQChanged();
    partial void OnMPQChanging(System.Nullable<int> value);
    partial void OnMPQChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnTaxRateChanging(System.Nullable<decimal> value);
    partial void OnTaxRateChanged();
    partial void OnTariffChanging(System.Nullable<decimal> value);
    partial void OnTariffChanged();
    partial void OnOtherRateChanging(System.Nullable<decimal> value);
    partial void OnOtherRateChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnValidityChanging(System.DateTime value);
    partial void OnValidityChanged();
    partial void OnValidityCountChanging(System.Nullable<int> value);
    partial void OnValidityCountChanged();
    partial void OnSalePriceChanging(System.Nullable<decimal> value);
    partial void OnSalePriceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnReportDateChanging(System.DateTime value);
    partial void OnReportDateChanged();
    #endregion
		
		public ProductItemEnquiries()
		{
			this._MapsProductItemEnquiry = new EntitySet<MapsProductItemEnquiry>(new Action<MapsProductItemEnquiry>(this.attach_MapsProductItemEnquiry), new Action<MapsProductItemEnquiry>(this.detach_MapsProductItemEnquiry));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReplyPrice
		{
			get
			{
				return this._ReplyPrice;
			}
			set
			{
				if ((this._ReplyPrice != value))
				{
					this.OnReplyPriceChanging(value);
					this.SendPropertyChanging();
					this._ReplyPrice = value;
					this.SendPropertyChanged("ReplyPrice");
					this.OnReplyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReplyDate
		{
			get
			{
				return this._ReplyDate;
			}
			set
			{
				if ((this._ReplyDate != value))
				{
					this.OnReplyDateChanging(value);
					this.SendPropertyChanging();
					this._ReplyDate = value;
					this.SendPropertyChanged("ReplyDate");
					this.OnReplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFQ", DbType="VarChar(50)")]
		public string RFQ
		{
			get
			{
				return this._RFQ;
			}
			set
			{
				if ((this._RFQ != value))
				{
					this.OnRFQChanging(value);
					this.SendPropertyChanging();
					this._RFQ = value;
					this.SendPropertyChanged("RFQ");
					this.OnRFQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginModel", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string OriginModel
		{
			get
			{
				return this._OriginModel;
			}
			set
			{
				if ((this._OriginModel != value))
				{
					this.OnOriginModelChanging(value);
					this.SendPropertyChanging();
					this._OriginModel = value;
					this.SendPropertyChanged("OriginModel");
					this.OnOriginModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOQ", DbType="Int NOT NULL")]
		public int MOQ
		{
			get
			{
				return this._MOQ;
			}
			set
			{
				if ((this._MOQ != value))
				{
					this.OnMOQChanging(value);
					this.SendPropertyChanging();
					this._MOQ = value;
					this.SendPropertyChanged("MOQ");
					this.OnMOQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPQ", DbType="Int")]
		public System.Nullable<int> MPQ
		{
			get
			{
				return this._MPQ;
			}
			set
			{
				if ((this._MPQ != value))
				{
					this.OnMPQChanging(value);
					this.SendPropertyChanging();
					this._MPQ = value;
					this.SendPropertyChanged("MPQ");
					this.OnMPQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tariff", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Tariff
		{
			get
			{
				return this._Tariff;
			}
			set
			{
				if ((this._Tariff != value))
				{
					this.OnTariffChanging(value);
					this.SendPropertyChanging();
					this._Tariff = value;
					this.SendPropertyChanged("Tariff");
					this.OnTariffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherRate", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> OtherRate
		{
			get
			{
				return this._OtherRate;
			}
			set
			{
				if ((this._OtherRate != value))
				{
					this.OnOtherRateChanging(value);
					this.SendPropertyChanging();
					this._OtherRate = value;
					this.SendPropertyChanged("OtherRate");
					this.OnOtherRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validity", DbType="DateTime NOT NULL")]
		public System.DateTime Validity
		{
			get
			{
				return this._Validity;
			}
			set
			{
				if ((this._Validity != value))
				{
					this.OnValidityChanging(value);
					this.SendPropertyChanging();
					this._Validity = value;
					this.SendPropertyChanged("Validity");
					this.OnValidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidityCount", DbType="Int")]
		public System.Nullable<int> ValidityCount
		{
			get
			{
				return this._ValidityCount;
			}
			set
			{
				if ((this._ValidityCount != value))
				{
					this.OnValidityCountChanging(value);
					this.SendPropertyChanging();
					this._ValidityCount = value;
					this.SendPropertyChanged("ValidityCount");
					this.OnValidityCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductItemEnquiries_MapsProductItemEnquiry", Storage="_MapsProductItemEnquiry", ThisKey="ID", OtherKey="ProductItemEnquiryID")]
		public EntitySet<MapsProductItemEnquiry> MapsProductItemEnquiry
		{
			get
			{
				return this._MapsProductItemEnquiry;
			}
			set
			{
				this._MapsProductItemEnquiry.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsProductItemEnquiry(MapsProductItemEnquiry entity)
		{
			this.SendPropertyChanging();
			entity.ProductItemEnquiries = this;
		}
		
		private void detach_MapsProductItemEnquiry(MapsProductItemEnquiry entity)
		{
			this.SendPropertyChanging();
			entity.ProductItemEnquiries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientVisits")]
	public partial class ClientVisits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private int _DateIndex;
		
		private int _Count;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnDateIndexChanging(int value);
    partial void OnDateIndexChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public ClientVisits()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIndex", DbType="Int NOT NULL")]
		public int DateIndex
		{
			get
			{
				return this._DateIndex;
			}
			set
			{
				if ((this._DateIndex != value))
				{
					this.OnDateIndexChanging(value);
					this.SendPropertyChanging();
					this._DateIndex = value;
					this.SendPropertyChanged("DateIndex");
					this.OnDateIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
