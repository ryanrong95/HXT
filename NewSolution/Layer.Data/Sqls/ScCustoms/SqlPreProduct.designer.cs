#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.ScCustoms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="foricScCustoms")]
	public partial class SqlPreProductDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertPreProductPostLog(PreProductPostLog instance);
    partial void UpdatePreProductPostLog(PreProductPostLog instance);
    partial void DeletePreProductPostLog(PreProductPostLog instance);
    partial void InsertSMSContact(SMSContact instance);
    partial void UpdateSMSContact(SMSContact instance);
    partial void DeleteSMSContact(SMSContact instance);
    partial void InsertIcgooRequestPara(IcgooRequestPara instance);
    partial void UpdateIcgooRequestPara(IcgooRequestPara instance);
    partial void DeleteIcgooRequestPara(IcgooRequestPara instance);
    partial void InsertApiClient(ApiClient instance);
    partial void UpdateApiClient(ApiClient instance);
    partial void DeleteApiClient(ApiClient instance);
    partial void InsertIcgooPostLog(IcgooPostLog instance);
    partial void UpdateIcgooPostLog(IcgooPostLog instance);
    partial void DeleteIcgooPostLog(IcgooPostLog instance);
    partial void InsertIcgooRequestLog(IcgooRequestLog instance);
    partial void UpdateIcgooRequestLog(IcgooRequestLog instance);
    partial void DeleteIcgooRequestLog(IcgooRequestLog instance);
    partial void InsertDutiablePricePostLog(DutiablePricePostLog instance);
    partial void UpdateDutiablePricePostLog(DutiablePricePostLog instance);
    partial void DeleteDutiablePricePostLog(DutiablePricePostLog instance);
    partial void InsertApiNoticeLogs(ApiNoticeLogs instance);
    partial void UpdateApiNoticeLogs(ApiNoticeLogs instance);
    partial void DeleteApiNoticeLogs(ApiNoticeLogs instance);
    partial void InsertApiNotices(ApiNotices instance);
    partial void UpdateApiNotices(ApiNotices instance);
    partial void DeleteApiNotices(ApiNotices instance);
    partial void InsertEmailNotice(EmailNotice instance);
    partial void UpdateEmailNotice(EmailNotice instance);
    partial void DeleteEmailNotice(EmailNotice instance);
    partial void InsertProductSupplierMap(ProductSupplierMap instance);
    partial void UpdateProductSupplierMap(ProductSupplierMap instance);
    partial void DeleteProductSupplierMap(ProductSupplierMap instance);
    partial void InsertPallets(Pallets instance);
    partial void UpdatePallets(Pallets instance);
    partial void DeletePallets(Pallets instance);
    partial void InsertClientBalance(ClientBalance instance);
    partial void UpdateClientBalance(ClientBalance instance);
    partial void DeleteClientBalance(ClientBalance instance);
    partial void InsertDollarEquityMap(DollarEquityMap instance);
    partial void UpdateDollarEquityMap(DollarEquityMap instance);
    partial void DeleteDollarEquityMap(DollarEquityMap instance);
    partial void InsertDollarEquity(DollarEquity instance);
    partial void UpdateDollarEquity(DollarEquity instance);
    partial void DeleteDollarEquity(DollarEquity instance);
    partial void InsertDollarEquityApplies(DollarEquityApplies instance);
    partial void UpdateDollarEquityApplies(DollarEquityApplies instance);
    partial void DeleteDollarEquityApplies(DollarEquityApplies instance);
    partial void InsertDollarEquityApplyFiles(DollarEquityApplyFiles instance);
    partial void UpdateDollarEquityApplyFiles(DollarEquityApplyFiles instance);
    partial void DeleteDollarEquityApplyFiles(DollarEquityApplyFiles instance);
    partial void InsertClientBalanceLog(ClientBalanceLog instance);
    partial void UpdateClientBalanceLog(ClientBalanceLog instance);
    partial void DeleteClientBalanceLog(ClientBalanceLog instance);
    partial void InsertIcgooOrderMap(IcgooOrderMap instance);
    partial void UpdateIcgooOrderMap(IcgooOrderMap instance);
    partial void DeleteIcgooOrderMap(IcgooOrderMap instance);
    partial void InsertPreProductCategories(PreProductCategories instance);
    partial void UpdatePreProductCategories(PreProductCategories instance);
    partial void DeletePreProductCategories(PreProductCategories instance);
    partial void InsertPreProductControls(PreProductControls instance);
    partial void UpdatePreProductControls(PreProductControls instance);
    partial void DeletePreProductControls(PreProductControls instance);
    partial void InsertPreProducts(PreProducts instance);
    partial void UpdatePreProducts(PreProducts instance);
    partial void DeletePreProducts(PreProducts instance);
    #endregion
		
		public SqlPreProductDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.foricScCustomsConnectionString6, mappingSource)
		{
			OnCreated();
		}
		
		public SqlPreProductDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlPreProductDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlPreProductDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlPreProductDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PreProductPostLog> PreProductPostLog
		{
			get
			{
				return this.GetTable<PreProductPostLog>();
			}
		}
		
		public System.Data.Linq.Table<SMSContact> SMSContact
		{
			get
			{
				return this.GetTable<SMSContact>();
			}
		}
		
		public System.Data.Linq.Table<IcgooRequestPara> IcgooRequestPara
		{
			get
			{
				return this.GetTable<IcgooRequestPara>();
			}
		}
		
		public System.Data.Linq.Table<ApiClient> ApiClient
		{
			get
			{
				return this.GetTable<ApiClient>();
			}
		}
		
		public System.Data.Linq.Table<IcgooPostLog> IcgooPostLog
		{
			get
			{
				return this.GetTable<IcgooPostLog>();
			}
		}
		
		public System.Data.Linq.Table<IcgooRequestLog> IcgooRequestLog
		{
			get
			{
				return this.GetTable<IcgooRequestLog>();
			}
		}
		
		public System.Data.Linq.Table<DutiablePricePostLog> DutiablePricePostLog
		{
			get
			{
				return this.GetTable<DutiablePricePostLog>();
			}
		}
		
		public System.Data.Linq.Table<ApiNoticeLogs> ApiNoticeLogs
		{
			get
			{
				return this.GetTable<ApiNoticeLogs>();
			}
		}
		
		public System.Data.Linq.Table<ApiNotices> ApiNotices
		{
			get
			{
				return this.GetTable<ApiNotices>();
			}
		}
		
		public System.Data.Linq.Table<EmailNotice> EmailNotice
		{
			get
			{
				return this.GetTable<EmailNotice>();
			}
		}
		
		public System.Data.Linq.Table<ProductSupplierMap> ProductSupplierMap
		{
			get
			{
				return this.GetTable<ProductSupplierMap>();
			}
		}
		
		public System.Data.Linq.Table<Pallets> Pallets
		{
			get
			{
				return this.GetTable<Pallets>();
			}
		}
		
		public System.Data.Linq.Table<ClientBalance> ClientBalance
		{
			get
			{
				return this.GetTable<ClientBalance>();
			}
		}
		
		public System.Data.Linq.Table<DollarEquityMap> DollarEquityMap
		{
			get
			{
				return this.GetTable<DollarEquityMap>();
			}
		}
		
		public System.Data.Linq.Table<DollarEquity> DollarEquity
		{
			get
			{
				return this.GetTable<DollarEquity>();
			}
		}
		
		public System.Data.Linq.Table<DollarEquityApplies> DollarEquityApplies
		{
			get
			{
				return this.GetTable<DollarEquityApplies>();
			}
		}
		
		public System.Data.Linq.Table<DollarEquityApplyFiles> DollarEquityApplyFiles
		{
			get
			{
				return this.GetTable<DollarEquityApplyFiles>();
			}
		}
		
		public System.Data.Linq.Table<ClientBalanceLog> ClientBalanceLog
		{
			get
			{
				return this.GetTable<ClientBalanceLog>();
			}
		}
		
		public System.Data.Linq.Table<IcgooOrderMap> IcgooOrderMap
		{
			get
			{
				return this.GetTable<IcgooOrderMap>();
			}
		}
		
		public System.Data.Linq.Table<PreProductCategories> PreProductCategories
		{
			get
			{
				return this.GetTable<PreProductCategories>();
			}
		}
		
		public System.Data.Linq.Table<PreProductControls> PreProductControls
		{
			get
			{
				return this.GetTable<PreProductControls>();
			}
		}
		
		public System.Data.Linq.Table<ClassifyResultView> ClassifyResultView
		{
			get
			{
				return this.GetTable<ClassifyResultView>();
			}
		}
		
		public System.Data.Linq.Table<PreProducts> PreProducts
		{
			get
			{
				return this.GetTable<PreProducts>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProductPostLog")]
	public partial class PreProductPostLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PreProductCategoryID;
		
		private System.Nullable<bool> _PostStatus;
		
		private string _Msg;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPreProductCategoryIDChanging(string value);
    partial void OnPreProductCategoryIDChanged();
    partial void OnPostStatusChanging(System.Nullable<bool> value);
    partial void OnPostStatusChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PreProductPostLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductCategoryID", DbType="VarChar(50)")]
		public string PreProductCategoryID
		{
			get
			{
				return this._PreProductCategoryID;
			}
			set
			{
				if ((this._PreProductCategoryID != value))
				{
					this.OnPreProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._PreProductCategoryID = value;
					this.SendPropertyChanged("PreProductCategoryID");
					this.OnPreProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostStatus", DbType="Bit")]
		public System.Nullable<bool> PostStatus
		{
			get
			{
				return this._PostStatus;
			}
			set
			{
				if ((this._PostStatus != value))
				{
					this.OnPostStatusChanging(value);
					this.SendPropertyChanging();
					this._PostStatus = value;
					this.SendPropertyChanged("PostStatus");
					this.OnPostStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="NVarChar(200)")]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSContact")]
	public partial class SMSContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SMSContact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IcgooRequestPara")]
	public partial class IcgooRequestPara : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Supplier;
		
		private System.Nullable<int> _days;
		
		private string _RequestUrl;
		
		private System.Nullable<int> _PageSize;
		
		private System.Nullable<bool> _IsUse;
		
		private string _ClientID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OndaysChanging(System.Nullable<int> value);
    partial void OndaysChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnPageSizeChanging(System.Nullable<int> value);
    partial void OnPageSizeChanged();
    partial void OnIsUseChanging(System.Nullable<bool> value);
    partial void OnIsUseChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    #endregion
		
		public IcgooRequestPara()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="NVarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days", DbType="Int")]
		public System.Nullable<int> days
		{
			get
			{
				return this._days;
			}
			set
			{
				if ((this._days != value))
				{
					this.OndaysChanging(value);
					this.SendPropertyChanging();
					this._days = value;
					this.SendPropertyChanged("days");
					this.OndaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(500)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUse", DbType="Bit")]
		public System.Nullable<bool> IsUse
		{
			get
			{
				return this._IsUse;
			}
			set
			{
				if ((this._IsUse != value))
				{
					this.OnIsUseChanging(value);
					this.SendPropertyChanging();
					this._IsUse = value;
					this.SendPropertyChanged("IsUse");
					this.OnIsUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(32)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiClient")]
	public partial class ApiClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ClientSupplierID;
		
		private string _AccountName;
		
		private string _Password;
		
		private string _CompanyCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientSupplierIDChanging(string value);
    partial void OnClientSupplierIDChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ApiClient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSupplierID", DbType="VarChar(50)")]
		public string ClientSupplierID
		{
			get
			{
				return this._ClientSupplierID;
			}
			set
			{
				if ((this._ClientSupplierID != value))
				{
					this.OnClientSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._ClientSupplierID = value;
					this.SendPropertyChanged("ClientSupplierID");
					this.OnClientSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IcgooPostLog")]
	public partial class IcgooPostLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PostData;
		
		private bool _IsAnalyzed;
		
		private int _Status;
		
		private int _CompanyType;
		
		private System.Nullable<bool> _IsForklift;
		
		private System.Nullable<int> _PlateQty;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPostDataChanging(string value);
    partial void OnPostDataChanged();
    partial void OnIsAnalyzedChanging(bool value);
    partial void OnIsAnalyzedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCompanyTypeChanging(int value);
    partial void OnCompanyTypeChanged();
    partial void OnIsForkliftChanging(System.Nullable<bool> value);
    partial void OnIsForkliftChanged();
    partial void OnPlateQtyChanging(System.Nullable<int> value);
    partial void OnPlateQtyChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public IcgooPostLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PostData
		{
			get
			{
				return this._PostData;
			}
			set
			{
				if ((this._PostData != value))
				{
					this.OnPostDataChanging(value);
					this.SendPropertyChanging();
					this._PostData = value;
					this.SendPropertyChanged("PostData");
					this.OnPostDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnalyzed", DbType="Bit NOT NULL")]
		public bool IsAnalyzed
		{
			get
			{
				return this._IsAnalyzed;
			}
			set
			{
				if ((this._IsAnalyzed != value))
				{
					this.OnIsAnalyzedChanging(value);
					this.SendPropertyChanging();
					this._IsAnalyzed = value;
					this.SendPropertyChanged("IsAnalyzed");
					this.OnIsAnalyzedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int NOT NULL")]
		public int CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForklift", DbType="Bit")]
		public System.Nullable<bool> IsForklift
		{
			get
			{
				return this._IsForklift;
			}
			set
			{
				if ((this._IsForklift != value))
				{
					this.OnIsForkliftChanging(value);
					this.SendPropertyChanging();
					this._IsForklift = value;
					this.SendPropertyChanged("IsForklift");
					this.OnIsForkliftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateQty", DbType="Int")]
		public System.Nullable<int> PlateQty
		{
			get
			{
				return this._PlateQty;
			}
			set
			{
				if ((this._PlateQty != value))
				{
					this.OnPlateQtyChanging(value);
					this.SendPropertyChanging();
					this._PlateQty = value;
					this.SendPropertyChanged("PlateQty");
					this.OnPlateQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IcgooRequestLog")]
	public partial class IcgooRequestLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Supplier;
		
		private System.Nullable<int> _Days;
		
		private string _RunPara;
		
		private System.Nullable<bool> _IsSuccess;
		
		private string _Info;
		
		private System.Nullable<bool> _IsSend;
		
		private System.Nullable<int> _CompanyType;
		
		private System.Nullable<System.DateTime> _Createtime;
		
		private System.Nullable<System.DateTime> _Updatetime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnDaysChanging(System.Nullable<int> value);
    partial void OnDaysChanged();
    partial void OnRunParaChanging(string value);
    partial void OnRunParaChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnIsSendChanging(System.Nullable<bool> value);
    partial void OnIsSendChanged();
    partial void OnCompanyTypeChanging(System.Nullable<int> value);
    partial void OnCompanyTypeChanged();
    partial void OnCreatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatetimeChanged();
    partial void OnUpdatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatetimeChanged();
    #endregion
		
		public IcgooRequestLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="NVarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int")]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunPara", DbType="NVarChar(500)")]
		public string RunPara
		{
			get
			{
				return this._RunPara;
			}
			set
			{
				if ((this._RunPara != value))
				{
					this.OnRunParaChanging(value);
					this.SendPropertyChanging();
					this._RunPara = value;
					this.SendPropertyChanged("RunPara");
					this.OnRunParaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(2000)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSend", DbType="Bit")]
		public System.Nullable<bool> IsSend
		{
			get
			{
				return this._IsSend;
			}
			set
			{
				if ((this._IsSend != value))
				{
					this.OnIsSendChanging(value);
					this.SendPropertyChanging();
					this._IsSend = value;
					this.SendPropertyChanged("IsSend");
					this.OnIsSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int")]
		public System.Nullable<int> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Createtime
		{
			get
			{
				return this._Createtime;
			}
			set
			{
				if ((this._Createtime != value))
				{
					this.OnCreatetimeChanging(value);
					this.SendPropertyChanging();
					this._Createtime = value;
					this.SendPropertyChanged("Createtime");
					this.OnCreatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updatetime
		{
			get
			{
				return this._Updatetime;
			}
			set
			{
				if ((this._Updatetime != value))
				{
					this.OnUpdatetimeChanging(value);
					this.SendPropertyChanging();
					this._Updatetime = value;
					this.SendPropertyChanged("Updatetime");
					this.OnUpdatetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DutiablePricePostLog")]
	public partial class DutiablePricePostLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private System.Nullable<bool> _PostStatus;
		
		private string _Msg;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnPostStatusChanging(System.Nullable<bool> value);
    partial void OnPostStatusChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DutiablePricePostLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostStatus", DbType="Bit")]
		public System.Nullable<bool> PostStatus
		{
			get
			{
				return this._PostStatus;
			}
			set
			{
				if ((this._PostStatus != value))
				{
					this.OnPostStatusChanging(value);
					this.SendPropertyChanging();
					this._PostStatus = value;
					this.SendPropertyChanged("PostStatus");
					this.OnPostStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="NVarChar(1000)")]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiNoticeLogs")]
	public partial class ApiNoticeLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApiNoticeID;
		
		private string _PushMsg;
		
		private string _ResponseMsg;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApiNoticeIDChanging(string value);
    partial void OnApiNoticeIDChanged();
    partial void OnPushMsgChanging(string value);
    partial void OnPushMsgChanged();
    partial void OnResponseMsgChanging(string value);
    partial void OnResponseMsgChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ApiNoticeLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApiNoticeID
		{
			get
			{
				return this._ApiNoticeID;
			}
			set
			{
				if ((this._ApiNoticeID != value))
				{
					this.OnApiNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._ApiNoticeID = value;
					this.SendPropertyChanged("ApiNoticeID");
					this.OnApiNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushMsg", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PushMsg
		{
			get
			{
				return this._PushMsg;
			}
			set
			{
				if ((this._PushMsg != value))
				{
					this.OnPushMsgChanging(value);
					this.SendPropertyChanging();
					this._PushMsg = value;
					this.SendPropertyChanged("PushMsg");
					this.OnPushMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseMsg", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ResponseMsg
		{
			get
			{
				return this._ResponseMsg;
			}
			set
			{
				if ((this._ResponseMsg != value))
				{
					this.OnResponseMsgChanging(value);
					this.SendPropertyChanging();
					this._ResponseMsg = value;
					this.SendPropertyChanged("ResponseMsg");
					this.OnResponseMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiNotices")]
	public partial class ApiNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _PushType;
		
		private string _ClientID;
		
		private string _ItemID;
		
		private int _PushStatus;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPushTypeChanging(int value);
    partial void OnPushTypeChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnPushStatusChanging(int value);
    partial void OnPushStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public ApiNotices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushType", DbType="Int NOT NULL")]
		public int PushType
		{
			get
			{
				return this._PushType;
			}
			set
			{
				if ((this._PushType != value))
				{
					this.OnPushTypeChanging(value);
					this.SendPropertyChanging();
					this._PushType = value;
					this.SendPropertyChanged("PushType");
					this.OnPushTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushStatus", DbType="Int NOT NULL")]
		public int PushStatus
		{
			get
			{
				return this._PushStatus;
			}
			set
			{
				if ((this._PushStatus != value))
				{
					this.OnPushStatusChanging(value);
					this.SendPropertyChanging();
					this._PushStatus = value;
					this.SendPropertyChanged("PushStatus");
					this.OnPushStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailNotice")]
	public partial class EmailNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductUniqueCode;
		
		private System.DateTime _Createdate;
		
		private System.DateTime _Updatedate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductUniqueCodeChanging(string value);
    partial void OnProductUniqueCodeChanged();
    partial void OnCreatedateChanging(System.DateTime value);
    partial void OnCreatedateChanged();
    partial void OnUpdatedateChanging(System.DateTime value);
    partial void OnUpdatedateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public EmailNotice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUniqueCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductUniqueCode
		{
			get
			{
				return this._ProductUniqueCode;
			}
			set
			{
				if ((this._ProductUniqueCode != value))
				{
					this.OnProductUniqueCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductUniqueCode = value;
					this.SendPropertyChanged("ProductUniqueCode");
					this.OnProductUniqueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdate", DbType="DateTime NOT NULL")]
		public System.DateTime Createdate
		{
			get
			{
				return this._Createdate;
			}
			set
			{
				if ((this._Createdate != value))
				{
					this.OnCreatedateChanging(value);
					this.SendPropertyChanging();
					this._Createdate = value;
					this.SendPropertyChanged("Createdate");
					this.OnCreatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updatedate", DbType="DateTime NOT NULL")]
		public System.DateTime Updatedate
		{
			get
			{
				return this._Updatedate;
			}
			set
			{
				if ((this._Updatedate != value))
				{
					this.OnUpdatedateChanging(value);
					this.SendPropertyChanging();
					this._Updatedate = value;
					this.SendPropertyChanged("Updatedate");
					this.OnUpdatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSupplierMap")]
	public partial class ProductSupplierMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SupplierID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public ProductSupplierMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pallets")]
	public partial class Pallets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Stock;
		
		private string _Pallet;
		
		private System.DateTime _NoticeTime;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStockChanging(string value);
    partial void OnStockChanged();
    partial void OnPalletChanging(string value);
    partial void OnPalletChanged();
    partial void OnNoticeTimeChanging(System.DateTime value);
    partial void OnNoticeTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Pallets()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pallet", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pallet
		{
			get
			{
				return this._Pallet;
			}
			set
			{
				if ((this._Pallet != value))
				{
					this.OnPalletChanging(value);
					this.SendPropertyChanging();
					this._Pallet = value;
					this.SendPropertyChanged("Pallet");
					this.OnPalletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeTime", DbType="DateTime NOT NULL")]
		public System.DateTime NoticeTime
		{
			get
			{
				return this._NoticeTime;
			}
			set
			{
				if ((this._NoticeTime != value))
				{
					this.OnNoticeTimeChanging(value);
					this.SendPropertyChanging();
					this._NoticeTime = value;
					this.SendPropertyChanged("NoticeTime");
					this.OnNoticeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientBalance")]
	public partial class ClientBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ClientAccount;
		
		private System.Nullable<decimal> _Balance;
		
		private string _Currency;
		
		private int _Version;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientAccountChanging(string value);
    partial void OnClientAccountChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAccount", DbType="VarChar(50)")]
		public string ClientAccount
		{
			get
			{
				return this._ClientAccount;
			}
			set
			{
				if ((this._ClientAccount != value))
				{
					this.OnClientAccountChanging(value);
					this.SendPropertyChanging();
					this._ClientAccount = value;
					this.SendPropertyChanged("ClientAccount");
					this.OnClientAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DollarEquityMap")]
	public partial class DollarEquityMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EquityApplyID;
		
		private string _EquityID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEquityApplyIDChanging(string value);
    partial void OnEquityApplyIDChanged();
    partial void OnEquityIDChanging(string value);
    partial void OnEquityIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DollarEquityMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EquityApplyID
		{
			get
			{
				return this._EquityApplyID;
			}
			set
			{
				if ((this._EquityApplyID != value))
				{
					this.OnEquityApplyIDChanging(value);
					this.SendPropertyChanging();
					this._EquityApplyID = value;
					this.SendPropertyChanged("EquityApplyID");
					this.OnEquityApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EquityID
		{
			get
			{
				return this._EquityID;
			}
			set
			{
				if ((this._EquityID != value))
				{
					this.OnEquityIDChanging(value);
					this.SendPropertyChanging();
					this._EquityID = value;
					this.SendPropertyChanged("EquityID");
					this.OnEquityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DollarEquity")]
	public partial class DollarEquity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _OrderID;
		
		private string _FinanceReceiptID;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _AvailableAmount;
		
		private string _Currency;
		
		private int _Version;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnFinanceReceiptIDChanging(string value);
    partial void OnFinanceReceiptIDChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnAvailableAmountChanging(System.Nullable<decimal> value);
    partial void OnAvailableAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DollarEquity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceReceiptID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceReceiptID
		{
			get
			{
				return this._FinanceReceiptID;
			}
			set
			{
				if ((this._FinanceReceiptID != value))
				{
					this.OnFinanceReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceReceiptID = value;
					this.SendPropertyChanged("FinanceReceiptID");
					this.OnFinanceReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AvailableAmount
		{
			get
			{
				return this._AvailableAmount;
			}
			set
			{
				if ((this._AvailableAmount != value))
				{
					this.OnAvailableAmountChanging(value);
					this.SendPropertyChanging();
					this._AvailableAmount = value;
					this.SendPropertyChanged("AvailableAmount");
					this.OnAvailableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DollarEquityApplies")]
	public partial class DollarEquityApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private string _ClientID;
		
		private string _SupplierChnName;
		
		private string _SupplierEngName;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _BankAccount;
		
		private string _SwiftCode;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private bool _IsPaid;
		
		private System.DateTime _ExpectDate;
		
		private string _SeqNo;
		
		private System.Nullable<int> _PayType;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private string _PayerID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnSupplierChnNameChanging(string value);
    partial void OnSupplierChnNameChanged();
    partial void OnSupplierEngNameChanging(string value);
    partial void OnSupplierEngNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnExpectDateChanging(System.DateTime value);
    partial void OnExpectDateChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnPayTypeChanging(System.Nullable<int> value);
    partial void OnPayTypeChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DollarEquityApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierChnName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string SupplierChnName
		{
			get
			{
				return this._SupplierChnName;
			}
			set
			{
				if ((this._SupplierChnName != value))
				{
					this.OnSupplierChnNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierChnName = value;
					this.SendPropertyChanged("SupplierChnName");
					this.OnSupplierChnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEngName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SupplierEngName
		{
			get
			{
				return this._SupplierEngName;
			}
			set
			{
				if ((this._SupplierEngName != value))
				{
					this.OnSupplierEngNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierEngName = value;
					this.SendPropertyChanged("SupplierEngName");
					this.OnSupplierEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpectDate
		{
			get
			{
				return this._ExpectDate;
			}
			set
			{
				if ((this._ExpectDate != value))
				{
					this.OnExpectDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectDate = value;
					this.SendPropertyChanged("ExpectDate");
					this.OnExpectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int")]
		public System.Nullable<int> PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50)")]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50)")]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DollarEquityApplyFiles")]
	public partial class DollarEquityApplyFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DollarEquityApplyID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDollarEquityApplyIDChanging(string value);
    partial void OnDollarEquityApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public DollarEquityApplyFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarEquityApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DollarEquityApplyID
		{
			get
			{
				return this._DollarEquityApplyID;
			}
			set
			{
				if ((this._DollarEquityApplyID != value))
				{
					this.OnDollarEquityApplyIDChanging(value);
					this.SendPropertyChanging();
					this._DollarEquityApplyID = value;
					this.SendPropertyChanged("DollarEquityApplyID");
					this.OnDollarEquityApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientBalanceLog")]
	public partial class ClientBalanceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private decimal _OriginBalance;
		
		private decimal _CurrentBalance;
		
		private decimal _ChangeBalance;
		
		private int _OriginVersion;
		
		private int _CurrentVersion;
		
		private string _Currency;
		
		private string _TriggerSource;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOriginBalanceChanging(decimal value);
    partial void OnOriginBalanceChanged();
    partial void OnCurrentBalanceChanging(decimal value);
    partial void OnCurrentBalanceChanged();
    partial void OnChangeBalanceChanging(decimal value);
    partial void OnChangeBalanceChanged();
    partial void OnOriginVersionChanging(int value);
    partial void OnOriginVersionChanged();
    partial void OnCurrentVersionChanging(int value);
    partial void OnCurrentVersionChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTriggerSourceChanging(string value);
    partial void OnTriggerSourceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ClientBalanceLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginBalance", DbType="Decimal(18,4) NOT NULL")]
		public decimal OriginBalance
		{
			get
			{
				return this._OriginBalance;
			}
			set
			{
				if ((this._OriginBalance != value))
				{
					this.OnOriginBalanceChanging(value);
					this.SendPropertyChanging();
					this._OriginBalance = value;
					this.SendPropertyChanged("OriginBalance");
					this.OnOriginBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalance", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentBalance
		{
			get
			{
				return this._CurrentBalance;
			}
			set
			{
				if ((this._CurrentBalance != value))
				{
					this.OnCurrentBalanceChanging(value);
					this.SendPropertyChanging();
					this._CurrentBalance = value;
					this.SendPropertyChanged("CurrentBalance");
					this.OnCurrentBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBalance", DbType="Decimal(18,4) NOT NULL")]
		public decimal ChangeBalance
		{
			get
			{
				return this._ChangeBalance;
			}
			set
			{
				if ((this._ChangeBalance != value))
				{
					this.OnChangeBalanceChanging(value);
					this.SendPropertyChanging();
					this._ChangeBalance = value;
					this.SendPropertyChanged("ChangeBalance");
					this.OnChangeBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginVersion", DbType="Int NOT NULL")]
		public int OriginVersion
		{
			get
			{
				return this._OriginVersion;
			}
			set
			{
				if ((this._OriginVersion != value))
				{
					this.OnOriginVersionChanging(value);
					this.SendPropertyChanging();
					this._OriginVersion = value;
					this.SendPropertyChanged("OriginVersion");
					this.OnOriginVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="Int NOT NULL")]
		public int CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerSource", DbType="NVarChar(500)")]
		public string TriggerSource
		{
			get
			{
				return this._TriggerSource;
			}
			set
			{
				if ((this._TriggerSource != value))
				{
					this.OnTriggerSourceChanging(value);
					this.SendPropertyChanging();
					this._TriggerSource = value;
					this.SendPropertyChanged("TriggerSource");
					this.OnTriggerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IcgooOrderMap")]
	public partial class IcgooOrderMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _IcgooOrder;
		
		private string _OrderID;
		
		private int _Status;
		
		private int _CompanyType;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _IsVerified;
		
		private System.Nullable<System.DateTime> _VerifyDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnIcgooOrderChanging(string value);
    partial void OnIcgooOrderChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCompanyTypeChanging(int value);
    partial void OnCompanyTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsVerifiedChanged();
    partial void OnVerifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifyDateChanged();
    #endregion
		
		public IcgooOrderMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcgooOrder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IcgooOrder
		{
			get
			{
				return this._IcgooOrder;
			}
			set
			{
				if ((this._IcgooOrder != value))
				{
					this.OnIcgooOrderChanging(value);
					this.SendPropertyChanging();
					this._IcgooOrder = value;
					this.SendPropertyChanged("IcgooOrder");
					this.OnIcgooOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int NOT NULL")]
		public int CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit")]
		public System.Nullable<bool> IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VerifyDate
		{
			get
			{
				return this._VerifyDate;
			}
			set
			{
				if ((this._VerifyDate != value))
				{
					this.OnVerifyDateChanging(value);
					this.SendPropertyChanging();
					this._VerifyDate = value;
					this.SendPropertyChanged("VerifyDate");
					this.OnVerifyDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProductCategories")]
	public partial class PreProductCategories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PreProductID;
		
		private string _Model;
		
		private string _Manufacture;
		
		private string _ProductName;
		
		private string _HSCode;
		
		private System.Nullable<decimal> _TariffRate;
		
		private System.Nullable<decimal> _AddedValueRate;
		
		private System.Nullable<decimal> _ExciseTaxRate;
		
		private string _TaxCode;
		
		private string _TaxName;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _ClassifyType;
		
		private System.Nullable<decimal> _InspectionFee;
		
		private string _Unit1;
		
		private string _Unit2;
		
		private string _CIQCode;
		
		private string _Elements;
		
		private System.Nullable<int> _ClassifyStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _ClassifyFirstOperator;
		
		private string _ClassifySecondOperator;
		
		private string _Summary;
		
		private EntityRef<PreProducts> _PreProducts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPreProductIDChanging(string value);
    partial void OnPreProductIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnManufactureChanging(string value);
    partial void OnManufactureChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnTariffRateChanging(System.Nullable<decimal> value);
    partial void OnTariffRateChanged();
    partial void OnAddedValueRateChanging(System.Nullable<decimal> value);
    partial void OnAddedValueRateChanged();
    partial void OnExciseTaxRateChanging(System.Nullable<decimal> value);
    partial void OnExciseTaxRateChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnTaxNameChanging(string value);
    partial void OnTaxNameChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnClassifyTypeChanging(System.Nullable<int> value);
    partial void OnClassifyTypeChanged();
    partial void OnInspectionFeeChanging(System.Nullable<decimal> value);
    partial void OnInspectionFeeChanged();
    partial void OnUnit1Changing(string value);
    partial void OnUnit1Changed();
    partial void OnUnit2Changing(string value);
    partial void OnUnit2Changed();
    partial void OnCIQCodeChanging(string value);
    partial void OnCIQCodeChanged();
    partial void OnElementsChanging(string value);
    partial void OnElementsChanged();
    partial void OnClassifyStatusChanging(System.Nullable<int> value);
    partial void OnClassifyStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnClassifyFirstOperatorChanging(string value);
    partial void OnClassifyFirstOperatorChanged();
    partial void OnClassifySecondOperatorChanging(string value);
    partial void OnClassifySecondOperatorChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PreProductCategories()
		{
			this._PreProducts = default(EntityRef<PreProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PreProductID
		{
			get
			{
				return this._PreProductID;
			}
			set
			{
				if ((this._PreProductID != value))
				{
					if (this._PreProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreProductIDChanging(value);
					this.SendPropertyChanging();
					this._PreProductID = value;
					this.SendPropertyChanged("PreProductID");
					this.OnPreProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture", DbType="NVarChar(50)")]
		public string Manufacture
		{
			get
			{
				return this._Manufacture;
			}
			set
			{
				if ((this._Manufacture != value))
				{
					this.OnManufactureChanging(value);
					this.SendPropertyChanging();
					this._Manufacture = value;
					this.SendPropertyChanged("Manufacture");
					this.OnManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TariffRate
		{
			get
			{
				return this._TariffRate;
			}
			set
			{
				if ((this._TariffRate != value))
				{
					this.OnTariffRateChanging(value);
					this.SendPropertyChanging();
					this._TariffRate = value;
					this.SendPropertyChanged("TariffRate");
					this.OnTariffRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedValueRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AddedValueRate
		{
			get
			{
				return this._AddedValueRate;
			}
			set
			{
				if ((this._AddedValueRate != value))
				{
					this.OnAddedValueRateChanging(value);
					this.SendPropertyChanging();
					this._AddedValueRate = value;
					this.SendPropertyChanged("AddedValueRate");
					this.OnAddedValueRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExciseTaxRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExciseTaxRate
		{
			get
			{
				return this._ExciseTaxRate;
			}
			set
			{
				if ((this._ExciseTaxRate != value))
				{
					this.OnExciseTaxRateChanging(value);
					this.SendPropertyChanging();
					this._ExciseTaxRate = value;
					this.SendPropertyChanged("ExciseTaxRate");
					this.OnExciseTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="NVarChar(100)")]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this.OnTaxNameChanging(value);
					this.SendPropertyChanging();
					this._TaxName = value;
					this.SendPropertyChanged("TaxName");
					this.OnTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyType", DbType="Int")]
		public System.Nullable<int> ClassifyType
		{
			get
			{
				return this._ClassifyType;
			}
			set
			{
				if ((this._ClassifyType != value))
				{
					this.OnClassifyTypeChanging(value);
					this.SendPropertyChanging();
					this._ClassifyType = value;
					this.SendPropertyChanged("ClassifyType");
					this.OnClassifyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionFee", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InspectionFee
		{
			get
			{
				return this._InspectionFee;
			}
			set
			{
				if ((this._InspectionFee != value))
				{
					this.OnInspectionFeeChanging(value);
					this.SendPropertyChanging();
					this._InspectionFee = value;
					this.SendPropertyChanged("InspectionFee");
					this.OnInspectionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit1", DbType="VarChar(50)")]
		public string Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					this.OnUnit1Changing(value);
					this.SendPropertyChanging();
					this._Unit1 = value;
					this.SendPropertyChanged("Unit1");
					this.OnUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit2", DbType="VarChar(50)")]
		public string Unit2
		{
			get
			{
				return this._Unit2;
			}
			set
			{
				if ((this._Unit2 != value))
				{
					this.OnUnit2Changing(value);
					this.SendPropertyChanging();
					this._Unit2 = value;
					this.SendPropertyChanged("Unit2");
					this.OnUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="VarChar(3)")]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this.OnCIQCodeChanging(value);
					this.SendPropertyChanging();
					this._CIQCode = value;
					this.SendPropertyChanged("CIQCode");
					this.OnCIQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500)")]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyStatus", DbType="Int")]
		public System.Nullable<int> ClassifyStatus
		{
			get
			{
				return this._ClassifyStatus;
			}
			set
			{
				if ((this._ClassifyStatus != value))
				{
					this.OnClassifyStatusChanging(value);
					this.SendPropertyChanging();
					this._ClassifyStatus = value;
					this.SendPropertyChanged("ClassifyStatus");
					this.OnClassifyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyFirstOperator", DbType="VarChar(50)")]
		public string ClassifyFirstOperator
		{
			get
			{
				return this._ClassifyFirstOperator;
			}
			set
			{
				if ((this._ClassifyFirstOperator != value))
				{
					this.OnClassifyFirstOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifyFirstOperator = value;
					this.SendPropertyChanged("ClassifyFirstOperator");
					this.OnClassifyFirstOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifySecondOperator", DbType="VarChar(50)")]
		public string ClassifySecondOperator
		{
			get
			{
				return this._ClassifySecondOperator;
			}
			set
			{
				if ((this._ClassifySecondOperator != value))
				{
					this.OnClassifySecondOperatorChanging(value);
					this.SendPropertyChanging();
					this._ClassifySecondOperator = value;
					this.SendPropertyChanged("ClassifySecondOperator");
					this.OnClassifySecondOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreProducts_PreProductCategories", Storage="_PreProducts", ThisKey="PreProductID", OtherKey="ID", IsForeignKey=true)]
		public PreProducts PreProducts
		{
			get
			{
				return this._PreProducts.Entity;
			}
			set
			{
				PreProducts previousValue = this._PreProducts.Entity;
				if (((previousValue != value) 
							|| (this._PreProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreProducts.Entity = null;
						previousValue.PreProductCategories.Remove(this);
					}
					this._PreProducts.Entity = value;
					if ((value != null))
					{
						value.PreProductCategories.Add(this);
						this._PreProductID = value.ID;
					}
					else
					{
						this._PreProductID = default(string);
					}
					this.SendPropertyChanged("PreProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProductControls")]
	public partial class PreProductControls : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PreProductID;
		
		private int _Type;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ApproveDate;
		
		private string _ApproverID;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPreProductIDChanging(string value);
    partial void OnPreProductIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnApproveDateChanging(System.DateTime value);
    partial void OnApproveDateChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PreProductControls()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PreProductID
		{
			get
			{
				return this._PreProductID;
			}
			set
			{
				if ((this._PreProductID != value))
				{
					this.OnPreProductIDChanging(value);
					this.SendPropertyChanging();
					this._PreProductID = value;
					this.SendPropertyChanged("PreProductID");
					this.OnPreProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime NOT NULL")]
		public System.DateTime ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassifyResultView")]
	public partial class ClassifyResultView
	{
		
		private string _ID;
		
		private string _PreProductID;
		
		private string _Model;
		
		private string _Manufacturer;
		
		private string _ProductName;
		
		private string _HSCode;
		
		private System.Nullable<decimal> _TariffRate;
		
		private System.Nullable<decimal> _AddedValueRate;
		
		private System.Nullable<decimal> _ExciseTaxRate;
		
		private string _TaxCode;
		
		private string _TaxName;
		
		private System.Nullable<int> _ClassifyType;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _ClassifyStatus;
		
		private System.Nullable<decimal> _InspectionFee;
		
		private string _Unit1;
		
		private string _Unit2;
		
		private string _CIQCode;
		
		private string _Elements;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _DeclarantID;
		
		private string _ClassifyFirstOperatorID;
		
		private string _ClassifySecondOperatorID;
		
		private string _PreProductUnicode;
		
		private System.Nullable<int> _CompanyType;
		
		public ClassifyResultView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PreProductID
		{
			get
			{
				return this._PreProductID;
			}
			set
			{
				if ((this._PreProductID != value))
				{
					this._PreProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this._HSCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TariffRate
		{
			get
			{
				return this._TariffRate;
			}
			set
			{
				if ((this._TariffRate != value))
				{
					this._TariffRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedValueRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AddedValueRate
		{
			get
			{
				return this._AddedValueRate;
			}
			set
			{
				if ((this._AddedValueRate != value))
				{
					this._AddedValueRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExciseTaxRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExciseTaxRate
		{
			get
			{
				return this._ExciseTaxRate;
			}
			set
			{
				if ((this._ExciseTaxRate != value))
				{
					this._ExciseTaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(50)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this._TaxCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxName", DbType="NVarChar(100)")]
		public string TaxName
		{
			get
			{
				return this._TaxName;
			}
			set
			{
				if ((this._TaxName != value))
				{
					this._TaxName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyType", DbType="Int")]
		public System.Nullable<int> ClassifyType
		{
			get
			{
				return this._ClassifyType;
			}
			set
			{
				if ((this._ClassifyType != value))
				{
					this._ClassifyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyStatus", DbType="Int")]
		public System.Nullable<int> ClassifyStatus
		{
			get
			{
				return this._ClassifyStatus;
			}
			set
			{
				if ((this._ClassifyStatus != value))
				{
					this._ClassifyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionFee", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InspectionFee
		{
			get
			{
				return this._InspectionFee;
			}
			set
			{
				if ((this._InspectionFee != value))
				{
					this._InspectionFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit1", DbType="VarChar(50)")]
		public string Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					this._Unit1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit2", DbType="VarChar(50)")]
		public string Unit2
		{
			get
			{
				return this._Unit2;
			}
			set
			{
				if ((this._Unit2 != value))
				{
					this._Unit2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIQCode", DbType="VarChar(3)")]
		public string CIQCode
		{
			get
			{
				return this._CIQCode;
			}
			set
			{
				if ((this._CIQCode != value))
				{
					this._CIQCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="NVarChar(500)")]
		public string Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this._Elements = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarantID", DbType="VarChar(50)")]
		public string DeclarantID
		{
			get
			{
				return this._DeclarantID;
			}
			set
			{
				if ((this._DeclarantID != value))
				{
					this._DeclarantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifyFirstOperatorID", DbType="VarChar(50)")]
		public string ClassifyFirstOperatorID
		{
			get
			{
				return this._ClassifyFirstOperatorID;
			}
			set
			{
				if ((this._ClassifyFirstOperatorID != value))
				{
					this._ClassifyFirstOperatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifySecondOperatorID", DbType="VarChar(50)")]
		public string ClassifySecondOperatorID
		{
			get
			{
				return this._ClassifySecondOperatorID;
			}
			set
			{
				if ((this._ClassifySecondOperatorID != value))
				{
					this._ClassifySecondOperatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProductUnicode", DbType="VarChar(50)")]
		public string PreProductUnicode
		{
			get
			{
				return this._PreProductUnicode;
			}
			set
			{
				if ((this._PreProductUnicode != value))
				{
					this._PreProductUnicode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int")]
		public System.Nullable<int> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this._CompanyType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreProducts")]
	public partial class PreProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _ProductUnionCode;
		
		private string _Model;
		
		private string _Manufacturer;
		
		private System.Nullable<decimal> _Qty;
		
		private decimal _Price;
		
		private string _Currency;
		
		private string _Supplier;
		
		private System.Nullable<int> _CompanyType;
		
		private string _BatchNo;
		
		private string _Description;
		
		private string _Pack;
		
		private string _AreaOfProduction;
		
		private string _UseFor;
		
		private System.Nullable<int> _UseType;
		
		private string _Source;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _Unit;
		
		private string _AdminID;
		
		private string _IcgooAdmin;
		
		private EntitySet<PreProductCategories> _PreProductCategories;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnProductUnionCodeChanging(string value);
    partial void OnProductUnionCodeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnCompanyTypeChanging(System.Nullable<int> value);
    partial void OnCompanyTypeChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackChanging(string value);
    partial void OnPackChanged();
    partial void OnAreaOfProductionChanging(string value);
    partial void OnAreaOfProductionChanged();
    partial void OnUseForChanging(string value);
    partial void OnUseForChanged();
    partial void OnUseTypeChanging(System.Nullable<int> value);
    partial void OnUseTypeChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnIcgooAdminChanging(string value);
    partial void OnIcgooAdminChanged();
    #endregion
		
		public PreProducts()
		{
			this._PreProductCategories = new EntitySet<PreProductCategories>(new Action<PreProductCategories>(this.attach_PreProductCategories), new Action<PreProductCategories>(this.detach_PreProductCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUnionCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductUnionCode
		{
			get
			{
				return this._ProductUnionCode;
			}
			set
			{
				if ((this._ProductUnionCode != value))
				{
					this.OnProductUnionCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductUnionCode = value;
					this.SendPropertyChanged("ProductUnionCode");
					this.OnProductUnionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(100)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int")]
		public System.Nullable<int> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="VarChar(200)")]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pack", DbType="NVarChar(100)")]
		public string Pack
		{
			get
			{
				return this._Pack;
			}
			set
			{
				if ((this._Pack != value))
				{
					this.OnPackChanging(value);
					this.SendPropertyChanging();
					this._Pack = value;
					this.SendPropertyChanged("Pack");
					this.OnPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaOfProduction", DbType="VarChar(50)")]
		public string AreaOfProduction
		{
			get
			{
				return this._AreaOfProduction;
			}
			set
			{
				if ((this._AreaOfProduction != value))
				{
					this.OnAreaOfProductionChanging(value);
					this.SendPropertyChanging();
					this._AreaOfProduction = value;
					this.SendPropertyChanged("AreaOfProduction");
					this.OnAreaOfProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseFor", DbType="VarChar(50)")]
		public string UseFor
		{
			get
			{
				return this._UseFor;
			}
			set
			{
				if ((this._UseFor != value))
				{
					this.OnUseForChanging(value);
					this.SendPropertyChanging();
					this._UseFor = value;
					this.SendPropertyChanged("UseFor");
					this.OnUseForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseType", DbType="Int")]
		public System.Nullable<int> UseType
		{
			get
			{
				return this._UseType;
			}
			set
			{
				if ((this._UseType != value))
				{
					this.OnUseTypeChanging(value);
					this.SendPropertyChanging();
					this._UseType = value;
					this.SendPropertyChanged("UseType");
					this.OnUseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcgooAdmin", DbType="NVarChar(10)")]
		public string IcgooAdmin
		{
			get
			{
				return this._IcgooAdmin;
			}
			set
			{
				if ((this._IcgooAdmin != value))
				{
					this.OnIcgooAdminChanging(value);
					this.SendPropertyChanging();
					this._IcgooAdmin = value;
					this.SendPropertyChanged("IcgooAdmin");
					this.OnIcgooAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreProducts_PreProductCategories", Storage="_PreProductCategories", ThisKey="ID", OtherKey="PreProductID")]
		public EntitySet<PreProductCategories> PreProductCategories
		{
			get
			{
				return this._PreProductCategories;
			}
			set
			{
				this._PreProductCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreProductCategories(PreProductCategories entity)
		{
			this.SendPropertyChanging();
			entity.PreProducts = this;
		}
		
		private void detach_PreProductCategories(PreProductCategories entity)
		{
			this.SendPropertyChanging();
			entity.PreProducts = null;
		}
	}
}
#pragma warning restore 1591
