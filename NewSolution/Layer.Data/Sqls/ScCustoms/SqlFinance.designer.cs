#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.ScCustoms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="foricScCustoms")]
	public partial class SqlFinanceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertInvoiceWaybills(InvoiceWaybills instance);
    partial void UpdateInvoiceWaybills(InvoiceWaybills instance);
    partial void DeleteInvoiceWaybills(InvoiceWaybills instance);
    partial void InsertPaymentNoticeItems(PaymentNoticeItems instance);
    partial void UpdatePaymentNoticeItems(PaymentNoticeItems instance);
    partial void DeletePaymentNoticeItems(PaymentNoticeItems instance);
    partial void InsertPaymentApplies(PaymentApplies instance);
    partial void UpdatePaymentApplies(PaymentApplies instance);
    partial void DeletePaymentApplies(PaymentApplies instance);
    partial void InsertPaymentApplyLogs(PaymentApplyLogs instance);
    partial void UpdatePaymentApplyLogs(PaymentApplyLogs instance);
    partial void DeletePaymentApplyLogs(PaymentApplyLogs instance);
    partial void InsertPaymentNoticeFiles(PaymentNoticeFiles instance);
    partial void UpdatePaymentNoticeFiles(PaymentNoticeFiles instance);
    partial void DeletePaymentNoticeFiles(PaymentNoticeFiles instance);
    partial void InsertFinanceAccountFlows(FinanceAccountFlows instance);
    partial void UpdateFinanceAccountFlows(FinanceAccountFlows instance);
    partial void DeleteFinanceAccountFlows(FinanceAccountFlows instance);
    partial void InsertInvoiceNoticeLogs(InvoiceNoticeLogs instance);
    partial void UpdateInvoiceNoticeLogs(InvoiceNoticeLogs instance);
    partial void DeleteInvoiceNoticeLogs(InvoiceNoticeLogs instance);
    partial void InsertSwapLimitCountries(SwapLimitCountries instance);
    partial void UpdateSwapLimitCountries(SwapLimitCountries instance);
    partial void DeleteSwapLimitCountries(SwapLimitCountries instance);
    partial void InsertSwapBanks(SwapBanks instance);
    partial void UpdateSwapBanks(SwapBanks instance);
    partial void DeleteSwapBanks(SwapBanks instance);
    partial void InsertSwapLimitCountryLogs(SwapLimitCountryLogs instance);
    partial void UpdateSwapLimitCountryLogs(SwapLimitCountryLogs instance);
    partial void DeleteSwapLimitCountryLogs(SwapLimitCountryLogs instance);
    partial void InsertExpressKdds(ExpressKdds instance);
    partial void UpdateExpressKdds(ExpressKdds instance);
    partial void DeleteExpressKdds(ExpressKdds instance);
    partial void InsertSwapNoticeItems(SwapNoticeItems instance);
    partial void UpdateSwapNoticeItems(SwapNoticeItems instance);
    partial void DeleteSwapNoticeItems(SwapNoticeItems instance);
    partial void InsertInvoiceNoticeFiles(InvoiceNoticeFiles instance);
    partial void UpdateInvoiceNoticeFiles(InvoiceNoticeFiles instance);
    partial void DeleteInvoiceNoticeFiles(InvoiceNoticeFiles instance);
    partial void InsertCostApplyFiles(CostApplyFiles instance);
    partial void UpdateCostApplyFiles(CostApplyFiles instance);
    partial void DeleteCostApplyFiles(CostApplyFiles instance);
    partial void InsertCostApplyApiLogs(CostApplyApiLogs instance);
    partial void UpdateCostApplyApiLogs(CostApplyApiLogs instance);
    partial void DeleteCostApplyApiLogs(CostApplyApiLogs instance);
    partial void InsertCostApplyPayees(CostApplyPayees instance);
    partial void UpdateCostApplyPayees(CostApplyPayees instance);
    partial void DeleteCostApplyPayees(CostApplyPayees instance);
    partial void InsertCostApplyLogs(CostApplyLogs instance);
    partial void UpdateCostApplyLogs(CostApplyLogs instance);
    partial void DeleteCostApplyLogs(CostApplyLogs instance);
    partial void InsertPaySupplierInfos(PaySupplierInfos instance);
    partial void UpdatePaySupplierInfos(PaySupplierInfos instance);
    partial void DeletePaySupplierInfos(PaySupplierInfos instance);
    partial void InsertFinanceVouchers(FinanceVouchers instance);
    partial void UpdateFinanceVouchers(FinanceVouchers instance);
    partial void DeleteFinanceVouchers(FinanceVouchers instance);
    partial void InsertSwapNoticeReceiptUses(SwapNoticeReceiptUses instance);
    partial void UpdateSwapNoticeReceiptUses(SwapNoticeReceiptUses instance);
    partial void DeleteSwapNoticeReceiptUses(SwapNoticeReceiptUses instance);
    partial void InsertSwapNoticeReceiptUseLogs(SwapNoticeReceiptUseLogs instance);
    partial void UpdateSwapNoticeReceiptUseLogs(SwapNoticeReceiptUseLogs instance);
    partial void DeleteSwapNoticeReceiptUseLogs(SwapNoticeReceiptUseLogs instance);
    partial void InsertSwapNoticesLogs(SwapNoticesLogs instance);
    partial void UpdateSwapNoticesLogs(SwapNoticesLogs instance);
    partial void DeleteSwapNoticesLogs(SwapNoticesLogs instance);
    partial void InsertFinancePaymentOperators(FinancePaymentOperators instance);
    partial void UpdateFinancePaymentOperators(FinancePaymentOperators instance);
    partial void DeleteFinancePaymentOperators(FinancePaymentOperators instance);
    partial void InsertReceivables(Receivables instance);
    partial void UpdateReceivables(Receivables instance);
    partial void DeleteReceivables(Receivables instance);
    partial void InsertReceivablesMap(ReceivablesMap instance);
    partial void UpdateReceivablesMap(ReceivablesMap instance);
    partial void DeleteReceivablesMap(ReceivablesMap instance);
    partial void InsertFinanceVaults(FinanceVaults instance);
    partial void UpdateFinanceVaults(FinanceVaults instance);
    partial void DeleteFinanceVaults(FinanceVaults instance);
    partial void InsertFinanceAccounts(FinanceAccounts instance);
    partial void UpdateFinanceAccounts(FinanceAccounts instance);
    partial void DeleteFinanceAccounts(FinanceAccounts instance);
    partial void InsertInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void UpdateInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void DeleteInvoiceNoticeItems(InvoiceNoticeItems instance);
    partial void InsertTaxManageMap(TaxManageMap instance);
    partial void UpdateTaxManageMap(TaxManageMap instance);
    partial void DeleteTaxManageMap(TaxManageMap instance);
    partial void InsertInvoiceResults(InvoiceResults instance);
    partial void UpdateInvoiceResults(InvoiceResults instance);
    partial void DeleteInvoiceResults(InvoiceResults instance);
    partial void InsertTaxMapJobLog(TaxMapJobLog instance);
    partial void UpdateTaxMapJobLog(TaxMapJobLog instance);
    partial void DeleteTaxMapJobLog(TaxMapJobLog instance);
    partial void InsertTaxManage(TaxManage instance);
    partial void UpdateTaxManage(TaxManage instance);
    partial void DeleteTaxManage(TaxManage instance);
    partial void InsertTaxMap(TaxMap instance);
    partial void UpdateTaxMap(TaxMap instance);
    partial void DeleteTaxMap(TaxMap instance);
    partial void InsertInvoiceResultDetails(InvoiceResultDetails instance);
    partial void UpdateInvoiceResultDetails(InvoiceResultDetails instance);
    partial void DeleteInvoiceResultDetails(InvoiceResultDetails instance);
    partial void InsertReceiptNotices(ReceiptNotices instance);
    partial void UpdateReceiptNotices(ReceiptNotices instance);
    partial void DeleteReceiptNotices(ReceiptNotices instance);
    partial void InsertPaymentNotices(PaymentNotices instance);
    partial void UpdatePaymentNotices(PaymentNotices instance);
    partial void DeletePaymentNotices(PaymentNotices instance);
    partial void InsertRefundApply(RefundApply instance);
    partial void UpdateRefundApply(RefundApply instance);
    partial void DeleteRefundApply(RefundApply instance);
    partial void InsertExpireOrders(ExpireOrders instance);
    partial void UpdateExpireOrders(ExpireOrders instance);
    partial void DeleteExpireOrders(ExpireOrders instance);
    partial void InsertCostApplies(CostApplies instance);
    partial void UpdateCostApplies(CostApplies instance);
    partial void DeleteCostApplies(CostApplies instance);
    partial void InsertCostApplyItems(CostApplyItems instance);
    partial void UpdateCostApplyItems(CostApplyItems instance);
    partial void DeleteCostApplyItems(CostApplyItems instance);
    partial void InsertInvoiceNoticeXmlItems(InvoiceNoticeXmlItems instance);
    partial void UpdateInvoiceNoticeXmlItems(InvoiceNoticeXmlItems instance);
    partial void DeleteInvoiceNoticeXmlItems(InvoiceNoticeXmlItems instance);
    partial void InsertInvoiceNotices(InvoiceNotices instance);
    partial void UpdateInvoiceNotices(InvoiceNotices instance);
    partial void DeleteInvoiceNotices(InvoiceNotices instance);
    partial void InsertOrderReceipts(OrderReceipts instance);
    partial void UpdateOrderReceipts(OrderReceipts instance);
    partial void DeleteOrderReceipts(OrderReceipts instance);
    partial void InsertOrderReceiptImportItems(OrderReceiptImportItems instance);
    partial void UpdateOrderReceiptImportItems(OrderReceiptImportItems instance);
    partial void DeleteOrderReceiptImportItems(OrderReceiptImportItems instance);
    partial void InsertFinancePayments(FinancePayments instance);
    partial void UpdateFinancePayments(FinancePayments instance);
    partial void DeleteFinancePayments(FinancePayments instance);
    partial void InsertFinanceReceipts(FinanceReceipts instance);
    partial void UpdateFinanceReceipts(FinanceReceipts instance);
    partial void DeleteFinanceReceipts(FinanceReceipts instance);
    partial void InsertFundTransferApplies(FundTransferApplies instance);
    partial void UpdateFundTransferApplies(FundTransferApplies instance);
    partial void DeleteFundTransferApplies(FundTransferApplies instance);
    partial void InsertInvoiceNoticeXmls(InvoiceNoticeXmls instance);
    partial void UpdateInvoiceNoticeXmls(InvoiceNoticeXmls instance);
    partial void DeleteInvoiceNoticeXmls(InvoiceNoticeXmls instance);
    partial void InsertSwapNotices(SwapNotices instance);
    partial void UpdateSwapNotices(SwapNotices instance);
    partial void DeleteSwapNotices(SwapNotices instance);
    partial void InsertOrderReceiptImport(OrderReceiptImport instance);
    partial void UpdateOrderReceiptImport(OrderReceiptImport instance);
    partial void DeleteOrderReceiptImport(OrderReceiptImport instance);
    partial void InsertMKDeclareImport(MKDeclareImport instance);
    partial void UpdateMKDeclareImport(MKDeclareImport instance);
    partial void DeleteMKDeclareImport(MKDeclareImport instance);
    partial void InsertMoneyOrders(MoneyOrders instance);
    partial void UpdateMoneyOrders(MoneyOrders instance);
    partial void DeleteMoneyOrders(MoneyOrders instance);
    partial void InsertInvoiceNoticeXmlMap(InvoiceNoticeXmlMap instance);
    partial void UpdateInvoiceNoticeXmlMap(InvoiceNoticeXmlMap instance);
    partial void DeleteInvoiceNoticeXmlMap(InvoiceNoticeXmlMap instance);
    #endregion
		
		public SqlFinanceDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.foricScCustomsConnectionString6, mappingSource)
		{
			OnCreated();
		}
		
		public SqlFinanceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlFinanceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlFinanceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlFinanceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InvoiceWaybills> InvoiceWaybills
		{
			get
			{
				return this.GetTable<InvoiceWaybills>();
			}
		}
		
		public System.Data.Linq.Table<PaymentNoticeItems> PaymentNoticeItems
		{
			get
			{
				return this.GetTable<PaymentNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<PaymentApplies> PaymentApplies
		{
			get
			{
				return this.GetTable<PaymentApplies>();
			}
		}
		
		public System.Data.Linq.Table<PaymentApplyLogs> PaymentApplyLogs
		{
			get
			{
				return this.GetTable<PaymentApplyLogs>();
			}
		}
		
		public System.Data.Linq.Table<PaymentNoticeFiles> PaymentNoticeFiles
		{
			get
			{
				return this.GetTable<PaymentNoticeFiles>();
			}
		}
		
		public System.Data.Linq.Table<FinanceAccountFlows> FinanceAccountFlows
		{
			get
			{
				return this.GetTable<FinanceAccountFlows>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeLogs> InvoiceNoticeLogs
		{
			get
			{
				return this.GetTable<InvoiceNoticeLogs>();
			}
		}
		
		public System.Data.Linq.Table<SwapLimitCountries> SwapLimitCountries
		{
			get
			{
				return this.GetTable<SwapLimitCountries>();
			}
		}
		
		public System.Data.Linq.Table<SwapBanks> SwapBanks
		{
			get
			{
				return this.GetTable<SwapBanks>();
			}
		}
		
		public System.Data.Linq.Table<SwapLimitCountryLogs> SwapLimitCountryLogs
		{
			get
			{
				return this.GetTable<SwapLimitCountryLogs>();
			}
		}
		
		public System.Data.Linq.Table<ExpressKdds> ExpressKdds
		{
			get
			{
				return this.GetTable<ExpressKdds>();
			}
		}
		
		public System.Data.Linq.Table<SwapNoticeItems> SwapNoticeItems
		{
			get
			{
				return this.GetTable<SwapNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeFiles> InvoiceNoticeFiles
		{
			get
			{
				return this.GetTable<InvoiceNoticeFiles>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyFiles> CostApplyFiles
		{
			get
			{
				return this.GetTable<CostApplyFiles>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyApiLogs> CostApplyApiLogs
		{
			get
			{
				return this.GetTable<CostApplyApiLogs>();
			}
		}
		
		public System.Data.Linq.Table<VouchersStatisticsView> VouchersStatisticsView
		{
			get
			{
				return this.GetTable<VouchersStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<ReceivedsStatisticsView> ReceivedsStatisticsView
		{
			get
			{
				return this.GetTable<ReceivedsStatisticsView>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyPayees> CostApplyPayees
		{
			get
			{
				return this.GetTable<CostApplyPayees>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyLogs> CostApplyLogs
		{
			get
			{
				return this.GetTable<CostApplyLogs>();
			}
		}
		
		public System.Data.Linq.Table<WsOrderTopView> WsOrderTopView
		{
			get
			{
				return this.GetTable<WsOrderTopView>();
			}
		}
		
		public System.Data.Linq.Table<PaySupplierInfos> PaySupplierInfos
		{
			get
			{
				return this.GetTable<PaySupplierInfos>();
			}
		}
		
		public System.Data.Linq.Table<FinanceVouchers> FinanceVouchers
		{
			get
			{
				return this.GetTable<FinanceVouchers>();
			}
		}
		
		public System.Data.Linq.Table<SwapNoticeReceiptUses> SwapNoticeReceiptUses
		{
			get
			{
				return this.GetTable<SwapNoticeReceiptUses>();
			}
		}
		
		public System.Data.Linq.Table<SwapNoticeReceiptUseLogs> SwapNoticeReceiptUseLogs
		{
			get
			{
				return this.GetTable<SwapNoticeReceiptUseLogs>();
			}
		}
		
		public System.Data.Linq.Table<SwapNoticesLogs> SwapNoticesLogs
		{
			get
			{
				return this.GetTable<SwapNoticesLogs>();
			}
		}
		
		public System.Data.Linq.Table<FinancePaymentOperators> FinancePaymentOperators
		{
			get
			{
				return this.GetTable<FinancePaymentOperators>();
			}
		}
		
		public System.Data.Linq.Table<UnSwapDecHeadListBaseView> UnSwapDecHeadListBaseView
		{
			get
			{
				return this.GetTable<UnSwapDecHeadListBaseView>();
			}
		}
		
		public System.Data.Linq.Table<Receivables> Receivables
		{
			get
			{
				return this.GetTable<Receivables>();
			}
		}
		
		public System.Data.Linq.Table<ReceivablesMap> ReceivablesMap
		{
			get
			{
				return this.GetTable<ReceivablesMap>();
			}
		}
		
		public System.Data.Linq.Table<PvFinanceAccountCatalogs> PvFinanceAccountCatalogs
		{
			get
			{
				return this.GetTable<PvFinanceAccountCatalogs>();
			}
		}
		
		public System.Data.Linq.Table<FinanceVaults> FinanceVaults
		{
			get
			{
				return this.GetTable<FinanceVaults>();
			}
		}
		
		public System.Data.Linq.Table<PayeeRightsTopView> PayeeRightsTopView
		{
			get
			{
				return this.GetTable<PayeeRightsTopView>();
			}
		}
		
		public System.Data.Linq.Table<PayeeLeftsTopView> PayeeLeftsTopView
		{
			get
			{
				return this.GetTable<PayeeLeftsTopView>();
			}
		}
		
		public System.Data.Linq.Table<FinanceAccounts> FinanceAccounts
		{
			get
			{
				return this.GetTable<FinanceAccounts>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeItems> InvoiceNoticeItems
		{
			get
			{
				return this.GetTable<InvoiceNoticeItems>();
			}
		}
		
		public System.Data.Linq.Table<TaxManageMap> TaxManageMap
		{
			get
			{
				return this.GetTable<TaxManageMap>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceResults> InvoiceResults
		{
			get
			{
				return this.GetTable<InvoiceResults>();
			}
		}
		
		public System.Data.Linq.Table<TaxMapJobLog> TaxMapJobLog
		{
			get
			{
				return this.GetTable<TaxMapJobLog>();
			}
		}
		
		public System.Data.Linq.Table<TaxManage> TaxManage
		{
			get
			{
				return this.GetTable<TaxManage>();
			}
		}
		
		public System.Data.Linq.Table<TaxMap> TaxMap
		{
			get
			{
				return this.GetTable<TaxMap>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceResultDetails> InvoiceResultDetails
		{
			get
			{
				return this.GetTable<InvoiceResultDetails>();
			}
		}
		
		public System.Data.Linq.Table<StorageFeeReport> StorageFeeReport
		{
			get
			{
				return this.GetTable<StorageFeeReport>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptNotices> ReceiptNotices
		{
			get
			{
				return this.GetTable<ReceiptNotices>();
			}
		}
		
		public System.Data.Linq.Table<PaymentNotices> PaymentNotices
		{
			get
			{
				return this.GetTable<PaymentNotices>();
			}
		}
		
		public System.Data.Linq.Table<RefundApply> RefundApply
		{
			get
			{
				return this.GetTable<RefundApply>();
			}
		}
		
		public System.Data.Linq.Table<ExpireOrders> ExpireOrders
		{
			get
			{
				return this.GetTable<ExpireOrders>();
			}
		}
		
		public System.Data.Linq.Table<CostApplies> CostApplies
		{
			get
			{
				return this.GetTable<CostApplies>();
			}
		}
		
		public System.Data.Linq.Table<CostApplyItems> CostApplyItems
		{
			get
			{
				return this.GetTable<CostApplyItems>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeXmlItems> InvoiceNoticeXmlItems
		{
			get
			{
				return this.GetTable<InvoiceNoticeXmlItems>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDateTopView> InvoiceDateTopView
		{
			get
			{
				return this.GetTable<InvoiceDateTopView>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNotices> InvoiceNotices
		{
			get
			{
				return this.GetTable<InvoiceNotices>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceipts> OrderReceipts
		{
			get
			{
				return this.GetTable<OrderReceipts>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceiptImportItems> OrderReceiptImportItems
		{
			get
			{
				return this.GetTable<OrderReceiptImportItems>();
			}
		}
		
		public System.Data.Linq.Table<FinancePayments> FinancePayments
		{
			get
			{
				return this.GetTable<FinancePayments>();
			}
		}
		
		public System.Data.Linq.Table<FinanceReceipts> FinanceReceipts
		{
			get
			{
				return this.GetTable<FinanceReceipts>();
			}
		}
		
		public System.Data.Linq.Table<FundTransferApplies> FundTransferApplies
		{
			get
			{
				return this.GetTable<FundTransferApplies>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeXmls> InvoiceNoticeXmls
		{
			get
			{
				return this.GetTable<InvoiceNoticeXmls>();
			}
		}
		
		public System.Data.Linq.Table<SwapNotices> SwapNotices
		{
			get
			{
				return this.GetTable<SwapNotices>();
			}
		}
		
		public System.Data.Linq.Table<OrderReceiptImport> OrderReceiptImport
		{
			get
			{
				return this.GetTable<OrderReceiptImport>();
			}
		}
		
		public System.Data.Linq.Table<MKDeclareImport> MKDeclareImport
		{
			get
			{
				return this.GetTable<MKDeclareImport>();
			}
		}
		
		public System.Data.Linq.Table<MoneyOrders> MoneyOrders
		{
			get
			{
				return this.GetTable<MoneyOrders>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoticeXmlMap> InvoiceNoticeXmlMap
		{
			get
			{
				return this.GetTable<InvoiceNoticeXmlMap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceWaybills")]
	public partial class InvoiceWaybills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _CompanyName;
		
		private string _WaybillCode;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<InvoiceNotices> _InvoiceNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public InvoiceWaybills()
		{
			this._InvoiceNotices = default(EntityRef<InvoiceNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					if (this._InvoiceNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceWaybills", Storage="_InvoiceNotices", ThisKey="InvoiceNoticeID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceNotices InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices.Entity;
			}
			set
			{
				InvoiceNotices previousValue = this._InvoiceNotices.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNotices.Entity = null;
						previousValue.InvoiceWaybills.Remove(this);
					}
					this._InvoiceNotices.Entity = value;
					if ((value != null))
					{
						value.InvoiceWaybills.Add(this);
						this._InvoiceNoticeID = value.ID;
					}
					else
					{
						this._InvoiceNoticeID = default(string);
					}
					this.SendPropertyChanged("InvoiceNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentNoticeItems")]
	public partial class PaymentNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PaymentNoticeID;
		
		private string _OrderID;
		
		private int _FeeType;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<PaymentNotices> _PaymentNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPaymentNoticeIDChanging(string value);
    partial void OnPaymentNoticeIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PaymentNoticeItems()
		{
			this._PaymentNotices = default(EntityRef<PaymentNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentNoticeID
		{
			get
			{
				return this._PaymentNoticeID;
			}
			set
			{
				if ((this._PaymentNoticeID != value))
				{
					if (this._PaymentNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentNoticeID = value;
					this.SendPropertyChanged("PaymentNoticeID");
					this.OnPaymentNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotices_PaymentNoticeItems", Storage="_PaymentNotices", ThisKey="PaymentNoticeID", OtherKey="ID", IsForeignKey=true)]
		public PaymentNotices PaymentNotices
		{
			get
			{
				return this._PaymentNotices.Entity;
			}
			set
			{
				PaymentNotices previousValue = this._PaymentNotices.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotices.Entity = null;
						previousValue.PaymentNoticeItems.Remove(this);
					}
					this._PaymentNotices.Entity = value;
					if ((value != null))
					{
						value.PaymentNoticeItems.Add(this);
						this._PaymentNoticeID = value.ID;
					}
					else
					{
						this._PaymentNoticeID = default(string);
					}
					this.SendPropertyChanged("PaymentNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentApplies")]
	public partial class PaymentApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private string _ApplierID;
		
		private string _ApproverID;
		
		private int _FeeType;
		
		private string _FeeDesc;
		
		private string _PayeeName;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private System.DateTime _PayDate;
		
		private int _PayType;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _ApplyStatus;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnApplierIDChanging(string value);
    partial void OnApplierIDChanged();
    partial void OnApproverIDChanging(string value);
    partial void OnApproverIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnFeeDescChanging(string value);
    partial void OnFeeDescChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnPayTypeChanging(int value);
    partial void OnPayTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnApplyStatusChanging(int value);
    partial void OnApplyStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PaymentApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplierID
		{
			get
			{
				return this._ApplierID;
			}
			set
			{
				if ((this._ApplierID != value))
				{
					this.OnApplierIDChanging(value);
					this.SendPropertyChanging();
					this._ApplierID = value;
					this.SendPropertyChanged("ApplierID");
					this.OnApplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverID", DbType="VarChar(50)")]
		public string ApproverID
		{
			get
			{
				return this._ApproverID;
			}
			set
			{
				if ((this._ApproverID != value))
				{
					this.OnApproverIDChanging(value);
					this.SendPropertyChanging();
					this._ApproverID = value;
					this.SendPropertyChanged("ApproverID");
					this.OnApproverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDesc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FeeDesc
		{
			get
			{
				return this._FeeDesc;
			}
			set
			{
				if ((this._FeeDesc != value))
				{
					this.OnFeeDescChanging(value);
					this.SendPropertyChanging();
					this._FeeDesc = value;
					this.SendPropertyChanged("FeeDesc");
					this.OnFeeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="Date NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int NOT NULL")]
		public int PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyStatus", DbType="Int NOT NULL")]
		public int ApplyStatus
		{
			get
			{
				return this._ApplyStatus;
			}
			set
			{
				if ((this._ApplyStatus != value))
				{
					this.OnApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._ApplyStatus = value;
					this.SendPropertyChanged("ApplyStatus");
					this.OnApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentApplyLogs")]
	public partial class PaymentApplyLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PaymentApplyID;
		
		private string _AdminID;
		
		private System.Nullable<int> _PaymentApplyStatus;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPaymentApplyIDChanging(string value);
    partial void OnPaymentApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPaymentApplyStatusChanging(System.Nullable<int> value);
    partial void OnPaymentApplyStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PaymentApplyLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentApplyID
		{
			get
			{
				return this._PaymentApplyID;
			}
			set
			{
				if ((this._PaymentApplyID != value))
				{
					this.OnPaymentApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentApplyID = value;
					this.SendPropertyChanged("PaymentApplyID");
					this.OnPaymentApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentApplyStatus", DbType="Int")]
		public System.Nullable<int> PaymentApplyStatus
		{
			get
			{
				return this._PaymentApplyStatus;
			}
			set
			{
				if ((this._PaymentApplyStatus != value))
				{
					this.OnPaymentApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentApplyStatus = value;
					this.SendPropertyChanged("PaymentApplyStatus");
					this.OnPaymentApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentNoticeFiles")]
	public partial class PaymentNoticeFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PaymentNoticeID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private EntityRef<PaymentNotices> _PaymentNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPaymentNoticeIDChanging(string value);
    partial void OnPaymentNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PaymentNoticeFiles()
		{
			this._PaymentNotices = default(EntityRef<PaymentNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentNoticeID
		{
			get
			{
				return this._PaymentNoticeID;
			}
			set
			{
				if ((this._PaymentNoticeID != value))
				{
					if (this._PaymentNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentNoticeID = value;
					this.SendPropertyChanged("PaymentNoticeID");
					this.OnPaymentNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotices_PaymentNoticeFiles", Storage="_PaymentNotices", ThisKey="PaymentNoticeID", OtherKey="ID", IsForeignKey=true)]
		public PaymentNotices PaymentNotices
		{
			get
			{
				return this._PaymentNotices.Entity;
			}
			set
			{
				PaymentNotices previousValue = this._PaymentNotices.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotices.Entity = null;
						previousValue.PaymentNoticeFiles.Remove(this);
					}
					this._PaymentNotices.Entity = value;
					if ((value != null))
					{
						value.PaymentNoticeFiles.Add(this);
						this._PaymentNoticeID = value.ID;
					}
					else
					{
						this._PaymentNoticeID = default(string);
					}
					this.SendPropertyChanged("PaymentNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceAccountFlows")]
	public partial class FinanceAccountFlows : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _SeqNo;
		
		private string _SourceID;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private int _Type;
		
		private int _FeeType;
		
		private int _PaymentType;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private decimal _AccountBalance;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<FinanceVaults> _FinanceVaults;
		
		private EntityRef<FinanceAccounts> _FinanceAccounts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnSourceIDChanging(string value);
    partial void OnSourceIDChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnAccountBalanceChanging(decimal value);
    partial void OnAccountBalanceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public FinanceAccountFlows()
		{
			this._FinanceVaults = default(EntityRef<FinanceVaults>);
			this._FinanceAccounts = default(EntityRef<FinanceAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					if (this._FinanceVaults.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					if (this._FinanceAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Decimal(18,4) NOT NULL")]
		public decimal AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceAccountFlows", Storage="_FinanceVaults", ThisKey="FinanceVaultID", OtherKey="ID", IsForeignKey=true)]
		public FinanceVaults FinanceVaults
		{
			get
			{
				return this._FinanceVaults.Entity;
			}
			set
			{
				FinanceVaults previousValue = this._FinanceVaults.Entity;
				if (((previousValue != value) 
							|| (this._FinanceVaults.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceVaults.Entity = null;
						previousValue.FinanceAccountFlows.Remove(this);
					}
					this._FinanceVaults.Entity = value;
					if ((value != null))
					{
						value.FinanceAccountFlows.Add(this);
						this._FinanceVaultID = value.ID;
					}
					else
					{
						this._FinanceVaultID = default(string);
					}
					this.SendPropertyChanged("FinanceVaults");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinanceAccountFlows", Storage="_FinanceAccounts", ThisKey="FinanceAccountID", OtherKey="ID", IsForeignKey=true)]
		public FinanceAccounts FinanceAccounts
		{
			get
			{
				return this._FinanceAccounts.Entity;
			}
			set
			{
				FinanceAccounts previousValue = this._FinanceAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FinanceAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceAccounts.Entity = null;
						previousValue.FinanceAccountFlows.Remove(this);
					}
					this._FinanceAccounts.Entity = value;
					if ((value != null))
					{
						value.FinanceAccountFlows.Add(this);
						this._FinanceAccountID = value.ID;
					}
					else
					{
						this._FinanceAccountID = default(string);
					}
					this.SendPropertyChanged("FinanceAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeLogs")]
	public partial class InvoiceNoticeLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceNoticeLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapLimitCountries")]
	public partial class SwapLimitCountries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BankID;
		
		private string _Code;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankIDChanging(string value);
    partial void OnBankIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapLimitCountries()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapBanks")]
	public partial class SwapBanks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Code;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapBanks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapLimitCountryLogs")]
	public partial class SwapLimitCountryLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BankID;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankIDChanging(string value);
    partial void OnBankIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapLimitCountryLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpressKdds")]
	public partial class ExpressKdds : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SenderComp;
		
		private string _Sender;
		
		private string _SenderMobile;
		
		private string _SenderAddress;
		
		private string _ReceiverComp;
		
		private string _Receiver;
		
		private string _ReveiveMobile;
		
		private string _ReveiveAddress;
		
		private string _ExpressCompanyID;
		
		private string _ExpressTypeID;
		
		private int _PayType;
		
		private string _WaybillCode;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSenderCompChanging(string value);
    partial void OnSenderCompChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnSenderMobileChanging(string value);
    partial void OnSenderMobileChanged();
    partial void OnSenderAddressChanging(string value);
    partial void OnSenderAddressChanged();
    partial void OnReceiverCompChanging(string value);
    partial void OnReceiverCompChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnReveiveMobileChanging(string value);
    partial void OnReveiveMobileChanged();
    partial void OnReveiveAddressChanging(string value);
    partial void OnReveiveAddressChanged();
    partial void OnExpressCompanyIDChanging(string value);
    partial void OnExpressCompanyIDChanged();
    partial void OnExpressTypeIDChanging(string value);
    partial void OnExpressTypeIDChanged();
    partial void OnPayTypeChanging(int value);
    partial void OnPayTypeChanged();
    partial void OnWaybillCodeChanging(string value);
    partial void OnWaybillCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public ExpressKdds()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderComp", DbType="VarChar(50)")]
		public string SenderComp
		{
			get
			{
				return this._SenderComp;
			}
			set
			{
				if ((this._SenderComp != value))
				{
					this.OnSenderCompChanging(value);
					this.SendPropertyChanging();
					this._SenderComp = value;
					this.SendPropertyChanged("SenderComp");
					this.OnSenderCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderMobile", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SenderMobile
		{
			get
			{
				return this._SenderMobile;
			}
			set
			{
				if ((this._SenderMobile != value))
				{
					this.OnSenderMobileChanging(value);
					this.SendPropertyChanging();
					this._SenderMobile = value;
					this.SendPropertyChanged("SenderMobile");
					this.OnSenderMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SenderAddress
		{
			get
			{
				return this._SenderAddress;
			}
			set
			{
				if ((this._SenderAddress != value))
				{
					this.OnSenderAddressChanging(value);
					this.SendPropertyChanging();
					this._SenderAddress = value;
					this.SendPropertyChanged("SenderAddress");
					this.OnSenderAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverComp", DbType="VarChar(50)")]
		public string ReceiverComp
		{
			get
			{
				return this._ReceiverComp;
			}
			set
			{
				if ((this._ReceiverComp != value))
				{
					this.OnReceiverCompChanging(value);
					this.SendPropertyChanging();
					this._ReceiverComp = value;
					this.SendPropertyChanged("ReceiverComp");
					this.OnReceiverCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReveiveMobile", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ReveiveMobile
		{
			get
			{
				return this._ReveiveMobile;
			}
			set
			{
				if ((this._ReveiveMobile != value))
				{
					this.OnReveiveMobileChanging(value);
					this.SendPropertyChanging();
					this._ReveiveMobile = value;
					this.SendPropertyChanged("ReveiveMobile");
					this.OnReveiveMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReveiveAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReveiveAddress
		{
			get
			{
				return this._ReveiveAddress;
			}
			set
			{
				if ((this._ReveiveAddress != value))
				{
					this.OnReveiveAddressChanging(value);
					this.SendPropertyChanging();
					this._ReveiveAddress = value;
					this.SendPropertyChanged("ReveiveAddress");
					this.OnReveiveAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpressCompanyID", DbType="VarChar(50)")]
		public string ExpressCompanyID
		{
			get
			{
				return this._ExpressCompanyID;
			}
			set
			{
				if ((this._ExpressCompanyID != value))
				{
					this.OnExpressCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._ExpressCompanyID = value;
					this.SendPropertyChanged("ExpressCompanyID");
					this.OnExpressCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpressTypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExpressTypeID
		{
			get
			{
				return this._ExpressTypeID;
			}
			set
			{
				if ((this._ExpressTypeID != value))
				{
					this.OnExpressTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExpressTypeID = value;
					this.SendPropertyChanged("ExpressTypeID");
					this.OnExpressTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int NOT NULL")]
		public int PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50)")]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this.OnWaybillCodeChanging(value);
					this.SendPropertyChanging();
					this._WaybillCode = value;
					this.SendPropertyChanged("WaybillCode");
					this.OnWaybillCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNoticeItems")]
	public partial class SwapNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SwapNoticeID;
		
		private string _DecHeadID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<decimal> _Amount;
		
		private int _Status;
		
		private decimal _CustomizeAmount;
		
		private System.Nullable<bool> _IsOld;
		
		private EntityRef<SwapNotices> _SwapNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSwapNoticeIDChanging(string value);
    partial void OnSwapNoticeIDChanged();
    partial void OnDecHeadIDChanging(string value);
    partial void OnDecHeadIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCustomizeAmountChanging(decimal value);
    partial void OnCustomizeAmountChanged();
    partial void OnIsOldChanging(System.Nullable<bool> value);
    partial void OnIsOldChanged();
    #endregion
		
		public SwapNoticeItems()
		{
			this._SwapNotices = default(EntityRef<SwapNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SwapNoticeID
		{
			get
			{
				return this._SwapNoticeID;
			}
			set
			{
				if ((this._SwapNoticeID != value))
				{
					if (this._SwapNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwapNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeID = value;
					this.SendPropertyChanged("SwapNoticeID");
					this.OnSwapNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecHeadID
		{
			get
			{
				return this._DecHeadID;
			}
			set
			{
				if ((this._DecHeadID != value))
				{
					this.OnDecHeadIDChanging(value);
					this.SendPropertyChanging();
					this._DecHeadID = value;
					this.SendPropertyChanged("DecHeadID");
					this.OnDecHeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomizeAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal CustomizeAmount
		{
			get
			{
				return this._CustomizeAmount;
			}
			set
			{
				if ((this._CustomizeAmount != value))
				{
					this.OnCustomizeAmountChanging(value);
					this.SendPropertyChanging();
					this._CustomizeAmount = value;
					this.SendPropertyChanged("CustomizeAmount");
					this.OnCustomizeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOld", DbType="Bit")]
		public System.Nullable<bool> IsOld
		{
			get
			{
				return this._IsOld;
			}
			set
			{
				if ((this._IsOld != value))
				{
					this.OnIsOldChanging(value);
					this.SendPropertyChanging();
					this._IsOld = value;
					this.SendPropertyChanged("IsOld");
					this.OnIsOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwapNotices_SwapNoticeItems", Storage="_SwapNotices", ThisKey="SwapNoticeID", OtherKey="ID", IsForeignKey=true)]
		public SwapNotices SwapNotices
		{
			get
			{
				return this._SwapNotices.Entity;
			}
			set
			{
				SwapNotices previousValue = this._SwapNotices.Entity;
				if (((previousValue != value) 
							|| (this._SwapNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwapNotices.Entity = null;
						previousValue.SwapNoticeItems.Remove(this);
					}
					this._SwapNotices.Entity = value;
					if ((value != null))
					{
						value.SwapNoticeItems.Add(this);
						this._SwapNoticeID = value.ID;
					}
					else
					{
						this._SwapNoticeID = default(string);
					}
					this.SendPropertyChanged("SwapNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeFiles")]
	public partial class InvoiceNoticeFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceNoticeFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(512)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyFiles")]
	public partial class CostApplyFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CostApplyID;
		
		private string _AdminID;
		
		private string _Name;
		
		private int _FileType;
		
		private string _FileFormat;
		
		private string _URL;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCostApplyIDChanging(string value);
    partial void OnCostApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnFileFormatChanging(string value);
    partial void OnFileFormatChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public CostApplyFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CostApplyID
		{
			get
			{
				return this._CostApplyID;
			}
			set
			{
				if ((this._CostApplyID != value))
				{
					this.OnCostApplyIDChanging(value);
					this.SendPropertyChanging();
					this._CostApplyID = value;
					this.SendPropertyChanged("CostApplyID");
					this.OnCostApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyApiLogs")]
	public partial class CostApplyApiLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BatchID;
		
		private string _CostApplyID;
		
		private string _PaymentNoticeID;
		
		private string _Url;
		
		private string _RequestContent;
		
		private string _ResponseContent;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBatchIDChanging(string value);
    partial void OnBatchIDChanged();
    partial void OnCostApplyIDChanging(string value);
    partial void OnCostApplyIDChanged();
    partial void OnPaymentNoticeIDChanging(string value);
    partial void OnPaymentNoticeIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnRequestContentChanging(string value);
    partial void OnRequestContentChanged();
    partial void OnResponseContentChanging(string value);
    partial void OnResponseContentChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public CostApplyApiLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="VarChar(50)")]
		public string BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostApplyID", DbType="VarChar(50)")]
		public string CostApplyID
		{
			get
			{
				return this._CostApplyID;
			}
			set
			{
				if ((this._CostApplyID != value))
				{
					this.OnCostApplyIDChanging(value);
					this.SendPropertyChanging();
					this._CostApplyID = value;
					this.SendPropertyChanged("CostApplyID");
					this.OnCostApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNoticeID", DbType="VarChar(50)")]
		public string PaymentNoticeID
		{
			get
			{
				return this._PaymentNoticeID;
			}
			set
			{
				if ((this._PaymentNoticeID != value))
				{
					this.OnPaymentNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentNoticeID = value;
					this.SendPropertyChanged("PaymentNoticeID");
					this.OnPaymentNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(1024)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestContent", DbType="NVarChar(MAX)")]
		public string RequestContent
		{
			get
			{
				return this._RequestContent;
			}
			set
			{
				if ((this._RequestContent != value))
				{
					this.OnRequestContentChanging(value);
					this.SendPropertyChanging();
					this._RequestContent = value;
					this.SendPropertyChanged("RequestContent");
					this.OnRequestContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseContent", DbType="NVarChar(MAX)")]
		public string ResponseContent
		{
			get
			{
				return this._ResponseContent;
			}
			set
			{
				if ((this._ResponseContent != value))
				{
					this.OnResponseContentChanging(value);
					this.SendPropertyChanging();
					this._ResponseContent = value;
					this.SendPropertyChanged("ResponseContent");
					this.OnResponseContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(1024)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VouchersStatisticsView")]
	public partial class VouchersStatisticsView
	{
		
		private string _ReceivableID;
		
		private string _MainOrderID;
		
		private string _Catalog;
		
		private string _Subject;
		
		private decimal _LeftPrice;
		
		private System.Nullable<decimal> _RightPrice;
		
		private System.Nullable<decimal> _ReducePrice;
		
		private string _ApplicationID;
		
		public VouchersStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivableID
		{
			get
			{
				return this._ReceivableID;
			}
			set
			{
				if ((this._ReceivableID != value))
				{
					this._ReceivableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainOrderID", DbType="VarChar(50)")]
		public string MainOrderID
		{
			get
			{
				return this._MainOrderID;
			}
			set
			{
				if ((this._MainOrderID != value))
				{
					this._MainOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this._Catalog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal LeftPrice
		{
			get
			{
				return this._LeftPrice;
			}
			set
			{
				if ((this._LeftPrice != value))
				{
					this._LeftPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightPrice", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> RightPrice
		{
			get
			{
				return this._RightPrice;
			}
			set
			{
				if ((this._RightPrice != value))
				{
					this._RightPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReducePrice", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> ReducePrice
		{
			get
			{
				return this._ReducePrice;
			}
			set
			{
				if ((this._ReducePrice != value))
				{
					this._ReducePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="VarChar(50)")]
		public string ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivedsStatisticsView")]
	public partial class ReceivedsStatisticsView
	{
		
		private string _ReceivedID;
		
		private string _ReceivableID;
		
		private string _Business;
		
		private string _Catalog;
		
		private string _Subject;
		
		private string _Payer;
		
		private string _PayerName;
		
		private string _Payee;
		
		private string _PayeeName;
		
		private System.Nullable<int> _AccountType;
		
		private System.Nullable<int> _SettlementCurrency;
		
		private decimal _Price;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private string _OrderID;
		
		private string _TinyID;
		
		public ReceivedsStatisticsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivedID
		{
			get
			{
				return this._ReceivedID;
			}
			set
			{
				if ((this._ReceivedID != value))
				{
					this._ReceivedID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivableID
		{
			get
			{
				return this._ReceivableID;
			}
			set
			{
				if ((this._ReceivableID != value))
				{
					this._ReceivableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business", DbType="NVarChar(50)")]
		public string Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				if ((this._Business != value))
				{
					this._Business = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="NVarChar(50)")]
		public string Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this._Catalog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payer", DbType="VarChar(50)")]
		public string Payer
		{
			get
			{
				return this._Payer;
			}
			set
			{
				if ((this._Payer != value))
				{
					this._Payer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerName", DbType="NVarChar(150)")]
		public string PayerName
		{
			get
			{
				return this._PayerName;
			}
			set
			{
				if ((this._PayerName != value))
				{
					this._PayerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="VarChar(50)")]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this._Payee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(150)")]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this._PayeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this._AccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementCurrency", DbType="Int")]
		public System.Nullable<int> SettlementCurrency
		{
			get
			{
				return this._SettlementCurrency;
			}
			set
			{
				if ((this._SettlementCurrency != value))
				{
					this._SettlementCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,7) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyID", DbType="VarChar(50)")]
		public string TinyID
		{
			get
			{
				return this._TinyID;
			}
			set
			{
				if ((this._TinyID != value))
				{
					this._TinyID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyPayees")]
	public partial class CostApplyPayees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _PayeeName;
		
		private string _PayeeAccount;
		
		private string _PayeeBank;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnPayeeAccountChanging(string value);
    partial void OnPayeeAccountChanged();
    partial void OnPayeeBankChanging(string value);
    partial void OnPayeeBankChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public CostApplyPayees()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(250)")]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccount", DbType="NVarChar(250)")]
		public string PayeeAccount
		{
			get
			{
				return this._PayeeAccount;
			}
			set
			{
				if ((this._PayeeAccount != value))
				{
					this.OnPayeeAccountChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccount = value;
					this.SendPropertyChanged("PayeeAccount");
					this.OnPayeeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeBank", DbType="NVarChar(250)")]
		public string PayeeBank
		{
			get
			{
				return this._PayeeBank;
			}
			set
			{
				if ((this._PayeeBank != value))
				{
					this.OnPayeeBankChanging(value);
					this.SendPropertyChanging();
					this._PayeeBank = value;
					this.SendPropertyChanged("PayeeBank");
					this.OnPayeeBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyLogs")]
	public partial class CostApplyLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CostApplyID;
		
		private string _AdminID;
		
		private int _CurrentCostStatus;
		
		private int _NextCostStatus;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
		private string _Reason;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCostApplyIDChanging(string value);
    partial void OnCostApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCurrentCostStatusChanging(int value);
    partial void OnCurrentCostStatusChanged();
    partial void OnNextCostStatusChanging(int value);
    partial void OnNextCostStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public CostApplyLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CostApplyID
		{
			get
			{
				return this._CostApplyID;
			}
			set
			{
				if ((this._CostApplyID != value))
				{
					this.OnCostApplyIDChanging(value);
					this.SendPropertyChanging();
					this._CostApplyID = value;
					this.SendPropertyChanged("CostApplyID");
					this.OnCostApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCostStatus", DbType="Int NOT NULL")]
		public int CurrentCostStatus
		{
			get
			{
				return this._CurrentCostStatus;
			}
			set
			{
				if ((this._CurrentCostStatus != value))
				{
					this.OnCurrentCostStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentCostStatus = value;
					this.SendPropertyChanged("CurrentCostStatus");
					this.OnCurrentCostStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextCostStatus", DbType="Int NOT NULL")]
		public int NextCostStatus
		{
			get
			{
				return this._NextCostStatus;
			}
			set
			{
				if ((this._NextCostStatus != value))
				{
					this.OnNextCostStatusChanging(value);
					this.SendPropertyChanging();
					this._NextCostStatus = value;
					this.SendPropertyChanged("NextCostStatus");
					this.OnNextCostStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WsOrderTopView")]
	public partial class WsOrderTopView
	{
		
		private string _ID;
		
		private int _Type;
		
		private string _ClientID;
		
		private string _InvoiceID;
		
		private string _PayeeID;
		
		private string _BeneficiaryID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Summary;
		
		private string _CreatorID;
		
		private string _SupplierID;
		
		private System.Nullable<int> _SettlementCurrency;
		
		private string _inBeneficiaryID;
		
		private System.Nullable<bool> _IsPayCharge;
		
		private string _InWayBillID;
		
		private System.Nullable<int> _inCurrency;
		
		private string _InConditions;
		
		private string _outBeneficiaryID;
		
		private System.Nullable<bool> _IsReciveCharge;
		
		private string _OutWayBillID;
		
		private string _OutConditions;
		
		private System.Nullable<int> _outCurrency;
		
		private int _MainStatus;
		
		private int _PaymentStatus;
		
		private int _InvoiceStatus;
		
		private int _RemittanceStatus;
		
		private string _ClientName;
		
		private string _ChineseName;
		
		private string _EnglishName;
		
		public WsOrderTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="VarChar(50)")]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this._InvoiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeID
		{
			get
			{
				return this._PayeeID;
			}
			set
			{
				if ((this._PayeeID != value))
				{
					this._PayeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="VarChar(50)")]
		public string BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this._ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50)")]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementCurrency", DbType="Int")]
		public System.Nullable<int> SettlementCurrency
		{
			get
			{
				return this._SettlementCurrency;
			}
			set
			{
				if ((this._SettlementCurrency != value))
				{
					this._SettlementCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inBeneficiaryID", DbType="VarChar(50)")]
		public string inBeneficiaryID
		{
			get
			{
				return this._inBeneficiaryID;
			}
			set
			{
				if ((this._inBeneficiaryID != value))
				{
					this._inBeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayCharge", DbType="Bit")]
		public System.Nullable<bool> IsPayCharge
		{
			get
			{
				return this._IsPayCharge;
			}
			set
			{
				if ((this._IsPayCharge != value))
				{
					this._IsPayCharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InWayBillID", DbType="VarChar(50)")]
		public string InWayBillID
		{
			get
			{
				return this._InWayBillID;
			}
			set
			{
				if ((this._InWayBillID != value))
				{
					this._InWayBillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inCurrency", DbType="Int")]
		public System.Nullable<int> inCurrency
		{
			get
			{
				return this._inCurrency;
			}
			set
			{
				if ((this._inCurrency != value))
				{
					this._inCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InConditions", DbType="NVarChar(MAX)")]
		public string InConditions
		{
			get
			{
				return this._InConditions;
			}
			set
			{
				if ((this._InConditions != value))
				{
					this._InConditions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outBeneficiaryID", DbType="VarChar(50)")]
		public string outBeneficiaryID
		{
			get
			{
				return this._outBeneficiaryID;
			}
			set
			{
				if ((this._outBeneficiaryID != value))
				{
					this._outBeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReciveCharge", DbType="Bit")]
		public System.Nullable<bool> IsReciveCharge
		{
			get
			{
				return this._IsReciveCharge;
			}
			set
			{
				if ((this._IsReciveCharge != value))
				{
					this._IsReciveCharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutWayBillID", DbType="VarChar(50)")]
		public string OutWayBillID
		{
			get
			{
				return this._OutWayBillID;
			}
			set
			{
				if ((this._OutWayBillID != value))
				{
					this._OutWayBillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutConditions", DbType="NVarChar(MAX)")]
		public string OutConditions
		{
			get
			{
				return this._OutConditions;
			}
			set
			{
				if ((this._OutConditions != value))
				{
					this._OutConditions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outCurrency", DbType="Int")]
		public System.Nullable<int> outCurrency
		{
			get
			{
				return this._outCurrency;
			}
			set
			{
				if ((this._outCurrency != value))
				{
					this._outCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainStatus", DbType="Int NOT NULL")]
		public int MainStatus
		{
			get
			{
				return this._MainStatus;
			}
			set
			{
				if ((this._MainStatus != value))
				{
					this._MainStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="Int NOT NULL")]
		public int PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this._PaymentStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="Int NOT NULL")]
		public int InvoiceStatus
		{
			get
			{
				return this._InvoiceStatus;
			}
			set
			{
				if ((this._InvoiceStatus != value))
				{
					this._InvoiceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceStatus", DbType="Int NOT NULL")]
		public int RemittanceStatus
		{
			get
			{
				return this._RemittanceStatus;
			}
			set
			{
				if ((this._RemittanceStatus != value))
				{
					this._RemittanceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="NVarChar(150)")]
		public string ChineseName
		{
			get
			{
				return this._ChineseName;
			}
			set
			{
				if ((this._ChineseName != value))
				{
					this._ChineseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(150)")]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this._EnglishName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaySupplierInfos")]
	public partial class PaySupplierInfos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _DecHeadID;
		
		private string _OrderID;
		
		private string _ClientID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private string _SupplierName;
		
		private int _PayType;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDecHeadIDChanging(string value);
    partial void OnDecHeadIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnPayTypeChanging(int value);
    partial void OnPayTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public PaySupplierInfos()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecHeadID
		{
			get
			{
				return this._DecHeadID;
			}
			set
			{
				if ((this._DecHeadID != value))
				{
					this.OnDecHeadIDChanging(value);
					this.SendPropertyChanging();
					this._DecHeadID = value;
					this.SendPropertyChanged("DecHeadID");
					this.OnDecHeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(250)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int NOT NULL")]
		public int PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceVouchers")]
	public partial class FinanceVouchers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private decimal _Amount;
		
		private string _OrderID;
		
		private string _UseAdminID;
		
		private System.Nullable<System.DateTime> _UseTime;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnUseAdminIDChanging(string value);
    partial void OnUseAdminIDChanged();
    partial void OnUseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUseTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public FinanceVouchers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAdminID", DbType="VarChar(50)")]
		public string UseAdminID
		{
			get
			{
				return this._UseAdminID;
			}
			set
			{
				if ((this._UseAdminID != value))
				{
					this.OnUseAdminIDChanging(value);
					this.SendPropertyChanging();
					this._UseAdminID = value;
					this.SendPropertyChanged("UseAdminID");
					this.OnUseAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UseTime
		{
			get
			{
				return this._UseTime;
			}
			set
			{
				if ((this._UseTime != value))
				{
					this.OnUseTimeChanging(value);
					this.SendPropertyChanging();
					this._UseTime = value;
					this.SendPropertyChanged("UseTime");
					this.OnUseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNoticeReceiptUses")]
	public partial class SwapNoticeReceiptUses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SourceID;
		
		private int _Type;
		
		private string _OrderReceiptID;
		
		private decimal _OrderReceiptAmount;
		
		private string _SwapNoticeID;
		
		private System.Nullable<decimal> _SwapNoticeAmountCNY;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSourceIDChanging(string value);
    partial void OnSourceIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOrderReceiptIDChanging(string value);
    partial void OnOrderReceiptIDChanged();
    partial void OnOrderReceiptAmountChanging(decimal value);
    partial void OnOrderReceiptAmountChanged();
    partial void OnSwapNoticeIDChanging(string value);
    partial void OnSwapNoticeIDChanged();
    partial void OnSwapNoticeAmountCNYChanging(System.Nullable<decimal> value);
    partial void OnSwapNoticeAmountCNYChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapNoticeReceiptUses()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="VarChar(50)")]
		public string SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderReceiptID
		{
			get
			{
				return this._OrderReceiptID;
			}
			set
			{
				if ((this._OrderReceiptID != value))
				{
					this.OnOrderReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptID = value;
					this.SendPropertyChanged("OrderReceiptID");
					this.OnOrderReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal OrderReceiptAmount
		{
			get
			{
				return this._OrderReceiptAmount;
			}
			set
			{
				if ((this._OrderReceiptAmount != value))
				{
					this.OnOrderReceiptAmountChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptAmount = value;
					this.SendPropertyChanged("OrderReceiptAmount");
					this.OnOrderReceiptAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeID", DbType="VarChar(50)")]
		public string SwapNoticeID
		{
			get
			{
				return this._SwapNoticeID;
			}
			set
			{
				if ((this._SwapNoticeID != value))
				{
					this.OnSwapNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeID = value;
					this.SendPropertyChanged("SwapNoticeID");
					this.OnSwapNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeAmountCNY", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SwapNoticeAmountCNY
		{
			get
			{
				return this._SwapNoticeAmountCNY;
			}
			set
			{
				if ((this._SwapNoticeAmountCNY != value))
				{
					this.OnSwapNoticeAmountCNYChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeAmountCNY = value;
					this.SendPropertyChanged("SwapNoticeAmountCNY");
					this.OnSwapNoticeAmountCNYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNoticeReceiptUseLogs")]
	public partial class SwapNoticeReceiptUseLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SwapNoticeReceiptUseID;
		
		private string _OrderReceiptID;
		
		private decimal _OrderReceiptAmount;
		
		private string _SwapNoticeID;
		
		private System.Nullable<decimal> _SwapNoticeAmountCNY;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSwapNoticeReceiptUseIDChanging(string value);
    partial void OnSwapNoticeReceiptUseIDChanged();
    partial void OnOrderReceiptIDChanging(string value);
    partial void OnOrderReceiptIDChanged();
    partial void OnOrderReceiptAmountChanging(decimal value);
    partial void OnOrderReceiptAmountChanged();
    partial void OnSwapNoticeIDChanging(string value);
    partial void OnSwapNoticeIDChanged();
    partial void OnSwapNoticeAmountCNYChanging(System.Nullable<decimal> value);
    partial void OnSwapNoticeAmountCNYChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapNoticeReceiptUseLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeReceiptUseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SwapNoticeReceiptUseID
		{
			get
			{
				return this._SwapNoticeReceiptUseID;
			}
			set
			{
				if ((this._SwapNoticeReceiptUseID != value))
				{
					this.OnSwapNoticeReceiptUseIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeReceiptUseID = value;
					this.SendPropertyChanged("SwapNoticeReceiptUseID");
					this.OnSwapNoticeReceiptUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderReceiptID
		{
			get
			{
				return this._OrderReceiptID;
			}
			set
			{
				if ((this._OrderReceiptID != value))
				{
					this.OnOrderReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptID = value;
					this.SendPropertyChanged("OrderReceiptID");
					this.OnOrderReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal OrderReceiptAmount
		{
			get
			{
				return this._OrderReceiptAmount;
			}
			set
			{
				if ((this._OrderReceiptAmount != value))
				{
					this.OnOrderReceiptAmountChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptAmount = value;
					this.SendPropertyChanged("OrderReceiptAmount");
					this.OnOrderReceiptAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeID", DbType="VarChar(50)")]
		public string SwapNoticeID
		{
			get
			{
				return this._SwapNoticeID;
			}
			set
			{
				if ((this._SwapNoticeID != value))
				{
					this.OnSwapNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeID = value;
					this.SendPropertyChanged("SwapNoticeID");
					this.OnSwapNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeAmountCNY", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SwapNoticeAmountCNY
		{
			get
			{
				return this._SwapNoticeAmountCNY;
			}
			set
			{
				if ((this._SwapNoticeAmountCNY != value))
				{
					this.OnSwapNoticeAmountCNYChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeAmountCNY = value;
					this.SendPropertyChanged("SwapNoticeAmountCNY");
					this.OnSwapNoticeAmountCNYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNoticesLogs")]
	public partial class SwapNoticesLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SwapNoticeID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSwapNoticeIDChanging(string value);
    partial void OnSwapNoticeIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public SwapNoticesLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SwapNoticeID
		{
			get
			{
				return this._SwapNoticeID;
			}
			set
			{
				if ((this._SwapNoticeID != value))
				{
					this.OnSwapNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._SwapNoticeID = value;
					this.SendPropertyChanged("SwapNoticeID");
					this.OnSwapNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancePaymentOperators")]
	public partial class FinancePaymentOperators : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private int _Type;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public FinancePaymentOperators()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnSwapDecHeadListBaseView")]
	public partial class UnSwapDecHeadListBaseView
	{
		
		private string _DecHeadID;
		
		private string _ContrNo;
		
		private string _EntryId;
		
		private string _OrderID;
		
		private string _OwnerName;
		
		private string _Currency;
		
		private System.DateTime _CreateTime;
		
		private System.Nullable<System.DateTime> _DDate;
		
		private int _SwapStatus;
		
		private string _Url;
		
		private string _CusDecStatus;
		
		private System.Nullable<int> _ClientType;
		
		private int _IsOverDate;
		
		private int _IsHasLimitArea;
		
		private decimal _DecHeadAmount;
		
		private decimal _OrderAmount;
		
		private int _IsApplyPayExchange;
		
		private int _IsPrePayExchange;
		
		public UnSwapDecHeadListBaseView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecHeadID
		{
			get
			{
				return this._DecHeadID;
			}
			set
			{
				if ((this._DecHeadID != value))
				{
					this._DecHeadID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrNo", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ContrNo
		{
			get
			{
				return this._ContrNo;
			}
			set
			{
				if ((this._ContrNo != value))
				{
					this._ContrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryId", DbType="VarChar(50)")]
		public string EntryId
		{
			get
			{
				return this._EntryId;
			}
			set
			{
				if ((this._EntryId != value))
				{
					this._EntryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this._OwnerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DDate
		{
			get
			{
				return this._DDate;
			}
			set
			{
				if ((this._DDate != value))
				{
					this._DDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapStatus", DbType="Int NOT NULL")]
		public int SwapStatus
		{
			get
			{
				return this._SwapStatus;
			}
			set
			{
				if ((this._SwapStatus != value))
				{
					this._SwapStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusDecStatus", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string CusDecStatus
		{
			get
			{
				return this._CusDecStatus;
			}
			set
			{
				if ((this._CusDecStatus != value))
				{
					this._CusDecStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="Int")]
		public System.Nullable<int> ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this._ClientType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOverDate", DbType="Int NOT NULL")]
		public int IsOverDate
		{
			get
			{
				return this._IsOverDate;
			}
			set
			{
				if ((this._IsOverDate != value))
				{
					this._IsOverDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasLimitArea", DbType="Int NOT NULL")]
		public int IsHasLimitArea
		{
			get
			{
				return this._IsHasLimitArea;
			}
			set
			{
				if ((this._IsHasLimitArea != value))
				{
					this._IsHasLimitArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecHeadAmount", DbType="Decimal(38,4) NOT NULL")]
		public decimal DecHeadAmount
		{
			get
			{
				return this._DecHeadAmount;
			}
			set
			{
				if ((this._DecHeadAmount != value))
				{
					this._DecHeadAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderAmount", DbType="Decimal(38,4) NOT NULL")]
		public decimal OrderAmount
		{
			get
			{
				return this._OrderAmount;
			}
			set
			{
				if ((this._OrderAmount != value))
				{
					this._OrderAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApplyPayExchange", DbType="Int NOT NULL")]
		public int IsApplyPayExchange
		{
			get
			{
				return this._IsApplyPayExchange;
			}
			set
			{
				if ((this._IsApplyPayExchange != value))
				{
					this._IsApplyPayExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrePayExchange", DbType="Int NOT NULL")]
		public int IsPrePayExchange
		{
			get
			{
				return this._IsPrePayExchange;
			}
			set
			{
				if ((this._IsPrePayExchange != value))
				{
					this._IsPrePayExchange = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receivables")]
	public partial class Receivables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FinanceReceiptID;
		
		private string _ClientID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private decimal _CNYAmount;
		
		private int _MatchStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFinanceReceiptIDChanging(string value);
    partial void OnFinanceReceiptIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCNYAmountChanging(decimal value);
    partial void OnCNYAmountChanged();
    partial void OnMatchStatusChanging(int value);
    partial void OnMatchStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Receivables()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceReceiptID", DbType="VarChar(50)")]
		public string FinanceReceiptID
		{
			get
			{
				return this._FinanceReceiptID;
			}
			set
			{
				if ((this._FinanceReceiptID != value))
				{
					this.OnFinanceReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceReceiptID = value;
					this.SendPropertyChanged("FinanceReceiptID");
					this.OnFinanceReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNYAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal CNYAmount
		{
			get
			{
				return this._CNYAmount;
			}
			set
			{
				if ((this._CNYAmount != value))
				{
					this.OnCNYAmountChanging(value);
					this.SendPropertyChanging();
					this._CNYAmount = value;
					this.SendPropertyChanged("CNYAmount");
					this.OnCNYAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchStatus", DbType="Int NOT NULL")]
		public int MatchStatus
		{
			get
			{
				return this._MatchStatus;
			}
			set
			{
				if ((this._MatchStatus != value))
				{
					this.OnMatchStatusChanging(value);
					this.SendPropertyChanging();
					this._MatchStatus = value;
					this.SendPropertyChanged("MatchStatus");
					this.OnMatchStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivablesMap")]
	public partial class ReceivablesMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ReceivableID;
		
		private string _OrderID;
		
		private decimal _GoodsFee;
		
		private decimal _TaxFee;
		
		private decimal _AgencyFee;
		
		private decimal _IncidentalFee;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnReceivableIDChanging(string value);
    partial void OnReceivableIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnGoodsFeeChanging(decimal value);
    partial void OnGoodsFeeChanged();
    partial void OnTaxFeeChanging(decimal value);
    partial void OnTaxFeeChanged();
    partial void OnAgencyFeeChanging(decimal value);
    partial void OnAgencyFeeChanged();
    partial void OnIncidentalFeeChanging(decimal value);
    partial void OnIncidentalFeeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ReceivablesMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivableID
		{
			get
			{
				return this._ReceivableID;
			}
			set
			{
				if ((this._ReceivableID != value))
				{
					this.OnReceivableIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivableID = value;
					this.SendPropertyChanged("ReceivableID");
					this.OnReceivableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsFee", DbType="Decimal(18,4) NOT NULL")]
		public decimal GoodsFee
		{
			get
			{
				return this._GoodsFee;
			}
			set
			{
				if ((this._GoodsFee != value))
				{
					this.OnGoodsFeeChanging(value);
					this.SendPropertyChanging();
					this._GoodsFee = value;
					this.SendPropertyChanged("GoodsFee");
					this.OnGoodsFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFee", DbType="Decimal(18,4) NOT NULL")]
		public decimal TaxFee
		{
			get
			{
				return this._TaxFee;
			}
			set
			{
				if ((this._TaxFee != value))
				{
					this.OnTaxFeeChanging(value);
					this.SendPropertyChanging();
					this._TaxFee = value;
					this.SendPropertyChanged("TaxFee");
					this.OnTaxFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyFee", DbType="Decimal(18,4) NOT NULL")]
		public decimal AgencyFee
		{
			get
			{
				return this._AgencyFee;
			}
			set
			{
				if ((this._AgencyFee != value))
				{
					this.OnAgencyFeeChanging(value);
					this.SendPropertyChanging();
					this._AgencyFee = value;
					this.SendPropertyChanged("AgencyFee");
					this.OnAgencyFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentalFee", DbType="Decimal(18,4) NOT NULL")]
		public decimal IncidentalFee
		{
			get
			{
				return this._IncidentalFee;
			}
			set
			{
				if ((this._IncidentalFee != value))
				{
					this.OnIncidentalFeeChanging(value);
					this.SendPropertyChanging();
					this._IncidentalFee = value;
					this.SendPropertyChanged("IncidentalFee");
					this.OnIncidentalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PvFinanceAccountCatalogs")]
	public partial class PvFinanceAccountCatalogs
	{
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _CreatorID;
		
		private string _ModifierID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModifyDate;
		
		private int _Status;
		
		public PvFinanceAccountCatalogs()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this._FatherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifierID
		{
			get
			{
				return this._ModifierID;
			}
			set
			{
				if ((this._ModifierID != value))
				{
					this._ModifierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this._ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceVaults")]
	public partial class FinanceVaults : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Leader;
		
		private string _BigWinVaultID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntitySet<FinanceAccountFlows> _FinanceAccountFlows;
		
		private EntitySet<FinanceAccounts> _FinanceAccounts;
		
		private EntitySet<FinancePayments> _FinancePayments;
		
		private EntitySet<FinanceReceipts> _FinanceReceipts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLeaderChanging(string value);
    partial void OnLeaderChanged();
    partial void OnBigWinVaultIDChanging(string value);
    partial void OnBigWinVaultIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public FinanceVaults()
		{
			this._FinanceAccountFlows = new EntitySet<FinanceAccountFlows>(new Action<FinanceAccountFlows>(this.attach_FinanceAccountFlows), new Action<FinanceAccountFlows>(this.detach_FinanceAccountFlows));
			this._FinanceAccounts = new EntitySet<FinanceAccounts>(new Action<FinanceAccounts>(this.attach_FinanceAccounts), new Action<FinanceAccounts>(this.detach_FinanceAccounts));
			this._FinancePayments = new EntitySet<FinancePayments>(new Action<FinancePayments>(this.attach_FinancePayments), new Action<FinancePayments>(this.detach_FinancePayments));
			this._FinanceReceipts = new EntitySet<FinanceReceipts>(new Action<FinanceReceipts>(this.attach_FinanceReceipts), new Action<FinanceReceipts>(this.detach_FinanceReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leader", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Leader
		{
			get
			{
				return this._Leader;
			}
			set
			{
				if ((this._Leader != value))
				{
					this.OnLeaderChanging(value);
					this.SendPropertyChanging();
					this._Leader = value;
					this.SendPropertyChanged("Leader");
					this.OnLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigWinVaultID", DbType="VarChar(50)")]
		public string BigWinVaultID
		{
			get
			{
				return this._BigWinVaultID;
			}
			set
			{
				if ((this._BigWinVaultID != value))
				{
					this.OnBigWinVaultIDChanging(value);
					this.SendPropertyChanging();
					this._BigWinVaultID = value;
					this.SendPropertyChanged("BigWinVaultID");
					this.OnBigWinVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceAccountFlows", Storage="_FinanceAccountFlows", ThisKey="ID", OtherKey="FinanceVaultID")]
		public EntitySet<FinanceAccountFlows> FinanceAccountFlows
		{
			get
			{
				return this._FinanceAccountFlows;
			}
			set
			{
				this._FinanceAccountFlows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceAccounts", Storage="_FinanceAccounts", ThisKey="ID", OtherKey="FinanceVaultID")]
		public EntitySet<FinanceAccounts> FinanceAccounts
		{
			get
			{
				return this._FinanceAccounts;
			}
			set
			{
				this._FinanceAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinancePayments", Storage="_FinancePayments", ThisKey="ID", OtherKey="FinanceVaultID")]
		public EntitySet<FinancePayments> FinancePayments
		{
			get
			{
				return this._FinancePayments;
			}
			set
			{
				this._FinancePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceReceipts", Storage="_FinanceReceipts", ThisKey="ID", OtherKey="FinanceVaultID")]
		public EntitySet<FinanceReceipts> FinanceReceipts
		{
			get
			{
				return this._FinanceReceipts;
			}
			set
			{
				this._FinanceReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FinanceAccountFlows(FinanceAccountFlows entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = this;
		}
		
		private void detach_FinanceAccountFlows(FinanceAccountFlows entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = null;
		}
		
		private void attach_FinanceAccounts(FinanceAccounts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = this;
		}
		
		private void detach_FinanceAccounts(FinanceAccounts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = null;
		}
		
		private void attach_FinancePayments(FinancePayments entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = this;
		}
		
		private void detach_FinancePayments(FinancePayments entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = null;
		}
		
		private void attach_FinanceReceipts(FinanceReceipts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = this;
		}
		
		private void detach_FinanceReceipts(FinanceReceipts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceVaults = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayeeRightsTopView")]
	public partial class PayeeRightsTopView
	{
		
		private string _ID;
		
		private string _LeftID;
		
		private int _Currency;
		
		private decimal _Price;
		
		private System.DateTime _CreateDate;
		
		private string _AdminID;
		
		private string _ReviewerID;
		
		private string _FlowFormCode;
		
		public PayeeRightsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeftID
		{
			get
			{
				return this._LeftID;
			}
			set
			{
				if ((this._LeftID != value))
				{
					this._LeftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerID", DbType="VarChar(50)")]
		public string ReviewerID
		{
			get
			{
				return this._ReviewerID;
			}
			set
			{
				if ((this._ReviewerID != value))
				{
					this._ReviewerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowFormCode", DbType="VarChar(50)")]
		public string FlowFormCode
		{
			get
			{
				return this._FlowFormCode;
			}
			set
			{
				if ((this._FlowFormCode != value))
				{
					this._FlowFormCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayeeLeftsTopView")]
	public partial class PayeeLeftsTopView
	{
		
		private string _ID;
		
		private int _Source;
		
		private string _PayerID;
		
		private string _PayeeID;
		
		private int _Conduct;
		
		private string _Subject;
		
		private int _Currency;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private string _Unit;
		
		private decimal _Total;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private System.Nullable<int> _CutDateIndex;
		
		private string _NoticeID;
		
		private string _FormID;
		
		private string _WaybillCode;
		
		private string _AdminID;
		
		private string _VoucherID;
		
		private string _PayerName;
		
		public PayeeLeftsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int NOT NULL")]
		public int Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this._PayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeID
		{
			get
			{
				return this._PayeeID;
			}
			set
			{
				if ((this._PayeeID != value))
				{
					this._PayeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conduct", DbType="Int NOT NULL")]
		public int Conduct
		{
			get
			{
				return this._Conduct;
			}
			set
			{
				if ((this._Conduct != value))
				{
					this._Conduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(22,10) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(22,10) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this._CutDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDateIndex", DbType="Int")]
		public System.Nullable<int> CutDateIndex
		{
			get
			{
				return this._CutDateIndex;
			}
			set
			{
				if ((this._CutDateIndex != value))
				{
					this._CutDateIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="VarChar(50)")]
		public string NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					this._NoticeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="VarChar(50)")]
		public string FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this._FormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCode", DbType="VarChar(50)")]
		public string WaybillCode
		{
			get
			{
				return this._WaybillCode;
			}
			set
			{
				if ((this._WaybillCode != value))
				{
					this._WaybillCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this._VoucherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PayerName
		{
			get
			{
				return this._PayerName;
			}
			set
			{
				if ((this._PayerName != value))
				{
					this._PayerName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceAccounts")]
	public partial class FinanceAccounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FinanceVaultID;
		
		private string _AccountName;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _BankAddress;
		
		private string _SwiftCode;
		
		private string _Currency;
		
		private decimal _Balance;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _CustomizedCode;
		
		private bool _IsCash;
		
		private string _CompanyID;
		
		private System.Nullable<int> _AccountType;
		
		private string _AdminInchargeID;
		
		private string _BigWinAccountID;
		
		private string _Region;
		
		private System.Nullable<int> _Source;
		
		private System.Nullable<bool> _IsVirtual;
		
		private EntitySet<FinanceAccountFlows> _FinanceAccountFlows;
		
		private EntitySet<FinancePayments> _FinancePayments;
		
		private EntitySet<FinanceReceipts> _FinanceReceipts;
		
		private EntityRef<FinanceVaults> _FinanceVaults;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCustomizedCodeChanging(string value);
    partial void OnCustomizedCodeChanged();
    partial void OnIsCashChanging(bool value);
    partial void OnIsCashChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    partial void OnAdminInchargeIDChanging(string value);
    partial void OnAdminInchargeIDChanged();
    partial void OnBigWinAccountIDChanging(string value);
    partial void OnBigWinAccountIDChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnSourceChanging(System.Nullable<int> value);
    partial void OnSourceChanged();
    partial void OnIsVirtualChanging(System.Nullable<bool> value);
    partial void OnIsVirtualChanged();
    #endregion
		
		public FinanceAccounts()
		{
			this._FinanceAccountFlows = new EntitySet<FinanceAccountFlows>(new Action<FinanceAccountFlows>(this.attach_FinanceAccountFlows), new Action<FinanceAccountFlows>(this.detach_FinanceAccountFlows));
			this._FinancePayments = new EntitySet<FinancePayments>(new Action<FinancePayments>(this.attach_FinancePayments), new Action<FinancePayments>(this.detach_FinancePayments));
			this._FinanceReceipts = new EntitySet<FinanceReceipts>(new Action<FinanceReceipts>(this.attach_FinanceReceipts), new Action<FinanceReceipts>(this.detach_FinanceReceipts));
			this._FinanceVaults = default(EntityRef<FinanceVaults>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50)")]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					if (this._FinanceVaults.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(250)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="NVarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,4) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomizedCode", DbType="NVarChar(50)")]
		public string CustomizedCode
		{
			get
			{
				return this._CustomizedCode;
			}
			set
			{
				if ((this._CustomizedCode != value))
				{
					this.OnCustomizedCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomizedCode = value;
					this.SendPropertyChanged("CustomizedCode");
					this.OnCustomizedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="Bit NOT NULL")]
		public bool IsCash
		{
			get
			{
				return this._IsCash;
			}
			set
			{
				if ((this._IsCash != value))
				{
					this.OnIsCashChanging(value);
					this.SendPropertyChanging();
					this._IsCash = value;
					this.SendPropertyChanged("IsCash");
					this.OnIsCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(50)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminInchargeID", DbType="VarChar(50)")]
		public string AdminInchargeID
		{
			get
			{
				return this._AdminInchargeID;
			}
			set
			{
				if ((this._AdminInchargeID != value))
				{
					this.OnAdminInchargeIDChanging(value);
					this.SendPropertyChanging();
					this._AdminInchargeID = value;
					this.SendPropertyChanged("AdminInchargeID");
					this.OnAdminInchargeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigWinAccountID", DbType="VarChar(50)")]
		public string BigWinAccountID
		{
			get
			{
				return this._BigWinAccountID;
			}
			set
			{
				if ((this._BigWinAccountID != value))
				{
					this.OnBigWinAccountIDChanging(value);
					this.SendPropertyChanging();
					this._BigWinAccountID = value;
					this.SendPropertyChanged("BigWinAccountID");
					this.OnBigWinAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int")]
		public System.Nullable<int> Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtual", DbType="Bit")]
		public System.Nullable<bool> IsVirtual
		{
			get
			{
				return this._IsVirtual;
			}
			set
			{
				if ((this._IsVirtual != value))
				{
					this.OnIsVirtualChanging(value);
					this.SendPropertyChanging();
					this._IsVirtual = value;
					this.SendPropertyChanged("IsVirtual");
					this.OnIsVirtualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinanceAccountFlows", Storage="_FinanceAccountFlows", ThisKey="ID", OtherKey="FinanceAccountID")]
		public EntitySet<FinanceAccountFlows> FinanceAccountFlows
		{
			get
			{
				return this._FinanceAccountFlows;
			}
			set
			{
				this._FinanceAccountFlows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinancePayments", Storage="_FinancePayments", ThisKey="ID", OtherKey="FinanceAccountID")]
		public EntitySet<FinancePayments> FinancePayments
		{
			get
			{
				return this._FinancePayments;
			}
			set
			{
				this._FinancePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinanceReceipts", Storage="_FinanceReceipts", ThisKey="ID", OtherKey="FinanceAccountID")]
		public EntitySet<FinanceReceipts> FinanceReceipts
		{
			get
			{
				return this._FinanceReceipts;
			}
			set
			{
				this._FinanceReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceAccounts", Storage="_FinanceVaults", ThisKey="FinanceVaultID", OtherKey="ID", IsForeignKey=true)]
		public FinanceVaults FinanceVaults
		{
			get
			{
				return this._FinanceVaults.Entity;
			}
			set
			{
				FinanceVaults previousValue = this._FinanceVaults.Entity;
				if (((previousValue != value) 
							|| (this._FinanceVaults.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceVaults.Entity = null;
						previousValue.FinanceAccounts.Remove(this);
					}
					this._FinanceVaults.Entity = value;
					if ((value != null))
					{
						value.FinanceAccounts.Add(this);
						this._FinanceVaultID = value.ID;
					}
					else
					{
						this._FinanceVaultID = default(string);
					}
					this.SendPropertyChanged("FinanceVaults");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FinanceAccountFlows(FinanceAccountFlows entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = this;
		}
		
		private void detach_FinanceAccountFlows(FinanceAccountFlows entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = null;
		}
		
		private void attach_FinancePayments(FinancePayments entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = this;
		}
		
		private void detach_FinancePayments(FinancePayments entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = null;
		}
		
		private void attach_FinanceReceipts(FinanceReceipts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = this;
		}
		
		private void detach_FinanceReceipts(FinanceReceipts entity)
		{
			this.SendPropertyChanging();
			entity.FinanceAccounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeItems")]
	public partial class InvoiceNoticeItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _OrderID;
		
		private string _OrderItemID;
		
		private decimal _UnitPrice;
		
		private decimal _Amount;
		
		private decimal _Difference;
		
		private string _InvoiceCode;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<InvoiceNotices> _InvoiceNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderItemIDChanging(string value);
    partial void OnOrderItemIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDifferenceChanging(decimal value);
    partial void OnDifferenceChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceNoticeItems()
		{
			this._InvoiceNotices = default(EntityRef<InvoiceNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					if (this._InvoiceNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", DbType="VarChar(50)")]
		public string OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(19,5) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference", DbType="Decimal(18,4) NOT NULL")]
		public decimal Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(150)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(150)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeItems", Storage="_InvoiceNotices", ThisKey="InvoiceNoticeID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceNotices InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices.Entity;
			}
			set
			{
				InvoiceNotices previousValue = this._InvoiceNotices.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNotices.Entity = null;
						previousValue.InvoiceNoticeItems.Remove(this);
					}
					this._InvoiceNotices.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoticeItems.Add(this);
						this._InvoiceNoticeID = value.ID;
					}
					else
					{
						this._InvoiceNoticeID = default(string);
					}
					this.SendPropertyChanged("InvoiceNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxManageMap")]
	public partial class TaxManageMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TaxManageID;
		
		private string _InvoiceNoticeID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTaxManageIDChanging(string value);
    partial void OnTaxManageIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    #endregion
		
		public TaxManageMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxManageID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxManageID
		{
			get
			{
				return this._TaxManageID;
			}
			set
			{
				if ((this._TaxManageID != value))
				{
					this.OnTaxManageIDChanging(value);
					this.SendPropertyChanging();
					this._TaxManageID = value;
					this.SendPropertyChanged("TaxManageID");
					this.OnTaxManageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceResults")]
	public partial class InvoiceResults : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _RtnCode;
		
		private string _resultCode;
		
		private string _invoicefalseCode;
		
		private string _invoiceTypeName;
		
		private string _invoiceTypeCode;
		
		private System.Nullable<System.DateTime> _checkDate;
		
		private System.Nullable<int> _checkNum;
		
		private string _invoiceDataCode;
		
		private string _invoiceNumber;
		
		private System.Nullable<System.DateTime> _billingTime;
		
		private string _purchaserName;
		
		private string _taxpayerNumber;
		
		private string _taxDiskCode;
		
		private string _taxpayerAddressOrId;
		
		private string _taxpayerBankAccount;
		
		private string _salesName;
		
		private string _salesTaxpayerNum;
		
		private string _salesTaxpayerAddress;
		
		private string _salesTaxpayerBankAccount;
		
		private System.Nullable<decimal> _totalAmount;
		
		private System.Nullable<decimal> _totalTaxNum;
		
		private System.Nullable<decimal> _totalTaxSum;
		
		private string _invoiceRemarks;
		
		private string _goodsClerk;
		
		private string _checkCode;
		
		private string _voidMark;
		
		private string _isBillMark;
		
		private string _tollSign;
		
		private string _tollSignName;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _resultMsg;
		
		private string _invoiceName;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnRtnCodeChanging(string value);
    partial void OnRtnCodeChanged();
    partial void OnresultCodeChanging(string value);
    partial void OnresultCodeChanged();
    partial void OninvoicefalseCodeChanging(string value);
    partial void OninvoicefalseCodeChanged();
    partial void OninvoiceTypeNameChanging(string value);
    partial void OninvoiceTypeNameChanged();
    partial void OninvoiceTypeCodeChanging(string value);
    partial void OninvoiceTypeCodeChanged();
    partial void OncheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OncheckDateChanged();
    partial void OncheckNumChanging(System.Nullable<int> value);
    partial void OncheckNumChanged();
    partial void OninvoiceDataCodeChanging(string value);
    partial void OninvoiceDataCodeChanged();
    partial void OninvoiceNumberChanging(string value);
    partial void OninvoiceNumberChanged();
    partial void OnbillingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnbillingTimeChanged();
    partial void OnpurchaserNameChanging(string value);
    partial void OnpurchaserNameChanged();
    partial void OntaxpayerNumberChanging(string value);
    partial void OntaxpayerNumberChanged();
    partial void OntaxDiskCodeChanging(string value);
    partial void OntaxDiskCodeChanged();
    partial void OntaxpayerAddressOrIdChanging(string value);
    partial void OntaxpayerAddressOrIdChanged();
    partial void OntaxpayerBankAccountChanging(string value);
    partial void OntaxpayerBankAccountChanged();
    partial void OnsalesNameChanging(string value);
    partial void OnsalesNameChanged();
    partial void OnsalesTaxpayerNumChanging(string value);
    partial void OnsalesTaxpayerNumChanged();
    partial void OnsalesTaxpayerAddressChanging(string value);
    partial void OnsalesTaxpayerAddressChanged();
    partial void OnsalesTaxpayerBankAccountChanging(string value);
    partial void OnsalesTaxpayerBankAccountChanged();
    partial void OntotalAmountChanging(System.Nullable<decimal> value);
    partial void OntotalAmountChanged();
    partial void OntotalTaxNumChanging(System.Nullable<decimal> value);
    partial void OntotalTaxNumChanged();
    partial void OntotalTaxSumChanging(System.Nullable<decimal> value);
    partial void OntotalTaxSumChanged();
    partial void OninvoiceRemarksChanging(string value);
    partial void OninvoiceRemarksChanged();
    partial void OngoodsClerkChanging(string value);
    partial void OngoodsClerkChanged();
    partial void OncheckCodeChanging(string value);
    partial void OncheckCodeChanged();
    partial void OnvoidMarkChanging(string value);
    partial void OnvoidMarkChanged();
    partial void OnisBillMarkChanging(string value);
    partial void OnisBillMarkChanged();
    partial void OntollSignChanging(string value);
    partial void OntollSignChanged();
    partial void OntollSignNameChanging(string value);
    partial void OntollSignNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnresultMsgChanging(string value);
    partial void OnresultMsgChanged();
    partial void OninvoiceNameChanging(string value);
    partial void OninvoiceNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceResults()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RtnCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RtnCode
		{
			get
			{
				return this._RtnCode;
			}
			set
			{
				if ((this._RtnCode != value))
				{
					this.OnRtnCodeChanging(value);
					this.SendPropertyChanging();
					this._RtnCode = value;
					this.SendPropertyChanged("RtnCode");
					this.OnRtnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string resultCode
		{
			get
			{
				return this._resultCode;
			}
			set
			{
				if ((this._resultCode != value))
				{
					this.OnresultCodeChanging(value);
					this.SendPropertyChanging();
					this._resultCode = value;
					this.SendPropertyChanged("resultCode");
					this.OnresultCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoicefalseCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string invoicefalseCode
		{
			get
			{
				return this._invoicefalseCode;
			}
			set
			{
				if ((this._invoicefalseCode != value))
				{
					this.OninvoicefalseCodeChanging(value);
					this.SendPropertyChanging();
					this._invoicefalseCode = value;
					this.SendPropertyChanged("invoicefalseCode");
					this.OninvoicefalseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceTypeName", DbType="NVarChar(100)")]
		public string invoiceTypeName
		{
			get
			{
				return this._invoiceTypeName;
			}
			set
			{
				if ((this._invoiceTypeName != value))
				{
					this.OninvoiceTypeNameChanging(value);
					this.SendPropertyChanging();
					this._invoiceTypeName = value;
					this.SendPropertyChanged("invoiceTypeName");
					this.OninvoiceTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceTypeCode", DbType="VarChar(5)")]
		public string invoiceTypeCode
		{
			get
			{
				return this._invoiceTypeCode;
			}
			set
			{
				if ((this._invoiceTypeCode != value))
				{
					this.OninvoiceTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._invoiceTypeCode = value;
					this.SendPropertyChanged("invoiceTypeCode");
					this.OninvoiceTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> checkDate
		{
			get
			{
				return this._checkDate;
			}
			set
			{
				if ((this._checkDate != value))
				{
					this.OncheckDateChanging(value);
					this.SendPropertyChanging();
					this._checkDate = value;
					this.SendPropertyChanged("checkDate");
					this.OncheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkNum", DbType="Int")]
		public System.Nullable<int> checkNum
		{
			get
			{
				return this._checkNum;
			}
			set
			{
				if ((this._checkNum != value))
				{
					this.OncheckNumChanging(value);
					this.SendPropertyChanging();
					this._checkNum = value;
					this.SendPropertyChanged("checkNum");
					this.OncheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDataCode", DbType="VarChar(50)")]
		public string invoiceDataCode
		{
			get
			{
				return this._invoiceDataCode;
			}
			set
			{
				if ((this._invoiceDataCode != value))
				{
					this.OninvoiceDataCodeChanging(value);
					this.SendPropertyChanging();
					this._invoiceDataCode = value;
					this.SendPropertyChanged("invoiceDataCode");
					this.OninvoiceDataCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceNumber", DbType="VarChar(50)")]
		public string invoiceNumber
		{
			get
			{
				return this._invoiceNumber;
			}
			set
			{
				if ((this._invoiceNumber != value))
				{
					this.OninvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._invoiceNumber = value;
					this.SendPropertyChanged("invoiceNumber");
					this.OninvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> billingTime
		{
			get
			{
				return this._billingTime;
			}
			set
			{
				if ((this._billingTime != value))
				{
					this.OnbillingTimeChanging(value);
					this.SendPropertyChanging();
					this._billingTime = value;
					this.SendPropertyChanged("billingTime");
					this.OnbillingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaserName", DbType="NVarChar(200)")]
		public string purchaserName
		{
			get
			{
				return this._purchaserName;
			}
			set
			{
				if ((this._purchaserName != value))
				{
					this.OnpurchaserNameChanging(value);
					this.SendPropertyChanging();
					this._purchaserName = value;
					this.SendPropertyChanged("purchaserName");
					this.OnpurchaserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxpayerNumber", DbType="VarChar(50)")]
		public string taxpayerNumber
		{
			get
			{
				return this._taxpayerNumber;
			}
			set
			{
				if ((this._taxpayerNumber != value))
				{
					this.OntaxpayerNumberChanging(value);
					this.SendPropertyChanging();
					this._taxpayerNumber = value;
					this.SendPropertyChanged("taxpayerNumber");
					this.OntaxpayerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxDiskCode", DbType="VarChar(50)")]
		public string taxDiskCode
		{
			get
			{
				return this._taxDiskCode;
			}
			set
			{
				if ((this._taxDiskCode != value))
				{
					this.OntaxDiskCodeChanging(value);
					this.SendPropertyChanging();
					this._taxDiskCode = value;
					this.SendPropertyChanged("taxDiskCode");
					this.OntaxDiskCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxpayerAddressOrId", DbType="NVarChar(200)")]
		public string taxpayerAddressOrId
		{
			get
			{
				return this._taxpayerAddressOrId;
			}
			set
			{
				if ((this._taxpayerAddressOrId != value))
				{
					this.OntaxpayerAddressOrIdChanging(value);
					this.SendPropertyChanging();
					this._taxpayerAddressOrId = value;
					this.SendPropertyChanged("taxpayerAddressOrId");
					this.OntaxpayerAddressOrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxpayerBankAccount", DbType="NVarChar(500)")]
		public string taxpayerBankAccount
		{
			get
			{
				return this._taxpayerBankAccount;
			}
			set
			{
				if ((this._taxpayerBankAccount != value))
				{
					this.OntaxpayerBankAccountChanging(value);
					this.SendPropertyChanging();
					this._taxpayerBankAccount = value;
					this.SendPropertyChanged("taxpayerBankAccount");
					this.OntaxpayerBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesName", DbType="NVarChar(200)")]
		public string salesName
		{
			get
			{
				return this._salesName;
			}
			set
			{
				if ((this._salesName != value))
				{
					this.OnsalesNameChanging(value);
					this.SendPropertyChanging();
					this._salesName = value;
					this.SendPropertyChanged("salesName");
					this.OnsalesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesTaxpayerNum", DbType="VarChar(50)")]
		public string salesTaxpayerNum
		{
			get
			{
				return this._salesTaxpayerNum;
			}
			set
			{
				if ((this._salesTaxpayerNum != value))
				{
					this.OnsalesTaxpayerNumChanging(value);
					this.SendPropertyChanging();
					this._salesTaxpayerNum = value;
					this.SendPropertyChanged("salesTaxpayerNum");
					this.OnsalesTaxpayerNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesTaxpayerAddress", DbType="NVarChar(200)")]
		public string salesTaxpayerAddress
		{
			get
			{
				return this._salesTaxpayerAddress;
			}
			set
			{
				if ((this._salesTaxpayerAddress != value))
				{
					this.OnsalesTaxpayerAddressChanging(value);
					this.SendPropertyChanging();
					this._salesTaxpayerAddress = value;
					this.SendPropertyChanged("salesTaxpayerAddress");
					this.OnsalesTaxpayerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesTaxpayerBankAccount", DbType="NVarChar(500)")]
		public string salesTaxpayerBankAccount
		{
			get
			{
				return this._salesTaxpayerBankAccount;
			}
			set
			{
				if ((this._salesTaxpayerBankAccount != value))
				{
					this.OnsalesTaxpayerBankAccountChanging(value);
					this.SendPropertyChanging();
					this._salesTaxpayerBankAccount = value;
					this.SendPropertyChanged("salesTaxpayerBankAccount");
					this.OnsalesTaxpayerBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> totalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OntotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("totalAmount");
					this.OntotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTaxNum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> totalTaxNum
		{
			get
			{
				return this._totalTaxNum;
			}
			set
			{
				if ((this._totalTaxNum != value))
				{
					this.OntotalTaxNumChanging(value);
					this.SendPropertyChanging();
					this._totalTaxNum = value;
					this.SendPropertyChanged("totalTaxNum");
					this.OntotalTaxNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTaxSum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> totalTaxSum
		{
			get
			{
				return this._totalTaxSum;
			}
			set
			{
				if ((this._totalTaxSum != value))
				{
					this.OntotalTaxSumChanging(value);
					this.SendPropertyChanging();
					this._totalTaxSum = value;
					this.SendPropertyChanged("totalTaxSum");
					this.OntotalTaxSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceRemarks", DbType="NVarChar(500)")]
		public string invoiceRemarks
		{
			get
			{
				return this._invoiceRemarks;
			}
			set
			{
				if ((this._invoiceRemarks != value))
				{
					this.OninvoiceRemarksChanging(value);
					this.SendPropertyChanging();
					this._invoiceRemarks = value;
					this.SendPropertyChanged("invoiceRemarks");
					this.OninvoiceRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodsClerk", DbType="NVarChar(50)")]
		public string goodsClerk
		{
			get
			{
				return this._goodsClerk;
			}
			set
			{
				if ((this._goodsClerk != value))
				{
					this.OngoodsClerkChanging(value);
					this.SendPropertyChanging();
					this._goodsClerk = value;
					this.SendPropertyChanged("goodsClerk");
					this.OngoodsClerkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkCode", DbType="VarChar(50)")]
		public string checkCode
		{
			get
			{
				return this._checkCode;
			}
			set
			{
				if ((this._checkCode != value))
				{
					this.OncheckCodeChanging(value);
					this.SendPropertyChanging();
					this._checkCode = value;
					this.SendPropertyChanged("checkCode");
					this.OncheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voidMark", DbType="VarChar(5)")]
		public string voidMark
		{
			get
			{
				return this._voidMark;
			}
			set
			{
				if ((this._voidMark != value))
				{
					this.OnvoidMarkChanging(value);
					this.SendPropertyChanging();
					this._voidMark = value;
					this.SendPropertyChanged("voidMark");
					this.OnvoidMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBillMark", DbType="VarChar(5)")]
		public string isBillMark
		{
			get
			{
				return this._isBillMark;
			}
			set
			{
				if ((this._isBillMark != value))
				{
					this.OnisBillMarkChanging(value);
					this.SendPropertyChanging();
					this._isBillMark = value;
					this.SendPropertyChanged("isBillMark");
					this.OnisBillMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollSign", DbType="VarChar(5)")]
		public string tollSign
		{
			get
			{
				return this._tollSign;
			}
			set
			{
				if ((this._tollSign != value))
				{
					this.OntollSignChanging(value);
					this.SendPropertyChanging();
					this._tollSign = value;
					this.SendPropertyChanged("tollSign");
					this.OntollSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollSignName", DbType="NVarChar(50)")]
		public string tollSignName
		{
			get
			{
				return this._tollSignName;
			}
			set
			{
				if ((this._tollSignName != value))
				{
					this.OntollSignNameChanging(value);
					this.SendPropertyChanging();
					this._tollSignName = value;
					this.SendPropertyChanged("tollSignName");
					this.OntollSignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultMsg", DbType="NVarChar(500)")]
		public string resultMsg
		{
			get
			{
				return this._resultMsg;
			}
			set
			{
				if ((this._resultMsg != value))
				{
					this.OnresultMsgChanging(value);
					this.SendPropertyChanging();
					this._resultMsg = value;
					this.SendPropertyChanged("resultMsg");
					this.OnresultMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceName", DbType="NVarChar(500)")]
		public string invoiceName
		{
			get
			{
				return this._invoiceName;
			}
			set
			{
				if ((this._invoiceName != value))
				{
					this.OninvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._invoiceName = value;
					this.SendPropertyChanged("invoiceName");
					this.OninvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxMapJobLog")]
	public partial class TaxMapJobLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _SchedulerTime;
		
		private System.Nullable<System.DateTime> _NextTime;
		
		private string _Exception;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSchedulerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSchedulerTimeChanged();
    partial void OnNextTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnNextTimeChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    #endregion
		
		public TaxMapJobLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchedulerTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SchedulerTime
		{
			get
			{
				return this._SchedulerTime;
			}
			set
			{
				if ((this._SchedulerTime != value))
				{
					this.OnSchedulerTimeChanging(value);
					this.SendPropertyChanging();
					this._SchedulerTime = value;
					this.SendPropertyChanged("SchedulerTime");
					this.OnSchedulerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextTime
		{
			get
			{
				return this._NextTime;
			}
			set
			{
				if ((this._NextTime != value))
				{
					this.OnNextTimeChanging(value);
					this.SendPropertyChanging();
					this._NextTime = value;
					this.SendPropertyChanged("NextTime");
					this.OnNextTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="NVarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxManage")]
	public partial class TaxManage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceCode;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _SellsName;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _VaildAmount;
		
		private System.Nullable<System.DateTime> _ConfrimDate;
		
		private System.Nullable<System.DateTime> _AuthenticationMonth;
		
		private System.Nullable<int> _IsVaild;
		
		private string _InvoiceDetailID;
		
		private int _InvoiceType;
		
		private int _BusinessType;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnSellsNameChanging(string value);
    partial void OnSellsNameChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnVaildAmountChanging(System.Nullable<decimal> value);
    partial void OnVaildAmountChanged();
    partial void OnConfrimDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfrimDateChanged();
    partial void OnAuthenticationMonthChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthenticationMonthChanged();
    partial void OnIsVaildChanging(System.Nullable<int> value);
    partial void OnIsVaildChanged();
    partial void OnInvoiceDetailIDChanging(string value);
    partial void OnInvoiceDetailIDChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnBusinessTypeChanging(int value);
    partial void OnBusinessTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public TaxManage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(50)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellsName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SellsName
		{
			get
			{
				return this._SellsName;
			}
			set
			{
				if ((this._SellsName != value))
				{
					this.OnSellsNameChanging(value);
					this.SendPropertyChanging();
					this._SellsName = value;
					this.SendPropertyChanged("SellsName");
					this.OnSellsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaildAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> VaildAmount
		{
			get
			{
				return this._VaildAmount;
			}
			set
			{
				if ((this._VaildAmount != value))
				{
					this.OnVaildAmountChanging(value);
					this.SendPropertyChanging();
					this._VaildAmount = value;
					this.SendPropertyChanged("VaildAmount");
					this.OnVaildAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfrimDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfrimDate
		{
			get
			{
				return this._ConfrimDate;
			}
			set
			{
				if ((this._ConfrimDate != value))
				{
					this.OnConfrimDateChanging(value);
					this.SendPropertyChanging();
					this._ConfrimDate = value;
					this.SendPropertyChanged("ConfrimDate");
					this.OnConfrimDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationMonth", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuthenticationMonth
		{
			get
			{
				return this._AuthenticationMonth;
			}
			set
			{
				if ((this._AuthenticationMonth != value))
				{
					this.OnAuthenticationMonthChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationMonth = value;
					this.SendPropertyChanged("AuthenticationMonth");
					this.OnAuthenticationMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVaild", DbType="Int")]
		public System.Nullable<int> IsVaild
		{
			get
			{
				return this._IsVaild;
			}
			set
			{
				if ((this._IsVaild != value))
				{
					this.OnIsVaildChanging(value);
					this.SendPropertyChanging();
					this._IsVaild = value;
					this.SendPropertyChanged("IsVaild");
					this.OnIsVaildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailID", DbType="VarChar(50)")]
		public string InvoiceDetailID
		{
			get
			{
				return this._InvoiceDetailID;
			}
			set
			{
				if ((this._InvoiceDetailID != value))
				{
					this.OnInvoiceDetailIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetailID = value;
					this.SendPropertyChanged("InvoiceDetailID");
					this.OnInvoiceDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessType", DbType="Int NOT NULL")]
		public int BusinessType
		{
			get
			{
				return this._BusinessType;
			}
			set
			{
				if ((this._BusinessType != value))
				{
					this.OnBusinessTypeChanging(value);
					this.SendPropertyChanging();
					this._BusinessType = value;
					this.SendPropertyChanged("BusinessType");
					this.OnBusinessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxMap")]
	public partial class TaxMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _InvoiceCode;
		
		private string _InvoiceNo;
		
		private System.DateTime _InvoiceDate;
		
		private bool _IsMapped;
		
		private int _ApiStatus;
		
		private System.Nullable<int> _InvoiceType;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnIsMappedChanging(bool value);
    partial void OnIsMappedChanged();
    partial void OnApiStatusChanging(int value);
    partial void OnApiStatusChanged();
    partial void OnInvoiceTypeChanging(System.Nullable<int> value);
    partial void OnInvoiceTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public TaxMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50)")]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMapped", DbType="Bit NOT NULL")]
		public bool IsMapped
		{
			get
			{
				return this._IsMapped;
			}
			set
			{
				if ((this._IsMapped != value))
				{
					this.OnIsMappedChanging(value);
					this.SendPropertyChanging();
					this._IsMapped = value;
					this.SendPropertyChanged("IsMapped");
					this.OnIsMappedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiStatus", DbType="Int NOT NULL")]
		public int ApiStatus
		{
			get
			{
				return this._ApiStatus;
			}
			set
			{
				if ((this._ApiStatus != value))
				{
					this.OnApiStatusChanging(value);
					this.SendPropertyChanging();
					this._ApiStatus = value;
					this.SendPropertyChanged("ApiStatus");
					this.OnApiStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceResultDetails")]
	public partial class InvoiceResultDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceResultID;
		
		private System.Nullable<int> _lineNum;
		
		private string _goodserviceName;
		
		private string _model;
		
		private string _unit;
		
		private System.Nullable<decimal> _number;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _sum;
		
		private string _taxRate;
		
		private System.Nullable<decimal> _tax;
		
		private string _isBillLine;
		
		private string _zeroTaxRateSign;
		
		private string _zeroTaxRateSignName;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceResultIDChanging(string value);
    partial void OnInvoiceResultIDChanged();
    partial void OnlineNumChanging(System.Nullable<int> value);
    partial void OnlineNumChanged();
    partial void OngoodserviceNameChanging(string value);
    partial void OngoodserviceNameChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnnumberChanging(System.Nullable<decimal> value);
    partial void OnnumberChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnsumChanging(System.Nullable<decimal> value);
    partial void OnsumChanged();
    partial void OntaxRateChanging(string value);
    partial void OntaxRateChanged();
    partial void OntaxChanging(System.Nullable<decimal> value);
    partial void OntaxChanged();
    partial void OnisBillLineChanging(string value);
    partial void OnisBillLineChanged();
    partial void OnzeroTaxRateSignChanging(string value);
    partial void OnzeroTaxRateSignChanged();
    partial void OnzeroTaxRateSignNameChanging(string value);
    partial void OnzeroTaxRateSignNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public InvoiceResultDetails()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceResultID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceResultID
		{
			get
			{
				return this._InvoiceResultID;
			}
			set
			{
				if ((this._InvoiceResultID != value))
				{
					this.OnInvoiceResultIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceResultID = value;
					this.SendPropertyChanged("InvoiceResultID");
					this.OnInvoiceResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int")]
		public System.Nullable<int> lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodserviceName", DbType="NVarChar(200)")]
		public string goodserviceName
		{
			get
			{
				return this._goodserviceName;
			}
			set
			{
				if ((this._goodserviceName != value))
				{
					this.OngoodserviceNameChanging(value);
					this.SendPropertyChanging();
					this._goodserviceName = value;
					this.SendPropertyChanged("goodserviceName");
					this.OngoodserviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="VarChar(100)")]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NVarChar(10)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> sum
		{
			get
			{
				return this._sum;
			}
			set
			{
				if ((this._sum != value))
				{
					this.OnsumChanging(value);
					this.SendPropertyChanging();
					this._sum = value;
					this.SendPropertyChanged("sum");
					this.OnsumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxRate", DbType="VarChar(10)")]
		public string taxRate
		{
			get
			{
				return this._taxRate;
			}
			set
			{
				if ((this._taxRate != value))
				{
					this.OntaxRateChanging(value);
					this.SendPropertyChanging();
					this._taxRate = value;
					this.SendPropertyChanged("taxRate");
					this.OntaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBillLine", DbType="VarChar(5)")]
		public string isBillLine
		{
			get
			{
				return this._isBillLine;
			}
			set
			{
				if ((this._isBillLine != value))
				{
					this.OnisBillLineChanging(value);
					this.SendPropertyChanging();
					this._isBillLine = value;
					this.SendPropertyChanged("isBillLine");
					this.OnisBillLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zeroTaxRateSign", DbType="NVarChar(50)")]
		public string zeroTaxRateSign
		{
			get
			{
				return this._zeroTaxRateSign;
			}
			set
			{
				if ((this._zeroTaxRateSign != value))
				{
					this.OnzeroTaxRateSignChanging(value);
					this.SendPropertyChanging();
					this._zeroTaxRateSign = value;
					this.SendPropertyChanged("zeroTaxRateSign");
					this.OnzeroTaxRateSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zeroTaxRateSignName", DbType="NVarChar(100)")]
		public string zeroTaxRateSignName
		{
			get
			{
				return this._zeroTaxRateSignName;
			}
			set
			{
				if ((this._zeroTaxRateSignName != value))
				{
					this.OnzeroTaxRateSignNameChanging(value);
					this.SendPropertyChanging();
					this._zeroTaxRateSignName = value;
					this.SendPropertyChanged("zeroTaxRateSignName");
					this.OnzeroTaxRateSignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorageFeeReport")]
	public partial class StorageFeeReport
	{
		
		private string _OrderID;
		
		private string _Business;
		
		private string _Catalog;
		
		private string _Subject;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Price1;
		
		private decimal _LeftPrice;
		
		private System.Nullable<decimal> _RightPrice;
		
		private System.DateTime _LeftDate;
		
		private string _RealName;
		
		private string _payCompanyName;
		
		private string _recCompanyName;
		
		private System.Nullable<int> _Currency;
		
		public StorageFeeReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				if ((this._Business != value))
				{
					this._Business = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this._Catalog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this._Price1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftPrice", DbType="Decimal(18,7) NOT NULL")]
		public decimal LeftPrice
		{
			get
			{
				return this._LeftPrice;
			}
			set
			{
				if ((this._LeftPrice != value))
				{
					this._LeftPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightPrice", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> RightPrice
		{
			get
			{
				return this._RightPrice;
			}
			set
			{
				if ((this._RightPrice != value))
				{
					this._RightPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeftDate
		{
			get
			{
				return this._LeftDate;
			}
			set
			{
				if ((this._LeftDate != value))
				{
					this._LeftDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payCompanyName", DbType="NVarChar(150)")]
		public string payCompanyName
		{
			get
			{
				return this._payCompanyName;
			}
			set
			{
				if ((this._payCompanyName != value))
				{
					this._payCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recCompanyName", DbType="NVarChar(150)")]
		public string recCompanyName
		{
			get
			{
				return this._recCompanyName;
			}
			set
			{
				if ((this._recCompanyName != value))
				{
					this._recCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int")]
		public System.Nullable<int> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptNotices")]
	public partial class ReceiptNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private decimal _AvailableAmount;
		
		private decimal _ClearAmount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private EntityRef<FinanceReceipts> _FinanceReceipts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnAvailableAmountChanging(decimal value);
    partial void OnAvailableAmountChanged();
    partial void OnClearAmountChanging(decimal value);
    partial void OnClearAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ReceiptNotices()
		{
			this._FinanceReceipts = default(EntityRef<FinanceReceipts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._FinanceReceipts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal AvailableAmount
		{
			get
			{
				return this._AvailableAmount;
			}
			set
			{
				if ((this._AvailableAmount != value))
				{
					this.OnAvailableAmountChanging(value);
					this.SendPropertyChanging();
					this._AvailableAmount = value;
					this.SendPropertyChanged("AvailableAmount");
					this.OnAvailableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal ClearAmount
		{
			get
			{
				return this._ClearAmount;
			}
			set
			{
				if ((this._ClearAmount != value))
				{
					this.OnClearAmountChanging(value);
					this.SendPropertyChanging();
					this._ClearAmount = value;
					this.SendPropertyChanged("ClearAmount");
					this.OnClearAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceReceipts_ReceiptNotices", Storage="_FinanceReceipts", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public FinanceReceipts FinanceReceipts
		{
			get
			{
				return this._FinanceReceipts.Entity;
			}
			set
			{
				FinanceReceipts previousValue = this._FinanceReceipts.Entity;
				if (((previousValue != value) 
							|| (this._FinanceReceipts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceReceipts.Entity = null;
						previousValue.ReceiptNotices = null;
					}
					this._FinanceReceipts.Entity = value;
					if ((value != null))
					{
						value.ReceiptNotices = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("FinanceReceipts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentNotices")]
	public partial class PaymentNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SeqNo;
		
		private string _AdminID;
		
		private string _PayerID;
		
		private string _PaymentApplyID;
		
		private string _PayExchangeApplyID;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private int _FeeType;
		
		private string _FeeDesc;
		
		private string _PayeeName;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _USDAmount;
		
		private string _Currency;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.DateTime _PayDate;
		
		private int _PayType;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _CostApplyID;
		
		private System.Nullable<decimal> _Poundage;
		
		private string _SeqNoPoundage;
		
		private string _RefundApplyID;
		
		private EntitySet<PaymentNoticeItems> _PaymentNoticeItems;
		
		private EntitySet<PaymentNoticeFiles> _PaymentNoticeFiles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnPaymentApplyIDChanging(string value);
    partial void OnPaymentApplyIDChanged();
    partial void OnPayExchangeApplyIDChanging(string value);
    partial void OnPayExchangeApplyIDChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnFeeDescChanging(string value);
    partial void OnFeeDescChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnUSDAmountChanging(System.Nullable<decimal> value);
    partial void OnUSDAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnPayTypeChanging(int value);
    partial void OnPayTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCostApplyIDChanging(string value);
    partial void OnCostApplyIDChanged();
    partial void OnPoundageChanging(System.Nullable<decimal> value);
    partial void OnPoundageChanged();
    partial void OnSeqNoPoundageChanging(string value);
    partial void OnSeqNoPoundageChanged();
    partial void OnRefundApplyIDChanging(string value);
    partial void OnRefundApplyIDChanged();
    #endregion
		
		public PaymentNotices()
		{
			this._PaymentNoticeItems = new EntitySet<PaymentNoticeItems>(new Action<PaymentNoticeItems>(this.attach_PaymentNoticeItems), new Action<PaymentNoticeItems>(this.detach_PaymentNoticeItems));
			this._PaymentNoticeFiles = new EntitySet<PaymentNoticeFiles>(new Action<PaymentNoticeFiles>(this.attach_PaymentNoticeFiles), new Action<PaymentNoticeFiles>(this.detach_PaymentNoticeFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentApplyID", DbType="VarChar(50)")]
		public string PaymentApplyID
		{
			get
			{
				return this._PaymentApplyID;
			}
			set
			{
				if ((this._PaymentApplyID != value))
				{
					this.OnPaymentApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentApplyID = value;
					this.SendPropertyChanged("PaymentApplyID");
					this.OnPaymentApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayExchangeApplyID", DbType="VarChar(50)")]
		public string PayExchangeApplyID
		{
			get
			{
				return this._PayExchangeApplyID;
			}
			set
			{
				if ((this._PayExchangeApplyID != value))
				{
					this.OnPayExchangeApplyIDChanging(value);
					this.SendPropertyChanging();
					this._PayExchangeApplyID = value;
					this.SendPropertyChanged("PayExchangeApplyID");
					this.OnPayExchangeApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50)")]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50)")]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDesc", DbType="NVarChar(100)")]
		public string FeeDesc
		{
			get
			{
				return this._FeeDesc;
			}
			set
			{
				if ((this._FeeDesc != value))
				{
					this.OnFeeDescChanging(value);
					this.SendPropertyChanging();
					this._FeeDesc = value;
					this.SendPropertyChanged("FeeDesc");
					this.OnFeeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> USDAmount
		{
			get
			{
				return this._USDAmount;
			}
			set
			{
				if ((this._USDAmount != value))
				{
					this.OnUSDAmountChanging(value);
					this.SendPropertyChanging();
					this._USDAmount = value;
					this.SendPropertyChanged("USDAmount");
					this.OnUSDAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="Date NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int NOT NULL")]
		public int PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostApplyID", DbType="VarChar(50)")]
		public string CostApplyID
		{
			get
			{
				return this._CostApplyID;
			}
			set
			{
				if ((this._CostApplyID != value))
				{
					this.OnCostApplyIDChanging(value);
					this.SendPropertyChanging();
					this._CostApplyID = value;
					this.SendPropertyChanged("CostApplyID");
					this.OnCostApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poundage", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Poundage
		{
			get
			{
				return this._Poundage;
			}
			set
			{
				if ((this._Poundage != value))
				{
					this.OnPoundageChanging(value);
					this.SendPropertyChanging();
					this._Poundage = value;
					this.SendPropertyChanged("Poundage");
					this.OnPoundageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNoPoundage", DbType="VarChar(50)")]
		public string SeqNoPoundage
		{
			get
			{
				return this._SeqNoPoundage;
			}
			set
			{
				if ((this._SeqNoPoundage != value))
				{
					this.OnSeqNoPoundageChanging(value);
					this.SendPropertyChanging();
					this._SeqNoPoundage = value;
					this.SendPropertyChanged("SeqNoPoundage");
					this.OnSeqNoPoundageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundApplyID", DbType="VarChar(50)")]
		public string RefundApplyID
		{
			get
			{
				return this._RefundApplyID;
			}
			set
			{
				if ((this._RefundApplyID != value))
				{
					this.OnRefundApplyIDChanging(value);
					this.SendPropertyChanging();
					this._RefundApplyID = value;
					this.SendPropertyChanged("RefundApplyID");
					this.OnRefundApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotices_PaymentNoticeItems", Storage="_PaymentNoticeItems", ThisKey="ID", OtherKey="PaymentNoticeID")]
		public EntitySet<PaymentNoticeItems> PaymentNoticeItems
		{
			get
			{
				return this._PaymentNoticeItems;
			}
			set
			{
				this._PaymentNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotices_PaymentNoticeFiles", Storage="_PaymentNoticeFiles", ThisKey="ID", OtherKey="PaymentNoticeID")]
		public EntitySet<PaymentNoticeFiles> PaymentNoticeFiles
		{
			get
			{
				return this._PaymentNoticeFiles;
			}
			set
			{
				this._PaymentNoticeFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentNoticeItems(PaymentNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotices = this;
		}
		
		private void detach_PaymentNoticeItems(PaymentNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotices = null;
		}
		
		private void attach_PaymentNoticeFiles(PaymentNoticeFiles entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotices = this;
		}
		
		private void detach_PaymentNoticeFiles(PaymentNoticeFiles entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefundApply")]
	public partial class RefundApply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClientID;
		
		private string _PayeeAccountID;
		
		private string _FinanceReceiptID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private string _AdminID;
		
		private int _ApplyStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnFinanceReceiptIDChanging(string value);
    partial void OnFinanceReceiptIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnApplyStatusChanging(int value);
    partial void OnApplyStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public RefundApply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceReceiptID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceReceiptID
		{
			get
			{
				return this._FinanceReceiptID;
			}
			set
			{
				if ((this._FinanceReceiptID != value))
				{
					this.OnFinanceReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceReceiptID = value;
					this.SendPropertyChanged("FinanceReceiptID");
					this.OnFinanceReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyStatus", DbType="Int NOT NULL")]
		public int ApplyStatus
		{
			get
			{
				return this._ApplyStatus;
			}
			set
			{
				if ((this._ApplyStatus != value))
				{
					this.OnApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._ApplyStatus = value;
					this.SendPropertyChanged("ApplyStatus");
					this.OnApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpireOrders")]
	public partial class ExpireOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderID;
		
		private decimal _Amount;
		
		private System.DateTime _ExpireDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public ExpireOrders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplies")]
	public partial class CostApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _CostType;
		
		private System.Nullable<int> _FeeType;
		
		private string _FeeDesc;
		
		private string _PayeeName;
		
		private string _PayeeAccount;
		
		private string _PayeeBank;
		
		private string _PayeeAccountID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private int _CostStatus;
		
		private string _AdminID;
		
		private System.Nullable<System.DateTime> _PayTime;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _BillNo;
		
		private System.Nullable<int> _MoneyType;
		
		private System.Nullable<int> _CashType;
		
		private System.Nullable<int> _PaperNotesStatus;
		
		private System.Nullable<int> _DyjID;
		
		private System.Nullable<int> _DyjCheckID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCostTypeChanging(System.Nullable<int> value);
    partial void OnCostTypeChanged();
    partial void OnFeeTypeChanging(System.Nullable<int> value);
    partial void OnFeeTypeChanged();
    partial void OnFeeDescChanging(string value);
    partial void OnFeeDescChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnPayeeAccountChanging(string value);
    partial void OnPayeeAccountChanged();
    partial void OnPayeeBankChanging(string value);
    partial void OnPayeeBankChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCostStatusChanging(int value);
    partial void OnCostStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPayTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnMoneyTypeChanging(System.Nullable<int> value);
    partial void OnMoneyTypeChanged();
    partial void OnCashTypeChanging(System.Nullable<int> value);
    partial void OnCashTypeChanged();
    partial void OnPaperNotesStatusChanging(System.Nullable<int> value);
    partial void OnPaperNotesStatusChanged();
    partial void OnDyjIDChanging(System.Nullable<int> value);
    partial void OnDyjIDChanged();
    partial void OnDyjCheckIDChanging(System.Nullable<int> value);
    partial void OnDyjCheckIDChanged();
    #endregion
		
		public CostApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostType", DbType="Int")]
		public System.Nullable<int> CostType
		{
			get
			{
				return this._CostType;
			}
			set
			{
				if ((this._CostType != value))
				{
					this.OnCostTypeChanging(value);
					this.SendPropertyChanging();
					this._CostType = value;
					this.SendPropertyChanged("CostType");
					this.OnCostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int")]
		public System.Nullable<int> FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDesc", DbType="NVarChar(500)")]
		public string FeeDesc
		{
			get
			{
				return this._FeeDesc;
			}
			set
			{
				if ((this._FeeDesc != value))
				{
					this.OnFeeDescChanging(value);
					this.SendPropertyChanging();
					this._FeeDesc = value;
					this.SendPropertyChanged("FeeDesc");
					this.OnFeeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(250)")]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccount", DbType="NVarChar(250)")]
		public string PayeeAccount
		{
			get
			{
				return this._PayeeAccount;
			}
			set
			{
				if ((this._PayeeAccount != value))
				{
					this.OnPayeeAccountChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccount = value;
					this.SendPropertyChanged("PayeeAccount");
					this.OnPayeeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeBank", DbType="NVarChar(250)")]
		public string PayeeBank
		{
			get
			{
				return this._PayeeBank;
			}
			set
			{
				if ((this._PayeeBank != value))
				{
					this.OnPayeeBankChanging(value);
					this.SendPropertyChanging();
					this._PayeeBank = value;
					this.SendPropertyChanged("PayeeBank");
					this.OnPayeeBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50)")]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostStatus", DbType="Int NOT NULL")]
		public int CostStatus
		{
			get
			{
				return this._CostStatus;
			}
			set
			{
				if ((this._CostStatus != value))
				{
					this.OnCostStatusChanging(value);
					this.SendPropertyChanging();
					this._CostStatus = value;
					this.SendPropertyChanged("CostStatus");
					this.OnCostStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayTime
		{
			get
			{
				return this._PayTime;
			}
			set
			{
				if ((this._PayTime != value))
				{
					this.OnPayTimeChanging(value);
					this.SendPropertyChanging();
					this._PayTime = value;
					this.SendPropertyChanged("PayTime");
					this.OnPayTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="NVarChar(100)")]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyType", DbType="Int")]
		public System.Nullable<int> MoneyType
		{
			get
			{
				return this._MoneyType;
			}
			set
			{
				if ((this._MoneyType != value))
				{
					this.OnMoneyTypeChanging(value);
					this.SendPropertyChanging();
					this._MoneyType = value;
					this.SendPropertyChanged("MoneyType");
					this.OnMoneyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashType", DbType="Int")]
		public System.Nullable<int> CashType
		{
			get
			{
				return this._CashType;
			}
			set
			{
				if ((this._CashType != value))
				{
					this.OnCashTypeChanging(value);
					this.SendPropertyChanging();
					this._CashType = value;
					this.SendPropertyChanged("CashType");
					this.OnCashTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperNotesStatus", DbType="Int")]
		public System.Nullable<int> PaperNotesStatus
		{
			get
			{
				return this._PaperNotesStatus;
			}
			set
			{
				if ((this._PaperNotesStatus != value))
				{
					this.OnPaperNotesStatusChanging(value);
					this.SendPropertyChanging();
					this._PaperNotesStatus = value;
					this.SendPropertyChanged("PaperNotesStatus");
					this.OnPaperNotesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="Int")]
		public System.Nullable<int> DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCheckID", DbType="Int")]
		public System.Nullable<int> DyjCheckID
		{
			get
			{
				return this._DyjCheckID;
			}
			set
			{
				if ((this._DyjCheckID != value))
				{
					this.OnDyjCheckIDChanging(value);
					this.SendPropertyChanging();
					this._DyjCheckID = value;
					this.SendPropertyChanged("DyjCheckID");
					this.OnDyjCheckIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostApplyItems")]
	public partial class CostApplyItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CostApplyID;
		
		private int _FeeType;
		
		private decimal _Amount;
		
		private string _FeeDesc;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<int> _DyjID;
		
		private System.Nullable<int> _DyjFeeType;
		
		private string _EmployeeID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCostApplyIDChanging(string value);
    partial void OnCostApplyIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnFeeDescChanging(string value);
    partial void OnFeeDescChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnDyjIDChanging(System.Nullable<int> value);
    partial void OnDyjIDChanged();
    partial void OnDyjFeeTypeChanging(System.Nullable<int> value);
    partial void OnDyjFeeTypeChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public CostApplyItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CostApplyID
		{
			get
			{
				return this._CostApplyID;
			}
			set
			{
				if ((this._CostApplyID != value))
				{
					this.OnCostApplyIDChanging(value);
					this.SendPropertyChanging();
					this._CostApplyID = value;
					this.SendPropertyChanged("CostApplyID");
					this.OnCostApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDesc", DbType="NVarChar(500)")]
		public string FeeDesc
		{
			get
			{
				return this._FeeDesc;
			}
			set
			{
				if ((this._FeeDesc != value))
				{
					this.OnFeeDescChanging(value);
					this.SendPropertyChanging();
					this._FeeDesc = value;
					this.SendPropertyChanged("FeeDesc");
					this.OnFeeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="Int")]
		public System.Nullable<int> DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjFeeType", DbType="Int")]
		public System.Nullable<int> DyjFeeType
		{
			get
			{
				return this._DyjFeeType;
			}
			set
			{
				if ((this._DyjFeeType != value))
				{
					this.OnDyjFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._DyjFeeType = value;
					this.SendPropertyChanged("DyjFeeType");
					this.OnDyjFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(50)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeXmlItems")]
	public partial class InvoiceNoticeXmlItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeXmlID;
		
		private string _InvoiceNoticeItemID;
		
		private int _Xh;
		
		private string _Spmc;
		
		private string _Ggxh;
		
		private string _Jldw;
		
		private string _Spbm;
		
		private string _Qyspbm;
		
		private string _Syyhzcbz;
		
		private string _Lslbz;
		
		private string _Yhzcsm;
		
		private decimal _Dj;
		
		private decimal _Sl;
		
		private decimal _Je;
		
		private decimal _Slv;
		
		private decimal _Se;
		
		private System.Nullable<decimal> _Kce;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<InvoiceNoticeXmls> _InvoiceNoticeXmls;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeXmlIDChanging(string value);
    partial void OnInvoiceNoticeXmlIDChanged();
    partial void OnInvoiceNoticeItemIDChanging(string value);
    partial void OnInvoiceNoticeItemIDChanged();
    partial void OnXhChanging(int value);
    partial void OnXhChanged();
    partial void OnSpmcChanging(string value);
    partial void OnSpmcChanged();
    partial void OnGgxhChanging(string value);
    partial void OnGgxhChanged();
    partial void OnJldwChanging(string value);
    partial void OnJldwChanged();
    partial void OnSpbmChanging(string value);
    partial void OnSpbmChanged();
    partial void OnQyspbmChanging(string value);
    partial void OnQyspbmChanged();
    partial void OnSyyhzcbzChanging(string value);
    partial void OnSyyhzcbzChanged();
    partial void OnLslbzChanging(string value);
    partial void OnLslbzChanged();
    partial void OnYhzcsmChanging(string value);
    partial void OnYhzcsmChanged();
    partial void OnDjChanging(decimal value);
    partial void OnDjChanged();
    partial void OnSlChanging(decimal value);
    partial void OnSlChanged();
    partial void OnJeChanging(decimal value);
    partial void OnJeChanged();
    partial void OnSlvChanging(decimal value);
    partial void OnSlvChanged();
    partial void OnSeChanging(decimal value);
    partial void OnSeChanged();
    partial void OnKceChanging(System.Nullable<decimal> value);
    partial void OnKceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public InvoiceNoticeXmlItems()
		{
			this._InvoiceNoticeXmls = default(EntityRef<InvoiceNoticeXmls>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeXmlID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeXmlID
		{
			get
			{
				return this._InvoiceNoticeXmlID;
			}
			set
			{
				if ((this._InvoiceNoticeXmlID != value))
				{
					if (this._InvoiceNoticeXmls.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoticeXmlIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeXmlID = value;
					this.SendPropertyChanged("InvoiceNoticeXmlID");
					this.OnInvoiceNoticeXmlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeItemID", DbType="VarChar(50)")]
		public string InvoiceNoticeItemID
		{
			get
			{
				return this._InvoiceNoticeItemID;
			}
			set
			{
				if ((this._InvoiceNoticeItemID != value))
				{
					this.OnInvoiceNoticeItemIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeItemID = value;
					this.SendPropertyChanged("InvoiceNoticeItemID");
					this.OnInvoiceNoticeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xh", DbType="Int NOT NULL")]
		public int Xh
		{
			get
			{
				return this._Xh;
			}
			set
			{
				if ((this._Xh != value))
				{
					this.OnXhChanging(value);
					this.SendPropertyChanging();
					this._Xh = value;
					this.SendPropertyChanged("Xh");
					this.OnXhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spmc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Spmc
		{
			get
			{
				return this._Spmc;
			}
			set
			{
				if ((this._Spmc != value))
				{
					this.OnSpmcChanging(value);
					this.SendPropertyChanging();
					this._Spmc = value;
					this.SendPropertyChanged("Spmc");
					this.OnSpmcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ggxh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ggxh
		{
			get
			{
				return this._Ggxh;
			}
			set
			{
				if ((this._Ggxh != value))
				{
					this.OnGgxhChanging(value);
					this.SendPropertyChanging();
					this._Ggxh = value;
					this.SendPropertyChanged("Ggxh");
					this.OnGgxhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jldw", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Jldw
		{
			get
			{
				return this._Jldw;
			}
			set
			{
				if ((this._Jldw != value))
				{
					this.OnJldwChanging(value);
					this.SendPropertyChanging();
					this._Jldw = value;
					this.SendPropertyChanged("Jldw");
					this.OnJldwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spbm", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Spbm
		{
			get
			{
				return this._Spbm;
			}
			set
			{
				if ((this._Spbm != value))
				{
					this.OnSpbmChanging(value);
					this.SendPropertyChanging();
					this._Spbm = value;
					this.SendPropertyChanged("Spbm");
					this.OnSpbmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qyspbm", DbType="VarChar(50)")]
		public string Qyspbm
		{
			get
			{
				return this._Qyspbm;
			}
			set
			{
				if ((this._Qyspbm != value))
				{
					this.OnQyspbmChanging(value);
					this.SendPropertyChanging();
					this._Qyspbm = value;
					this.SendPropertyChanged("Qyspbm");
					this.OnQyspbmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Syyhzcbz", DbType="VarChar(50)")]
		public string Syyhzcbz
		{
			get
			{
				return this._Syyhzcbz;
			}
			set
			{
				if ((this._Syyhzcbz != value))
				{
					this.OnSyyhzcbzChanging(value);
					this.SendPropertyChanging();
					this._Syyhzcbz = value;
					this.SendPropertyChanged("Syyhzcbz");
					this.OnSyyhzcbzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lslbz", DbType="VarChar(50)")]
		public string Lslbz
		{
			get
			{
				return this._Lslbz;
			}
			set
			{
				if ((this._Lslbz != value))
				{
					this.OnLslbzChanging(value);
					this.SendPropertyChanging();
					this._Lslbz = value;
					this.SendPropertyChanged("Lslbz");
					this.OnLslbzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yhzcsm", DbType="VarChar(50)")]
		public string Yhzcsm
		{
			get
			{
				return this._Yhzcsm;
			}
			set
			{
				if ((this._Yhzcsm != value))
				{
					this.OnYhzcsmChanging(value);
					this.SendPropertyChanging();
					this._Yhzcsm = value;
					this.SendPropertyChanged("Yhzcsm");
					this.OnYhzcsmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dj", DbType="Decimal(21,10) NOT NULL")]
		public decimal Dj
		{
			get
			{
				return this._Dj;
			}
			set
			{
				if ((this._Dj != value))
				{
					this.OnDjChanging(value);
					this.SendPropertyChanging();
					this._Dj = value;
					this.SendPropertyChanged("Dj");
					this.OnDjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sl", DbType="Decimal(18,7) NOT NULL")]
		public decimal Sl
		{
			get
			{
				return this._Sl;
			}
			set
			{
				if ((this._Sl != value))
				{
					this.OnSlChanging(value);
					this.SendPropertyChanging();
					this._Sl = value;
					this.SendPropertyChanged("Sl");
					this.OnSlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Je", DbType="Decimal(18,4) NOT NULL")]
		public decimal Je
		{
			get
			{
				return this._Je;
			}
			set
			{
				if ((this._Je != value))
				{
					this.OnJeChanging(value);
					this.SendPropertyChanging();
					this._Je = value;
					this.SendPropertyChanged("Je");
					this.OnJeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slv", DbType="Decimal(18,4) NOT NULL")]
		public decimal Slv
		{
			get
			{
				return this._Slv;
			}
			set
			{
				if ((this._Slv != value))
				{
					this.OnSlvChanging(value);
					this.SendPropertyChanging();
					this._Slv = value;
					this.SendPropertyChanged("Slv");
					this.OnSlvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Se", DbType="Decimal(18,4) NOT NULL")]
		public decimal Se
		{
			get
			{
				return this._Se;
			}
			set
			{
				if ((this._Se != value))
				{
					this.OnSeChanging(value);
					this.SendPropertyChanging();
					this._Se = value;
					this.SendPropertyChanged("Se");
					this.OnSeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kce", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Kce
		{
			get
			{
				return this._Kce;
			}
			set
			{
				if ((this._Kce != value))
				{
					this.OnKceChanging(value);
					this.SendPropertyChanging();
					this._Kce = value;
					this.SendPropertyChanged("Kce");
					this.OnKceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoticeXmls_InvoiceNoticeXmlItems", Storage="_InvoiceNoticeXmls", ThisKey="InvoiceNoticeXmlID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceNoticeXmls InvoiceNoticeXmls
		{
			get
			{
				return this._InvoiceNoticeXmls.Entity;
			}
			set
			{
				InvoiceNoticeXmls previousValue = this._InvoiceNoticeXmls.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoticeXmls.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoticeXmls.Entity = null;
						previousValue.InvoiceNoticeXmlItems.Remove(this);
					}
					this._InvoiceNoticeXmls.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoticeXmlItems.Add(this);
						this._InvoiceNoticeXmlID = value.ID;
					}
					else
					{
						this._InvoiceNoticeXmlID = default(string);
					}
					this.SendPropertyChanged("InvoiceNoticeXmls");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDateTopView")]
	public partial class InvoiceDateTopView
	{
		
		private string _InvoiceNoticeID;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		public InvoiceDateTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					this._InvoiceNoticeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNotices")]
	public partial class InvoiceNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ApplyID;
		
		private string _AdminID;
		
		private string _ClientID;
		
		private string _ClientInvoiceID;
		
		private int _InvoiceType;
		
		private decimal _InvoiceTaxRate;
		
		private string _Address;
		
		private string _Tel;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private int _DeliveryType;
		
		private string _MailName;
		
		private string _MailMobile;
		
		private string _MailAddress;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _IsExStock;
		
		private string _VoucherNo;
		
		private System.Nullable<decimal> _AmountLimit;
		
		private EntitySet<InvoiceWaybills> _InvoiceWaybills;
		
		private EntitySet<InvoiceNoticeItems> _InvoiceNoticeItems;
		
		private EntitySet<InvoiceNoticeXmls> _InvoiceNoticeXmls;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnApplyIDChanging(string value);
    partial void OnApplyIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnClientInvoiceIDChanging(string value);
    partial void OnClientInvoiceIDChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnInvoiceTaxRateChanging(decimal value);
    partial void OnInvoiceTaxRateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnMailNameChanging(string value);
    partial void OnMailNameChanged();
    partial void OnMailMobileChanging(string value);
    partial void OnMailMobileChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsExStockChanging(System.Nullable<bool> value);
    partial void OnIsExStockChanged();
    partial void OnVoucherNoChanging(string value);
    partial void OnVoucherNoChanged();
    partial void OnAmountLimitChanging(System.Nullable<decimal> value);
    partial void OnAmountLimitChanged();
    #endregion
		
		public InvoiceNotices()
		{
			this._InvoiceWaybills = new EntitySet<InvoiceWaybills>(new Action<InvoiceWaybills>(this.attach_InvoiceWaybills), new Action<InvoiceWaybills>(this.detach_InvoiceWaybills));
			this._InvoiceNoticeItems = new EntitySet<InvoiceNoticeItems>(new Action<InvoiceNoticeItems>(this.attach_InvoiceNoticeItems), new Action<InvoiceNoticeItems>(this.detach_InvoiceNoticeItems));
			this._InvoiceNoticeXmls = new EntitySet<InvoiceNoticeXmls>(new Action<InvoiceNoticeXmls>(this.attach_InvoiceNoticeXmls), new Action<InvoiceNoticeXmls>(this.detach_InvoiceNoticeXmls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplyID
		{
			get
			{
				return this._ApplyID;
			}
			set
			{
				if ((this._ApplyID != value))
				{
					this.OnApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ApplyID = value;
					this.SendPropertyChanged("ApplyID");
					this.OnApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientInvoiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientInvoiceID
		{
			get
			{
				return this._ClientInvoiceID;
			}
			set
			{
				if ((this._ClientInvoiceID != value))
				{
					this.OnClientInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._ClientInvoiceID = value;
					this.SendPropertyChanged("ClientInvoiceID");
					this.OnClientInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTaxRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal InvoiceTaxRate
		{
			get
			{
				return this._InvoiceTaxRate;
			}
			set
			{
				if ((this._InvoiceTaxRate != value))
				{
					this.OnInvoiceTaxRateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTaxRate = value;
					this.SendPropertyChanged("InvoiceTaxRate");
					this.OnInvoiceTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string MailName
		{
			get
			{
				return this._MailName;
			}
			set
			{
				if ((this._MailName != value))
				{
					this.OnMailNameChanging(value);
					this.SendPropertyChanging();
					this._MailName = value;
					this.SendPropertyChanged("MailName");
					this.OnMailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailMobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MailMobile
		{
			get
			{
				return this._MailMobile;
			}
			set
			{
				if ((this._MailMobile != value))
				{
					this.OnMailMobileChanging(value);
					this.SendPropertyChanging();
					this._MailMobile = value;
					this.SendPropertyChanged("MailMobile");
					this.OnMailMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExStock", DbType="Bit")]
		public System.Nullable<bool> IsExStock
		{
			get
			{
				return this._IsExStock;
			}
			set
			{
				if ((this._IsExStock != value))
				{
					this.OnIsExStockChanging(value);
					this.SendPropertyChanging();
					this._IsExStock = value;
					this.SendPropertyChanged("IsExStock");
					this.OnIsExStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="VarChar(50)")]
		public string VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLimit", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AmountLimit
		{
			get
			{
				return this._AmountLimit;
			}
			set
			{
				if ((this._AmountLimit != value))
				{
					this.OnAmountLimitChanging(value);
					this.SendPropertyChanging();
					this._AmountLimit = value;
					this.SendPropertyChanged("AmountLimit");
					this.OnAmountLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceWaybills", Storage="_InvoiceWaybills", ThisKey="ID", OtherKey="InvoiceNoticeID")]
		public EntitySet<InvoiceWaybills> InvoiceWaybills
		{
			get
			{
				return this._InvoiceWaybills;
			}
			set
			{
				this._InvoiceWaybills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeItems", Storage="_InvoiceNoticeItems", ThisKey="ID", OtherKey="InvoiceNoticeID")]
		public EntitySet<InvoiceNoticeItems> InvoiceNoticeItems
		{
			get
			{
				return this._InvoiceNoticeItems;
			}
			set
			{
				this._InvoiceNoticeItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeXmls", Storage="_InvoiceNoticeXmls", ThisKey="ID", OtherKey="InvoiceNoticeID")]
		public EntitySet<InvoiceNoticeXmls> InvoiceNoticeXmls
		{
			get
			{
				return this._InvoiceNoticeXmls;
			}
			set
			{
				this._InvoiceNoticeXmls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceWaybills(InvoiceWaybills entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = this;
		}
		
		private void detach_InvoiceWaybills(InvoiceWaybills entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = null;
		}
		
		private void attach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = this;
		}
		
		private void detach_InvoiceNoticeItems(InvoiceNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = null;
		}
		
		private void attach_InvoiceNoticeXmls(InvoiceNoticeXmls entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = this;
		}
		
		private void detach_InvoiceNoticeXmls(InvoiceNoticeXmls entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNotices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceipts")]
	public partial class OrderReceipts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FinanceReceiptID;
		
		private string _ClientID;
		
		private string _OrderID;
		
		private string _FeeSourceID;
		
		private int _FeeType;
		
		private int _Type;
		
		private string _Currency;
		
		private decimal _Rate;
		
		private decimal _Amount;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _ReImport;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFinanceReceiptIDChanging(string value);
    partial void OnFinanceReceiptIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnFeeSourceIDChanging(string value);
    partial void OnFeeSourceIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnReImportChanging(System.Nullable<bool> value);
    partial void OnReImportChanged();
    #endregion
		
		public OrderReceipts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceReceiptID", DbType="VarChar(50)")]
		public string FinanceReceiptID
		{
			get
			{
				return this._FinanceReceiptID;
			}
			set
			{
				if ((this._FinanceReceiptID != value))
				{
					this.OnFinanceReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceReceiptID = value;
					this.SendPropertyChanged("FinanceReceiptID");
					this.OnFinanceReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeSourceID", DbType="VarChar(50)")]
		public string FeeSourceID
		{
			get
			{
				return this._FeeSourceID;
			}
			set
			{
				if ((this._FeeSourceID != value))
				{
					this.OnFeeSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FeeSourceID = value;
					this.SendPropertyChanged("FeeSourceID");
					this.OnFeeSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReImport", DbType="Bit")]
		public System.Nullable<bool> ReImport
		{
			get
			{
				return this._ReImport;
			}
			set
			{
				if ((this._ReImport != value))
				{
					this.OnReImportChanging(value);
					this.SendPropertyChanging();
					this._ReImport = value;
					this.SendPropertyChanged("ReImport");
					this.OnReImportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceiptImportItems")]
	public partial class OrderReceiptImportItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ImportID;
		
		private string _FinanceRepID;
		
		private string _Seq;
		
		private System.Nullable<decimal> _USD;
		
		private System.Nullable<decimal> _RMB;
		
		private System.Nullable<decimal> _DeclareRate;
		
		private string _Currency;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnImportIDChanging(string value);
    partial void OnImportIDChanged();
    partial void OnFinanceRepIDChanging(string value);
    partial void OnFinanceRepIDChanged();
    partial void OnSeqChanging(string value);
    partial void OnSeqChanged();
    partial void OnUSDChanging(System.Nullable<decimal> value);
    partial void OnUSDChanged();
    partial void OnRMBChanging(System.Nullable<decimal> value);
    partial void OnRMBChanged();
    partial void OnDeclareRateChanging(System.Nullable<decimal> value);
    partial void OnDeclareRateChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderReceiptImportItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceRepID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceRepID
		{
			get
			{
				return this._FinanceRepID;
			}
			set
			{
				if ((this._FinanceRepID != value))
				{
					this.OnFinanceRepIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceRepID = value;
					this.SendPropertyChanged("FinanceRepID");
					this.OnFinanceRepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="VarChar(100)")]
		public string Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USD", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> USD
		{
			get
			{
				return this._USD;
			}
			set
			{
				if ((this._USD != value))
				{
					this.OnUSDChanging(value);
					this.SendPropertyChanging();
					this._USD = value;
					this.SendPropertyChanged("USD");
					this.OnUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMB", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> RMB
		{
			get
			{
				return this._RMB;
			}
			set
			{
				if ((this._RMB != value))
				{
					this.OnRMBChanging(value);
					this.SendPropertyChanging();
					this._RMB = value;
					this.SendPropertyChanged("RMB");
					this.OnRMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareRate", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> DeclareRate
		{
			get
			{
				return this._DeclareRate;
			}
			set
			{
				if ((this._DeclareRate != value))
				{
					this.OnDeclareRateChanging(value);
					this.SendPropertyChanging();
					this._DeclareRate = value;
					this.SendPropertyChanged("DeclareRate");
					this.OnDeclareRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancePayments")]
	public partial class FinancePayments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SeqNo;
		
		private string _PayeeName;
		
		private string _BankName;
		
		private string _BankAccount;
		
		private string _PayerID;
		
		private int _FeeType;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private decimal _ExchangeRate;
		
		private int _PayType;
		
		private System.DateTime _PayDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private int _IsPaperInvoiceUpload;
		
		private System.Nullable<bool> _FinPCreSta;
		
		private string _FinPCreWord;
		
		private string _FinPCreNo;
		
		private string _RequestID;
		
		private EntityRef<FinanceAccounts> _FinanceAccounts;
		
		private EntityRef<FinanceVaults> _FinanceVaults;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnPayTypeChanging(int value);
    partial void OnPayTypeChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsPaperInvoiceUploadChanging(int value);
    partial void OnIsPaperInvoiceUploadChanged();
    partial void OnFinPCreStaChanging(System.Nullable<bool> value);
    partial void OnFinPCreStaChanged();
    partial void OnFinPCreWordChanging(string value);
    partial void OnFinPCreWordChanged();
    partial void OnFinPCreNoChanging(string value);
    partial void OnFinPCreNoChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    #endregion
		
		public FinancePayments()
		{
			this._FinanceAccounts = default(EntityRef<FinanceAccounts>);
			this._FinanceVaults = default(EntityRef<FinanceVaults>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					if (this._FinanceVaults.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					if (this._FinanceAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="Int NOT NULL")]
		public int PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="Date NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaperInvoiceUpload", DbType="Int NOT NULL")]
		public int IsPaperInvoiceUpload
		{
			get
			{
				return this._IsPaperInvoiceUpload;
			}
			set
			{
				if ((this._IsPaperInvoiceUpload != value))
				{
					this.OnIsPaperInvoiceUploadChanging(value);
					this.SendPropertyChanging();
					this._IsPaperInvoiceUpload = value;
					this.SendPropertyChanged("IsPaperInvoiceUpload");
					this.OnIsPaperInvoiceUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinPCreSta", DbType="Bit")]
		public System.Nullable<bool> FinPCreSta
		{
			get
			{
				return this._FinPCreSta;
			}
			set
			{
				if ((this._FinPCreSta != value))
				{
					this.OnFinPCreStaChanging(value);
					this.SendPropertyChanging();
					this._FinPCreSta = value;
					this.SendPropertyChanged("FinPCreSta");
					this.OnFinPCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinPCreWord", DbType="VarChar(50)")]
		public string FinPCreWord
		{
			get
			{
				return this._FinPCreWord;
			}
			set
			{
				if ((this._FinPCreWord != value))
				{
					this.OnFinPCreWordChanging(value);
					this.SendPropertyChanging();
					this._FinPCreWord = value;
					this.SendPropertyChanged("FinPCreWord");
					this.OnFinPCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinPCreNo", DbType="VarChar(50)")]
		public string FinPCreNo
		{
			get
			{
				return this._FinPCreNo;
			}
			set
			{
				if ((this._FinPCreNo != value))
				{
					this.OnFinPCreNoChanging(value);
					this.SendPropertyChanging();
					this._FinPCreNo = value;
					this.SendPropertyChanged("FinPCreNo");
					this.OnFinPCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinancePayments", Storage="_FinanceAccounts", ThisKey="FinanceAccountID", OtherKey="ID", IsForeignKey=true)]
		public FinanceAccounts FinanceAccounts
		{
			get
			{
				return this._FinanceAccounts.Entity;
			}
			set
			{
				FinanceAccounts previousValue = this._FinanceAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FinanceAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceAccounts.Entity = null;
						previousValue.FinancePayments.Remove(this);
					}
					this._FinanceAccounts.Entity = value;
					if ((value != null))
					{
						value.FinancePayments.Add(this);
						this._FinanceAccountID = value.ID;
					}
					else
					{
						this._FinanceAccountID = default(string);
					}
					this.SendPropertyChanged("FinanceAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinancePayments", Storage="_FinanceVaults", ThisKey="FinanceVaultID", OtherKey="ID", IsForeignKey=true)]
		public FinanceVaults FinanceVaults
		{
			get
			{
				return this._FinanceVaults.Entity;
			}
			set
			{
				FinanceVaults previousValue = this._FinanceVaults.Entity;
				if (((previousValue != value) 
							|| (this._FinanceVaults.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceVaults.Entity = null;
						previousValue.FinancePayments.Remove(this);
					}
					this._FinanceVaults.Entity = value;
					if ((value != null))
					{
						value.FinancePayments.Add(this);
						this._FinanceVaultID = value.ID;
					}
					else
					{
						this._FinanceVaultID = default(string);
					}
					this.SendPropertyChanged("FinanceVaults");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceReceipts")]
	public partial class FinanceReceipts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SeqNo;
		
		private string _Payer;
		
		private int _FeeType;
		
		private int _ReceiptType;
		
		private System.DateTime _ReceiptDate;
		
		private string _Currency;
		
		private decimal _Rate;
		
		private decimal _Amount;
		
		private string _FinanceVaultID;
		
		private string _FinanceAccountID;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private string _FormNo;
		
		private System.Nullable<int> _AccountProperty;
		
		private string _DyjID;
		
		private System.Nullable<bool> _GoodsCreStatus;
		
		private string _GoodsCreWord;
		
		private string _GoodsCreNo;
		
		private string _RequestID;
		
		private EntityRef<ReceiptNotices> _ReceiptNotices;
		
		private EntityRef<FinanceAccounts> _FinanceAccounts;
		
		private EntityRef<FinanceVaults> _FinanceVaults;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnPayerChanging(string value);
    partial void OnPayerChanged();
    partial void OnFeeTypeChanging(int value);
    partial void OnFeeTypeChanged();
    partial void OnReceiptTypeChanging(int value);
    partial void OnReceiptTypeChanged();
    partial void OnReceiptDateChanging(System.DateTime value);
    partial void OnReceiptDateChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnFinanceVaultIDChanging(string value);
    partial void OnFinanceVaultIDChanged();
    partial void OnFinanceAccountIDChanging(string value);
    partial void OnFinanceAccountIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFormNoChanging(string value);
    partial void OnFormNoChanged();
    partial void OnAccountPropertyChanging(System.Nullable<int> value);
    partial void OnAccountPropertyChanged();
    partial void OnDyjIDChanging(string value);
    partial void OnDyjIDChanged();
    partial void OnGoodsCreStatusChanging(System.Nullable<bool> value);
    partial void OnGoodsCreStatusChanged();
    partial void OnGoodsCreWordChanging(string value);
    partial void OnGoodsCreWordChanged();
    partial void OnGoodsCreNoChanging(string value);
    partial void OnGoodsCreNoChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    #endregion
		
		public FinanceReceipts()
		{
			this._ReceiptNotices = default(EntityRef<ReceiptNotices>);
			this._FinanceAccounts = default(EntityRef<FinanceAccounts>);
			this._FinanceVaults = default(EntityRef<FinanceVaults>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payer", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Payer
		{
			get
			{
				return this._Payer;
			}
			set
			{
				if ((this._Payer != value))
				{
					this.OnPayerChanging(value);
					this.SendPropertyChanging();
					this._Payer = value;
					this.SendPropertyChanged("Payer");
					this.OnPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int NOT NULL")]
		public int FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="Int NOT NULL")]
		public int ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this.OnReceiptTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptType = value;
					this.SendPropertyChanged("ReceiptType");
					this.OnReceiptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceVaultID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceVaultID
		{
			get
			{
				return this._FinanceVaultID;
			}
			set
			{
				if ((this._FinanceVaultID != value))
				{
					if (this._FinanceVaults.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceVaultIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceVaultID = value;
					this.SendPropertyChanged("FinanceVaultID");
					this.OnFinanceVaultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinanceAccountID
		{
			get
			{
				return this._FinanceAccountID;
			}
			set
			{
				if ((this._FinanceAccountID != value))
				{
					if (this._FinanceAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceAccountID = value;
					this.SendPropertyChanged("FinanceAccountID");
					this.OnFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormNo", DbType="VarChar(50)")]
		public string FormNo
		{
			get
			{
				return this._FormNo;
			}
			set
			{
				if ((this._FormNo != value))
				{
					this.OnFormNoChanging(value);
					this.SendPropertyChanging();
					this._FormNo = value;
					this.SendPropertyChanged("FormNo");
					this.OnFormNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountProperty", DbType="Int")]
		public System.Nullable<int> AccountProperty
		{
			get
			{
				return this._AccountProperty;
			}
			set
			{
				if ((this._AccountProperty != value))
				{
					this.OnAccountPropertyChanging(value);
					this.SendPropertyChanging();
					this._AccountProperty = value;
					this.SendPropertyChanged("AccountProperty");
					this.OnAccountPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjID", DbType="VarChar(50)")]
		public string DyjID
		{
			get
			{
				return this._DyjID;
			}
			set
			{
				if ((this._DyjID != value))
				{
					this.OnDyjIDChanging(value);
					this.SendPropertyChanging();
					this._DyjID = value;
					this.SendPropertyChanged("DyjID");
					this.OnDyjIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreStatus", DbType="Bit")]
		public System.Nullable<bool> GoodsCreStatus
		{
			get
			{
				return this._GoodsCreStatus;
			}
			set
			{
				if ((this._GoodsCreStatus != value))
				{
					this.OnGoodsCreStatusChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreStatus = value;
					this.SendPropertyChanged("GoodsCreStatus");
					this.OnGoodsCreStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreWord", DbType="VarChar(50)")]
		public string GoodsCreWord
		{
			get
			{
				return this._GoodsCreWord;
			}
			set
			{
				if ((this._GoodsCreWord != value))
				{
					this.OnGoodsCreWordChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreWord = value;
					this.SendPropertyChanged("GoodsCreWord");
					this.OnGoodsCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsCreNo", DbType="VarChar(50)")]
		public string GoodsCreNo
		{
			get
			{
				return this._GoodsCreNo;
			}
			set
			{
				if ((this._GoodsCreNo != value))
				{
					this.OnGoodsCreNoChanging(value);
					this.SendPropertyChanging();
					this._GoodsCreNo = value;
					this.SendPropertyChanged("GoodsCreNo");
					this.OnGoodsCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceReceipts_ReceiptNotices", Storage="_ReceiptNotices", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ReceiptNotices ReceiptNotices
		{
			get
			{
				return this._ReceiptNotices.Entity;
			}
			set
			{
				ReceiptNotices previousValue = this._ReceiptNotices.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptNotices.Entity = null;
						previousValue.FinanceReceipts = null;
					}
					this._ReceiptNotices.Entity = value;
					if ((value != null))
					{
						value.FinanceReceipts = this;
					}
					this.SendPropertyChanged("ReceiptNotices");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceAccounts_FinanceReceipts", Storage="_FinanceAccounts", ThisKey="FinanceAccountID", OtherKey="ID", IsForeignKey=true)]
		public FinanceAccounts FinanceAccounts
		{
			get
			{
				return this._FinanceAccounts.Entity;
			}
			set
			{
				FinanceAccounts previousValue = this._FinanceAccounts.Entity;
				if (((previousValue != value) 
							|| (this._FinanceAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceAccounts.Entity = null;
						previousValue.FinanceReceipts.Remove(this);
					}
					this._FinanceAccounts.Entity = value;
					if ((value != null))
					{
						value.FinanceReceipts.Add(this);
						this._FinanceAccountID = value.ID;
					}
					else
					{
						this._FinanceAccountID = default(string);
					}
					this.SendPropertyChanged("FinanceAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinanceVaults_FinanceReceipts", Storage="_FinanceVaults", ThisKey="FinanceVaultID", OtherKey="ID", IsForeignKey=true)]
		public FinanceVaults FinanceVaults
		{
			get
			{
				return this._FinanceVaults.Entity;
			}
			set
			{
				FinanceVaults previousValue = this._FinanceVaults.Entity;
				if (((previousValue != value) 
							|| (this._FinanceVaults.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinanceVaults.Entity = null;
						previousValue.FinanceReceipts.Remove(this);
					}
					this._FinanceVaults.Entity = value;
					if ((value != null))
					{
						value.FinanceReceipts.Add(this);
						this._FinanceVaultID = value.ID;
					}
					else
					{
						this._FinanceVaultID = default(string);
					}
					this.SendPropertyChanged("FinanceVaults");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FundTransferApplies")]
	public partial class FundTransferApplies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FromSeqNo;
		
		private string _OutAccountID;
		
		private string _OutSeqNo;
		
		private decimal _OutAmount;
		
		private string _OutCurrency;
		
		private string _InAccountID;
		
		private string _InSeqNo;
		
		private decimal _InAmount;
		
		private string _InCurrency;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _DiscountInterest;
		
		private System.Nullable<decimal> _Poundage;
		
		private string _PoundageSeqNo;
		
		private System.Nullable<int> _FeeType;
		
		private System.Nullable<int> _PaymentType;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _OrderID;
		
		private int _ApplyStatus;
		
		private string _AdminID;
		
		private System.Nullable<decimal> _QRCodeFee;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _FundTranCreSta;
		
		private string _FundTranCreWord;
		
		private string _FundTranCreNo;
		
		private string _RequestID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFromSeqNoChanging(string value);
    partial void OnFromSeqNoChanged();
    partial void OnOutAccountIDChanging(string value);
    partial void OnOutAccountIDChanged();
    partial void OnOutSeqNoChanging(string value);
    partial void OnOutSeqNoChanged();
    partial void OnOutAmountChanging(decimal value);
    partial void OnOutAmountChanged();
    partial void OnOutCurrencyChanging(string value);
    partial void OnOutCurrencyChanged();
    partial void OnInAccountIDChanging(string value);
    partial void OnInAccountIDChanged();
    partial void OnInSeqNoChanging(string value);
    partial void OnInSeqNoChanged();
    partial void OnInAmountChanging(decimal value);
    partial void OnInAmountChanged();
    partial void OnInCurrencyChanging(string value);
    partial void OnInCurrencyChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnDiscountInterestChanging(System.Nullable<decimal> value);
    partial void OnDiscountInterestChanged();
    partial void OnPoundageChanging(System.Nullable<decimal> value);
    partial void OnPoundageChanged();
    partial void OnPoundageSeqNoChanging(string value);
    partial void OnPoundageSeqNoChanged();
    partial void OnFeeTypeChanging(System.Nullable<int> value);
    partial void OnFeeTypeChanged();
    partial void OnPaymentTypeChanging(System.Nullable<int> value);
    partial void OnPaymentTypeChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnApplyStatusChanging(int value);
    partial void OnApplyStatusChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnQRCodeFeeChanging(System.Nullable<decimal> value);
    partial void OnQRCodeFeeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnFundTranCreStaChanging(System.Nullable<bool> value);
    partial void OnFundTranCreStaChanged();
    partial void OnFundTranCreWordChanging(string value);
    partial void OnFundTranCreWordChanged();
    partial void OnFundTranCreNoChanging(string value);
    partial void OnFundTranCreNoChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    #endregion
		
		public FundTransferApplies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSeqNo", DbType="VarChar(50)")]
		public string FromSeqNo
		{
			get
			{
				return this._FromSeqNo;
			}
			set
			{
				if ((this._FromSeqNo != value))
				{
					this.OnFromSeqNoChanging(value);
					this.SendPropertyChanging();
					this._FromSeqNo = value;
					this.SendPropertyChanged("FromSeqNo");
					this.OnFromSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OutAccountID
		{
			get
			{
				return this._OutAccountID;
			}
			set
			{
				if ((this._OutAccountID != value))
				{
					this.OnOutAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OutAccountID = value;
					this.SendPropertyChanged("OutAccountID");
					this.OnOutAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutSeqNo", DbType="VarChar(50)")]
		public string OutSeqNo
		{
			get
			{
				return this._OutSeqNo;
			}
			set
			{
				if ((this._OutSeqNo != value))
				{
					this.OnOutSeqNoChanging(value);
					this.SendPropertyChanging();
					this._OutSeqNo = value;
					this.SendPropertyChanged("OutSeqNo");
					this.OnOutSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal OutAmount
		{
			get
			{
				return this._OutAmount;
			}
			set
			{
				if ((this._OutAmount != value))
				{
					this.OnOutAmountChanging(value);
					this.SendPropertyChanging();
					this._OutAmount = value;
					this.SendPropertyChanged("OutAmount");
					this.OnOutAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutCurrency", DbType="VarChar(5)")]
		public string OutCurrency
		{
			get
			{
				return this._OutCurrency;
			}
			set
			{
				if ((this._OutCurrency != value))
				{
					this.OnOutCurrencyChanging(value);
					this.SendPropertyChanging();
					this._OutCurrency = value;
					this.SendPropertyChanged("OutCurrency");
					this.OnOutCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InAccountID
		{
			get
			{
				return this._InAccountID;
			}
			set
			{
				if ((this._InAccountID != value))
				{
					this.OnInAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InAccountID = value;
					this.SendPropertyChanged("InAccountID");
					this.OnInAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InSeqNo", DbType="VarChar(50)")]
		public string InSeqNo
		{
			get
			{
				return this._InSeqNo;
			}
			set
			{
				if ((this._InSeqNo != value))
				{
					this.OnInSeqNoChanging(value);
					this.SendPropertyChanging();
					this._InSeqNo = value;
					this.SendPropertyChanged("InSeqNo");
					this.OnInSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal InAmount
		{
			get
			{
				return this._InAmount;
			}
			set
			{
				if ((this._InAmount != value))
				{
					this.OnInAmountChanging(value);
					this.SendPropertyChanging();
					this._InAmount = value;
					this.SendPropertyChanged("InAmount");
					this.OnInAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCurrency", DbType="VarChar(5)")]
		public string InCurrency
		{
			get
			{
				return this._InCurrency;
			}
			set
			{
				if ((this._InCurrency != value))
				{
					this.OnInCurrencyChanging(value);
					this.SendPropertyChanging();
					this._InCurrency = value;
					this.SendPropertyChanged("InCurrency");
					this.OnInCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInterest", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> DiscountInterest
		{
			get
			{
				return this._DiscountInterest;
			}
			set
			{
				if ((this._DiscountInterest != value))
				{
					this.OnDiscountInterestChanging(value);
					this.SendPropertyChanging();
					this._DiscountInterest = value;
					this.SendPropertyChanged("DiscountInterest");
					this.OnDiscountInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poundage", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Poundage
		{
			get
			{
				return this._Poundage;
			}
			set
			{
				if ((this._Poundage != value))
				{
					this.OnPoundageChanging(value);
					this.SendPropertyChanging();
					this._Poundage = value;
					this.SendPropertyChanged("Poundage");
					this.OnPoundageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoundageSeqNo", DbType="VarChar(50)")]
		public string PoundageSeqNo
		{
			get
			{
				return this._PoundageSeqNo;
			}
			set
			{
				if ((this._PoundageSeqNo != value))
				{
					this.OnPoundageSeqNoChanging(value);
					this.SendPropertyChanging();
					this._PoundageSeqNo = value;
					this.SendPropertyChanged("PoundageSeqNo");
					this.OnPoundageSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeType", DbType="Int")]
		public System.Nullable<int> FeeType
		{
			get
			{
				return this._FeeType;
			}
			set
			{
				if ((this._FeeType != value))
				{
					this.OnFeeTypeChanging(value);
					this.SendPropertyChanging();
					this._FeeType = value;
					this.SendPropertyChanged("FeeType");
					this.OnFeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int")]
		public System.Nullable<int> PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyStatus", DbType="Int NOT NULL")]
		public int ApplyStatus
		{
			get
			{
				return this._ApplyStatus;
			}
			set
			{
				if ((this._ApplyStatus != value))
				{
					this.OnApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._ApplyStatus = value;
					this.SendPropertyChanged("ApplyStatus");
					this.OnApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeFee", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> QRCodeFee
		{
			get
			{
				return this._QRCodeFee;
			}
			set
			{
				if ((this._QRCodeFee != value))
				{
					this.OnQRCodeFeeChanging(value);
					this.SendPropertyChanging();
					this._QRCodeFee = value;
					this.SendPropertyChanged("QRCodeFee");
					this.OnQRCodeFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundTranCreSta", DbType="Bit")]
		public System.Nullable<bool> FundTranCreSta
		{
			get
			{
				return this._FundTranCreSta;
			}
			set
			{
				if ((this._FundTranCreSta != value))
				{
					this.OnFundTranCreStaChanging(value);
					this.SendPropertyChanging();
					this._FundTranCreSta = value;
					this.SendPropertyChanged("FundTranCreSta");
					this.OnFundTranCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundTranCreWord", DbType="VarChar(50)")]
		public string FundTranCreWord
		{
			get
			{
				return this._FundTranCreWord;
			}
			set
			{
				if ((this._FundTranCreWord != value))
				{
					this.OnFundTranCreWordChanging(value);
					this.SendPropertyChanging();
					this._FundTranCreWord = value;
					this.SendPropertyChanged("FundTranCreWord");
					this.OnFundTranCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundTranCreNo", DbType="VarChar(50)")]
		public string FundTranCreNo
		{
			get
			{
				return this._FundTranCreNo;
			}
			set
			{
				if ((this._FundTranCreNo != value))
				{
					this.OnFundTranCreNoChanging(value);
					this.SendPropertyChanging();
					this._FundTranCreNo = value;
					this.SendPropertyChanged("FundTranCreNo");
					this.OnFundTranCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeXmls")]
	public partial class InvoiceNoticeXmls : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceNoticeID;
		
		private string _Djh;
		
		private string _Gfmc;
		
		private string _Gfsh;
		
		private string _Gfyhzh;
		
		private string _Gfdzdh;
		
		private string _Bz;
		
		private string _Fhr;
		
		private string _Skr;
		
		private string _Spbmbbh;
		
		private string _Hsbz;
		
		private string _FilePath;
		
		private string _InvoiceCode;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<bool> _InCreSta;
		
		private string _InCreWord;
		
		private string _InCreNo;
		
		private string _RequestID;
		
		private EntitySet<InvoiceNoticeXmlItems> _InvoiceNoticeXmlItems;
		
		private EntityRef<InvoiceNotices> _InvoiceNotices;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceNoticeIDChanging(string value);
    partial void OnInvoiceNoticeIDChanged();
    partial void OnDjhChanging(string value);
    partial void OnDjhChanged();
    partial void OnGfmcChanging(string value);
    partial void OnGfmcChanged();
    partial void OnGfshChanging(string value);
    partial void OnGfshChanged();
    partial void OnGfyhzhChanging(string value);
    partial void OnGfyhzhChanged();
    partial void OnGfdzdhChanging(string value);
    partial void OnGfdzdhChanged();
    partial void OnBzChanging(string value);
    partial void OnBzChanged();
    partial void OnFhrChanging(string value);
    partial void OnFhrChanged();
    partial void OnSkrChanging(string value);
    partial void OnSkrChanged();
    partial void OnSpbmbbhChanging(string value);
    partial void OnSpbmbbhChanged();
    partial void OnHsbzChanging(string value);
    partial void OnHsbzChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnInvoiceCodeChanging(string value);
    partial void OnInvoiceCodeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInCreStaChanging(System.Nullable<bool> value);
    partial void OnInCreStaChanged();
    partial void OnInCreWordChanging(string value);
    partial void OnInCreWordChanged();
    partial void OnInCreNoChanging(string value);
    partial void OnInCreNoChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    #endregion
		
		public InvoiceNoticeXmls()
		{
			this._InvoiceNoticeXmlItems = new EntitySet<InvoiceNoticeXmlItems>(new Action<InvoiceNoticeXmlItems>(this.attach_InvoiceNoticeXmlItems), new Action<InvoiceNoticeXmlItems>(this.detach_InvoiceNoticeXmlItems));
			this._InvoiceNotices = default(EntityRef<InvoiceNotices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNoticeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNoticeID
		{
			get
			{
				return this._InvoiceNoticeID;
			}
			set
			{
				if ((this._InvoiceNoticeID != value))
				{
					if (this._InvoiceNotices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoticeID = value;
					this.SendPropertyChanged("InvoiceNoticeID");
					this.OnInvoiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Djh", DbType="VarChar(20)")]
		public string Djh
		{
			get
			{
				return this._Djh;
			}
			set
			{
				if ((this._Djh != value))
				{
					this.OnDjhChanging(value);
					this.SendPropertyChanging();
					this._Djh = value;
					this.SendPropertyChanged("Djh");
					this.OnDjhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gfmc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Gfmc
		{
			get
			{
				return this._Gfmc;
			}
			set
			{
				if ((this._Gfmc != value))
				{
					this.OnGfmcChanging(value);
					this.SendPropertyChanging();
					this._Gfmc = value;
					this.SendPropertyChanged("Gfmc");
					this.OnGfmcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gfsh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gfsh
		{
			get
			{
				return this._Gfsh;
			}
			set
			{
				if ((this._Gfsh != value))
				{
					this.OnGfshChanging(value);
					this.SendPropertyChanging();
					this._Gfsh = value;
					this.SendPropertyChanged("Gfsh");
					this.OnGfshChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gfyhzh", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Gfyhzh
		{
			get
			{
				return this._Gfyhzh;
			}
			set
			{
				if ((this._Gfyhzh != value))
				{
					this.OnGfyhzhChanging(value);
					this.SendPropertyChanging();
					this._Gfyhzh = value;
					this.SendPropertyChanged("Gfyhzh");
					this.OnGfyhzhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gfdzdh", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Gfdzdh
		{
			get
			{
				return this._Gfdzdh;
			}
			set
			{
				if ((this._Gfdzdh != value))
				{
					this.OnGfdzdhChanging(value);
					this.SendPropertyChanging();
					this._Gfdzdh = value;
					this.SendPropertyChanged("Gfdzdh");
					this.OnGfdzdhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bz", DbType="VarChar(240)")]
		public string Bz
		{
			get
			{
				return this._Bz;
			}
			set
			{
				if ((this._Bz != value))
				{
					this.OnBzChanging(value);
					this.SendPropertyChanging();
					this._Bz = value;
					this.SendPropertyChanged("Bz");
					this.OnBzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fhr", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Fhr
		{
			get
			{
				return this._Fhr;
			}
			set
			{
				if ((this._Fhr != value))
				{
					this.OnFhrChanging(value);
					this.SendPropertyChanging();
					this._Fhr = value;
					this.SendPropertyChanged("Fhr");
					this.OnFhrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skr", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Skr
		{
			get
			{
				return this._Skr;
			}
			set
			{
				if ((this._Skr != value))
				{
					this.OnSkrChanging(value);
					this.SendPropertyChanging();
					this._Skr = value;
					this.SendPropertyChanged("Skr");
					this.OnSkrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spbmbbh", DbType="VarChar(20)")]
		public string Spbmbbh
		{
			get
			{
				return this._Spbmbbh;
			}
			set
			{
				if ((this._Spbmbbh != value))
				{
					this.OnSpbmbbhChanging(value);
					this.SendPropertyChanging();
					this._Spbmbbh = value;
					this.SendPropertyChanged("Spbmbbh");
					this.OnSpbmbbhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hsbz", DbType="VarChar(20)")]
		public string Hsbz
		{
			get
			{
				return this._Hsbz;
			}
			set
			{
				if ((this._Hsbz != value))
				{
					this.OnHsbzChanging(value);
					this.SendPropertyChanging();
					this._Hsbz = value;
					this.SendPropertyChanged("Hsbz");
					this.OnHsbzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(200)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCode", DbType="VarChar(20)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if ((this._InvoiceCode != value))
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(20)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCreSta", DbType="Bit")]
		public System.Nullable<bool> InCreSta
		{
			get
			{
				return this._InCreSta;
			}
			set
			{
				if ((this._InCreSta != value))
				{
					this.OnInCreStaChanging(value);
					this.SendPropertyChanging();
					this._InCreSta = value;
					this.SendPropertyChanged("InCreSta");
					this.OnInCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCreWord", DbType="VarChar(50)")]
		public string InCreWord
		{
			get
			{
				return this._InCreWord;
			}
			set
			{
				if ((this._InCreWord != value))
				{
					this.OnInCreWordChanging(value);
					this.SendPropertyChanging();
					this._InCreWord = value;
					this.SendPropertyChanged("InCreWord");
					this.OnInCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCreNo", DbType="VarChar(50)")]
		public string InCreNo
		{
			get
			{
				return this._InCreNo;
			}
			set
			{
				if ((this._InCreNo != value))
				{
					this.OnInCreNoChanging(value);
					this.SendPropertyChanging();
					this._InCreNo = value;
					this.SendPropertyChanged("InCreNo");
					this.OnInCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoticeXmls_InvoiceNoticeXmlItems", Storage="_InvoiceNoticeXmlItems", ThisKey="ID", OtherKey="InvoiceNoticeXmlID")]
		public EntitySet<InvoiceNoticeXmlItems> InvoiceNoticeXmlItems
		{
			get
			{
				return this._InvoiceNoticeXmlItems;
			}
			set
			{
				this._InvoiceNoticeXmlItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNotices_InvoiceNoticeXmls", Storage="_InvoiceNotices", ThisKey="InvoiceNoticeID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceNotices InvoiceNotices
		{
			get
			{
				return this._InvoiceNotices.Entity;
			}
			set
			{
				InvoiceNotices previousValue = this._InvoiceNotices.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNotices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNotices.Entity = null;
						previousValue.InvoiceNoticeXmls.Remove(this);
					}
					this._InvoiceNotices.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoticeXmls.Add(this);
						this._InvoiceNoticeID = value.ID;
					}
					else
					{
						this._InvoiceNoticeID = default(string);
					}
					this.SendPropertyChanged("InvoiceNotices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceNoticeXmlItems(InvoiceNoticeXmlItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoticeXmls = this;
		}
		
		private void detach_InvoiceNoticeXmlItems(InvoiceNoticeXmlItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoticeXmls = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapNotices")]
	public partial class SwapNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _AdminID;
		
		private string _BankName;
		
		private string _Currency;
		
		private decimal _TotalAmount;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<decimal> _TotalAmountCNY;
		
		private string _OutFinanceAccountID;
		
		private string _InFinanceAccountID;
		
		private string _MidFinanceAccountID;
		
		private System.Nullable<decimal> _Poundage;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<decimal> _RealTimeExchangeRate;
		
		private string _ConsignorCode;
		
		private System.Nullable<int> _IsReceiptUseOut;
		
		private string _uid;
		
		private string _RequestID;
		
		private System.Nullable<bool> _SwapCreSta;
		
		private string _SwapCreWord;
		
		private string _SwapCreNo;
		
		private EntitySet<SwapNoticeItems> _SwapNoticeItems;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnTotalAmountCNYChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountCNYChanged();
    partial void OnOutFinanceAccountIDChanging(string value);
    partial void OnOutFinanceAccountIDChanged();
    partial void OnInFinanceAccountIDChanging(string value);
    partial void OnInFinanceAccountIDChanged();
    partial void OnMidFinanceAccountIDChanging(string value);
    partial void OnMidFinanceAccountIDChanged();
    partial void OnPoundageChanging(System.Nullable<decimal> value);
    partial void OnPoundageChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnRealTimeExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnRealTimeExchangeRateChanged();
    partial void OnConsignorCodeChanging(string value);
    partial void OnConsignorCodeChanged();
    partial void OnIsReceiptUseOutChanging(System.Nullable<int> value);
    partial void OnIsReceiptUseOutChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    partial void OnSwapCreStaChanging(System.Nullable<bool> value);
    partial void OnSwapCreStaChanged();
    partial void OnSwapCreWordChanging(string value);
    partial void OnSwapCreWordChanged();
    partial void OnSwapCreNoChanging(string value);
    partial void OnSwapCreNoChanged();
    #endregion
		
		public SwapNotices()
		{
			this._SwapNoticeItems = new EntitySet<SwapNoticeItems>(new Action<SwapNoticeItems>(this.attach_SwapNoticeItems), new Action<SwapNoticeItems>(this.detach_SwapNoticeItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountCNY", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TotalAmountCNY
		{
			get
			{
				return this._TotalAmountCNY;
			}
			set
			{
				if ((this._TotalAmountCNY != value))
				{
					this.OnTotalAmountCNYChanging(value);
					this.SendPropertyChanging();
					this._TotalAmountCNY = value;
					this.SendPropertyChanged("TotalAmountCNY");
					this.OnTotalAmountCNYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutFinanceAccountID", DbType="VarChar(50)")]
		public string OutFinanceAccountID
		{
			get
			{
				return this._OutFinanceAccountID;
			}
			set
			{
				if ((this._OutFinanceAccountID != value))
				{
					this.OnOutFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OutFinanceAccountID = value;
					this.SendPropertyChanged("OutFinanceAccountID");
					this.OnOutFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InFinanceAccountID", DbType="VarChar(50)")]
		public string InFinanceAccountID
		{
			get
			{
				return this._InFinanceAccountID;
			}
			set
			{
				if ((this._InFinanceAccountID != value))
				{
					this.OnInFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InFinanceAccountID = value;
					this.SendPropertyChanged("InFinanceAccountID");
					this.OnInFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidFinanceAccountID", DbType="VarChar(50)")]
		public string MidFinanceAccountID
		{
			get
			{
				return this._MidFinanceAccountID;
			}
			set
			{
				if ((this._MidFinanceAccountID != value))
				{
					this.OnMidFinanceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._MidFinanceAccountID = value;
					this.SendPropertyChanged("MidFinanceAccountID");
					this.OnMidFinanceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poundage", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Poundage
		{
			get
			{
				return this._Poundage;
			}
			set
			{
				if ((this._Poundage != value))
				{
					this.OnPoundageChanging(value);
					this.SendPropertyChanging();
					this._Poundage = value;
					this.SendPropertyChanged("Poundage");
					this.OnPoundageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealTimeExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> RealTimeExchangeRate
		{
			get
			{
				return this._RealTimeExchangeRate;
			}
			set
			{
				if ((this._RealTimeExchangeRate != value))
				{
					this.OnRealTimeExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._RealTimeExchangeRate = value;
					this.SendPropertyChanged("RealTimeExchangeRate");
					this.OnRealTimeExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignorCode", DbType="NVarChar(50)")]
		public string ConsignorCode
		{
			get
			{
				return this._ConsignorCode;
			}
			set
			{
				if ((this._ConsignorCode != value))
				{
					this.OnConsignorCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsignorCode = value;
					this.SendPropertyChanged("ConsignorCode");
					this.OnConsignorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReceiptUseOut", DbType="Int")]
		public System.Nullable<int> IsReceiptUseOut
		{
			get
			{
				return this._IsReceiptUseOut;
			}
			set
			{
				if ((this._IsReceiptUseOut != value))
				{
					this.OnIsReceiptUseOutChanging(value);
					this.SendPropertyChanging();
					this._IsReceiptUseOut = value;
					this.SendPropertyChanged("IsReceiptUseOut");
					this.OnIsReceiptUseOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="VarChar(50)")]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapCreSta", DbType="Bit")]
		public System.Nullable<bool> SwapCreSta
		{
			get
			{
				return this._SwapCreSta;
			}
			set
			{
				if ((this._SwapCreSta != value))
				{
					this.OnSwapCreStaChanging(value);
					this.SendPropertyChanging();
					this._SwapCreSta = value;
					this.SendPropertyChanged("SwapCreSta");
					this.OnSwapCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapCreWord", DbType="VarChar(50)")]
		public string SwapCreWord
		{
			get
			{
				return this._SwapCreWord;
			}
			set
			{
				if ((this._SwapCreWord != value))
				{
					this.OnSwapCreWordChanging(value);
					this.SendPropertyChanging();
					this._SwapCreWord = value;
					this.SendPropertyChanged("SwapCreWord");
					this.OnSwapCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwapCreNo", DbType="VarChar(50)")]
		public string SwapCreNo
		{
			get
			{
				return this._SwapCreNo;
			}
			set
			{
				if ((this._SwapCreNo != value))
				{
					this.OnSwapCreNoChanging(value);
					this.SendPropertyChanging();
					this._SwapCreNo = value;
					this.SendPropertyChanged("SwapCreNo");
					this.OnSwapCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwapNotices_SwapNoticeItems", Storage="_SwapNoticeItems", ThisKey="ID", OtherKey="SwapNoticeID")]
		public EntitySet<SwapNoticeItems> SwapNoticeItems
		{
			get
			{
				return this._SwapNoticeItems;
			}
			set
			{
				this._SwapNoticeItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SwapNoticeItems(SwapNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.SwapNotices = this;
		}
		
		private void detach_SwapNoticeItems(SwapNoticeItems entity)
		{
			this.SendPropertyChanging();
			entity.SwapNotices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderReceiptImport")]
	public partial class OrderReceiptImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _RequestID;
		
		private string _OrderReceiptID;
		
		private System.Nullable<int> _InvoiceType;
		
		private System.Nullable<decimal> _PreMoney;
		
		private System.Nullable<decimal> _Diff;
		
		private System.Nullable<decimal> _GoodsMoney;
		
		private string _ClientName;
		
		private System.Nullable<decimal> _AddTax;
		
		private System.Nullable<decimal> _Tariff;
		
		private System.Nullable<decimal> _ExciseTax;
		
		private System.Nullable<decimal> _Agency;
		
		private string _ReCreWord;
		
		private string _ReCreNo;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    partial void OnOrderReceiptIDChanging(string value);
    partial void OnOrderReceiptIDChanged();
    partial void OnInvoiceTypeChanging(System.Nullable<int> value);
    partial void OnInvoiceTypeChanged();
    partial void OnPreMoneyChanging(System.Nullable<decimal> value);
    partial void OnPreMoneyChanged();
    partial void OnDiffChanging(System.Nullable<decimal> value);
    partial void OnDiffChanged();
    partial void OnGoodsMoneyChanging(System.Nullable<decimal> value);
    partial void OnGoodsMoneyChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnAddTaxChanging(System.Nullable<decimal> value);
    partial void OnAddTaxChanged();
    partial void OnTariffChanging(System.Nullable<decimal> value);
    partial void OnTariffChanged();
    partial void OnExciseTaxChanging(System.Nullable<decimal> value);
    partial void OnExciseTaxChanged();
    partial void OnAgencyChanging(System.Nullable<decimal> value);
    partial void OnAgencyChanged();
    partial void OnReCreWordChanging(string value);
    partial void OnReCreWordChanged();
    partial void OnReCreNoChanging(string value);
    partial void OnReCreNoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public OrderReceiptImport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReceiptID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderReceiptID
		{
			get
			{
				return this._OrderReceiptID;
			}
			set
			{
				if ((this._OrderReceiptID != value))
				{
					this.OnOrderReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._OrderReceiptID = value;
					this.SendPropertyChanged("OrderReceiptID");
					this.OnOrderReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreMoney", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> PreMoney
		{
			get
			{
				return this._PreMoney;
			}
			set
			{
				if ((this._PreMoney != value))
				{
					this.OnPreMoneyChanging(value);
					this.SendPropertyChanging();
					this._PreMoney = value;
					this.SendPropertyChanged("PreMoney");
					this.OnPreMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diff", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Diff
		{
			get
			{
				return this._Diff;
			}
			set
			{
				if ((this._Diff != value))
				{
					this.OnDiffChanging(value);
					this.SendPropertyChanging();
					this._Diff = value;
					this.SendPropertyChanged("Diff");
					this.OnDiffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsMoney", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> GoodsMoney
		{
			get
			{
				return this._GoodsMoney;
			}
			set
			{
				if ((this._GoodsMoney != value))
				{
					this.OnGoodsMoneyChanging(value);
					this.SendPropertyChanging();
					this._GoodsMoney = value;
					this.SendPropertyChanged("GoodsMoney");
					this.OnGoodsMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(100)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTax", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> AddTax
		{
			get
			{
				return this._AddTax;
			}
			set
			{
				if ((this._AddTax != value))
				{
					this.OnAddTaxChanging(value);
					this.SendPropertyChanging();
					this._AddTax = value;
					this.SendPropertyChanged("AddTax");
					this.OnAddTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tariff", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Tariff
		{
			get
			{
				return this._Tariff;
			}
			set
			{
				if ((this._Tariff != value))
				{
					this.OnTariffChanging(value);
					this.SendPropertyChanging();
					this._Tariff = value;
					this.SendPropertyChanged("Tariff");
					this.OnTariffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExciseTax", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> ExciseTax
		{
			get
			{
				return this._ExciseTax;
			}
			set
			{
				if ((this._ExciseTax != value))
				{
					this.OnExciseTaxChanging(value);
					this.SendPropertyChanging();
					this._ExciseTax = value;
					this.SendPropertyChanged("ExciseTax");
					this.OnExciseTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Agency
		{
			get
			{
				return this._Agency;
			}
			set
			{
				if ((this._Agency != value))
				{
					this.OnAgencyChanging(value);
					this.SendPropertyChanging();
					this._Agency = value;
					this.SendPropertyChanged("Agency");
					this.OnAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReCreWord", DbType="VarChar(50)")]
		public string ReCreWord
		{
			get
			{
				return this._ReCreWord;
			}
			set
			{
				if ((this._ReCreWord != value))
				{
					this.OnReCreWordChanging(value);
					this.SendPropertyChanging();
					this._ReCreWord = value;
					this.SendPropertyChanged("ReCreWord");
					this.OnReCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReCreNo", DbType="VarChar(50)")]
		public string ReCreNo
		{
			get
			{
				return this._ReCreNo;
			}
			set
			{
				if ((this._ReCreNo != value))
				{
					this.OnReCreNoChanging(value);
					this.SendPropertyChanging();
					this._ReCreNo = value;
					this.SendPropertyChanged("ReCreNo");
					this.OnReCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MKDeclareImport")]
	public partial class MKDeclareImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _RequestID;
		
		private string _TemplateCode;
		
		private string _SchemeCode;
		
		private int _Type;
		
		private int _InvoiceType;
		
		private string _DeclareDate;
		
		private int _Tian;
		
		private decimal _Jinkou;
		
		private System.Nullable<decimal> _Huokuan;
		
		private System.Nullable<decimal> _Yunbaoza;
		
		private decimal _Guanshui;
		
		private decimal _GuanshuiShijiao;
		
		private decimal _Xiaofeishui;
		
		private decimal _XiaofeishuiShijiao;
		
		private System.Nullable<decimal> _Shui;
		
		private System.Nullable<decimal> _Jinxiangshui;
		
		private decimal _HuiduiSanfang;
		
		private string _Sanfang;
		
		private System.Nullable<decimal> _HuiduiWofang;
		
		private decimal _Huilv;
		
		private System.Nullable<decimal> _YingfuSanfang;
		
		private string _Wuliufang;
		
		private System.Nullable<decimal> _YingfuWofang;
		
		private string _Currency;
		
		private string _PingzhengZi;
		
		private string _PingzhengHao;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    partial void OnTemplateCodeChanging(string value);
    partial void OnTemplateCodeChanged();
    partial void OnSchemeCodeChanging(string value);
    partial void OnSchemeCodeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnInvoiceTypeChanging(int value);
    partial void OnInvoiceTypeChanged();
    partial void OnDeclareDateChanging(string value);
    partial void OnDeclareDateChanged();
    partial void OnTianChanging(int value);
    partial void OnTianChanged();
    partial void OnJinkouChanging(decimal value);
    partial void OnJinkouChanged();
    partial void OnHuokuanChanging(System.Nullable<decimal> value);
    partial void OnHuokuanChanged();
    partial void OnYunbaozaChanging(System.Nullable<decimal> value);
    partial void OnYunbaozaChanged();
    partial void OnGuanshuiChanging(decimal value);
    partial void OnGuanshuiChanged();
    partial void OnGuanshuiShijiaoChanging(decimal value);
    partial void OnGuanshuiShijiaoChanged();
    partial void OnXiaofeishuiChanging(decimal value);
    partial void OnXiaofeishuiChanged();
    partial void OnXiaofeishuiShijiaoChanging(decimal value);
    partial void OnXiaofeishuiShijiaoChanged();
    partial void OnShuiChanging(System.Nullable<decimal> value);
    partial void OnShuiChanged();
    partial void OnJinxiangshuiChanging(System.Nullable<decimal> value);
    partial void OnJinxiangshuiChanged();
    partial void OnHuiduiSanfangChanging(decimal value);
    partial void OnHuiduiSanfangChanged();
    partial void OnSanfangChanging(string value);
    partial void OnSanfangChanged();
    partial void OnHuiduiWofangChanging(System.Nullable<decimal> value);
    partial void OnHuiduiWofangChanged();
    partial void OnHuilvChanging(decimal value);
    partial void OnHuilvChanged();
    partial void OnYingfuSanfangChanging(System.Nullable<decimal> value);
    partial void OnYingfuSanfangChanged();
    partial void OnWuliufangChanging(string value);
    partial void OnWuliufangChanged();
    partial void OnYingfuWofangChanging(System.Nullable<decimal> value);
    partial void OnYingfuWofangChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPingzhengZiChanging(string value);
    partial void OnPingzhengZiChanged();
    partial void OnPingzhengHaoChanging(string value);
    partial void OnPingzhengHaoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public MKDeclareImport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TemplateCode
		{
			get
			{
				return this._TemplateCode;
			}
			set
			{
				if ((this._TemplateCode != value))
				{
					this.OnTemplateCodeChanging(value);
					this.SendPropertyChanging();
					this._TemplateCode = value;
					this.SendPropertyChanged("TemplateCode");
					this.OnTemplateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SchemeCode
		{
			get
			{
				return this._SchemeCode;
			}
			set
			{
				if ((this._SchemeCode != value))
				{
					this.OnSchemeCodeChanging(value);
					this.SendPropertyChanging();
					this._SchemeCode = value;
					this.SendPropertyChanged("SchemeCode");
					this.OnSchemeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="Int NOT NULL")]
		public int InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclareDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeclareDate
		{
			get
			{
				return this._DeclareDate;
			}
			set
			{
				if ((this._DeclareDate != value))
				{
					this.OnDeclareDateChanging(value);
					this.SendPropertyChanging();
					this._DeclareDate = value;
					this.SendPropertyChanged("DeclareDate");
					this.OnDeclareDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tian", DbType="Int NOT NULL")]
		public int Tian
		{
			get
			{
				return this._Tian;
			}
			set
			{
				if ((this._Tian != value))
				{
					this.OnTianChanging(value);
					this.SendPropertyChanging();
					this._Tian = value;
					this.SendPropertyChanged("Tian");
					this.OnTianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jinkou", DbType="Decimal(18,2) NOT NULL")]
		public decimal Jinkou
		{
			get
			{
				return this._Jinkou;
			}
			set
			{
				if ((this._Jinkou != value))
				{
					this.OnJinkouChanging(value);
					this.SendPropertyChanging();
					this._Jinkou = value;
					this.SendPropertyChanged("Jinkou");
					this.OnJinkouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huokuan", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Huokuan
		{
			get
			{
				return this._Huokuan;
			}
			set
			{
				if ((this._Huokuan != value))
				{
					this.OnHuokuanChanging(value);
					this.SendPropertyChanging();
					this._Huokuan = value;
					this.SendPropertyChanged("Huokuan");
					this.OnHuokuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yunbaoza", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Yunbaoza
		{
			get
			{
				return this._Yunbaoza;
			}
			set
			{
				if ((this._Yunbaoza != value))
				{
					this.OnYunbaozaChanging(value);
					this.SendPropertyChanging();
					this._Yunbaoza = value;
					this.SendPropertyChanged("Yunbaoza");
					this.OnYunbaozaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guanshui", DbType="Decimal(18,2) NOT NULL")]
		public decimal Guanshui
		{
			get
			{
				return this._Guanshui;
			}
			set
			{
				if ((this._Guanshui != value))
				{
					this.OnGuanshuiChanging(value);
					this.SendPropertyChanging();
					this._Guanshui = value;
					this.SendPropertyChanged("Guanshui");
					this.OnGuanshuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuanshuiShijiao", DbType="Decimal(18,2) NOT NULL")]
		public decimal GuanshuiShijiao
		{
			get
			{
				return this._GuanshuiShijiao;
			}
			set
			{
				if ((this._GuanshuiShijiao != value))
				{
					this.OnGuanshuiShijiaoChanging(value);
					this.SendPropertyChanging();
					this._GuanshuiShijiao = value;
					this.SendPropertyChanged("GuanshuiShijiao");
					this.OnGuanshuiShijiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xiaofeishui", DbType="Decimal(18,2) NOT NULL")]
		public decimal Xiaofeishui
		{
			get
			{
				return this._Xiaofeishui;
			}
			set
			{
				if ((this._Xiaofeishui != value))
				{
					this.OnXiaofeishuiChanging(value);
					this.SendPropertyChanging();
					this._Xiaofeishui = value;
					this.SendPropertyChanged("Xiaofeishui");
					this.OnXiaofeishuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XiaofeishuiShijiao", DbType="Decimal(18,2) NOT NULL")]
		public decimal XiaofeishuiShijiao
		{
			get
			{
				return this._XiaofeishuiShijiao;
			}
			set
			{
				if ((this._XiaofeishuiShijiao != value))
				{
					this.OnXiaofeishuiShijiaoChanging(value);
					this.SendPropertyChanging();
					this._XiaofeishuiShijiao = value;
					this.SendPropertyChanged("XiaofeishuiShijiao");
					this.OnXiaofeishuiShijiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shui", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Shui
		{
			get
			{
				return this._Shui;
			}
			set
			{
				if ((this._Shui != value))
				{
					this.OnShuiChanging(value);
					this.SendPropertyChanging();
					this._Shui = value;
					this.SendPropertyChanged("Shui");
					this.OnShuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jinxiangshui", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Jinxiangshui
		{
			get
			{
				return this._Jinxiangshui;
			}
			set
			{
				if ((this._Jinxiangshui != value))
				{
					this.OnJinxiangshuiChanging(value);
					this.SendPropertyChanging();
					this._Jinxiangshui = value;
					this.SendPropertyChanged("Jinxiangshui");
					this.OnJinxiangshuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuiduiSanfang", DbType="Decimal(18,2) NOT NULL")]
		public decimal HuiduiSanfang
		{
			get
			{
				return this._HuiduiSanfang;
			}
			set
			{
				if ((this._HuiduiSanfang != value))
				{
					this.OnHuiduiSanfangChanging(value);
					this.SendPropertyChanging();
					this._HuiduiSanfang = value;
					this.SendPropertyChanged("HuiduiSanfang");
					this.OnHuiduiSanfangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sanfang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Sanfang
		{
			get
			{
				return this._Sanfang;
			}
			set
			{
				if ((this._Sanfang != value))
				{
					this.OnSanfangChanging(value);
					this.SendPropertyChanging();
					this._Sanfang = value;
					this.SendPropertyChanged("Sanfang");
					this.OnSanfangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuiduiWofang", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HuiduiWofang
		{
			get
			{
				return this._HuiduiWofang;
			}
			set
			{
				if ((this._HuiduiWofang != value))
				{
					this.OnHuiduiWofangChanging(value);
					this.SendPropertyChanging();
					this._HuiduiWofang = value;
					this.SendPropertyChanged("HuiduiWofang");
					this.OnHuiduiWofangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huilv", DbType="Decimal(18,6) NOT NULL")]
		public decimal Huilv
		{
			get
			{
				return this._Huilv;
			}
			set
			{
				if ((this._Huilv != value))
				{
					this.OnHuilvChanging(value);
					this.SendPropertyChanging();
					this._Huilv = value;
					this.SendPropertyChanged("Huilv");
					this.OnHuilvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YingfuSanfang", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YingfuSanfang
		{
			get
			{
				return this._YingfuSanfang;
			}
			set
			{
				if ((this._YingfuSanfang != value))
				{
					this.OnYingfuSanfangChanging(value);
					this.SendPropertyChanging();
					this._YingfuSanfang = value;
					this.SendPropertyChanged("YingfuSanfang");
					this.OnYingfuSanfangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wuliufang", DbType="NVarChar(100)")]
		public string Wuliufang
		{
			get
			{
				return this._Wuliufang;
			}
			set
			{
				if ((this._Wuliufang != value))
				{
					this.OnWuliufangChanging(value);
					this.SendPropertyChanging();
					this._Wuliufang = value;
					this.SendPropertyChanged("Wuliufang");
					this.OnWuliufangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YingfuWofang", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YingfuWofang
		{
			get
			{
				return this._YingfuWofang;
			}
			set
			{
				if ((this._YingfuWofang != value))
				{
					this.OnYingfuWofangChanging(value);
					this.SendPropertyChanging();
					this._YingfuWofang = value;
					this.SendPropertyChanged("YingfuWofang");
					this.OnYingfuWofangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PingzhengZi", DbType="VarChar(50)")]
		public string PingzhengZi
		{
			get
			{
				return this._PingzhengZi;
			}
			set
			{
				if ((this._PingzhengZi != value))
				{
					this.OnPingzhengZiChanging(value);
					this.SendPropertyChanging();
					this._PingzhengZi = value;
					this.SendPropertyChanged("PingzhengZi");
					this.OnPingzhengZiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PingzhengHao", DbType="VarChar(50)")]
		public string PingzhengHao
		{
			get
			{
				return this._PingzhengHao;
			}
			set
			{
				if ((this._PingzhengHao != value))
				{
					this.OnPingzhengHaoChanging(value);
					this.SendPropertyChanging();
					this._PingzhengHao = value;
					this.SendPropertyChanged("PingzhengHao");
					this.OnPingzhengHaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoneyOrders")]
	public partial class MoneyOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Code;
		
		private string _Name;
		
		private string _BankCode;
		
		private string _BankName;
		
		private string _BankNo;
		
		private string _Currency;
		
		private decimal _Price;
		
		private string _PayerAccountID;
		
		private string _PayeeAccountID;
		
		private System.Nullable<bool> _IsTransfer;
		
		private System.Nullable<bool> _IsMoney;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _Nature;
		
		private System.Nullable<System.DateTime> _ExchangeDate;
		
		private System.Nullable<decimal> _ExchangePrice;
		
		private System.Nullable<System.DateTime> _AcceptedDate;
		
		private string _Endorser;
		
		private string _CreatorID;
		
		private int _BillStatus;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private System.Nullable<bool> _AccCreSta;
		
		private System.Nullable<bool> _BuyCreSta;
		
		private string _AccCreWord;
		
		private string _AccCreNo;
		
		private string _BuyCreWord;
		
		private string _BuyCreNo;
		
		private string _ReceiveBank;
		
		private string _RequestID;
		
		private string _BuyRequestID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankNoChanging(string value);
    partial void OnBankNoChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPayerAccountIDChanging(string value);
    partial void OnPayerAccountIDChanged();
    partial void OnPayeeAccountIDChanging(string value);
    partial void OnPayeeAccountIDChanged();
    partial void OnIsTransferChanging(System.Nullable<bool> value);
    partial void OnIsTransferChanged();
    partial void OnIsMoneyChanging(System.Nullable<bool> value);
    partial void OnIsMoneyChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnNatureChanging(int value);
    partial void OnNatureChanged();
    partial void OnExchangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExchangeDateChanged();
    partial void OnExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnExchangePriceChanged();
    partial void OnAcceptedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedDateChanged();
    partial void OnEndorserChanging(string value);
    partial void OnEndorserChanged();
    partial void OnCreatorIDChanging(string value);
    partial void OnCreatorIDChanged();
    partial void OnBillStatusChanging(int value);
    partial void OnBillStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAccCreStaChanging(System.Nullable<bool> value);
    partial void OnAccCreStaChanged();
    partial void OnBuyCreStaChanging(System.Nullable<bool> value);
    partial void OnBuyCreStaChanged();
    partial void OnAccCreWordChanging(string value);
    partial void OnAccCreWordChanged();
    partial void OnAccCreNoChanging(string value);
    partial void OnAccCreNoChanged();
    partial void OnBuyCreWordChanging(string value);
    partial void OnBuyCreWordChanged();
    partial void OnBuyCreNoChanging(string value);
    partial void OnBuyCreNoChanged();
    partial void OnReceiveBankChanging(string value);
    partial void OnReceiveBankChanged();
    partial void OnRequestIDChanging(string value);
    partial void OnRequestIDChanged();
    partial void OnBuyRequestIDChanging(string value);
    partial void OnBuyRequestIDChanged();
    #endregion
		
		public MoneyOrders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankNo
		{
			get
			{
				return this._BankNo;
			}
			set
			{
				if ((this._BankNo != value))
				{
					this.OnBankNoChanging(value);
					this.SendPropertyChanging();
					this._BankNo = value;
					this.SendPropertyChanged("BankNo");
					this.OnBankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(22,10) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayerAccountID
		{
			get
			{
				return this._PayerAccountID;
			}
			set
			{
				if ((this._PayerAccountID != value))
				{
					this.OnPayerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayerAccountID = value;
					this.SendPropertyChanged("PayerAccountID");
					this.OnPayerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeAccountID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayeeAccountID
		{
			get
			{
				return this._PayeeAccountID;
			}
			set
			{
				if ((this._PayeeAccountID != value))
				{
					this.OnPayeeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._PayeeAccountID = value;
					this.SendPropertyChanged("PayeeAccountID");
					this.OnPayeeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransfer", DbType="Bit")]
		public System.Nullable<bool> IsTransfer
		{
			get
			{
				return this._IsTransfer;
			}
			set
			{
				if ((this._IsTransfer != value))
				{
					this.OnIsTransferChanging(value);
					this.SendPropertyChanging();
					this._IsTransfer = value;
					this.SendPropertyChanged("IsTransfer");
					this.OnIsTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMoney", DbType="Bit")]
		public System.Nullable<bool> IsMoney
		{
			get
			{
				return this._IsMoney;
			}
			set
			{
				if ((this._IsMoney != value))
				{
					this.OnIsMoneyChanging(value);
					this.SendPropertyChanging();
					this._IsMoney = value;
					this.SendPropertyChanged("IsMoney");
					this.OnIsMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="Int NOT NULL")]
		public int Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeDate
		{
			get
			{
				return this._ExchangeDate;
			}
			set
			{
				if ((this._ExchangeDate != value))
				{
					this.OnExchangeDateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeDate = value;
					this.SendPropertyChanged("ExchangeDate");
					this.OnExchangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangePrice", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> ExchangePrice
		{
			get
			{
				return this._ExchangePrice;
			}
			set
			{
				if ((this._ExchangePrice != value))
				{
					this.OnExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._ExchangePrice = value;
					this.SendPropertyChanged("ExchangePrice");
					this.OnExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptedDate
		{
			get
			{
				return this._AcceptedDate;
			}
			set
			{
				if ((this._AcceptedDate != value))
				{
					this.OnAcceptedDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptedDate = value;
					this.SendPropertyChanged("AcceptedDate");
					this.OnAcceptedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endorser", DbType="NVarChar(100)")]
		public string Endorser
		{
			get
			{
				return this._Endorser;
			}
			set
			{
				if ((this._Endorser != value))
				{
					this.OnEndorserChanging(value);
					this.SendPropertyChanging();
					this._Endorser = value;
					this.SendPropertyChanged("Endorser");
					this.OnEndorserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillStatus", DbType="Int NOT NULL")]
		public int BillStatus
		{
			get
			{
				return this._BillStatus;
			}
			set
			{
				if ((this._BillStatus != value))
				{
					this.OnBillStatusChanging(value);
					this.SendPropertyChanging();
					this._BillStatus = value;
					this.SendPropertyChanged("BillStatus");
					this.OnBillStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(500)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccCreSta", DbType="Bit")]
		public System.Nullable<bool> AccCreSta
		{
			get
			{
				return this._AccCreSta;
			}
			set
			{
				if ((this._AccCreSta != value))
				{
					this.OnAccCreStaChanging(value);
					this.SendPropertyChanging();
					this._AccCreSta = value;
					this.SendPropertyChanged("AccCreSta");
					this.OnAccCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyCreSta", DbType="Bit")]
		public System.Nullable<bool> BuyCreSta
		{
			get
			{
				return this._BuyCreSta;
			}
			set
			{
				if ((this._BuyCreSta != value))
				{
					this.OnBuyCreStaChanging(value);
					this.SendPropertyChanging();
					this._BuyCreSta = value;
					this.SendPropertyChanged("BuyCreSta");
					this.OnBuyCreStaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccCreWord", DbType="VarChar(50)")]
		public string AccCreWord
		{
			get
			{
				return this._AccCreWord;
			}
			set
			{
				if ((this._AccCreWord != value))
				{
					this.OnAccCreWordChanging(value);
					this.SendPropertyChanging();
					this._AccCreWord = value;
					this.SendPropertyChanged("AccCreWord");
					this.OnAccCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccCreNo", DbType="VarChar(50)")]
		public string AccCreNo
		{
			get
			{
				return this._AccCreNo;
			}
			set
			{
				if ((this._AccCreNo != value))
				{
					this.OnAccCreNoChanging(value);
					this.SendPropertyChanging();
					this._AccCreNo = value;
					this.SendPropertyChanged("AccCreNo");
					this.OnAccCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyCreWord", DbType="VarChar(50)")]
		public string BuyCreWord
		{
			get
			{
				return this._BuyCreWord;
			}
			set
			{
				if ((this._BuyCreWord != value))
				{
					this.OnBuyCreWordChanging(value);
					this.SendPropertyChanging();
					this._BuyCreWord = value;
					this.SendPropertyChanged("BuyCreWord");
					this.OnBuyCreWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyCreNo", DbType="VarChar(50)")]
		public string BuyCreNo
		{
			get
			{
				return this._BuyCreNo;
			}
			set
			{
				if ((this._BuyCreNo != value))
				{
					this.OnBuyCreNoChanging(value);
					this.SendPropertyChanging();
					this._BuyCreNo = value;
					this.SendPropertyChanged("BuyCreNo");
					this.OnBuyCreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveBank", DbType="NVarChar(100)")]
		public string ReceiveBank
		{
			get
			{
				return this._ReceiveBank;
			}
			set
			{
				if ((this._ReceiveBank != value))
				{
					this.OnReceiveBankChanging(value);
					this.SendPropertyChanging();
					this._ReceiveBank = value;
					this.SendPropertyChanged("ReceiveBank");
					this.OnReceiveBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="VarChar(50)")]
		public string RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRequestID", DbType="VarChar(50)")]
		public string BuyRequestID
		{
			get
			{
				return this._BuyRequestID;
			}
			set
			{
				if ((this._BuyRequestID != value))
				{
					this.OnBuyRequestIDChanging(value);
					this.SendPropertyChanging();
					this._BuyRequestID = value;
					this.SendPropertyChanged("BuyRequestID");
					this.OnBuyRequestIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoticeXmlMap")]
	public partial class InvoiceNoticeXmlMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _InvoiceXmlID;
		
		private string _DecListID;
		
		private decimal _OutQty;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceXmlIDChanging(string value);
    partial void OnInvoiceXmlIDChanged();
    partial void OnDecListIDChanging(string value);
    partial void OnDecListIDChanged();
    partial void OnOutQtyChanging(decimal value);
    partial void OnOutQtyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public InvoiceNoticeXmlMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceXmlID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceXmlID
		{
			get
			{
				return this._InvoiceXmlID;
			}
			set
			{
				if ((this._InvoiceXmlID != value))
				{
					this.OnInvoiceXmlIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceXmlID = value;
					this.SendPropertyChanged("InvoiceXmlID");
					this.OnInvoiceXmlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecListID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DecListID
		{
			get
			{
				return this._DecListID;
			}
			set
			{
				if ((this._DecListID != value))
				{
					this.OnDecListIDChanging(value);
					this.SendPropertyChanging();
					this._DecListID = value;
					this.SendPropertyChanged("DecListID");
					this.OnDecListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutQty", DbType="Decimal(10,2) NOT NULL")]
		public decimal OutQty
		{
			get
			{
				return this._OutQty;
			}
			set
			{
				if ((this._OutQty != value))
				{
					this.OnOutQtyChanging(value);
					this.SendPropertyChanging();
					this._OutQty = value;
					this.SendPropertyChanged("OutQty");
					this.OnOutQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
