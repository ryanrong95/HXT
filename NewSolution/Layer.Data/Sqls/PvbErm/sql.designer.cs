#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.PvbErm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PvbErm")]
	public partial class sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertWageItems(WageItems instance);
    partial void UpdateWageItems(WageItems instance);
    partial void DeleteWageItems(WageItems instance);
    partial void InsertAdminsInquiry(AdminsInquiry instance);
    partial void UpdateAdminsInquiry(AdminsInquiry instance);
    partial void DeleteAdminsInquiry(AdminsInquiry instance);
    partial void InsertAdvantages(Advantages instance);
    partial void UpdateAdvantages(Advantages instance);
    partial void DeleteAdvantages(Advantages instance);
    partial void InsertBankCards(BankCards instance);
    partial void UpdateBankCards(BankCards instance);
    partial void DeleteBankCards(BankCards instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertLabours(Labours instance);
    partial void UpdateLabours(Labours instance);
    partial void DeleteLabours(Labours instance);
    partial void InsertLeagues(Leagues instance);
    partial void UpdateLeagues(Leagues instance);
    partial void DeleteLeagues(Leagues instance);
    partial void InsertLogs_Errors(Logs_Errors instance);
    partial void UpdateLogs_Errors(Logs_Errors instance);
    partial void DeleteLogs_Errors(Logs_Errors instance);
    partial void InsertLogs_Notice(Logs_Notice instance);
    partial void UpdateLogs_Notice(Logs_Notice instance);
    partial void DeleteLogs_Notice(Logs_Notice instance);
    partial void InsertMapsLeague(MapsLeague instance);
    partial void UpdateMapsLeague(MapsLeague instance);
    partial void DeleteMapsLeague(MapsLeague instance);
    partial void InsertMapsPostion(MapsPostion instance);
    partial void UpdateMapsPostion(MapsPostion instance);
    partial void DeleteMapsPostion(MapsPostion instance);
    partial void InsertMapsRole(MapsRole instance);
    partial void UpdateMapsRole(MapsRole instance);
    partial void DeleteMapsRole(MapsRole instance);
    partial void InsertMapsWageItem(MapsWageItem instance);
    partial void UpdateMapsWageItem(MapsWageItem instance);
    partial void DeleteMapsWageItem(MapsWageItem instance);
    partial void InsertMenus(Menus instance);
    partial void UpdateMenus(Menus instance);
    partial void DeleteMenus(Menus instance);
    partial void InsertOplogs(Oplogs instance);
    partial void UpdateOplogs(Oplogs instance);
    partial void DeleteOplogs(Oplogs instance);
    partial void InsertParticles(Particles instance);
    partial void UpdateParticles(Particles instance);
    partial void DeleteParticles(Particles instance);
    partial void InsertParticleSettings(ParticleSettings instance);
    partial void UpdateParticleSettings(ParticleSettings instance);
    partial void DeleteParticleSettings(ParticleSettings instance);
    partial void InsertPasts_MapsWageItem(Pasts_MapsWageItem instance);
    partial void UpdatePasts_MapsWageItem(Pasts_MapsWageItem instance);
    partial void DeletePasts_MapsWageItem(Pasts_MapsWageItem instance);
    partial void InsertPayBills(PayBills instance);
    partial void UpdatePayBills(PayBills instance);
    partial void DeletePayBills(PayBills instance);
    partial void InsertPayItems(PayItems instance);
    partial void UpdatePayItems(PayItems instance);
    partial void DeletePayItems(PayItems instance);
    partial void InsertPersonalRates(PersonalRates instance);
    partial void UpdatePersonalRates(PersonalRates instance);
    partial void DeletePersonalRates(PersonalRates instance);
    partial void InsertPersonals(Personals instance);
    partial void UpdatePersonals(Personals instance);
    partial void DeletePersonals(Personals instance);
    partial void InsertPostions(Postions instance);
    partial void UpdatePostions(Postions instance);
    partial void DeletePostions(Postions instance);
    partial void InsertPrimaryKeys(PrimaryKeys instance);
    partial void UpdatePrimaryKeys(PrimaryKeys instance);
    partial void DeletePrimaryKeys(PrimaryKeys instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertStaffs(Staffs instance);
    partial void UpdateStaffs(Staffs instance);
    partial void DeleteStaffs(Staffs instance);
    partial void InsertTokens(Tokens instance);
    partial void UpdateTokens(Tokens instance);
    partial void DeleteTokens(Tokens instance);
    partial void InsertAdmins(Admins instance);
    partial void UpdateAdmins(Admins instance);
    partial void DeleteAdmins(Admins instance);
    #endregion
		
		public sqlDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.PvbErmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WageItems> WageItems
		{
			get
			{
				return this.GetTable<WageItems>();
			}
		}
		
		public System.Data.Linq.Table<AdminsInquiry> AdminsInquiry
		{
			get
			{
				return this.GetTable<AdminsInquiry>();
			}
		}
		
		public System.Data.Linq.Table<Advantages> Advantages
		{
			get
			{
				return this.GetTable<Advantages>();
			}
		}
		
		public System.Data.Linq.Table<BankCards> BankCards
		{
			get
			{
				return this.GetTable<BankCards>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<Labours> Labours
		{
			get
			{
				return this.GetTable<Labours>();
			}
		}
		
		public System.Data.Linq.Table<Leagues> Leagues
		{
			get
			{
				return this.GetTable<Leagues>();
			}
		}
		
		public System.Data.Linq.Table<Logs_Errors> Logs_Errors
		{
			get
			{
				return this.GetTable<Logs_Errors>();
			}
		}
		
		public System.Data.Linq.Table<Logs_Notice> Logs_Notice
		{
			get
			{
				return this.GetTable<Logs_Notice>();
			}
		}
		
		public System.Data.Linq.Table<MapsLeague> MapsLeague
		{
			get
			{
				return this.GetTable<MapsLeague>();
			}
		}
		
		public System.Data.Linq.Table<MapsPostion> MapsPostion
		{
			get
			{
				return this.GetTable<MapsPostion>();
			}
		}
		
		public System.Data.Linq.Table<MapsRole> MapsRole
		{
			get
			{
				return this.GetTable<MapsRole>();
			}
		}
		
		public System.Data.Linq.Table<MapsWageItem> MapsWageItem
		{
			get
			{
				return this.GetTable<MapsWageItem>();
			}
		}
		
		public System.Data.Linq.Table<Menus> Menus
		{
			get
			{
				return this.GetTable<Menus>();
			}
		}
		
		public System.Data.Linq.Table<Oplogs> Oplogs
		{
			get
			{
				return this.GetTable<Oplogs>();
			}
		}
		
		public System.Data.Linq.Table<Particles> Particles
		{
			get
			{
				return this.GetTable<Particles>();
			}
		}
		
		public System.Data.Linq.Table<ParticleSettings> ParticleSettings
		{
			get
			{
				return this.GetTable<ParticleSettings>();
			}
		}
		
		public System.Data.Linq.Table<Pasts_MapsWageItem> Pasts_MapsWageItem
		{
			get
			{
				return this.GetTable<Pasts_MapsWageItem>();
			}
		}
		
		public System.Data.Linq.Table<PayBills> PayBills
		{
			get
			{
				return this.GetTable<PayBills>();
			}
		}
		
		public System.Data.Linq.Table<PayItems> PayItems
		{
			get
			{
				return this.GetTable<PayItems>();
			}
		}
		
		public System.Data.Linq.Table<PersonalRates> PersonalRates
		{
			get
			{
				return this.GetTable<PersonalRates>();
			}
		}
		
		public System.Data.Linq.Table<Personals> Personals
		{
			get
			{
				return this.GetTable<Personals>();
			}
		}
		
		public System.Data.Linq.Table<Postions> Postions
		{
			get
			{
				return this.GetTable<Postions>();
			}
		}
		
		public System.Data.Linq.Table<PrimaryKeys> PrimaryKeys
		{
			get
			{
				return this.GetTable<PrimaryKeys>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<Staffs> Staffs
		{
			get
			{
				return this.GetTable<Staffs>();
			}
		}
		
		public System.Data.Linq.Table<Temp_InitData> Temp_InitData
		{
			get
			{
				return this.GetTable<Temp_InitData>();
			}
		}
		
		public System.Data.Linq.Table<Tokens> Tokens
		{
			get
			{
				return this.GetTable<Tokens>();
			}
		}
		
		public System.Data.Linq.Table<AdminAdvantagesTopView> AdminAdvantagesTopView
		{
			get
			{
				return this.GetTable<AdminAdvantagesTopView>();
			}
		}
		
		public System.Data.Linq.Table<AdminsBussinessTopView> AdminsBussinessTopView
		{
			get
			{
				return this.GetTable<AdminsBussinessTopView>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
		
		public System.Data.Linq.Table<CompaniesTopView> CompaniesTopView
		{
			get
			{
				return this.GetTable<CompaniesTopView>();
			}
		}
		
		public System.Data.Linq.Table<Admins> Admins
		{
			get
			{
				return this.GetTable<Admins>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WageItems")]
	public partial class WageItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private bool _IsCalc;
		
		private bool _IsImport;
		
		private string _Formula;
		
		private System.Nullable<int> _CalcOrder;
		
		private string _Description;
		
		private string _AdminID;
		
		private int _OrderIndex;
		
		private System.DateTime _CreateDate;
		
		private int _Status;
		
		private EntitySet<MapsPostion> _MapsPostion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsCalcChanging(bool value);
    partial void OnIsCalcChanged();
    partial void OnIsImportChanging(bool value);
    partial void OnIsImportChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    partial void OnCalcOrderChanging(System.Nullable<int> value);
    partial void OnCalcOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnOrderIndexChanging(int value);
    partial void OnOrderIndexChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public WageItems()
		{
			this._MapsPostion = new EntitySet<MapsPostion>(new Action<MapsPostion>(this.attach_MapsPostion), new Action<MapsPostion>(this.detach_MapsPostion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCalc", DbType="Bit NOT NULL")]
		public bool IsCalc
		{
			get
			{
				return this._IsCalc;
			}
			set
			{
				if ((this._IsCalc != value))
				{
					this.OnIsCalcChanging(value);
					this.SendPropertyChanging();
					this._IsCalc = value;
					this.SendPropertyChanged("IsCalc");
					this.OnIsCalcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImport", DbType="Bit NOT NULL")]
		public bool IsImport
		{
			get
			{
				return this._IsImport;
			}
			set
			{
				if ((this._IsImport != value))
				{
					this.OnIsImportChanging(value);
					this.SendPropertyChanging();
					this._IsImport = value;
					this.SendPropertyChanged("IsImport");
					this.OnIsImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="NVarChar(500)")]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcOrder", DbType="Int")]
		public System.Nullable<int> CalcOrder
		{
			get
			{
				return this._CalcOrder;
			}
			set
			{
				if ((this._CalcOrder != value))
				{
					this.OnCalcOrderChanging(value);
					this.SendPropertyChanging();
					this._CalcOrder = value;
					this.SendPropertyChanged("CalcOrder");
					this.OnCalcOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int NOT NULL")]
		public int OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WageItems_MapsPostion", Storage="_MapsPostion", ThisKey="ID", OtherKey="WageItemID")]
		public EntitySet<MapsPostion> MapsPostion
		{
			get
			{
				return this._MapsPostion;
			}
			set
			{
				this._MapsPostion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsPostion(MapsPostion entity)
		{
			this.SendPropertyChanging();
			entity.WageItems = this;
		}
		
		private void detach_MapsPostion(MapsPostion entity)
		{
			this.SendPropertyChanging();
			entity.WageItems = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsInquiry")]
	public partial class AdminsInquiry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _LeagueID;
		
		private int _DutyPurchace;
		
		private System.Nullable<int> _DutySales;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnLeagueIDChanging(string value);
    partial void OnLeagueIDChanged();
    partial void OnDutyPurchaceChanging(int value);
    partial void OnDutyPurchaceChanged();
    partial void OnDutySalesChanging(System.Nullable<int> value);
    partial void OnDutySalesChanged();
    #endregion
		
		public AdminsInquiry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="VarChar(50)")]
		public string LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DutyPurchace", DbType="Int NOT NULL")]
		public int DutyPurchace
		{
			get
			{
				return this._DutyPurchace;
			}
			set
			{
				if ((this._DutyPurchace != value))
				{
					this.OnDutyPurchaceChanging(value);
					this.SendPropertyChanging();
					this._DutyPurchace = value;
					this.SendPropertyChanged("DutyPurchace");
					this.OnDutyPurchaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DutySales", DbType="Int")]
		public System.Nullable<int> DutySales
		{
			get
			{
				return this._DutySales;
			}
			set
			{
				if ((this._DutySales != value))
				{
					this.OnDutySalesChanging(value);
					this.SendPropertyChanging();
					this._DutySales = value;
					this.SendPropertyChanged("DutySales");
					this.OnDutySalesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advantages")]
	public partial class Advantages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _Manufacturers;
		
		private string _PartNumbers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnManufacturersChanging(string value);
    partial void OnManufacturersChanged();
    partial void OnPartNumbersChanging(string value);
    partial void OnPartNumbersChanged();
    #endregion
		
		public Advantages()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturers", DbType="NVarChar(MAX)")]
		public string Manufacturers
		{
			get
			{
				return this._Manufacturers;
			}
			set
			{
				if ((this._Manufacturers != value))
				{
					this.OnManufacturersChanging(value);
					this.SendPropertyChanging();
					this._Manufacturers = value;
					this.SendPropertyChanged("Manufacturers");
					this.OnManufacturersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumbers", DbType="NVarChar(MAX)")]
		public string PartNumbers
		{
			get
			{
				return this._PartNumbers;
			}
			set
			{
				if ((this._PartNumbers != value))
				{
					this.OnPartNumbersChanging(value);
					this.SendPropertyChanging();
					this._PartNumbers = value;
					this.SendPropertyChanged("PartNumbers");
					this.OnPartNumbersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankCards")]
	public partial class BankCards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Bank;
		
		private string _BankAddress;
		
		private string _Account;
		
		private string _SwiftCode;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public BankCards()
		{
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(200)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="NVarChar(200)")]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="VarChar(50)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_BankCards", Storage="_Staffs", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.BankCards = null;
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.BankCards = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Tel;
		
		private string _Mobile;
		
		private string _QQ;
		
		private string _Email;
		
		private string _Wx;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnQQChanging(string value);
    partial void OnQQChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWxChanging(string value);
    partial void OnWxChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Contacts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQ", DbType="VarChar(50)")]
		public string QQ
		{
			get
			{
				return this._QQ;
			}
			set
			{
				if ((this._QQ != value))
				{
					this.OnQQChanging(value);
					this.SendPropertyChanging();
					this._QQ = value;
					this.SendPropertyChanged("QQ");
					this.OnQQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wx", DbType="VarChar(50)")]
		public string Wx
		{
			get
			{
				return this._Wx;
			}
			set
			{
				if ((this._Wx != value))
				{
					this.OnWxChanging(value);
					this.SendPropertyChanging();
					this._Wx = value;
					this.SendPropertyChanged("Wx");
					this.OnWxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Labours")]
	public partial class Labours : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.DateTime _EntryDate;
		
		private string _EntryCompany;
		
		private string _EnterpriseID;
		
		private System.Nullable<System.DateTime> _LeaveDate;
		
		private System.Nullable<System.DateTime> _SigningTime;
		
		private System.Nullable<System.DateTime> _ContractPeriod;
		
		private string _ContractType;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnEntryCompanyChanging(string value);
    partial void OnEntryCompanyChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnSigningTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSigningTimeChanged();
    partial void OnContractPeriodChanging(System.Nullable<System.DateTime> value);
    partial void OnContractPeriodChanged();
    partial void OnContractTypeChanging(string value);
    partial void OnContractTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Labours()
		{
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryCompany", DbType="VarChar(50)")]
		public string EntryCompany
		{
			get
			{
				return this._EntryCompany;
			}
			set
			{
				if ((this._EntryCompany != value))
				{
					this.OnEntryCompanyChanging(value);
					this.SendPropertyChanging();
					this._EntryCompany = value;
					this.SendPropertyChanged("EntryCompany");
					this.OnEntryCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SigningTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SigningTime
		{
			get
			{
				return this._SigningTime;
			}
			set
			{
				if ((this._SigningTime != value))
				{
					this.OnSigningTimeChanging(value);
					this.SendPropertyChanging();
					this._SigningTime = value;
					this.SendPropertyChanged("SigningTime");
					this.OnSigningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractPeriod", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractPeriod
		{
			get
			{
				return this._ContractPeriod;
			}
			set
			{
				if ((this._ContractPeriod != value))
				{
					this.OnContractPeriodChanging(value);
					this.SendPropertyChanging();
					this._ContractPeriod = value;
					this.SendPropertyChanged("ContractPeriod");
					this.OnContractPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractType", DbType="VarChar(50)")]
		public string ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					this.OnContractTypeChanging(value);
					this.SendPropertyChanging();
					this._ContractType = value;
					this.SendPropertyChanged("ContractType");
					this.OnContractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Labours", Storage="_Staffs", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.Labours = null;
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.Labours = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leagues")]
	public partial class Leagues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Category;
		
		private string _FatherID;
		
		private string _Name;
		
		private int _Type;
		
		private int _Status;
		
		private string _RoleID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    #endregion
		
		public Leagues()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_Errors")]
	public partial class Logs_Errors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AdminID;
		
		private string _Page;
		
		private string _Codes;
		
		private string _Message;
		
		private string _Source;
		
		private string _Stack;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnCodesChanging(string value);
    partial void OnCodesChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnStackChanging(string value);
    partial void OnStackChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Logs_Errors()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codes", DbType="NVarChar(50)")]
		public string Codes
		{
			get
			{
				return this._Codes;
			}
			set
			{
				if ((this._Codes != value))
				{
					this.OnCodesChanging(value);
					this.SendPropertyChanging();
					this._Codes = value;
					this.SendPropertyChanged("Codes");
					this.OnCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stack", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Stack
		{
			get
			{
				return this._Stack;
			}
			set
			{
				if ((this._Stack != value))
				{
					this.OnStackChanging(value);
					this.SendPropertyChanging();
					this._Stack = value;
					this.SendPropertyChanged("Stack");
					this.OnStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs_Notice")]
	public partial class Logs_Notice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private string _Context;
		
		private System.DateTime _CreateDate;
		
		private bool _Readed;
		
		private System.Nullable<System.DateTime> _ReadDate;
		
		private string _AdminID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnReadedChanging(bool value);
    partial void OnReadedChanged();
    partial void OnReadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public Logs_Notice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readed", DbType="Bit NOT NULL")]
		public bool Readed
		{
			get
			{
				return this._Readed;
			}
			set
			{
				if ((this._Readed != value))
				{
					this.OnReadedChanging(value);
					this.SendPropertyChanging();
					this._Readed = value;
					this.SendPropertyChanged("Readed");
					this.OnReadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadDate
		{
			get
			{
				return this._ReadDate;
			}
			set
			{
				if ((this._ReadDate != value))
				{
					this.OnReadDateChanging(value);
					this.SendPropertyChanging();
					this._ReadDate = value;
					this.SendPropertyChanged("ReadDate");
					this.OnReadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsLeague")]
	public partial class MapsLeague : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _LeagueID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnLeagueIDChanging(string value);
    partial void OnLeagueIDChanged();
    #endregion
		
		public MapsLeague()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsPostion")]
	public partial class MapsPostion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PostionID;
		
		private string _WageItemID;
		
		private EntityRef<WageItems> _WageItems;
		
		private EntityRef<Postions> _Postions;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostionIDChanging(string value);
    partial void OnPostionIDChanged();
    partial void OnWageItemIDChanging(string value);
    partial void OnWageItemIDChanged();
    #endregion
		
		public MapsPostion()
		{
			this._WageItems = default(EntityRef<WageItems>);
			this._Postions = default(EntityRef<Postions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostionID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostionID
		{
			get
			{
				return this._PostionID;
			}
			set
			{
				if ((this._PostionID != value))
				{
					if (this._Postions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostionIDChanging(value);
					this.SendPropertyChanging();
					this._PostionID = value;
					this.SendPropertyChanged("PostionID");
					this.OnPostionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WageItemID
		{
			get
			{
				return this._WageItemID;
			}
			set
			{
				if ((this._WageItemID != value))
				{
					if (this._WageItems.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWageItemIDChanging(value);
					this.SendPropertyChanging();
					this._WageItemID = value;
					this.SendPropertyChanged("WageItemID");
					this.OnWageItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WageItems_MapsPostion", Storage="_WageItems", ThisKey="WageItemID", OtherKey="ID", IsForeignKey=true)]
		public WageItems WageItems
		{
			get
			{
				return this._WageItems.Entity;
			}
			set
			{
				WageItems previousValue = this._WageItems.Entity;
				if (((previousValue != value) 
							|| (this._WageItems.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WageItems.Entity = null;
						previousValue.MapsPostion.Remove(this);
					}
					this._WageItems.Entity = value;
					if ((value != null))
					{
						value.MapsPostion.Add(this);
						this._WageItemID = value.ID;
					}
					else
					{
						this._WageItemID = default(string);
					}
					this.SendPropertyChanged("WageItems");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postions_MapsPostion", Storage="_Postions", ThisKey="PostionID", OtherKey="ID", IsForeignKey=true)]
		public Postions Postions
		{
			get
			{
				return this._Postions.Entity;
			}
			set
			{
				Postions previousValue = this._Postions.Entity;
				if (((previousValue != value) 
							|| (this._Postions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Postions.Entity = null;
						previousValue.MapsPostion.Remove(this);
					}
					this._Postions.Entity = value;
					if ((value != null))
					{
						value.MapsPostion.Add(this);
						this._PostionID = value.ID;
					}
					else
					{
						this._PostionID = default(string);
					}
					this.SendPropertyChanged("Postions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsRole")]
	public partial class MapsRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuID;
		
		private string _RoleID;
		
		private EntityRef<Menus> _Menus;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    #endregion
		
		public MapsRole()
		{
			this._Menus = default(EntityRef<Menus>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menus_MapsRole", Storage="_Menus", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menus Menus
		{
			get
			{
				return this._Menus.Entity;
			}
			set
			{
				Menus previousValue = this._Menus.Entity;
				if (((previousValue != value) 
							|| (this._Menus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menus.Entity = null;
						previousValue.MapsRole.Remove(this);
					}
					this._Menus.Entity = value;
					if ((value != null))
					{
						value.MapsRole.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(string);
					}
					this.SendPropertyChanged("Menus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRole", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.MapsRole.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.MapsRole.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsWageItem")]
	public partial class MapsWageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StaffID;
		
		private string _WageItemID;
		
		private System.Nullable<decimal> _DefaultValue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnWageItemIDChanging(string value);
    partial void OnWageItemIDChanged();
    partial void OnDefaultValueChanging(System.Nullable<decimal> value);
    partial void OnDefaultValueChanged();
    #endregion
		
		public MapsWageItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WageItemID
		{
			get
			{
				return this._WageItemID;
			}
			set
			{
				if ((this._WageItemID != value))
				{
					this.OnWageItemIDChanging(value);
					this.SendPropertyChanging();
					this._WageItemID = value;
					this.SendPropertyChanged("WageItemID");
					this.OnWageItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menus")]
	public partial class Menus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _Company;
		
		private string _RightUrl;
		
		private string _IconUrl;
		
		private string _FirstUrl;
		
		private string _LogoUrl;
		
		private string _HelpUrl;
		
		private System.Nullable<int> _OrderIndex;
		
		private int _Status;
		
		private EntitySet<MapsRole> _MapsRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnRightUrlChanging(string value);
    partial void OnRightUrlChanged();
    partial void OnIconUrlChanging(string value);
    partial void OnIconUrlChanged();
    partial void OnFirstUrlChanging(string value);
    partial void OnFirstUrlChanged();
    partial void OnLogoUrlChanging(string value);
    partial void OnLogoUrlChanged();
    partial void OnHelpUrlChanging(string value);
    partial void OnHelpUrlChanged();
    partial void OnOrderIndexChanging(System.Nullable<int> value);
    partial void OnOrderIndexChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Menus()
		{
			this._MapsRole = new EntitySet<MapsRole>(new Action<MapsRole>(this.attach_MapsRole), new Action<MapsRole>(this.detach_MapsRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(150)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightUrl", DbType="VarChar(200)")]
		public string RightUrl
		{
			get
			{
				return this._RightUrl;
			}
			set
			{
				if ((this._RightUrl != value))
				{
					this.OnRightUrlChanging(value);
					this.SendPropertyChanging();
					this._RightUrl = value;
					this.SendPropertyChanged("RightUrl");
					this.OnRightUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconUrl", DbType="VarChar(200)")]
		public string IconUrl
		{
			get
			{
				return this._IconUrl;
			}
			set
			{
				if ((this._IconUrl != value))
				{
					this.OnIconUrlChanging(value);
					this.SendPropertyChanging();
					this._IconUrl = value;
					this.SendPropertyChanged("IconUrl");
					this.OnIconUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstUrl", DbType="VarChar(200)")]
		public string FirstUrl
		{
			get
			{
				return this._FirstUrl;
			}
			set
			{
				if ((this._FirstUrl != value))
				{
					this.OnFirstUrlChanging(value);
					this.SendPropertyChanging();
					this._FirstUrl = value;
					this.SendPropertyChanged("FirstUrl");
					this.OnFirstUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoUrl", DbType="VarChar(200)")]
		public string LogoUrl
		{
			get
			{
				return this._LogoUrl;
			}
			set
			{
				if ((this._LogoUrl != value))
				{
					this.OnLogoUrlChanging(value);
					this.SendPropertyChanging();
					this._LogoUrl = value;
					this.SendPropertyChanged("LogoUrl");
					this.OnLogoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpUrl", DbType="VarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this.OnHelpUrlChanging(value);
					this.SendPropertyChanging();
					this._HelpUrl = value;
					this.SendPropertyChanged("HelpUrl");
					this.OnHelpUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int")]
		public System.Nullable<int> OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menus_MapsRole", Storage="_MapsRole", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<MapsRole> MapsRole
		{
			get
			{
				return this._MapsRole;
			}
			set
			{
				this._MapsRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsRole(MapsRole entity)
		{
			this.SendPropertyChanging();
			entity.Menus = this;
		}
		
		private void detach_MapsRole(MapsRole entity)
		{
			this.SendPropertyChanging();
			entity.Menus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oplogs")]
	public partial class Oplogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Url;
		
		private string _Sys;
		
		private string _Type;
		
		private string _Operation;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSysChanging(string value);
    partial void OnSysChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnOperationChanging(string value);
    partial void OnOperationChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Oplogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sys", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sys
		{
			get
			{
				return this._Sys;
			}
			set
			{
				if ((this._Sys != value))
				{
					this.OnSysChanging(value);
					this.SendPropertyChanging();
					this._Sys = value;
					this.SendPropertyChanged("Sys");
					this.OnSysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVarChar(MAX)")]
		public string Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Particles")]
	public partial class Particles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _UrlCode;
		
		private string _Url;
		
		private string _Context;
		
		private string _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUrlCodeChanging(string value);
    partial void OnUrlCodeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Particles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlCode
		{
			get
			{
				return this._UrlCode;
			}
			set
			{
				if ((this._UrlCode != value))
				{
					this.OnUrlCodeChanging(value);
					this.SendPropertyChanging();
					this._UrlCode = value;
					this.SendPropertyChanged("UrlCode");
					this.OnUrlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParticleSettings")]
	public partial class ParticleSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _UrlCode;
		
		private string _Url;
		
		private string _Context;
		
		private string _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnUrlCodeChanging(string value);
    partial void OnUrlCodeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public ParticleSettings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCode", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlCode
		{
			get
			{
				return this._UrlCode;
			}
			set
			{
				if ((this._UrlCode != value))
				{
					this.OnUrlCodeChanging(value);
					this.SendPropertyChanging();
					this._UrlCode = value;
					this.SendPropertyChanged("UrlCode");
					this.OnUrlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pasts_MapsWageItem")]
	public partial class Pasts_MapsWageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _StaffID;
		
		private string _WageItemID;
		
		private System.Nullable<decimal> _DefaultValue;
		
		private System.DateTime _CreateDate;
		
		private string _AdminID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnWageItemIDChanging(string value);
    partial void OnWageItemIDChanged();
    partial void OnDefaultValueChanging(System.Nullable<decimal> value);
    partial void OnDefaultValueChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public Pasts_MapsWageItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WageItemID
		{
			get
			{
				return this._WageItemID;
			}
			set
			{
				if ((this._WageItemID != value))
				{
					this.OnWageItemIDChanging(value);
					this.SendPropertyChanging();
					this._WageItemID = value;
					this.SendPropertyChanged("WageItemID");
					this.OnWageItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayBills")]
	public partial class PayBills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _StaffID;
		
		private System.Nullable<System.DateTime> _ClosedData;
		
		private string _DateIndex;
		
		private System.DateTime _CreaetDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private int _Status;
		
		private EntitySet<PayItems> _PayItems;
		
		private EntityRef<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnClosedDataChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDataChanged();
    partial void OnDateIndexChanging(string value);
    partial void OnDateIndexChanged();
    partial void OnCreaetDateChanging(System.DateTime value);
    partial void OnCreaetDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public PayBills()
		{
			this._PayItems = new EntitySet<PayItems>(new Action<PayItems>(this.attach_PayItems), new Action<PayItems>(this.detach_PayItems));
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedData", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedData
		{
			get
			{
				return this._ClosedData;
			}
			set
			{
				if ((this._ClosedData != value))
				{
					this.OnClosedDataChanging(value);
					this.SendPropertyChanging();
					this._ClosedData = value;
					this.SendPropertyChanged("ClosedData");
					this.OnClosedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIndex", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateIndex
		{
			get
			{
				return this._DateIndex;
			}
			set
			{
				if ((this._DateIndex != value))
				{
					this.OnDateIndexChanging(value);
					this.SendPropertyChanging();
					this._DateIndex = value;
					this.SendPropertyChanged("DateIndex");
					this.OnDateIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreaetDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreaetDate
		{
			get
			{
				return this._CreaetDate;
			}
			set
			{
				if ((this._CreaetDate != value))
				{
					this.OnCreaetDateChanging(value);
					this.SendPropertyChanging();
					this._CreaetDate = value;
					this.SendPropertyChanged("CreaetDate");
					this.OnCreaetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayBills_PayItems", Storage="_PayItems", ThisKey="ID", OtherKey="PayID")]
		public EntitySet<PayItems> PayItems
		{
			get
			{
				return this._PayItems;
			}
			set
			{
				this._PayItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_PayBills", Storage="_Staffs", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.PayBills.Remove(this);
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.PayBills.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(string);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayItems(PayItems entity)
		{
			this.SendPropertyChanging();
			entity.PayBills = this;
		}
		
		private void detach_PayItems(PayItems entity)
		{
			this.SendPropertyChanging();
			entity.PayBills = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayItems")]
	public partial class PayItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PayID;
		
		private string _Name;
		
		private decimal _Value;
		
		private string _DateIndex;
		
		private string _WageItemFormula;
		
		private string _ActualFormula;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _AdminID;
		
		private EntityRef<PayBills> _PayBills;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPayIDChanging(string value);
    partial void OnPayIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnDateIndexChanging(string value);
    partial void OnDateIndexChanged();
    partial void OnWageItemFormulaChanging(string value);
    partial void OnWageItemFormulaChanged();
    partial void OnActualFormulaChanging(string value);
    partial void OnActualFormulaChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public PayItems()
		{
			this._PayBills = default(EntityRef<PayBills>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PayID
		{
			get
			{
				return this._PayID;
			}
			set
			{
				if ((this._PayID != value))
				{
					if (this._PayBills.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayIDChanging(value);
					this.SendPropertyChanging();
					this._PayID = value;
					this.SendPropertyChanged("PayID");
					this.OnPayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,5) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIndex", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateIndex
		{
			get
			{
				return this._DateIndex;
			}
			set
			{
				if ((this._DateIndex != value))
				{
					this.OnDateIndexChanging(value);
					this.SendPropertyChanging();
					this._DateIndex = value;
					this.SendPropertyChanged("DateIndex");
					this.OnDateIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageItemFormula", DbType="NVarChar(500)")]
		public string WageItemFormula
		{
			get
			{
				return this._WageItemFormula;
			}
			set
			{
				if ((this._WageItemFormula != value))
				{
					this.OnWageItemFormulaChanging(value);
					this.SendPropertyChanging();
					this._WageItemFormula = value;
					this.SendPropertyChanged("WageItemFormula");
					this.OnWageItemFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualFormula", DbType="NVarChar(500)")]
		public string ActualFormula
		{
			get
			{
				return this._ActualFormula;
			}
			set
			{
				if ((this._ActualFormula != value))
				{
					this.OnActualFormulaChanging(value);
					this.SendPropertyChanging();
					this._ActualFormula = value;
					this.SendPropertyChanged("ActualFormula");
					this.OnActualFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayBills_PayItems", Storage="_PayBills", ThisKey="PayID", OtherKey="ID", IsForeignKey=true)]
		public PayBills PayBills
		{
			get
			{
				return this._PayBills.Entity;
			}
			set
			{
				PayBills previousValue = this._PayBills.Entity;
				if (((previousValue != value) 
							|| (this._PayBills.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayBills.Entity = null;
						previousValue.PayItems.Remove(this);
					}
					this._PayBills.Entity = value;
					if ((value != null))
					{
						value.PayItems.Add(this);
						this._PayID = value.ID;
					}
					else
					{
						this._PayID = default(string);
					}
					this.SendPropertyChanged("PayBills");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalRates")]
	public partial class PersonalRates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Levels;
		
		private decimal _BeginAmount;
		
		private decimal _EndAmount;
		
		private decimal _Rate;
		
		private decimal _Deduction;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _AdminID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnLevelsChanging(int value);
    partial void OnLevelsChanged();
    partial void OnBeginAmountChanging(decimal value);
    partial void OnBeginAmountChanged();
    partial void OnEndAmountChanging(decimal value);
    partial void OnEndAmountChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnDeductionChanging(decimal value);
    partial void OnDeductionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    #endregion
		
		public PersonalRates()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Levels", DbType="Int NOT NULL")]
		public int Levels
		{
			get
			{
				return this._Levels;
			}
			set
			{
				if ((this._Levels != value))
				{
					this.OnLevelsChanging(value);
					this.SendPropertyChanging();
					this._Levels = value;
					this.SendPropertyChanged("Levels");
					this.OnLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BeginAmount
		{
			get
			{
				return this._BeginAmount;
			}
			set
			{
				if ((this._BeginAmount != value))
				{
					this.OnBeginAmountChanging(value);
					this.SendPropertyChanging();
					this._BeginAmount = value;
					this.SendPropertyChanged("BeginAmount");
					this.OnBeginAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal EndAmount
		{
			get
			{
				return this._EndAmount;
			}
			set
			{
				if ((this._EndAmount != value))
				{
					this.OnEndAmountChanging(value);
					this.SendPropertyChanging();
					this._EndAmount = value;
					this.SendPropertyChanged("EndAmount");
					this.OnEndAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,5) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deduction", DbType="Decimal(18,5) NOT NULL")]
		public decimal Deduction
		{
			get
			{
				return this._Deduction;
			}
			set
			{
				if ((this._Deduction != value))
				{
					this.OnDeductionChanging(value);
					this.SendPropertyChanging();
					this._Deduction = value;
					this.SendPropertyChanged("Deduction");
					this.OnDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personals")]
	public partial class Personals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _IDCard;
		
		private string _Image;
		
		private string _NativePlace;
		
		private string _HomeAddress;
		
		private string _PassAddress;
		
		private string _Volk;
		
		private string _PoliticalOutlook;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private string _Blood;
		
		private string _Education;
		
		private string _GraduatInstitutions;
		
		private string _Major;
		
		private System.Nullable<bool> _IsMarry;
		
		private EntityRef<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnNativePlaceChanging(string value);
    partial void OnNativePlaceChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnPassAddressChanging(string value);
    partial void OnPassAddressChanged();
    partial void OnVolkChanging(string value);
    partial void OnVolkChanged();
    partial void OnPoliticalOutlookChanging(string value);
    partial void OnPoliticalOutlookChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnBloodChanging(string value);
    partial void OnBloodChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnGraduatInstitutionsChanging(string value);
    partial void OnGraduatInstitutionsChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnIsMarryChanging(System.Nullable<bool> value);
    partial void OnIsMarryChanged();
    #endregion
		
		public Personals()
		{
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativePlace", DbType="NVarChar(150)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this.OnNativePlaceChanging(value);
					this.SendPropertyChanging();
					this._NativePlace = value;
					this.SendPropertyChanged("NativePlace");
					this.OnNativePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(150)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAddress", DbType="NVarChar(150)")]
		public string PassAddress
		{
			get
			{
				return this._PassAddress;
			}
			set
			{
				if ((this._PassAddress != value))
				{
					this.OnPassAddressChanging(value);
					this.SendPropertyChanging();
					this._PassAddress = value;
					this.SendPropertyChanged("PassAddress");
					this.OnPassAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volk", DbType="VarChar(50)")]
		public string Volk
		{
			get
			{
				return this._Volk;
			}
			set
			{
				if ((this._Volk != value))
				{
					this.OnVolkChanging(value);
					this.SendPropertyChanging();
					this._Volk = value;
					this.SendPropertyChanged("Volk");
					this.OnVolkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliticalOutlook", DbType="VarChar(50)")]
		public string PoliticalOutlook
		{
			get
			{
				return this._PoliticalOutlook;
			}
			set
			{
				if ((this._PoliticalOutlook != value))
				{
					this.OnPoliticalOutlookChanging(value);
					this.SendPropertyChanging();
					this._PoliticalOutlook = value;
					this.SendPropertyChanged("PoliticalOutlook");
					this.OnPoliticalOutlookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="VarChar(50)")]
		public string Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="VarChar(50)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduatInstitutions", DbType="VarChar(50)")]
		public string GraduatInstitutions
		{
			get
			{
				return this._GraduatInstitutions;
			}
			set
			{
				if ((this._GraduatInstitutions != value))
				{
					this.OnGraduatInstitutionsChanging(value);
					this.SendPropertyChanging();
					this._GraduatInstitutions = value;
					this.SendPropertyChanged("GraduatInstitutions");
					this.OnGraduatInstitutionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="VarChar(50)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarry", DbType="Bit")]
		public System.Nullable<bool> IsMarry
		{
			get
			{
				return this._IsMarry;
			}
			set
			{
				if ((this._IsMarry != value))
				{
					this.OnIsMarryChanging(value);
					this.SendPropertyChanging();
					this._IsMarry = value;
					this.SendPropertyChanged("IsMarry");
					this.OnIsMarryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Personals", Storage="_Staffs", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.Personals = null;
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.Personals = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Postions")]
	public partial class Postions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _AdminID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<MapsPostion> _MapsPostion;
		
		private EntitySet<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Postions()
		{
			this._MapsPostion = new EntitySet<MapsPostion>(new Action<MapsPostion>(this.attach_MapsPostion), new Action<MapsPostion>(this.detach_MapsPostion));
			this._Staffs = new EntitySet<Staffs>(new Action<Staffs>(this.attach_Staffs), new Action<Staffs>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postions_MapsPostion", Storage="_MapsPostion", ThisKey="ID", OtherKey="PostionID")]
		public EntitySet<MapsPostion> MapsPostion
		{
			get
			{
				return this._MapsPostion;
			}
			set
			{
				this._MapsPostion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postions_Staffs", Storage="_Staffs", ThisKey="ID", OtherKey="PostionID")]
		public EntitySet<Staffs> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsPostion(MapsPostion entity)
		{
			this.SendPropertyChanging();
			entity.Postions = this;
		}
		
		private void detach_MapsPostion(MapsPostion entity)
		{
			this.SendPropertyChanging();
			entity.Postions = null;
		}
		
		private void attach_Staffs(Staffs entity)
		{
			this.SendPropertyChanging();
			entity.Postions = this;
		}
		
		private void detach_Staffs(Staffs entity)
		{
			this.SendPropertyChanging();
			entity.Postions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrimaryKeys")]
	public partial class PrimaryKeys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private int _Type;
		
		private int _Length;
		
		private int _Value;
		
		private int _Day;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    #endregion
		
		public PrimaryKeys()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<MapsRole> _MapsRole;
		
		private EntitySet<Admins> _Admins;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Roles()
		{
			this._MapsRole = new EntitySet<MapsRole>(new Action<MapsRole>(this.attach_MapsRole), new Action<MapsRole>(this.detach_MapsRole));
			this._Admins = new EntitySet<Admins>(new Action<Admins>(this.attach_Admins), new Action<Admins>(this.detach_Admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRole", Storage="_MapsRole", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<MapsRole> MapsRole
		{
			get
			{
				return this._MapsRole;
			}
			set
			{
				this._MapsRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Admins", Storage="_Admins", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Admins> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsRole(MapsRole entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_MapsRole(MapsRole entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_Admins(Admins entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Admins(Admins entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staffs")]
	public partial class Staffs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Code;
		
		private string _SelCode;
		
		private int _Gender;
		
		private string _DyjCompanyCode;
		
		private string _DyjDepartmentCode;
		
		private string _WorkCity;
		
		private string _LeagueID;
		
		private string _PostionID;
		
		private string _AssessmentMethod;
		
		private string _AssessmentTime;
		
		private string _AdminID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private EntityRef<BankCards> _BankCards;
		
		private EntityRef<Labours> _Labours;
		
		private EntitySet<PayBills> _PayBills;
		
		private EntityRef<Personals> _Personals;
		
		private EntitySet<Admins> _Admins;
		
		private EntityRef<Postions> _Postions;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSelCodeChanging(string value);
    partial void OnSelCodeChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnDyjCompanyCodeChanging(string value);
    partial void OnDyjCompanyCodeChanged();
    partial void OnDyjDepartmentCodeChanging(string value);
    partial void OnDyjDepartmentCodeChanged();
    partial void OnWorkCityChanging(string value);
    partial void OnWorkCityChanged();
    partial void OnLeagueIDChanging(string value);
    partial void OnLeagueIDChanged();
    partial void OnPostionIDChanging(string value);
    partial void OnPostionIDChanged();
    partial void OnAssessmentMethodChanging(string value);
    partial void OnAssessmentMethodChanged();
    partial void OnAssessmentTimeChanging(string value);
    partial void OnAssessmentTimeChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Staffs()
		{
			this._BankCards = default(EntityRef<BankCards>);
			this._Labours = default(EntityRef<Labours>);
			this._PayBills = new EntitySet<PayBills>(new Action<PayBills>(this.attach_PayBills), new Action<PayBills>(this.detach_PayBills));
			this._Personals = default(EntityRef<Personals>);
			this._Admins = new EntitySet<Admins>(new Action<Admins>(this.attach_Admins), new Action<Admins>(this.detach_Admins));
			this._Postions = default(EntityRef<Postions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this.OnSelCodeChanging(value);
					this.SendPropertyChanging();
					this._SelCode = value;
					this.SendPropertyChanged("SelCode");
					this.OnSelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
		public int Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjCompanyCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DyjCompanyCode
		{
			get
			{
				return this._DyjCompanyCode;
			}
			set
			{
				if ((this._DyjCompanyCode != value))
				{
					this.OnDyjCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjCompanyCode = value;
					this.SendPropertyChanged("DyjCompanyCode");
					this.OnDyjCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyjDepartmentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DyjDepartmentCode
		{
			get
			{
				return this._DyjDepartmentCode;
			}
			set
			{
				if ((this._DyjDepartmentCode != value))
				{
					this.OnDyjDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DyjDepartmentCode = value;
					this.SendPropertyChanged("DyjDepartmentCode");
					this.OnDyjDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkCity
		{
			get
			{
				return this._WorkCity;
			}
			set
			{
				if ((this._WorkCity != value))
				{
					this.OnWorkCityChanging(value);
					this.SendPropertyChanging();
					this._WorkCity = value;
					this.SendPropertyChanged("WorkCity");
					this.OnWorkCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="VarChar(50)")]
		public string LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PostionID
		{
			get
			{
				return this._PostionID;
			}
			set
			{
				if ((this._PostionID != value))
				{
					if (this._Postions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostionIDChanging(value);
					this.SendPropertyChanging();
					this._PostionID = value;
					this.SendPropertyChanged("PostionID");
					this.OnPostionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentMethod", DbType="VarChar(50)")]
		public string AssessmentMethod
		{
			get
			{
				return this._AssessmentMethod;
			}
			set
			{
				if ((this._AssessmentMethod != value))
				{
					this.OnAssessmentMethodChanging(value);
					this.SendPropertyChanging();
					this._AssessmentMethod = value;
					this.SendPropertyChanged("AssessmentMethod");
					this.OnAssessmentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentTime", DbType="VarChar(50)")]
		public string AssessmentTime
		{
			get
			{
				return this._AssessmentTime;
			}
			set
			{
				if ((this._AssessmentTime != value))
				{
					this.OnAssessmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AssessmentTime = value;
					this.SendPropertyChanged("AssessmentTime");
					this.OnAssessmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50)")]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_BankCards", Storage="_BankCards", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public BankCards BankCards
		{
			get
			{
				return this._BankCards.Entity;
			}
			set
			{
				BankCards previousValue = this._BankCards.Entity;
				if (((previousValue != value) 
							|| (this._BankCards.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankCards.Entity = null;
						previousValue.Staffs = null;
					}
					this._BankCards.Entity = value;
					if ((value != null))
					{
						value.Staffs = this;
					}
					this.SendPropertyChanged("BankCards");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Labours", Storage="_Labours", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Labours Labours
		{
			get
			{
				return this._Labours.Entity;
			}
			set
			{
				Labours previousValue = this._Labours.Entity;
				if (((previousValue != value) 
							|| (this._Labours.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Labours.Entity = null;
						previousValue.Staffs = null;
					}
					this._Labours.Entity = value;
					if ((value != null))
					{
						value.Staffs = this;
					}
					this.SendPropertyChanged("Labours");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_PayBills", Storage="_PayBills", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<PayBills> PayBills
		{
			get
			{
				return this._PayBills;
			}
			set
			{
				this._PayBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Personals", Storage="_Personals", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Personals Personals
		{
			get
			{
				return this._Personals.Entity;
			}
			set
			{
				Personals previousValue = this._Personals.Entity;
				if (((previousValue != value) 
							|| (this._Personals.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personals.Entity = null;
						previousValue.Staffs = null;
					}
					this._Personals.Entity = value;
					if ((value != null))
					{
						value.Staffs = this;
					}
					this.SendPropertyChanged("Personals");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Admins", Storage="_Admins", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Admins> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postions_Staffs", Storage="_Postions", ThisKey="PostionID", OtherKey="ID", IsForeignKey=true)]
		public Postions Postions
		{
			get
			{
				return this._Postions.Entity;
			}
			set
			{
				Postions previousValue = this._Postions.Entity;
				if (((previousValue != value) 
							|| (this._Postions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Postions.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Postions.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._PostionID = value.ID;
					}
					else
					{
						this._PostionID = default(string);
					}
					this.SendPropertyChanged("Postions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayBills(PayBills entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = this;
		}
		
		private void detach_PayBills(PayBills entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = null;
		}
		
		private void attach_Admins(Admins entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = this;
		}
		
		private void detach_Admins(Admins entity)
		{
			this.SendPropertyChanging();
			entity.Staffs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temp_InitData")]
	public partial class Temp_InitData
	{
		
		private string _CityName;
		
		private string _CompanyName;
		
		private string _CompanyCode;
		
		private string _DeptCode;
		
		private string _StaffCode;
		
		private string _StaffName;
		
		private string _Postion;
		
		private string _IdCard;
		
		private string _BankAccount;
		
		public Temp_InitData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptCode", DbType="VarChar(50)")]
		public string DeptCode
		{
			get
			{
				return this._DeptCode;
			}
			set
			{
				if ((this._DeptCode != value))
				{
					this._DeptCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCode", DbType="VarChar(50)")]
		public string StaffCode
		{
			get
			{
				return this._StaffCode;
			}
			set
			{
				if ((this._StaffCode != value))
				{
					this._StaffCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(50)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this._StaffName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postion", DbType="VarChar(50)")]
		public string Postion
		{
			get
			{
				return this._Postion;
			}
			set
			{
				if ((this._Postion != value))
				{
					this._Postion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCard", DbType="VarChar(50)")]
		public string IdCard
		{
			get
			{
				return this._IdCard;
			}
			set
			{
				if ((this._IdCard != value))
				{
					this._IdCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this._BankAccount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tokens")]
	public partial class Tokens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _OutID;
		
		private string _Token;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<Admins> _Admins;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOutIDChanging(string value);
    partial void OnOutIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Tokens()
		{
			this._Admins = default(EntityRef<Admins>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OutID
		{
			get
			{
				return this._OutID;
			}
			set
			{
				if ((this._OutID != value))
				{
					if (this._Admins.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutIDChanging(value);
					this.SendPropertyChanging();
					this._OutID = value;
					this.SendPropertyChanged("OutID");
					this.OnOutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_Tokens", Storage="_Admins", ThisKey="OutID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins
		{
			get
			{
				return this._Admins.Entity;
			}
			set
			{
				Admins previousValue = this._Admins.Entity;
				if (((previousValue != value) 
							|| (this._Admins.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins.Entity = null;
						previousValue.Tokens.Remove(this);
					}
					this._Admins.Entity = value;
					if ((value != null))
					{
						value.Tokens.Add(this);
						this._OutID = value.ID;
					}
					else
					{
						this._OutID = default(string);
					}
					this.SendPropertyChanged("Admins");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminAdvantagesTopView")]
	public partial class AdminAdvantagesTopView
	{
		
		private string _AdminID;
		
		private string _Manufacturers;
		
		private string _PartNumbers;
		
		public AdminAdvantagesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturers", DbType="NVarChar(MAX)")]
		public string Manufacturers
		{
			get
			{
				return this._Manufacturers;
			}
			set
			{
				if ((this._Manufacturers != value))
				{
					this._Manufacturers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumbers", DbType="NVarChar(MAX)")]
		public string PartNumbers
		{
			get
			{
				return this._PartNumbers;
			}
			set
			{
				if ((this._PartNumbers != value))
				{
					this._PartNumbers = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsBussinessTopView")]
	public partial class AdminsBussinessTopView
	{
		
		private string _ID;
		
		private string _StaffID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _SelCode;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private int _Status;
		
		private string _Name;
		
		public AdminsBussinessTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this._StaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this._SelCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _StaffID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _SelCode;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _RoleStatus;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this._StaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this._SelCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(150)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStatus", DbType="Int")]
		public System.Nullable<int> RoleStatus
		{
			get
			{
				return this._RoleStatus;
			}
			set
			{
				if ((this._RoleStatus != value))
				{
					this._RoleStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompaniesTopView")]
	public partial class CompaniesTopView
	{
		
		private string _ID;
		
		private int _Type;
		
		private int _Range;
		
		private int _Status;
		
		private string _Name;
		
		private string _District;
		
		public CompaniesTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="Int NOT NULL")]
		public int Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this._Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _StaffID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private string _SelCode;
		
		private string _RoleID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _OriginID;
		
		private EntitySet<Tokens> _Tokens;
		
		private EntityRef<Roles> _Roles;
		
		private EntityRef<Staffs> _Staffs;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSelCodeChanging(string value);
    partial void OnSelCodeChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnOriginIDChanging(string value);
    partial void OnOriginIDChanged();
    #endregion
		
		public Admins()
		{
			this._Tokens = new EntitySet<Tokens>(new Action<Tokens>(this.attach_Tokens), new Action<Tokens>(this.detach_Tokens));
			this._Roles = default(EntityRef<Roles>);
			this._Staffs = default(EntityRef<Staffs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staffs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SelCode
		{
			get
			{
				return this._SelCode;
			}
			set
			{
				if ((this._SelCode != value))
				{
					this.OnSelCodeChanging(value);
					this.SendPropertyChanging();
					this._SelCode = value;
					this.SendPropertyChanged("SelCode");
					this.OnSelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginID", DbType="VarChar(50)")]
		public string OriginID
		{
			get
			{
				return this._OriginID;
			}
			set
			{
				if ((this._OriginID != value))
				{
					this.OnOriginIDChanging(value);
					this.SendPropertyChanging();
					this._OriginID = value;
					this.SendPropertyChanged("OriginID");
					this.OnOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_Tokens", Storage="_Tokens", ThisKey="ID", OtherKey="OutID")]
		public EntitySet<Tokens> Tokens
		{
			get
			{
				return this._Tokens;
			}
			set
			{
				this._Tokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Admins", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffs_Admins", Storage="_Staffs", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staffs Staffs
		{
			get
			{
				return this._Staffs.Entity;
			}
			set
			{
				Staffs previousValue = this._Staffs.Entity;
				if (((previousValue != value) 
							|| (this._Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffs.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Staffs.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(string);
					}
					this.SendPropertyChanged("Staffs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tokens(Tokens entity)
		{
			this.SendPropertyChanging();
			entity.Admins = this;
		}
		
		private void detach_Tokens(Tokens entity)
		{
			this.SendPropertyChanging();
			entity.Admins = null;
		}
	}
}
#pragma warning restore 1591
