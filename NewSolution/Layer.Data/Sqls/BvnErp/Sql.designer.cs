#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Layer.Data.Sqls.BvnErp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BvnErp")]
	public partial class SqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdmins(Admins instance);
    partial void UpdateAdmins(Admins instance);
    partial void DeleteAdmins(Admins instance);
    partial void InsertMapsAdmin(MapsAdmin instance);
    partial void UpdateMapsAdmin(MapsAdmin instance);
    partial void DeleteMapsAdmin(MapsAdmin instance);
    partial void InsertMapsAdminRole(MapsAdminRole instance);
    partial void UpdateMapsAdminRole(MapsAdminRole instance);
    partial void DeleteMapsAdminRole(MapsAdminRole instance);
    partial void InsertMapsRoleMenu(MapsRoleMenu instance);
    partial void UpdateMapsRoleMenu(MapsRoleMenu instance);
    partial void DeleteMapsRoleMenu(MapsRoleMenu instance);
    partial void InsertMapsRoleUnite(MapsRoleUnite instance);
    partial void UpdateMapsRoleUnite(MapsRoleUnite instance);
    partial void DeleteMapsRoleUnite(MapsRoleUnite instance);
    partial void InsertMenus(Menus instance);
    partial void UpdateMenus(Menus instance);
    partial void DeleteMenus(Menus instance);
    partial void InsertPrimaryKeys(PrimaryKeys instance);
    partial void UpdatePrimaryKeys(PrimaryKeys instance);
    partial void DeletePrimaryKeys(PrimaryKeys instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertRoleUnites(RoleUnites instance);
    partial void UpdateRoleUnites(RoleUnites instance);
    partial void DeleteRoleUnites(RoleUnites instance);
    partial void InsertTokens(Tokens instance);
    partial void UpdateTokens(Tokens instance);
    partial void DeleteTokens(Tokens instance);
    partial void InsertMapsAdminClient(MapsAdminClient instance);
    partial void UpdateMapsAdminClient(MapsAdminClient instance);
    partial void DeleteMapsAdminClient(MapsAdminClient instance);
    partial void InsertMapsAdminClient_En(MapsAdminClient_En instance);
    partial void UpdateMapsAdminClient_En(MapsAdminClient_En instance);
    partial void DeleteMapsAdminClient_En(MapsAdminClient_En instance);
    #endregion
		
		public SqlDataContext() : 
				base(global::Layer.Data.Properties.Settings.Default.BvnErpConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admins> Admins
		{
			get
			{
				return this.GetTable<Admins>();
			}
		}
		
		public System.Data.Linq.Table<TopMapsAdminClient> TopMapsAdminClient
		{
			get
			{
				return this.GetTable<TopMapsAdminClient>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdmin> MapsAdmin
		{
			get
			{
				return this.GetTable<MapsAdmin>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdminRole> MapsAdminRole
		{
			get
			{
				return this.GetTable<MapsAdminRole>();
			}
		}
		
		public System.Data.Linq.Table<MapsRoleMenu> MapsRoleMenu
		{
			get
			{
				return this.GetTable<MapsRoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<MapsRoleUnite> MapsRoleUnite
		{
			get
			{
				return this.GetTable<MapsRoleUnite>();
			}
		}
		
		public System.Data.Linq.Table<Menus> Menus
		{
			get
			{
				return this.GetTable<Menus>();
			}
		}
		
		public System.Data.Linq.Table<PrimaryKeys> PrimaryKeys
		{
			get
			{
				return this.GetTable<PrimaryKeys>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<RoleUnites> RoleUnites
		{
			get
			{
				return this.GetTable<RoleUnites>();
			}
		}
		
		public System.Data.Linq.Table<Tokens> Tokens
		{
			get
			{
				return this.GetTable<Tokens>();
			}
		}
		
		public System.Data.Linq.Table<AdminsTopView> AdminsTopView
		{
			get
			{
				return this.GetTable<AdminsTopView>();
			}
		}
		
		public System.Data.Linq.Table<ClientsTopView> ClientsTopView
		{
			get
			{
				return this.GetTable<ClientsTopView>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdminClient> MapsAdminClient
		{
			get
			{
				return this.GetTable<MapsAdminClient>();
			}
		}
		
		public System.Data.Linq.Table<MapsAdminClient_En> MapsAdminClient_En
		{
			get
			{
				return this.GetTable<MapsAdminClient_En>();
			}
		}
		
		public System.Data.Linq.Table<ClientsTopView_En> ClientsTopView_En
		{
			get
			{
				return this.GetTable<ClientsTopView_En>();
			}
		}
		
		public System.Data.Linq.Table<TopMapsAdminClient_En> TopMapsAdminClient_En
		{
			get
			{
				return this.GetTable<TopMapsAdminClient_En>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<MapsAdmin> _MapsAdmin;
		
		private EntitySet<MapsAdmin> _MapsAdmin1;
		
		private EntitySet<MapsAdminRole> _MapsAdminRole;
		
		private EntitySet<MapsAdminClient> _MapsAdminClient;
		
		private EntitySet<MapsAdminClient_En> _MapsAdminClient_En;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Admins()
		{
			this._MapsAdmin = new EntitySet<MapsAdmin>(new Action<MapsAdmin>(this.attach_MapsAdmin), new Action<MapsAdmin>(this.detach_MapsAdmin));
			this._MapsAdmin1 = new EntitySet<MapsAdmin>(new Action<MapsAdmin>(this.attach_MapsAdmin1), new Action<MapsAdmin>(this.detach_MapsAdmin1));
			this._MapsAdminRole = new EntitySet<MapsAdminRole>(new Action<MapsAdminRole>(this.attach_MapsAdminRole), new Action<MapsAdminRole>(this.detach_MapsAdminRole));
			this._MapsAdminClient = new EntitySet<MapsAdminClient>(new Action<MapsAdminClient>(this.attach_MapsAdminClient), new Action<MapsAdminClient>(this.detach_MapsAdminClient));
			this._MapsAdminClient_En = new EntitySet<MapsAdminClient_En>(new Action<MapsAdminClient_En>(this.attach_MapsAdminClient_En), new Action<MapsAdminClient_En>(this.detach_MapsAdminClient_En));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdmin", Storage="_MapsAdmin", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<MapsAdmin> MapsAdmin
		{
			get
			{
				return this._MapsAdmin;
			}
			set
			{
				this._MapsAdmin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdmin1", Storage="_MapsAdmin1", ThisKey="ID", OtherKey="SubID")]
		public EntitySet<MapsAdmin> MapsAdmin1
		{
			get
			{
				return this._MapsAdmin1;
			}
			set
			{
				this._MapsAdmin1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminRole", Storage="_MapsAdminRole", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<MapsAdminRole> MapsAdminRole
		{
			get
			{
				return this._MapsAdminRole;
			}
			set
			{
				this._MapsAdminRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminClient", Storage="_MapsAdminClient", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<MapsAdminClient> MapsAdminClient
		{
			get
			{
				return this._MapsAdminClient;
			}
			set
			{
				this._MapsAdminClient.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminClient_En", Storage="_MapsAdminClient_En", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<MapsAdminClient_En> MapsAdminClient_En
		{
			get
			{
				return this._MapsAdminClient_En;
			}
			set
			{
				this._MapsAdminClient_En.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admins = this;
		}
		
		private void detach_MapsAdmin(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admins = null;
		}
		
		private void attach_MapsAdmin1(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admins1 = this;
		}
		
		private void detach_MapsAdmin1(MapsAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admins1 = null;
		}
		
		private void attach_MapsAdminRole(MapsAdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admins = this;
		}
		
		private void detach_MapsAdminRole(MapsAdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admins = null;
		}
		
		private void attach_MapsAdminClient(MapsAdminClient entity)
		{
			this.SendPropertyChanging();
			entity.Admins = this;
		}
		
		private void detach_MapsAdminClient(MapsAdminClient entity)
		{
			this.SendPropertyChanging();
			entity.Admins = null;
		}
		
		private void attach_MapsAdminClient_En(MapsAdminClient_En entity)
		{
			this.SendPropertyChanging();
			entity.Admins = this;
		}
		
		private void detach_MapsAdminClient_En(MapsAdminClient_En entity)
		{
			this.SendPropertyChanging();
			entity.Admins = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TopMapsAdminClient")]
	public partial class TopMapsAdminClient
	{
		
		private string _AdminID;
		
		private string _ClientID;
		
		public TopMapsAdminClient()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdmin")]
	public partial class MapsAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MainID;
		
		private string _SubID;
		
		private int _Type;
		
		private EntityRef<Admins> _Admins;
		
		private EntityRef<Admins> _Admins1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMainIDChanging(string value);
    partial void OnMainIDChanged();
    partial void OnSubIDChanging(string value);
    partial void OnSubIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public MapsAdmin()
		{
			this._Admins = default(EntityRef<Admins>);
			this._Admins1 = default(EntityRef<Admins>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Admins.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubID
		{
			get
			{
				return this._SubID;
			}
			set
			{
				if ((this._SubID != value))
				{
					if (this._Admins1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubIDChanging(value);
					this.SendPropertyChanging();
					this._SubID = value;
					this.SendPropertyChanged("SubID");
					this.OnSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdmin", Storage="_Admins", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins
		{
			get
			{
				return this._Admins.Entity;
			}
			set
			{
				Admins previousValue = this._Admins.Entity;
				if (((previousValue != value) 
							|| (this._Admins.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins.Entity = null;
						previousValue.MapsAdmin.Remove(this);
					}
					this._Admins.Entity = value;
					if ((value != null))
					{
						value.MapsAdmin.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(string);
					}
					this.SendPropertyChanged("Admins");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdmin1", Storage="_Admins1", ThisKey="SubID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins1
		{
			get
			{
				return this._Admins1.Entity;
			}
			set
			{
				Admins previousValue = this._Admins1.Entity;
				if (((previousValue != value) 
							|| (this._Admins1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins1.Entity = null;
						previousValue.MapsAdmin1.Remove(this);
					}
					this._Admins1.Entity = value;
					if ((value != null))
					{
						value.MapsAdmin1.Add(this);
						this._SubID = value.ID;
					}
					else
					{
						this._SubID = default(string);
					}
					this.SendPropertyChanged("Admins1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdminRole")]
	public partial class MapsAdminRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _RoleID;
		
		private EntityRef<Admins> _Admins;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    #endregion
		
		public MapsAdminRole()
		{
			this._Admins = default(EntityRef<Admins>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admins.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminRole", Storage="_Admins", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins
		{
			get
			{
				return this._Admins.Entity;
			}
			set
			{
				Admins previousValue = this._Admins.Entity;
				if (((previousValue != value) 
							|| (this._Admins.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins.Entity = null;
						previousValue.MapsAdminRole.Remove(this);
					}
					this._Admins.Entity = value;
					if ((value != null))
					{
						value.MapsAdminRole.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("Admins");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsAdminRole", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.MapsAdminRole.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.MapsAdminRole.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsRoleMenu")]
	public partial class MapsRoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _MenuID;
		
		private EntityRef<Menus> _Menus;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    #endregion
		
		public MapsRoleMenu()
		{
			this._Menus = default(EntityRef<Menus>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menus_MapsRoleMenu", Storage="_Menus", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menus Menus
		{
			get
			{
				return this._Menus.Entity;
			}
			set
			{
				Menus previousValue = this._Menus.Entity;
				if (((previousValue != value) 
							|| (this._Menus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menus.Entity = null;
						previousValue.MapsRoleMenu.Remove(this);
					}
					this._Menus.Entity = value;
					if ((value != null))
					{
						value.MapsRoleMenu.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(string);
					}
					this.SendPropertyChanged("Menus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRoleMenu", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.MapsRoleMenu.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.MapsRoleMenu.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsRoleUnite")]
	public partial class MapsRoleUnite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _RoleUniteID;
		
		private EntityRef<Roles> _Roles;
		
		private EntityRef<RoleUnites> _RoleUnites;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnRoleUniteIDChanging(string value);
    partial void OnRoleUniteIDChanged();
    #endregion
		
		public MapsRoleUnite()
		{
			this._Roles = default(EntityRef<Roles>);
			this._RoleUnites = default(EntityRef<RoleUnites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleUniteID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleUniteID
		{
			get
			{
				return this._RoleUniteID;
			}
			set
			{
				if ((this._RoleUniteID != value))
				{
					if (this._RoleUnites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleUniteIDChanging(value);
					this.SendPropertyChanging();
					this._RoleUniteID = value;
					this.SendPropertyChanged("RoleUniteID");
					this.OnRoleUniteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRoleUnite", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.MapsRoleUnite.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.MapsRoleUnite.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleUnites_MapsRoleUnite", Storage="_RoleUnites", ThisKey="RoleUniteID", OtherKey="ID", IsForeignKey=true)]
		public RoleUnites RoleUnites
		{
			get
			{
				return this._RoleUnites.Entity;
			}
			set
			{
				RoleUnites previousValue = this._RoleUnites.Entity;
				if (((previousValue != value) 
							|| (this._RoleUnites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleUnites.Entity = null;
						previousValue.MapsRoleUnite.Remove(this);
					}
					this._RoleUnites.Entity = value;
					if ((value != null))
					{
						value.MapsRoleUnite.Add(this);
						this._RoleUniteID = value.ID;
					}
					else
					{
						this._RoleUniteID = default(string);
					}
					this.SendPropertyChanged("RoleUnites");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menus")]
	public partial class Menus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FatherID;
		
		private string _Name;
		
		private string _Icon;
		
		private string _Url;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _Summary;
		
		private int _OrderIndex;
		
		private EntitySet<MapsRoleMenu> _MapsRoleMenu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnOrderIndexChanging(int value);
    partial void OnOrderIndexChanged();
    #endregion
		
		public Menus()
		{
			this._MapsRoleMenu = new EntitySet<MapsRoleMenu>(new Action<MapsRoleMenu>(this.attach_MapsRoleMenu), new Action<MapsRoleMenu>(this.detach_MapsRoleMenu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(200)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int NOT NULL")]
		public int OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menus_MapsRoleMenu", Storage="_MapsRoleMenu", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<MapsRoleMenu> MapsRoleMenu
		{
			get
			{
				return this._MapsRoleMenu;
			}
			set
			{
				this._MapsRoleMenu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsRoleMenu(MapsRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menus = this;
		}
		
		private void detach_MapsRoleMenu(MapsRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrimaryKeys")]
	public partial class PrimaryKeys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private int _Type;
		
		private int _Length;
		
		private int _Value;
		
		private int _Day;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    #endregion
		
		public PrimaryKeys()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private string _Summary;
		
		private EntitySet<MapsAdminRole> _MapsAdminRole;
		
		private EntitySet<MapsRoleMenu> _MapsRoleMenu;
		
		private EntitySet<MapsRoleUnite> _MapsRoleUnite;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Roles()
		{
			this._MapsAdminRole = new EntitySet<MapsAdminRole>(new Action<MapsAdminRole>(this.attach_MapsAdminRole), new Action<MapsAdminRole>(this.detach_MapsAdminRole));
			this._MapsRoleMenu = new EntitySet<MapsRoleMenu>(new Action<MapsRoleMenu>(this.attach_MapsRoleMenu), new Action<MapsRoleMenu>(this.detach_MapsRoleMenu));
			this._MapsRoleUnite = new EntitySet<MapsRoleUnite>(new Action<MapsRoleUnite>(this.attach_MapsRoleUnite), new Action<MapsRoleUnite>(this.detach_MapsRoleUnite));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsAdminRole", Storage="_MapsAdminRole", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<MapsAdminRole> MapsAdminRole
		{
			get
			{
				return this._MapsAdminRole;
			}
			set
			{
				this._MapsAdminRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRoleMenu", Storage="_MapsRoleMenu", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<MapsRoleMenu> MapsRoleMenu
		{
			get
			{
				return this._MapsRoleMenu;
			}
			set
			{
				this._MapsRoleMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_MapsRoleUnite", Storage="_MapsRoleUnite", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<MapsRoleUnite> MapsRoleUnite
		{
			get
			{
				return this._MapsRoleUnite;
			}
			set
			{
				this._MapsRoleUnite.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsAdminRole(MapsAdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_MapsAdminRole(MapsAdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_MapsRoleMenu(MapsRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_MapsRoleMenu(MapsRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_MapsRoleUnite(MapsRoleUnite entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_MapsRoleUnite(MapsRoleUnite entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleUnites")]
	public partial class RoleUnites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _Type;
		
		private string _Menu;
		
		private string _Name;
		
		private string _Title;
		
		private string _Url;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<MapsRoleUnite> _MapsRoleUnite;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMenuChanging(string value);
    partial void OnMenuChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public RoleUnites()
		{
			this._MapsRoleUnite = new EntitySet<MapsRoleUnite>(new Action<MapsRoleUnite>(this.attach_MapsRoleUnite), new Action<MapsRoleUnite>(this.detach_MapsRoleUnite));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Menu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Menu
		{
			get
			{
				return this._Menu;
			}
			set
			{
				if ((this._Menu != value))
				{
					this.OnMenuChanging(value);
					this.SendPropertyChanging();
					this._Menu = value;
					this.SendPropertyChanged("Menu");
					this.OnMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleUnites_MapsRoleUnite", Storage="_MapsRoleUnite", ThisKey="ID", OtherKey="RoleUniteID")]
		public EntitySet<MapsRoleUnite> MapsRoleUnite
		{
			get
			{
				return this._MapsRoleUnite;
			}
			set
			{
				this._MapsRoleUnite.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapsRoleUnite(MapsRoleUnite entity)
		{
			this.SendPropertyChanging();
			entity.RoleUnites = this;
		}
		
		private void detach_MapsRoleUnite(MapsRoleUnite entity)
		{
			this.SendPropertyChanging();
			entity.RoleUnites = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tokens")]
	public partial class Tokens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OutID;
		
		private string _Token;
		
		private System.DateTime _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOutIDChanging(string value);
    partial void OnOutIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Tokens()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OutID
		{
			get
			{
				return this._OutID;
			}
			set
			{
				if ((this._OutID != value))
				{
					this.OnOutIDChanging(value);
					this.SendPropertyChanging();
					this._OutID = value;
					this.SendPropertyChanged("OutID");
					this.OnOutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminsTopView")]
	public partial class AdminsTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _RealName;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private int _Status;
		
		private string _Summary;
		
		public AdminsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this._RealName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this._LoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientsTopView")]
	public partial class ClientsTopView
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		public ClientsTopView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdminClient")]
	public partial class MapsAdminClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _ClientID;
		
		private string _Type;
		
		private EntityRef<Admins> _Admins;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public MapsAdminClient()
		{
			this._Admins = default(EntityRef<Admins>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admins.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminClient", Storage="_Admins", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins
		{
			get
			{
				return this._Admins.Entity;
			}
			set
			{
				Admins previousValue = this._Admins.Entity;
				if (((previousValue != value) 
							|| (this._Admins.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins.Entity = null;
						previousValue.MapsAdminClient.Remove(this);
					}
					this._Admins.Entity = value;
					if ((value != null))
					{
						value.MapsAdminClient.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("Admins");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapsAdminClient_En")]
	public partial class MapsAdminClient_En : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _ClientID;
		
		private string _Type;
		
		private EntityRef<Admins> _Admins;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public MapsAdminClient_En()
		{
			this._Admins = default(EntityRef<Admins>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admins.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admins_MapsAdminClient_En", Storage="_Admins", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admins Admins
		{
			get
			{
				return this._Admins.Entity;
			}
			set
			{
				Admins previousValue = this._Admins.Entity;
				if (((previousValue != value) 
							|| (this._Admins.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admins.Entity = null;
						previousValue.MapsAdminClient_En.Remove(this);
					}
					this._Admins.Entity = value;
					if ((value != null))
					{
						value.MapsAdminClient_En.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("Admins");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientsTopView_En")]
	public partial class ClientsTopView_En
	{
		
		private string _ID;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Password;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		public ClientsTopView_En()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TopMapsAdminClient_En")]
	public partial class TopMapsAdminClient_En
	{
		
		private string _AdminID;
		
		private string _ClientID;
		
		private string _Type;
		
		public TopMapsAdminClient_En()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this._AdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
