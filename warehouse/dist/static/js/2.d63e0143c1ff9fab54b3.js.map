{"version":3,"sources":["webpack:///./node_modules/@xkeshi/vue-barcode/dist/vue-barcode.esm.js","webpack:///src/Pages/PrintPage/productlabel.vue","webpack:///./src/Pages/PrintPage/productlabel.vue?cbe2","webpack:///./src/Pages/PrintPage/productlabel.vue"],"names":["_SET_BY_CODE","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","value","_extends","assign","arguments","source","hasOwnProperty","call","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","Barcode","data","options","this","text","CODE39","_Barcode","characterValue","toUpperCase","mod43","checksum","mod43checksum","characters","result","getEncoding","search","encodings","character","toString","getBinary","indexOf","SET_BY_CODE","SWAP","101","100","99","A_START_CHAR","String","fromCharCode","B_START_CHAR","C_START_CHAR","A_CHARS","B_CHARS","BARS","CODE128","_this","substring","bytes","split","map","char","charCodeAt","test","startIndex","shift","startSet","RangeError","shouldEncodeAsEan128","unshift","encodingResult","next","replace","getBar","isEAN128","ean128","toLowerCase","index","set$$1","charCode","pos","nextCode","nextSet","correctIndex","weight","matchSetALength","string","match","RegExp","matchSetBLength","matchSetC","autoSelectFromAB","isA","ranges","untilC","autoSelectFromC","chars","cMatch","autoSelectModes","newString","CODE128AUTO","_CODE","CODE128A","CODE128B","CODE128C","BINARIES","L","G","R","O","E","EAN2_STRUCTURE","EAN5_STRUCTURE","EAN13_STRUCTURE","encode","structure","separator","encoded","val","idx","last","join","EAN","fontSize","flat","width","guardHeight","height","textMargin","encodeFlat","encodeGuarded","from","to","substr","textOptions","guardOptions","leftEncode","leftText","rightEncode","rightText","number","n","reduce","sum","a","EAN13","_EAN","lastChar","displayValue","textAlign","push","checksum$1","EAN8","EAN5","EAN2","parseInt","UPC","checksum$3","flatEncoding","guardedEncoding","EXPANSIONS","PARITIES","UPCE","isValid","middleDigits","upcA","expandToUPCA","encodeMiddleDigits","numberSystem","checkDigit","parity","lastUpcE","expansion","digitIndex","c","ITF14","checksum$4","binaryRepresentation","0","1","2","3","4","5","6","7","8","9","calculatePair","numberPair","number1Struct","number2Struct","Math","ceil","ITF","MSI","ret","bin","addZeroes","b","mod10","floor","mod11","weights","barcodes","MSI10","_MSI","MSI11","MSI1010","MSI1110","pharmacode","z","isNaN","slice","codabar","getEncodings","charAt","-","$",":","/",".","+","A","B","C","D","GenericBarcode","merge","old","replaceObj","linearizeEncodings","linearEncodings","nextLevel","Array","isArray","fixOptions","marginTop","margin","marginBottom","marginRight","marginLeft","optionsFromStrings","intOptions","intOption","defaults$1","format","fontOptions","font","textPosition","background","lineColor","valid","getOptionsFromElement","element","hasAttribute","getAttribute","getEncodingHeight","encoding","getBarcodePadding","textWidth","barcodeWidth","calculateEncodingAttributes","barcodeOptions","context","messureText","max","barcodePadding","getTotalWidthOfEncodings","totalWidth","getMaximumHeightOfEncodings","maxHeight","ctx","document","createElement","getContext","measureText","svgns","renderers","CanvasRenderer","canvas","Error","prepareCanvas","encodingOptions","drawCanvasBarcode","drawCanvasText","moveCanvasDrawing","restoreCanvas","save","clearRect","fillStyle","fillRect","translate","yFrom","binary","x","y","fillText","restore","SVGRenderer","svg","xmlDocument","currentX","prepareSVG","group","createGroup","setGroupOptions","drawSvgBarcode","drawSVGText","firstChild","removeChild","setSvgAttributes","drawRect","setAttribute","barWidth","textElem","createElementNS","appendChild","createTextNode","rect","ObjectRenderer","InvalidInputException","_Error","symbology","input","name","message","InvalidElementException","_Error2","_this2","NoElementException","_Error3","_this3","getRenderProperties","selector","querySelectorAll","returnArray","querySelectedRenderProperties","HTMLCanvasElement","HTMLImageElement","imgElement","renderer","afterRender","toDataURL","nodeName","SVGElement","ErrorHandler","api","e","_options","_defaults","render","func","apply","handleCatch","API","JsBarcode","_renderProperties","_encodings","_errorHandler","autoSelectBarcode","getModule","registerBarcode","barcodes$$1","wrapBarcodeCall","newOptions","Encoder","encode$1","encoder","keys","renderProperties","Renderer","blank","size","zeroes","init","renderProperty","window","jQuery","fn","content","elementArray","each","tag","type","default","$slots","watch","generate","methods","$el","mounted","__webpack_exports__","Base64","__webpack_require__","ps","location","href","JSON","parse","decode","ID","inputsID","Catalog","PartNumber","Quantity","Manufacturer","Packing","PackageCase","origin","productlabel","components","barcode","vue_barcode_esm","print_data","barcode_option","_valid","getdata","console","log","$route","params","created","PrintPage_productlabel","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","_e","staticRenderFns","Component","normalizeComponent","ssrContext"],"mappings":";;;;;;;;;GAUA,IAuMAA,EAvMAC,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAGAG,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAC,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAD,EAAAE,OAAkBD,IAAA,CACrC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIA,gBAAAR,EAAAe,EAAAC,GAGA,OAFAD,GAAAZ,EAAAH,EAAAH,UAAAkB,GACAC,GAAAb,EAAAH,EAAAgB,GACAhB,GAdA,GAkBAa,EAAA,SAAAlB,EAAAmB,EAAAG,GAYA,OAXAH,KAAAnB,EACAiB,OAAAC,eAAAlB,EAAAmB,GACAG,QACAR,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAhB,EAAAmB,GAAAG,EAGAtB,GAGAuB,EAAAN,OAAAO,QAAA,SAAAf,GACA,QAAAE,EAAA,EAAiBA,EAAAc,UAAAb,OAAsBD,IAAA,CACvC,IAAAe,EAAAD,UAAAd,GAEA,QAAAQ,KAAAO,EACAT,OAAAf,UAAAyB,eAAAC,KAAAF,EAAAP,KACAV,EAAAU,GAAAO,EAAAP,IAKA,OAAAV,GAGAoB,EAAA,SAAAA,EAAAC,EAAAC,EAAAC,GACA,OAAAF,MAAAG,SAAA/B,WACA,IAAAgC,EAAAjB,OAAAkB,yBAAAL,EAAAC,GAEA,QAAAK,IAAAF,EAAA,CACA,IAAAG,EAAApB,OAAAqB,eAAAR,GAEA,cAAAO,OACA,EAEAR,EAAAQ,EAAAN,EAAAC,GAEG,aAAAE,EACH,OAAAA,EAAAZ,MAEA,IAAAiB,EAAAL,EAAAL,IAEA,YAAAO,IAAAG,EAIAA,EAAAX,KAAAI,QAJA,GAQAQ,EAAA,SAAAC,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAApC,UAAA,kEAAAoC,GAGAD,EAAAvC,UAAAe,OAAA0B,OAAAD,KAAAxC,WACAD,aACAqB,MAAAmB,EACA3B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA2B,IAAAzB,OAAA2B,eAAA3B,OAAA2B,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,IAGAI,EAAA,SAAAC,EAAAnB,GACA,IAAAmB,EACA,UAAAC,eAAA,6DAGA,OAAApB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAmB,EAAAnB,GAGAqB,EAAA,SAAAA,EAAAC,EAAAC,GACAhD,EAAAiD,KAAAH,GAEAG,KAAAF,OACAE,KAAAC,KAAAF,EAAAE,MAAAH,EACAE,KAAAD,WAKAG,EAAA,SAAAC,GAGA,SAAAD,EAAAJ,EAAAC,GA4DA,IAAAK,EAlDA,OATArD,EAAAiD,KAAAE,GAEAJ,IAAAO,cAGAN,EAAAO,QACAR,IAqDAM,EAQA,SAAAN,GAEA,IADA,IAAAS,EAAA,EACAhD,EAAA,EAAgBA,EAAAuC,EAAAtC,OAAiBD,IACjCgD,GAAAH,EAAAN,EAAAvC,IAIA,OADAgD,GAAA,GAnEAC,CAAAV,GAsDAW,EAAAL,KAnDAV,EAAAM,MAAAE,EAAAT,WAAA5B,OAAAqB,eAAAgB,IAAA1B,KAAAwB,KAAAF,EAAAC,IA4BA,OAxCAX,EAAAc,EAyCCL,GA1BD1C,EAAA+C,IACAnC,IAAA,SACAG,MAAA,WAKA,IAHA,IAAAwC,EAAAC,EAAA,KAGApD,EAAA,EAAkBA,EAAAyC,KAAAF,KAAAtC,OAAsBD,IACxCmD,GAAAC,EAAAX,KAAAF,KAAAvC,IAAA,IAMA,OACAuC,KAHAY,GAAAC,EAAA,KAIAV,KAAAD,KAAAC,SAIAlC,IAAA,QACAG,MAAA,WACA,WAAA8B,KAAAF,KAAAc,OAAA,iCAGAV,EAzCA,GA+CAO,GAAA,iLAIAI,GAAA,yQAIA,SAAAF,EAAAG,GACA,OAGA,SAAAV,GACA,OAAAS,EAAAT,GAAAW,SAAA,GAJAC,CAAAZ,EAAAU,IAWA,SAAAV,EAAAU,GACA,OAAAL,EAAAQ,QAAAH,GAgBA,IAcAI,GAAoCpD,EAApCtB,KARA,IANA,GAcoCsB,EAAAtB,EAPpC,IANA,GAaoCsB,EAAAtB,EANpC,IANA,GAYoCA,GAGpC2E,GACAC,IAlBA,EAmBAC,IAlBA,EAmBAC,GAlBA,GAqBAC,EAAAC,OAAAC,aAAA,KACAC,EAAAF,OAAAC,aAAA,KACAE,EAAAH,OAAAC,aAAA,KAIAG,EAAA,YAIAC,EAAA,WASAC,GAAA,yuCAKAC,EAAA,SAAA5B,GAGA,SAAA4B,EAAAjC,EAAAC,GACAhD,EAAAiD,KAAA+B,GAGA,IAAAC,EAAAtC,EAAAM,MAAA+B,EAAAtC,WAAA5B,OAAAqB,eAAA6C,IAAAvD,KAAAwB,KAAAF,EAAAmC,UAAA,GAAAlC,IAKA,OAHAiC,EAAAE,MAAApC,EAAAqC,MAAA,IAAAC,IAAA,SAAAC,GACA,OAAAA,EAAAC,WAAA,KAEAN,EA8HA,OAzIA5C,EAAA2C,EA0IClC,GA5HD1C,EAAA4E,IACAhE,IAAA,QACAG,MAAA,WAEA,gCAAAqE,KAAAvC,KAAAF,SAOA/B,IAAA,SACAG,MAAA,WACA,IAAAgE,EAAAlC,KAAAkC,MAEAM,EAAAN,EAAAO,QAAA,IAEAC,EAAAxB,EAAAsB,GAEA,QAAAxD,IAAA0D,EACA,UAAAC,WAAA,wDAGA,IAAA3C,KAAA4C,wBACAV,EAAAW,QA3EA,KA+EA,IAAAC,EAAAf,EAAAgB,KAAAb,EAAA,EAAAQ,GAEA,OACAzC,KAAAD,KAAAC,OAAAD,KAAAF,KAAAE,KAAAC,KAAA+C,QAAA,oBAAAhD,KAAAC,KACAH,KAEAiC,EAAAkB,OAAAT,GAEAM,EAAApC,OAEAqB,EAAAkB,QAAAH,EAAAvC,SAAAiC,GA3FA,KA6FAT,EAAAkB,OA5FA,SAmGAlF,IAAA,uBACAG,MAAA,WACA,IAAAgF,EAAAlD,KAAAD,QAAAoD,SAAA,EAIA,MAHA,iBAAAD,IACAA,EAAA,SAAAA,EAAAE,eAEAF,OAMAnF,IAAA,SACAG,MAAA,SAAAmF,GACA,OAAAvB,EAAAuB,GAAAvB,EAAAuB,GAAAtC,WAAA,MAMAhD,IAAA,eACAG,MAAA,SAAAgE,EAAAoB,GACA,GAnIA,IAmIAA,EAAA,CACA,IAAAC,EAAArB,EAAAO,QACA,OAAAc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACI,OArIJ,IAqIID,EACJpB,EAAAO,QAAA,GAEA,IAAAP,EAAAO,QAAA,IAAAP,EAAAO,QAAA,MAIA1E,IAAA,OACAG,MAAA,SAAAgE,EAAAsB,EAAAF,GACA,IAAApB,EAAA1E,OACA,OAAYkD,OAAA,GAAAH,SAAA,GAGZ,IAAAkD,OAAA,EACAJ,OAAA,EAGA,GAAAnB,EAAA,SACAmB,EAAAnB,EAAAO,QAAA,IACA,IAAAiB,EAAAvC,EAAAkC,QAGArE,IAAA0E,EACAD,EAAA1B,EAAAgB,KAAAb,EAAAsB,EAAA,EAAAE,IA7JA,IAkKAJ,GAjKA,IAiKAA,GA7JA,KA6JAD,IAEAnB,EAAA,GApKA,IAoKAoB,EAAApB,EAAA,MAAAA,EAAA,MAAAA,EAAA,GAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,IAEAuB,EAAA1B,EAAAgB,KAAAb,EAAAsB,EAAA,EAAAF,SAKAD,EAAAtB,EAAA4B,aAAAzB,EAAAoB,GACAG,EAAA1B,EAAAgB,KAAAb,EAAAsB,EAAA,EAAAF,GAIA,IACAM,EAAAP,EAAAG,EAEA,OACA9C,OAJAqB,EAAAkB,OAAAI,GAIAI,EAAA/C,OACAH,SAAAqD,EAAAH,EAAAlD,cAIAwB,EA1IA,GA8IA8B,EAAA,SAAAC,GACA,OAAAA,EAAAC,MAAA,IAAAC,OAAA,IAAApC,EAAA,SAAApE,QAEAyG,EAAA,SAAAH,GACA,OAAAA,EAAAC,MAAA,IAAAC,OAAA,IAAAnC,EAAA,SAAArE,QAEA0G,EAAA,SAAAJ,GACA,OAAAA,EAAAC,MAAA,IAAAC,OAAA,yBAIA,SAAAG,EAAAL,EAAAM,GACA,IAAAC,EAAAD,EAAAxC,EAAAC,EACAyC,EAAAR,EAAAC,MAAA,IAAAC,OAAA,KAAAK,EAAA,kCAEA,GAAAC,EACA,OAAAA,EAAA,GAAA9C,OAAAC,aAAA,KAAA8C,EAAAT,EAAA7B,UAAAqC,EAAA,GAAA9G,SAGA,IAAAgH,EAAAV,EAAAC,MAAA,IAAAC,OAAA,IAAAK,EAAA,SAEA,OAAAG,EAAAhH,SAAAsG,EAAAtG,OACAsG,EAGAU,EAAAhD,OAAAC,aAAA2C,EAAA,SAAAD,EAAAL,EAAA7B,UAAAuC,EAAAhH,SAAA4G,GAIA,SAAAG,EAAAT,GACA,IAAAW,EAAAP,EAAAJ,GACAtG,EAAAiH,EAAAjH,OAEA,GAAAA,IAAAsG,EAAAtG,OACA,OAAAsG,EAGAA,IAAA7B,UAAAzE,GAGA,IAAA4G,EAAAP,EAAAC,IAAAG,EAAAH,GACA,OAAAW,EAAAjD,OAAAC,aAAA2C,EAAA,SAAAD,EAAAL,EAAAM,GAIA,IAAAM,EAAA,SAAAZ,GACA,IAAAa,OAAA,EAIA,GAHAT,EAAAJ,GAAAtG,QAGA,EACAmH,EAAAhD,EAAA4C,EAAAT,OACE,CAEF,IAAAM,EAAAP,EAAAC,GAAAG,EAAAH,GACAa,GAAAP,EAAA7C,EAAAG,GAAAyC,EAAAL,EAAAM,GAGA,OAAAO,EAAA3B,QAAA,4BACA,SAAAe,EAAA1B,GACA,OAAAb,OAAAC,aAAA,KAAAY,KAIAuC,EAAA,SAAAC,GAGA,SAAAD,EAAA9E,EAAAC,GAIA,GAHAhD,EAAAiD,KAAA4E,GAGA,0BAAArC,KAAAzC,GACA,IAAAkC,EAAAtC,EAAAM,MAAA4E,EAAAnF,WAAA5B,OAAAqB,eAAA0F,IAAApG,KAAAwB,KAAA0E,EAAA5E,GAAAC,SAEAiC,EAAAtC,EAAAM,MAAA4E,EAAAnF,WAAA5B,OAAAqB,eAAA0F,IAAApG,KAAAwB,KAAAF,EAAAC,IAEA,OAAAL,EAAAsC,GAGA,OAdA5C,EAAAwF,EAeC7C,GADD6C,EAfA,GAkBAE,EAAA,SAAAD,GAGA,SAAAC,EAAAhB,EAAA/D,GAEA,OADAhD,EAAAiD,KAAA8E,GACApF,EAAAM,MAAA8E,EAAArF,WAAA5B,OAAAqB,eAAA4F,IAAAtG,KAAAwB,KAAAuB,EAAAuC,EAAA/D,IASA,OAbAX,EAAA0F,EAcC/C,GAPD5E,EAAA2H,IACA/G,IAAA,QACAG,MAAA,WACA,WAAA8F,OAAA,IAAApC,EAAA,MAAAW,KAAAvC,KAAAF,UAGAgF,EAdA,GAiBAC,EAAA,SAAAF,GAGA,SAAAE,EAAAjB,EAAA/D,GAEA,OADAhD,EAAAiD,KAAA+E,GACArF,EAAAM,MAAA+E,EAAAtF,WAAA5B,OAAAqB,eAAA6F,IAAAvG,KAAAwB,KAAA0B,EAAAoC,EAAA/D,IASA,OAbAX,EAAA2F,EAcChD,GAPD5E,EAAA4H,IACAhH,IAAA,QACAG,MAAA,WACA,WAAA8F,OAAA,IAAAnC,EAAA,MAAAU,KAAAvC,KAAAF,UAGAiF,EAdA,GAiBAC,EAAA,SAAAH,GAGA,SAAAG,EAAAlB,EAAA/D,GAEA,OADAhD,EAAAiD,KAAAgF,GACAtF,EAAAM,MAAAgF,EAAAvF,WAAA5B,OAAAqB,eAAA8F,IAAAxG,KAAAwB,KAAA2B,EAAAmC,EAAA/D,IASA,OAbAX,EAAA4F,EAcCjD,GAPD5E,EAAA6H,IACAjH,IAAA,QACAG,MAAA,WACA,WAAA8F,OAAA,qBAAAzB,KAAAvC,KAAAF,UAGAkF,EAdA,GAqBAC,GACAC,GACA,qGACAC,GACA,qGACAC,GACA,qGACAC,GACA,qGACAC,GACA,sGAIAC,GAAA,qBAGAC,GAAA,iFAGAC,GAAA,2FAGAC,EAAA,SAAA5F,EAAA6F,EAAAC,GACA,IAAAC,EAAA/F,EAAAqC,MAAA,IAAAC,IAAA,SAAA0D,EAAAC,GACA,OAAAd,EAAAU,EAAAI,MACE3D,IAAA,SAAA0D,EAAAC,GACF,OAAAD,IAAAhG,EAAAiG,IAAA,KAGA,GAAAH,EAAA,CACA,IAAAI,EAAAlG,EAAAtC,OAAA,EACAqI,IAAAzD,IAAA,SAAA0D,EAAAC,GACA,OAAAA,EAAAC,EAAAF,EAAAF,EAAAE,IAIA,OAAAD,EAAAI,KAAA,KAKAC,EAAA,SAAA/F,GAGA,SAAA+F,EAAApG,EAAAC,GACAhD,EAAAiD,KAAAkG,GAGA,IAAAlE,EAAAtC,EAAAM,MAAAkG,EAAAzG,WAAA5B,OAAAqB,eAAAgH,IAAA1H,KAAAwB,KAAAF,EAAAC,IAMA,OAJAiC,EAAAmE,UAAApG,EAAAqG,MAAArG,EAAAoG,SAAA,GAAApG,EAAAsG,MAAA,GAAAtG,EAAAsG,MAAAtG,EAAAoG,SAGAnE,EAAAsE,YAAAvG,EAAAwG,OAAAvE,EAAAmE,SAAA,EAAApG,EAAAyG,WACAxE,EA+CA,OA3DA5C,EAAA8G,EA4DCrG,GA7CD1C,EAAA+I,IACAnI,IAAA,SACAG,MAAA,WACA,OAAA8B,KAAAD,QAAAqG,KAAApG,KAAAyG,aAAAzG,KAAA0G,mBAGA3I,IAAA,WACAG,MAAA,SAAAyI,EAAAC,GACA,OAAA5G,KAAAC,KAAA4G,OAAAF,EAAAC,MAGA7I,IAAA,aACAG,MAAA,SAAA4B,EAAA6F,GACA,OAAAD,EAAA5F,EAAA6F,MAGA5H,IAAA,YACAG,MAAA,SAAAyI,EAAAC,GACA,OAAA5G,KAAAC,KAAA4G,OAAAF,EAAAC,MAGA7I,IAAA,cACAG,MAAA,SAAA4B,EAAA6F,GACA,OAAAD,EAAA5F,EAAA6F,MAGA5H,IAAA,gBACAG,MAAA,WACA,IAAA4I,GAAsBX,SAAAnG,KAAAmG,UACtBY,GAAuBR,OAAAvG,KAAAsG,aAEvB,QAAYxG,KA5FZ,MA4FYC,QAAAgH,IAA2CjH,KAAAE,KAAAgH,aAAA/G,KAAAD,KAAAiH,WAAAlH,QAAA+G,IAA0EhH,KA3FjI,QA2FiIC,QAAAgH,IAA6CjH,KAAAE,KAAAkH,cAAAjH,KAAAD,KAAAmH,YAAApH,QAAA+G,IAA4EhH,KA5F1P,MA4F0PC,QAAAgH,OAG1PhJ,IAAA,aACAG,MAAA,WAGA,OACA4B,MApGA,MAiGAE,KAAAgH,aAhGA,QAgGAhH,KAAAkH,cAjGA,OAoGAjB,KAAA,IACAhG,KAAAD,KAAAC,UAIAiG,EA5DA,GAmEA3F,EAAA,SAAA6G,GAOA,UANAA,EAAAP,OAAA,MAAA1E,MAAA,IAAAC,IAAA,SAAAiF,GACA,OAAAA,IACEC,OAAA,SAAAC,EAAAC,EAAAzB,GACF,OAAAA,EAAA,EAAAwB,EAAA,EAAAC,EAAAD,EAAAC,GACE,GAEF,QAGAC,EAAA,SAAAC,GAGA,SAAAD,EAAA3H,EAAAC,GACAhD,EAAAiD,KAAAyH,IAG6B,IAA7B3H,EAAAc,OAAA,iBACAd,GAAAS,EAAAT,IAIA,IAAAkC,EAAAtC,EAAAM,MAAAyH,EAAAhI,WAAA5B,OAAAqB,eAAAuI,IAAAjJ,KAAAwB,KAAAF,EAAAC,IAGA,OADAiC,EAAA2F,SAAA5H,EAAA4H,SACA3F,EA8DA,OA5EA5C,EAAAqI,EA6ECvB,GA5DD/I,EAAAsK,IACA1J,IAAA,QACAG,MAAA,WACA,OAAsC,IAAtC8B,KAAAF,KAAAc,OAAA,iBAAsCZ,KAAAF,KAAA,MAAAS,EAAAP,KAAAF,SAGtC/B,IAAA,WACAG,MAAA,WACA,OAAAO,EAAAgJ,EAAA3K,UAAA2C,WAAA5B,OAAAqB,eAAAuI,EAAA3K,WAAA,WAAAkD,MAAAxB,KAAAwB,KAAA,QAGAjC,IAAA,aACAG,MAAA,WACA,IAAA4B,EAAAE,KAAAF,KAAA+G,OAAA,KACAlB,EAAAF,EAAAzF,KAAAF,KAAA,IACA,OAAArB,EAAAgJ,EAAA3K,UAAA2C,WAAA5B,OAAAqB,eAAAuI,EAAA3K,WAAA,aAAAkD,MAAAxB,KAAAwB,KAAAF,EAAA6F,MAGA5H,IAAA,YACAG,MAAA,WACA,OAAAO,EAAAgJ,EAAA3K,UAAA2C,WAAA5B,OAAAqB,eAAAuI,EAAA3K,WAAA,YAAAkD,MAAAxB,KAAAwB,KAAA,QAGAjC,IAAA,cACAG,MAAA,WACA,IAAA4B,EAAAE,KAAAF,KAAA+G,OAAA,KACA,OAAApI,EAAAgJ,EAAA3K,UAAA2C,WAAA5B,OAAAqB,eAAAuI,EAAA3K,WAAA,cAAAkD,MAAAxB,KAAAwB,KAAAF,EAAA,aAMA/B,IAAA,gBACAG,MAAA,WACA,IAAA4B,EAAArB,EAAAgJ,EAAA3K,UAAA2C,WAAA5B,OAAAqB,eAAAuI,EAAA3K,WAAA,gBAAAkD,MAAAxB,KAAAwB,MAsBA,OAnBAA,KAAAD,QAAA6H,eACA9H,EAAA+C,SACA/C,KAAA,eACAG,KAAAD,KAAAC,KAAA4G,OAAA,KACA9G,SAAe8H,UAAA,OAAA1B,SAAAnG,KAAAmG,YAGfnG,KAAAD,QAAA4H,WACA7H,EAAAgI,MACAhI,KAAA,OAEAA,EAAAgI,MACAhI,KAAA,QACAG,KAAAD,KAAAD,QAAA4H,SACA5H,SAAgBoG,SAAAnG,KAAAmG,cAKhBrG,MAGA2H,EA7EA,GAmFAM,EAAA,SAAAX,GAOA,UANAA,EAAAP,OAAA,KAAA1E,MAAA,IAAAC,IAAA,SAAAiF,GACA,OAAAA,IACEC,OAAA,SAAAC,EAAAC,EAAAzB,GACF,OAAAA,EAAA,EAAAwB,EAAAC,EAAAD,EAAA,EAAAC,GACE,GAEF,QAGAQ,EAAA,SAAAN,GAGA,SAAAM,EAAAlI,EAAAC,GAQA,OAPAhD,EAAAiD,KAAAgI,IAG4B,IAA5BlI,EAAAc,OAAA,gBACAd,GAAAiI,EAAAjI,IAGAJ,EAAAM,MAAAgI,EAAAvI,WAAA5B,OAAAqB,eAAA8I,IAAAxJ,KAAAwB,KAAAF,EAAAC,IA+BA,OAzCAX,EAAA4I,EA0CC9B,GA7BD/I,EAAA6K,IACAjK,IAAA,QACAG,MAAA,WACA,OAAqC,IAArC8B,KAAAF,KAAAc,OAAA,gBAAqCZ,KAAAF,KAAA,KAAAiI,EAAA/H,KAAAF,SAGrC/B,IAAA,WACAG,MAAA,WACA,OAAAO,EAAAuJ,EAAAlL,UAAA2C,WAAA5B,OAAAqB,eAAA8I,EAAAlL,WAAA,WAAAkD,MAAAxB,KAAAwB,KAAA,QAGAjC,IAAA,aACAG,MAAA,WACA,IAAA4B,EAAAE,KAAAF,KAAA+G,OAAA,KACA,OAAApI,EAAAuJ,EAAAlL,UAAA2C,WAAA5B,OAAAqB,eAAA8I,EAAAlL,WAAA,aAAAkD,MAAAxB,KAAAwB,KAAAF,EAAA,WAGA/B,IAAA,YACAG,MAAA,WACA,OAAAO,EAAAuJ,EAAAlL,UAAA2C,WAAA5B,OAAAqB,eAAA8I,EAAAlL,WAAA,YAAAkD,MAAAxB,KAAAwB,KAAA,QAGAjC,IAAA,cACAG,MAAA,WACA,IAAA4B,EAAAE,KAAAF,KAAA+G,OAAA,KACA,OAAApI,EAAAuJ,EAAAlL,UAAA2C,WAAA5B,OAAAqB,eAAA8I,EAAAlL,WAAA,cAAAkD,MAAAxB,KAAAwB,KAAAF,EAAA,YAGAkI,EA1CA,GAwDAC,EAAA,SAAA9H,GAGA,SAAA8H,EAAAnI,EAAAC,GAEA,OADAhD,EAAAiD,KAAAiI,GACAvI,EAAAM,MAAAiI,EAAAxI,WAAA5B,OAAAqB,eAAA+I,IAAAzJ,KAAAwB,KAAAF,EAAAC,IAkBA,OAtBAX,EAAA6I,EAuBCpI,GAhBD1C,EAAA8K,IACAlK,IAAA,QACAG,MAAA,WACA,OAAqC,IAArC8B,KAAAF,KAAAc,OAAA,iBAGA7C,IAAA,SACAG,MAAA,WACA,IAzBA4B,EAyBA6F,EAAAH,GAzBA1F,EAyBAE,KAAAF,KAxBAA,EAAAqC,MAAA,IAAAC,IAAA,SAAAiF,GACA,OAAAA,IACEC,OAAA,SAAAC,EAAAC,EAAAzB,GACF,OAAAA,EAAA,EAAAwB,EAAA,EAAAC,EAAAD,EAAA,EAAAC,GACE,GACF,KAoBA,OACA1H,KAAA,OAAA4F,EAAA1F,KAAAF,KAAA6F,EAAA,MACA1F,KAAAD,KAAAC,UAIAgI,EAvBA,GA4BAC,EAAA,SAAA/H,GAGA,SAAA+H,EAAApI,EAAAC,GAEA,OADAhD,EAAAiD,KAAAkI,GACAxI,EAAAM,MAAAkI,EAAAzI,WAAA5B,OAAAqB,eAAAgJ,IAAA1J,KAAAwB,KAAAF,EAAAC,IAoBA,OAxBAX,EAAA8I,EAyBCrI,GAlBD1C,EAAA+K,IACAnK,IAAA,QACAG,MAAA,WACA,OAAqC,IAArC8B,KAAAF,KAAAc,OAAA,iBAGA7C,IAAA,SACAG,MAAA,WAEA,IAAAyH,EAAAJ,EAAA4C,SAAAnI,KAAAF,MAAA,GACA,OAEAA,KAAA,OAAA4F,EAAA1F,KAAAF,KAAA6F,EAAA,MACA1F,KAAAD,KAAAC,UAIAiI,EAzBA,GA8BAE,EAAA,SAAAjI,GAGA,SAAAiI,EAAAtI,EAAAC,GACAhD,EAAAiD,KAAAoI,IAG6B,IAA7BtI,EAAAc,OAAA,iBACAd,GAAAuI,EAAAvI,IAGA,IAAAkC,EAAAtC,EAAAM,MAAAoI,EAAA3I,WAAA5B,OAAAqB,eAAAkJ,IAAA5J,KAAAwB,KAAAF,EAAAC,IAaA,OAXAiC,EAAA4F,aAAA7H,EAAA6H,aAGA7H,EAAAoG,SAAA,GAAApG,EAAAsG,MACArE,EAAAmE,SAAA,GAAApG,EAAAsG,MAEArE,EAAAmE,SAAApG,EAAAoG,SAIAnE,EAAAsE,YAAAvG,EAAAwG,OAAAvE,EAAAmE,SAAA,EAAApG,EAAAyG,WACAxE,EA2FA,OAlHA5C,EAAAgJ,EAmHCvI,GAzFD1C,EAAAiL,IACArK,IAAA,QACAG,MAAA,WACA,OAAsC,IAAtC8B,KAAAF,KAAAc,OAAA,gBAAsCZ,KAAAF,KAAA,KAAAuI,EAAArI,KAAAF,SAGtC/B,IAAA,SACAG,MAAA,WACA,OAAA8B,KAAAD,QAAAqG,KACApG,KAAAsI,eAEAtI,KAAAuI,qBAIAxK,IAAA,eACAG,MAAA,WACA,IAAAwC,EAAA,GAQA,OANAA,GAAA,MACAA,GAAAgF,EAAA1F,KAAAF,KAAA+G,OAAA,eACAnG,GAAA,QACAA,GAAAgF,EAAA1F,KAAAF,KAAA+G,OAAA,gBAIA/G,KAHAY,GAAA,MAIAT,KAAAD,KAAAC,SAIAlC,IAAA,kBACAG,MAAA,WACA,IAAAwC,KAoDA,OAjDAV,KAAA4H,cACAlH,EAAAoH,MACAhI,KAAA,WACAG,KAAAD,KAAAC,KAAA4G,OAAA,KACA9G,SAAe8H,UAAA,OAAA1B,SAAAnG,KAAAmG,YAKfzF,EAAAoH,MACAhI,KAAA,MAAA4F,EAAA1F,KAAAF,KAAA,QACAC,SAAcwG,OAAAvG,KAAAsG,eAId5F,EAAAoH,MACAhI,KAAA4F,EAAA1F,KAAAF,KAAA+G,OAAA,cACA5G,KAAAD,KAAAC,KAAA4G,OAAA,KACA9G,SAAcoG,SAAAnG,KAAAmG,YAIdzF,EAAAoH,MACAhI,KAAA,QACAC,SAAcwG,OAAAvG,KAAAsG,eAId5F,EAAAoH,MACAhI,KAAA4F,EAAA1F,KAAAF,KAAA+G,OAAA,cACA5G,KAAAD,KAAAC,KAAA4G,OAAA,KACA9G,SAAcoG,SAAAnG,KAAAmG,YAIdzF,EAAAoH,MACAhI,KAAA4F,EAAA1F,KAAAF,KAAA,eACAC,SAAcwG,OAAAvG,KAAAsG,eAIdtG,KAAA4H,cACAlH,EAAAoH,MACAhI,KAAA,WACAG,KAAAD,KAAAC,KAAA4G,OAAA,MACA9G,SAAe8H,UAAA,QAAA1B,SAAAnG,KAAAmG,YAIfzF,MAGA0H,EAnHA,GA0HA,SAAAC,EAAAjB,GACA,IAEA7J,EAFAmD,EAAA,EAGA,IAAAnD,EAAA,EAAYA,EAAA,GAAQA,GAAA,EACpBmD,GAAAyH,SAAAf,EAAA7J,IAEA,IAAAA,EAAA,EAAYA,EAAA,GAAQA,GAAA,EACpBmD,GAAA,EAAAyH,SAAAf,EAAA7J,IAGA,UAAAmD,EAAA,OAKA,IAAA8H,GAAA,mIAEAC,IAAA,wMAEAC,EAAA,SAAAvI,GAGA,SAAAuI,EAAA5I,EAAAC,GACAhD,EAAAiD,KAAA0I,GAEA,IAAA1G,EAAAtC,EAAAM,MAAA0I,EAAAjJ,WAAA5B,OAAAqB,eAAAwJ,IAAAlK,KAAAwB,KAAAF,EAAAC,IAOA,GADAiC,EAAA2G,SAAA,GAC4B,IAA5B7I,EAAAc,OAAA,cACAoB,EAAA4G,aAAA9I,EACAkC,EAAA6G,KAAAC,GAAAhJ,EAAA,KACAkC,EAAA/B,KAAAF,EAAAE,MAAA,GAAA+B,EAAA6G,KAAA,GAAA/I,EAAAkC,EAAA6G,KAAA7G,EAAA6G,KAAArL,OAAA,GACAwE,EAAA2G,SAAA,MACG,KAAoC,IAApC7I,EAAAc,OAAA,kBAWH,OAAAlB,EAAAsC,GAPA,GAHAA,EAAA4G,aAAA9I,EAAAmC,UAAA,EAAAnC,EAAAtC,OAAA,GACAwE,EAAA6G,KAAAC,GAAA9G,EAAA4G,aAAA9I,EAAA,IAEAkC,EAAA6G,KAAA7G,EAAA6G,KAAArL,OAAA,KAAAsC,IAAAtC,OAAA,GAIA,OAAAkC,EAAAsC,GAHAA,EAAA2G,SAAA,EAoBA,OAXA3G,EAAA4F,aAAA7H,EAAA6H,aAGA7H,EAAAoG,SAAA,GAAApG,EAAAsG,MACArE,EAAAmE,SAAA,GAAApG,EAAAsG,MAEArE,EAAAmE,SAAApG,EAAAoG,SAIAnE,EAAAsE,YAAAvG,EAAAwG,OAAAvE,EAAAmE,SAAA,EAAApG,EAAAyG,WACAxE,EAoFA,OA9HA5C,EAAAsJ,EA+HC7I,GAlFD1C,EAAAuL,IACA3K,IAAA,QACAG,MAAA,WACA,OAAA8B,KAAA2I,WAGA5K,IAAA,SACAG,MAAA,WACA,OAAA8B,KAAAD,QAAAqG,KACApG,KAAAsI,eAEAtI,KAAAuI,qBAIAxK,IAAA,eACAG,MAAA,WACA,IAAAwC,EAAA,GAMA,OAJAA,GAAA,MACAA,GAAAV,KAAA+I,sBAIAjJ,KAHAY,GAAA,SAIAT,KAAAD,KAAAC,SAIAlC,IAAA,kBACAG,MAAA,WACA,IAAAwC,KAuCA,OApCAV,KAAA4H,cACAlH,EAAAoH,MACAhI,KAAA,WACAG,KAAAD,KAAAC,KAAA,GACAF,SAAe8H,UAAA,OAAA1B,SAAAnG,KAAAmG,YAKfzF,EAAAoH,MACAhI,KAAA,MACAC,SAAcwG,OAAAvG,KAAAsG,eAId5F,EAAAoH,MACAhI,KAAAE,KAAA+I,qBACA9I,KAAAD,KAAAC,KAAAgC,UAAA,KACAlC,SAAcoG,SAAAnG,KAAAmG,YAIdzF,EAAAoH,MACAhI,KAAA,SACAC,SAAcwG,OAAAvG,KAAAsG,eAIdtG,KAAA4H,cACAlH,EAAAoH,MACAhI,KAAA,WACAG,KAAAD,KAAAC,KAAA,GACAF,SAAe8H,UAAA,QAAA1B,SAAAnG,KAAAmG,YAIfzF,KAGA3C,IAAA,qBACAG,MAAA,WACA,IAAA8K,EAAAhJ,KAAA6I,KAAA,GACAI,EAAAjJ,KAAA6I,KAAA7I,KAAA6I,KAAArL,OAAA,GACA0L,EAAAT,EAAAN,SAAAc,IAAAd,SAAAa,IACA,OAAAtD,EAAA1F,KAAA4I,aAAAM,OAGAR,EA/HA,GAkIA,SAAAI,GAAAF,EAAAI,GAMA,IALA,IAAAG,EAAAhB,SAAAS,IAAApL,OAAA,IACA4L,EAAAZ,EAAAW,GAEAzI,EAAA,GACA2I,EAAA,EACA9L,EAAA,EAAgBA,EAAA6L,EAAA5L,OAAsBD,IAAA,CACtC,IAAA+L,EAAAF,EAAA7L,GAEAmD,GADA,MAAA4I,EACAV,EAAAS,KAEAC,EAKA,UADA5I,EAAA,GAAAsI,EAAAtI,GACA2H,EAAA3H,GAGA,IAAA6I,GAAA,SAAApJ,GAGA,SAAAoJ,EAAAzJ,EAAAC,GACAhD,EAAAiD,KAAAuJ,IAG6B,IAA7BzJ,EAAAc,OAAA,iBACAd,GAAA0J,GAAA1J,IAGA,IAAAkC,EAAAtC,EAAAM,MAAAuJ,EAAA9J,WAAA5B,OAAAqB,eAAAqK,IAAA/K,KAAAwB,KAAAF,EAAAC,IAcA,OAZAiC,EAAAyH,sBACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,SAEAnI,EA8CA,OAtEA5C,EAAAmK,EAuEC1J,GA5CD1C,EAAAoM,IACAxL,IAAA,QACAG,MAAA,WACA,OAAsC,IAAtC8B,KAAAF,KAAAc,OAAA,gBAAsCZ,KAAAF,KAAA,KAAA0J,GAAAxJ,KAAAF,SAGtC/B,IAAA,SACAG,MAAA,WAIA,IAHA,IAAAwC,EAAA,OAGAnD,EAAA,EAAkBA,EAAA,GAAQA,GAAA,EAC1BmD,GAAAV,KAAAoK,cAAApK,KAAAF,KAAA+G,OAAAtJ,EAAA,IAMA,OACAuC,KAHAY,GAAA,QAIAT,KAAAD,KAAAC,SAOAlC,IAAA,gBACAG,MAAA,SAAAmM,GAOA,IANA,IAAA3J,EAAA,GAEA4J,EAAAtK,KAAAyJ,qBAAAY,EAAA,IACAE,EAAAvK,KAAAyJ,qBAAAY,EAAA,IAGA9M,EAAA,EAAkBA,EAAA,EAAOA,IACzBmD,GAAA,KAAA4J,EAAA/M,GAAA,UACAmD,GAAA,KAAA6J,EAAAhN,GAAA,UAGA,OAAAmD,MAGA6I,EAvEA,GA6EA,SAAAC,GAAA1J,GAGA,IAFA,IAAAY,EAAA,EAEAnD,EAAA,EAAgBA,EAAA,GAAQA,IACxBmD,GAAAyH,SAAArI,EAAAvC,KAAA,EAAAA,EAAA,KAGA,UAAAiN,KAAAC,KAAA/J,EAAA,IAAAA,EAGA,IAAAgK,GAAA,SAAAvK,GAGA,SAAAuK,EAAA5K,EAAAC,GACAhD,EAAAiD,KAAA0K,GAEA,IAAA1I,EAAAtC,EAAAM,MAAA0K,EAAAjL,WAAA5B,OAAAqB,eAAAwL,IAAAlM,KAAAwB,KAAAF,EAAAC,IAcA,OAZAiC,EAAAyH,sBACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,SAEAnI,EA+CA,OAlEA5C,EAAAsL,EAmEC7K,GA7CD1C,EAAAuN,IACA3M,IAAA,QACAG,MAAA,WACA,OAAsC,IAAtC8B,KAAAF,KAAAc,OAAA,oBAGA7C,IAAA,SACAG,MAAA,WAKA,IAHA,IAAAwC,EAAA,OAGAnD,EAAA,EAAkBA,EAAAyC,KAAAF,KAAAtC,OAAsBD,GAAA,EACxCmD,GAAAV,KAAAoK,cAAApK,KAAAF,KAAA+G,OAAAtJ,EAAA,IAMA,OACAuC,KAHAY,GAAA,QAIAT,KAAAD,KAAAC,SAOAlC,IAAA,gBACAG,MAAA,SAAAmM,GAOA,IANA,IAAA3J,EAAA,GAEA4J,EAAAtK,KAAAyJ,qBAAAY,EAAA,IACAE,EAAAvK,KAAAyJ,qBAAAY,EAAA,IAGA9M,EAAA,EAAkBA,EAAA,EAAOA,IACzBmD,GAAA,KAAA4J,EAAA/M,GAAA,UACAmD,GAAA,KAAA6J,EAAAhN,GAAA,UAGA,OAAAmD,MAGAgK,EAnEA,GAwEAC,GAAA,SAAAxK,GAGA,SAAAwK,EAAA7K,EAAAC,GAEA,OADAhD,EAAAiD,KAAA2K,GACAjL,EAAAM,MAAA2K,EAAAlL,WAAA5B,OAAAqB,eAAAyL,IAAAnM,KAAAwB,KAAAF,EAAAC,IAmCA,OAvCAX,EAAAuL,EAwCC9K,GAjCD1C,EAAAwN,IACA5M,IAAA,SACAG,MAAA,WAIA,IAFA,IAAA0M,EAAA,MAEArN,EAAA,EAAkBA,EAAAyC,KAAAF,KAAAtC,OAAsBD,IAAA,CAExC,IACAsN,EADA1C,SAAAnI,KAAAF,KAAAvC,IACAwD,SAAA,GACA8J,EAAAC,GAAAD,EAAA,EAAAA,EAAArN,QAGA,QAAAuN,EAAA,EAAmBA,EAAAF,EAAArN,OAAgBuN,IACnCH,GAAA,KAAAC,EAAAE,GAAA,YAOA,OACAjL,KAHA8K,GAAA,OAIA3K,KAAAD,KAAAC,SAIAlC,IAAA,QACAG,MAAA,WACA,WAAA8B,KAAAF,KAAAc,OAAA,gBAGA+J,EAxCA,GA2CA,SAAAG,GAAA1D,EAAAC,GACA,QAAA9J,EAAA,EAAgBA,EAAA8J,EAAO9J,IACvB6J,EAAA,IAAAA,EAEA,OAAAA,EAGA,SAAA4D,GAAA5D,GAEA,IADA,IAAAG,EAAA,EACAhK,EAAA,EAAgBA,EAAA6J,EAAA5J,OAAmBD,IAAA,CACnC,IAAA8J,EAAAc,SAAAf,EAAA7J,KACAA,EAAA6J,EAAA5J,QAAA,KACA+J,GAAAF,EAEAE,GAAA,EAAAF,EAAA,GAAAmD,KAAAS,MAAA,EAAA5D,EAAA,IAGA,UAAAE,EAAA,OAGA,SAAA2D,GAAA9D,GAGA,IAFA,IAAAG,EAAA,EACA4D,GAAA,aACA5N,EAAA,EAAgBA,EAAA6J,EAAA5J,OAAmBD,IAAA,CACnC,IAAA8J,EAAAc,SAAAf,IAAA5J,OAAA,EAAAD,IACAgK,GAAA4D,EAAA5N,EAAA4N,EAAA3N,QAAA6J,EAEA,UAAAE,EAAA,OAGA,IA0MA6D,IACAlL,SACA6B,QAAA6C,EAAAE,WAAAC,WAAAC,WACAyC,QAAAO,OAAAC,OAAAC,OAAAE,MAAAM,OACAa,SACAmB,OACAC,OAAAU,MAhNA,SAAAC,GAGA,SAAAD,EAAAvL,EAAAC,GAEA,OADAhD,EAAAiD,KAAAqL,GACA3L,EAAAM,MAAAqL,EAAA5L,WAAA5B,OAAAqB,eAAAmM,IAAA7M,KAAAwB,KAAAF,EAAAkL,GAAAlL,GAAAC,IAGA,OAPAX,EAAAiM,EAQCV,IADDU,EARA,GAgNAE,MArMA,SAAAD,GAGA,SAAAC,EAAAzL,EAAAC,GAEA,OADAhD,EAAAiD,KAAAuL,GACA7L,EAAAM,MAAAuL,EAAA9L,WAAA5B,OAAAqB,eAAAqM,IAAA/M,KAAAwB,KAAAF,EAAAoL,GAAApL,GAAAC,IAGA,OAPAX,EAAAmM,EAQCZ,IADDY,EARA,GAqMAC,QA1LA,SAAAF,GAGA,SAAAE,EAAA1L,EAAAC,GAKA,OAJAhD,EAAAiD,KAAAwL,GAEA1L,GAAAkL,GAAAlL,GACAA,GAAAkL,GAAAlL,GACAJ,EAAAM,MAAAwL,EAAA/L,WAAA5B,OAAAqB,eAAAsM,IAAAhN,KAAAwB,KAAAF,EAAAC,IAGA,OAVAX,EAAAoM,EAWCb,IADDa,EAXA,GA0LAC,QA5KA,SAAAH,GAGA,SAAAG,EAAA3L,EAAAC,GAKA,OAJAhD,EAAAiD,KAAAyL,GAEA3L,GAAAoL,GAAApL,GACAA,GAAAkL,GAAAlL,GACAJ,EAAAM,MAAAyL,EAAAhM,WAAA5B,OAAAqB,eAAAuM,IAAAjN,KAAAwB,KAAAF,EAAAC,IAGA,OAVAX,EAAAqM,EAWCd,IADDc,EAXA,GA6KAC,WA7JA,SAAAvL,GAGA,SAAAuL,EAAA5L,EAAAC,GACAhD,EAAAiD,KAAA0L,GAEA,IAAA1J,EAAAtC,EAAAM,MAAA0L,EAAAjM,WAAA5B,OAAAqB,eAAAwM,IAAAlN,KAAAwB,KAAAF,EAAAC,IAGA,OADAiC,EAAAoF,OAAAe,SAAArI,EAAA,IACAkC,EAqCA,OA7CA5C,EAAAsM,EA8CC7L,GAnCD1C,EAAAuO,IACA3N,IAAA,SACAG,MAAA,WAMA,IALA,IAAAyN,EAAA3L,KAAAoH,OACA1G,EAAA,IAIAkL,MAAAD,IAAA,GAAAA,GACAA,EAAA,MAEAjL,EAAA,QAAAA,EACAiL,KAAA,OAGAjL,EAAA,MAAAA,EACAiL,KAAA,MAOA,OACA7L,KAHAY,IAAAmL,MAAA,MAIA5L,KAAAD,KAAAC,SAIAlC,IAAA,QACAG,MAAA,WACA,OAAA8B,KAAAoH,QAAA,GAAApH,KAAAoH,QAAA,WAGAsE,EA9CA,GA8JAI,QA3GA,SAAA3L,GAGA,SAAA2L,EAAAhM,EAAAC,GACAhD,EAAAiD,KAAA8L,GAEA,IAAAhM,EAAAc,OAAA,0BACAd,EAAA,IAAAA,EAAA,KAGA,IAAAkC,EAAAtC,EAAAM,MAAA8L,EAAArM,WAAA5B,OAAAqB,eAAA4M,IAAAtN,KAAAwB,KAAAF,EAAAO,cAAAN,IAGA,OADAiC,EAAA/B,KAAA+B,EAAAjC,QAAAE,MAAA+B,EAAA/B,KAAA+C,QAAA,aACAhB,EAoDA,OAhEA5C,EAAA0M,EAiECjM,GAlDD1C,EAAA2O,IACA/N,IAAA,QACAG,MAAA,WACA,WAAA8B,KAAAF,KAAAc,OAAA,qCAGA7C,IAAA,SACAG,MAAA,WAGA,IAFA,IAAAwC,KACAG,EAAAb,KAAA+L,eACAxO,EAAA,EAAkBA,EAAAyC,KAAAF,KAAAtC,OAAsBD,IACxCmD,EAAAoH,KAAAjH,EAAAb,KAAAF,KAAAkM,OAAAzO,KAEAA,IAAAyC,KAAAF,KAAAtC,OAAA,GACAkD,EAAAoH,KAAA,KAGA,OACA7H,KAAAD,KAAAC,KACAH,KAAAY,EAAAuF,KAAA,QAIAlI,IAAA,eACAG,MAAA,WACA,OACAwL,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACA8B,IAAA,YACAC,EAAA,YACAC,IAAA,aACAC,IAAA,aACAC,IAAA,aACAC,IAAA,eACAC,EAAA,aACAC,EAAA,aACAC,EAAA,aACAC,EAAA,kBAIAZ,EAjEA,GA4GAa,eAxCA,SAAAxM,GAGA,SAAAwM,EAAA7M,EAAAC,GAEA,OADAhD,EAAAiD,KAAA2M,GACAjN,EAAAM,MAAA2M,EAAAlN,WAAA5B,OAAAqB,eAAAyN,IAAAnO,KAAAwB,KAAAF,EAAAC,IAuBA,OA3BAX,EAAAuN,EA4BC9M,GAlBD1C,EAAAwP,IACA5O,IAAA,SACAG,MAAA,WACA,OACA4B,KAAA,4CACAG,KAAAD,KAAAC,SAOAlC,IAAA,QACAG,MAAA,WACA,aAGAyO,EA5BA,IA2CAC,GAAA,SAAAC,EAAAC,GACA,OAAA3O,KAAoB0O,EAAAC,IAKpB,SAAAC,GAAAlM,GACA,IAAAmM,KAcA,OAbA,SAAAC,EAAApH,GACA,GAAAqH,MAAAC,QAAAtH,GACA,QAAAtI,EAAA,EAAkBA,EAAAsI,EAAArI,OAAoBD,IACtC0P,EAAApH,EAAAtI,SAGAsI,EAAA5F,KAAA4F,EAAA5F,MAAA,GACA4F,EAAA/F,KAAA+F,EAAA/F,MAAA,GACAkN,EAAAlF,KAAAjC,GAGAoH,CAAApM,GAEAmM,EAGA,SAAAI,GAAArN,GAOA,OALAA,EAAAsN,UAAAtN,EAAAsN,WAAAtN,EAAAuN,OACAvN,EAAAwN,aAAAxN,EAAAwN,cAAAxN,EAAAuN,OACAvN,EAAAyN,YAAAzN,EAAAyN,aAAAzN,EAAAuN,OACAvN,EAAA0N,WAAA1N,EAAA0N,YAAA1N,EAAAuN,OAEAvN,EAIA,SAAA2N,GAAA3N,GACA,IAAA4N,GAAA,yGAEA,QAAAC,KAAAD,EACAA,EAAApP,eAAAqP,IAEA,iBAAA7N,EADA6N,EAAAD,EAAAC,MAEA7N,EAAA6N,GAAAzF,SAAApI,EAAA6N,GAAA,KASA,MAJA,iBAAA7N,EAAA,eACAA,EAAA,sBAAAA,EAAA,cAGAA,EAGA,IAAA8N,IACAxH,MAAA,EACAE,OAAA,IACAuH,OAAA,OACAlG,cAAA,EACAmG,YAAA,GACAC,KAAA,YACA/N,UAAAjB,EACA6I,UAAA,SACAoG,aAAA,SACAzH,WAAA,EACAL,SAAA,GACA+H,WAAA,UACAC,UAAA,UACAb,OAAA,GACAD,eAAArO,EACAuO,kBAAAvO,EACAyO,gBAAAzO,EACAwO,iBAAAxO,EACAoP,MAAA,cAGA,SAAAC,GAAAC,GACA,IAAAvO,KACA,QAAApB,KAAAkP,GACAA,GAAAtP,eAAAI,KAEA2P,EAAAC,aAAA,aAAA5P,EAAAyE,iBACArD,EAAApB,GAAA2P,EAAAE,aAAA,aAAA7P,EAAAyE,gBAIAkL,EAAAC,aAAA,QAAA5P,EAAAyE,iBACArD,EAAApB,GAAA2P,EAAAE,aAAA,QAAA7P,EAAAyE,iBAUA,OALArD,EAAA,MAAAuO,EAAAE,aAAA,oBAAAF,EAAAE,aAAA,cAGAzO,EAAA2N,GAAA3N,GAKA,SAAA0O,GAAAC,EAAA3O,GACA,OAAAA,EAAAwG,QAAAxG,EAAA6H,cAAA8G,EAAAzO,KAAAzC,OAAA,EAAAuC,EAAAoG,SAAApG,EAAAyG,WAAA,GAAAzG,EAAAsN,UAAAtN,EAAAwN,aAGA,SAAAoB,GAAAC,EAAAC,EAAA9O,GACA,GAAAA,EAAA6H,cAAAiH,EAAAD,EAAA,CACA,aAAA7O,EAAA8H,UACA,OAAA2C,KAAAS,OAAA2D,EAAAC,GAAA,GACG,WAAA9O,EAAA8H,UACH,SACG,YAAA9H,EAAA8H,UACH,OAAA2C,KAAAS,MAAA2D,EAAAC,GAGA,SAGA,SAAAC,GAAAjO,EAAAkO,EAAAC,GACA,QAAAzR,EAAA,EAAgBA,EAAAsD,EAAArD,OAAsBD,IAAA,CACtC,IAIAqR,EAJAF,EAAA7N,EAAAtD,GACAwC,EAAA6M,GAAAmC,EAAAL,EAAA3O,SAKA6O,EADA7O,EAAA6H,aACAqH,GAAAP,EAAAzO,KAAAF,EAAAiP,GAEA,EAGA,IAAAH,EAAAH,EAAA5O,KAAAtC,OAAAuC,EAAAsG,MACAqI,EAAArI,MAAAmE,KAAAC,KAAAD,KAAA0E,IAAAN,EAAAC,IAEAH,EAAAnI,OAAAkI,GAAAC,EAAA3O,GAEA2O,EAAAS,eAAAR,GAAAC,EAAAC,EAAA9O,IAIA,SAAAqP,GAAAvO,GAEA,IADA,IAAAwO,EAAA,EACA9R,EAAA,EAAgBA,EAAAsD,EAAArD,OAAsBD,IACtC8R,GAAAxO,EAAAtD,GAAA8I,MAEA,OAAAgJ,EAGA,SAAAC,GAAAzO,GAEA,IADA,IAAA0O,EAAA,EACAhS,EAAA,EAAgBA,EAAAsD,EAAArD,OAAsBD,IACtCsD,EAAAtD,GAAAgJ,OAAAgJ,IACAA,EAAA1O,EAAAtD,GAAAgJ,QAGA,OAAAgJ,EAGA,SAAAN,GAAAnL,EAAA/D,EAAAiP,GACA,IAAAQ,EAEA,GAAAR,EACAQ,EAAAR,MACE,wBAAAS,SAKF,SAJAD,EAAAC,SAAAC,cAAA,UAAAC,WAAA,MAWA,OALAH,EAAAxB,KAAAjO,EAAAgO,YAAA,IAAAhO,EAAAoG,SAAA,MAAApG,EAAAiO,KAGAwB,EAAAI,YAAA9L,GAAAuC,MAKA,IA0IAwJ,GAAA,6BA2LAC,IAAiBC,eArUjB,WACA,SAAAA,EAAAC,EAAAnP,EAAAd,GACAhD,EAAAiD,KAAA+P,GAEA/P,KAAAgQ,SACAhQ,KAAAa,YACAb,KAAAD,UAiIA,OA9HA5C,EAAA4S,IACAhS,IAAA,SACAG,MAAA,WAEA,IAAA8B,KAAAgQ,OAAAL,WACA,UAAAM,MAAA,wCAGAjQ,KAAAkQ,gBACA,QAAA3S,EAAA,EAAkBA,EAAAyC,KAAAa,UAAArD,OAA2BD,IAAA,CAC7C,IAAA4S,EAAAvD,GAAA5M,KAAAD,QAAAC,KAAAa,UAAAtD,GAAAwC,SAEAC,KAAAoQ,kBAAAD,EAAAnQ,KAAAa,UAAAtD,IACAyC,KAAAqQ,eAAAF,EAAAnQ,KAAAa,UAAAtD,IAEAyC,KAAAsQ,kBAAAtQ,KAAAa,UAAAtD,IAGAyC,KAAAuQ,mBAGAxS,IAAA,gBACAG,MAAA,WAEA,IAAAsR,EAAAxP,KAAAgQ,OAAAL,WAAA,MAEAH,EAAAgB,OAEA1B,GAAA9O,KAAAa,UAAAb,KAAAD,QAAAyP,GACA,IAAAH,EAAAD,GAAApP,KAAAa,WACA0O,EAAAD,GAAAtP,KAAAa,WAEAb,KAAAgQ,OAAA3J,MAAAgJ,EAAArP,KAAAD,QAAA0N,WAAAzN,KAAAD,QAAAyN,YAEAxN,KAAAgQ,OAAAzJ,OAAAgJ,EAGAC,EAAAiB,UAAA,IAAAzQ,KAAAgQ,OAAA3J,MAAArG,KAAAgQ,OAAAzJ,QACAvG,KAAAD,QAAAmO,aACAsB,EAAAkB,UAAA1Q,KAAAD,QAAAmO,WACAsB,EAAAmB,SAAA,IAAA3Q,KAAAgQ,OAAA3J,MAAArG,KAAAgQ,OAAAzJ,SAGAiJ,EAAAoB,UAAA5Q,KAAAD,QAAA0N,WAAA,MAGA1P,IAAA,oBACAG,MAAA,SAAA6B,EAAA2O,GAEA,IAKAmC,EALArB,EAAAxP,KAAAgQ,OAAAL,WAAA,MAEAmB,EAAApC,EAAA5O,KAKA+Q,EADA,OAAA9Q,EAAAkO,aACAlO,EAAAsN,UAAAtN,EAAAoG,SAAApG,EAAAyG,WAEAzG,EAAAsN,UAGAmC,EAAAkB,UAAA3Q,EAAAoO,UAEA,QAAApD,EAAA,EAAkBA,EAAA+F,EAAAtT,OAAmBuN,IAAA,CACrC,IAAAgG,EAAAhG,EAAAhL,EAAAsG,MAAAqI,EAAAS,eAEA,MAAA2B,EAAA/F,GACAyE,EAAAmB,SAAAI,EAAAF,EAAA9Q,EAAAsG,MAAAtG,EAAAwG,QACKuK,EAAA/F,IACLyE,EAAAmB,SAAAI,EAAAF,EAAA9Q,EAAAsG,MAAAtG,EAAAwG,OAAAuK,EAAA/F,QAKAhN,IAAA,iBACAG,MAAA,SAAA6B,EAAA2O,GAEA,IAMAqC,EAAAC,EANAxB,EAAAxP,KAAAgQ,OAAAL,WAAA,MAEA3B,EAAAjO,EAAAgO,YAAA,IAAAhO,EAAAoG,SAAA,MAAApG,EAAAiO,KAGAjO,EAAA6H,eAIAoJ,EADA,OAAAjR,EAAAkO,aACAlO,EAAAsN,UAAAtN,EAAAoG,SAAApG,EAAAyG,WAEAzG,EAAAwG,OAAAxG,EAAAyG,WAAAzG,EAAAsN,UAAAtN,EAAAoG,SAGAqJ,EAAAxB,OAGA,QAAAjO,EAAA8H,WAAA6G,EAAAS,eAAA,GACA4B,EAAA,EACAvB,EAAA3H,UAAA,QACK,SAAA9H,EAAA8H,WACLkJ,EAAArC,EAAArI,MAAA,EACAmJ,EAAA3H,UAAA,UAIAkJ,EAAArC,EAAArI,MAAA,EACAmJ,EAAA3H,UAAA,UAGA2H,EAAAyB,SAAAvC,EAAAzO,KAAA8Q,EAAAC,OAIAjT,IAAA,oBACAG,MAAA,SAAAwQ,GACA1O,KAAAgQ,OAAAL,WAAA,MAEAiB,UAAAlC,EAAArI,MAAA,MAGAtI,IAAA,gBACAG,MAAA,WAEA8B,KAAAgQ,OAAAL,WAAA,MAEAuB,cAGAnB,EAvIA,GAqUiBoB,YAzLjB,WACA,SAAAA,EAAAC,EAAAvQ,EAAAd,GACAhD,EAAAiD,KAAAmR,GAEAnR,KAAAoR,MACApR,KAAAa,YACAb,KAAAD,UACAC,KAAAyP,SAAA1P,EAAAsR,aAAA5B,SA6JA,OA1JAtS,EAAAgU,IACApT,IAAA,SACAG,MAAA,WACA,IAAAoT,EAAAtR,KAAAD,QAAA0N,WAEAzN,KAAAuR,aACA,QAAAhU,EAAA,EAAkBA,EAAAyC,KAAAa,UAAArD,OAA2BD,IAAA,CAC7C,IAAAmR,EAAA1O,KAAAa,UAAAtD,GACA4S,EAAAvD,GAAA5M,KAAAD,QAAA2O,EAAA3O,SAEAyR,EAAAxR,KAAAyR,YAAAH,EAAAnB,EAAA9C,UAAArN,KAAAoR,KAEApR,KAAA0R,gBAAAF,EAAArB,GAEAnQ,KAAA2R,eAAAH,EAAArB,EAAAzB,GACA1O,KAAA4R,YAAAJ,EAAArB,EAAAzB,GAEA4C,GAAA5C,EAAArI,UAIAtI,IAAA,aACAG,MAAA,WAEA,KAAA8B,KAAAoR,IAAAS,YACA7R,KAAAoR,IAAAU,YAAA9R,KAAAoR,IAAAS,YAGA/C,GAAA9O,KAAAa,UAAAb,KAAAD,SACA,IAAAsP,EAAAD,GAAApP,KAAAa,WACA0O,EAAAD,GAAAtP,KAAAa,WAEAwF,EAAAgJ,EAAArP,KAAAD,QAAA0N,WAAAzN,KAAAD,QAAAyN,YACAxN,KAAA+R,iBAAA1L,EAAAkJ,GAEAvP,KAAAD,QAAAmO,YACAlO,KAAAgS,SAAA,IAAA3L,EAAAkJ,EAAAvP,KAAAoR,KAAAa,aAAA,gBAAAjS,KAAAD,QAAAmO,WAAA,QAIAnQ,IAAA,iBACAG,MAAA,SAAAe,EAAAc,EAAA2O,GACA,IAGAmC,EAHAC,EAAApC,EAAA5O,KAKA+Q,EADA,OAAA9Q,EAAAkO,aACAlO,EAAAoG,SAAApG,EAAAyG,WAEA,EAKA,IAFA,IAAA0L,EAAA,EACAnB,EAAA,EACAhG,EAAA,EAAkBA,EAAA+F,EAAAtT,OAAmBuN,IACrCgG,EAAAhG,EAAAhL,EAAAsG,MAAAqI,EAAAS,eAEA,MAAA2B,EAAA/F,GACAmH,IACKA,EAAA,IACLlS,KAAAgS,SAAAjB,EAAAhR,EAAAsG,MAAA6L,EAAArB,EAAA9Q,EAAAsG,MAAA6L,EAAAnS,EAAAwG,OAAAtH,GACAiT,EAAA,GAKAA,EAAA,GACAlS,KAAAgS,SAAAjB,EAAAhR,EAAAsG,OAAA6L,EAAA,GAAArB,EAAA9Q,EAAAsG,MAAA6L,EAAAnS,EAAAwG,OAAAtH,MAIAlB,IAAA,cACAG,MAAA,SAAAe,EAAAc,EAAA2O,GACA,IAIAqC,EAAAC,EAJAmB,EAAAnS,KAAAyP,SAAA2C,gBAAAvC,GAAA,QAGA9P,EAAA6H,eAGAuK,EAAAF,aAAA,gBAAAlS,EAAAgO,YAAA,IAAAhO,EAAAoG,SAAA,MAAApG,EAAAiO,MAGAgD,EADA,OAAAjR,EAAAkO,aACAlO,EAAAoG,SAAApG,EAAAyG,WAEAzG,EAAAwG,OAAAxG,EAAAyG,WAAAzG,EAAAoG,SAIA,QAAApG,EAAA8H,WAAA6G,EAAAS,eAAA,GACA4B,EAAA,EACAoB,EAAAF,aAAA,wBACK,SAAAlS,EAAA8H,WACLkJ,EAAArC,EAAArI,MAAA,EACA8L,EAAAF,aAAA,uBAIAlB,EAAArC,EAAArI,MAAA,EACA8L,EAAAF,aAAA,yBAGAE,EAAAF,aAAA,IAAAlB,GACAoB,EAAAF,aAAA,IAAAjB,GAEAmB,EAAAE,YAAArS,KAAAyP,SAAA6C,eAAA5D,EAAAzO,OAEAhB,EAAAoT,YAAAF,OAIApU,IAAA,mBACAG,MAAA,SAAAmI,EAAAE,GACA,IAAA6K,EAAApR,KAAAoR,IACAA,EAAAa,aAAA,QAAA5L,EAAA,MACA+K,EAAAa,aAAA,SAAA1L,EAAA,MACA6K,EAAAa,aAAA,WACAb,EAAAa,aAAA,WACAb,EAAAa,aAAA,iBAAA5L,EAAA,IAAAE,GAEA6K,EAAAa,aAAA,QAAApC,IACAuB,EAAAa,aAAA,iBAEAb,EAAAa,aAAA,wCAGAlU,IAAA,cACAG,MAAA,SAAA6S,EAAAC,EAAA/R,GACA,IAAAuS,EAAAxR,KAAAyP,SAAA2C,gBAAAvC,GAAA,KAKA,OAJA2B,EAAAS,aAAA,yBAAAlB,EAAA,KAAAC,EAAA,KAEA/R,EAAAoT,YAAAb,GAEAA,KAGAzT,IAAA,kBACAG,MAAA,SAAAsT,EAAAzR,GACAyR,EAAAS,aAAA,gBAAAlS,EAAAoO,UAAA,QAGApQ,IAAA,WACAG,MAAA,SAAA6S,EAAAC,EAAA3K,EAAAE,EAAAtH,GACA,IAAAsT,EAAAvS,KAAAyP,SAAA2C,gBAAAvC,GAAA,QASA,OAPA0C,EAAAN,aAAA,IAAAlB,GACAwB,EAAAN,aAAA,IAAAjB,GACAuB,EAAAN,aAAA,QAAA5L,GACAkM,EAAAN,aAAA,SAAA1L,GAEAtH,EAAAoT,YAAAE,GAEAA,MAGApB,EApKA,GAyLiBqB,eAlBjB,WACA,SAAAA,EAAA9T,EAAAmC,EAAAd,GACAhD,EAAAiD,KAAAwS,GAEAxS,KAAAtB,SACAsB,KAAAa,YACAb,KAAAD,UASA,OANA5C,EAAAqV,IACAzU,IAAA,SACAG,MAAA,WACA8B,KAAAtB,OAAAmC,UAAAb,KAAAa,cAGA2R,EAfA,IAoBAC,GAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAC,GACA7V,EAAAiD,KAAAyS,GAEA,IAAAzQ,EAAAtC,EAAAM,MAAAyS,EAAAhT,WAAA5B,OAAAqB,eAAAuT,IAAAjU,KAAAwB,OAQA,OANAgC,EAAA6Q,KAAA,wBAEA7Q,EAAA2Q,YACA3Q,EAAA4Q,QAEA5Q,EAAA8Q,QAAA,IAAA9Q,EAAA4Q,MAAA,8BAAA5Q,EAAA2Q,UACA3Q,EAGA,OAhBA5C,EAAAqT,EAAAC,GAgBAD,EAjBA,CAkBCxC,OAED8C,GAAA,SAAAC,GAGA,SAAAD,IACAhW,EAAAiD,KAAA+S,GAEA,IAAAE,EAAAvT,EAAAM,MAAA+S,EAAAtT,WAAA5B,OAAAqB,eAAA6T,IAAAvU,KAAAwB,OAIA,OAFAiT,EAAAJ,KAAA,0BACAI,EAAAH,QAAA,kCACAG,EAGA,OAZA7T,EAAA2T,EAAAC,GAYAD,EAbA,CAcC9C,OAEDiD,GAAA,SAAAC,GAGA,SAAAD,IACAnW,EAAAiD,KAAAkT,GAEA,IAAAE,EAAA1T,EAAAM,MAAAkT,EAAAzT,WAAA5B,OAAAqB,eAAAgU,IAAA1U,KAAAwB,OAIA,OAFAoT,EAAAP,KAAA,qBACAO,EAAAN,QAAA,2BACAM,EAGA,OAZAhU,EAAA8T,EAAAC,GAYAD,EAbA,CAcCjD,OAeD,SAAAoD,GAAA/E,GAEA,oBAAAA,EACA,OA8CA,SAAAxK,GACA,IAAAwP,EAAA7D,SAAA8D,iBAAAzP,GACA,OAAAwP,EAAA9V,OACA,OAGA,IADA,IAAAgW,KACAjW,EAAA,EAAiBA,EAAA+V,EAAA9V,OAAqBD,IACtCiW,EAAA1L,KAAAuL,GAAAC,EAAA/V,KAEA,OAAAiW,EAvDAC,CAAAnF,GAGA,GAAApB,MAAAC,QAAAmB,GAAA,CAEA,IADA,IAAAkF,KACAjW,EAAA,EAAkBA,EAAA+Q,EAAA9Q,OAAoBD,IACtCiW,EAAA1L,KAAAuL,GAAA/E,EAAA/Q,KAEA,OAAAiW,EAGA,uBAAAE,mBAAApF,aAAAqF,iBACA,OA+CAC,EA/CAtF,GAkDAA,QAFA0B,EAAAP,SAAAC,cAAA,UAGA3P,QAAAsO,GAAAuF,GACAC,SAAA/D,GAAAC,eACA+D,YAAA,WACAF,EAAA3B,aAAA,MAAAjC,EAAA+D,eAnDA,GAAAzF,GAAA,QAAAA,EAAA0F,UAAA,oBAAAC,YAAA3F,aAAA2F,WACA,OACA3F,UACAvO,QAAAsO,GAAAC,GACAuF,SAAA/D,GAAAqB,aAIA,uBAAAuC,mBAAApF,aAAAoF,kBACA,OACApF,UACAvO,QAAAsO,GAAAC,GACAuF,SAAA/D,GAAAC,gBAIA,GAAAzB,KAAAqB,WACA,OACArB,UACAuF,SAAA/D,GAAAC,gBAEO,GAAAzB,GAAA,qBAAAA,EAAA,YAAA7R,EAAA6R,QAAA0F,SACP,OACA1F,UACAuF,SAAA/D,GAAA0C,gBAGA,UAAAO,GAiBA,IAAAa,EACA5D,EAaA,IAAAkE,GAAA,WACA,SAAAA,EAAAC,GACApX,EAAAiD,KAAAkU,GAEAlU,KAAAmU,MAiCA,OA9BAhX,EAAA+W,IACAnW,IAAA,cACAG,MAAA,SAAAkW,GAEA,6BAAAA,EAAAvB,KAOA,MAAAuB,EANA,GAAApU,KAAAmU,IAAAE,SAAAjG,QAAApO,KAAAmU,IAAAG,UAAAlG,MAGA,MAAAgG,EAAAtB,QAFA9S,KAAAmU,IAAAE,SAAAjG,OAAA,GAQApO,KAAAmU,IAAAI,OAAA,gBAGAxW,IAAA,kBACAG,MAAA,SAAAsW,GACA,IACA,IAAA9T,EAAA8T,EAAAC,WAAAzV,EAAAX,WAEA,OADA2B,KAAAmU,IAAAE,SAAAjG,OAAA,GACA1N,EACI,MAAA0T,GAGJ,OAFApU,KAAA0U,YAAAN,GAEApU,KAAAmU,SAIAD,EArCA,GA2CAS,GAAA,aAKAC,GAAA,SAAAtG,EAAArO,EAAAF,GACA,IAAAoU,EAAA,IAAAQ,GAEA,YAAArG,EACA,MAAA2B,MAAA,yCAoBA,OAhBAkE,EAAAU,kBAAAxB,GAAA/E,GACA6F,EAAAW,cACAX,EAAAE,SAAAxG,GACAsG,EAAAY,cAAA,IAAAb,GAAAC,QAGA,IAAAlU,KACAF,SAEA+N,SACA/N,EAAA+N,OAAAkH,MAGAb,EAAApU,aAAA+N,QAAA7N,EAAAF,GAAAwU,UAGAJ,GASA,QAAAtB,MALA+B,GAAAK,UAAA,SAAApC,GACA,OAAAzH,GAAAyH,IAIAzH,GACAA,GAAA7M,eAAAsU,KAEAqC,GAAA9J,GAAAyH,IAGA,SAAAqC,GAAAC,EAAAtC,GACA8B,GAAA7X,UAAA+V,GAAA8B,GAAA7X,UAAA+V,EAAAxS,eAAAsU,GAAA7X,UAAA+V,EAAAzP,eAAA,SAAAnD,EAAAF,GACA,IAAAoU,EAAAnU,KACA,OAAAmU,EAAAY,cAAAK,gBAAA,WAEArV,EAAAE,UAAA,IAAAF,EAAAE,UAAAjB,EAAA,GAAAe,EAAAE,KAEA,IAAAoV,EAAAzI,GAAAuH,EAAAE,SAAAtU,GACAsV,EAAA3H,GAAA2H,GACA,IAAAC,EAAAH,EAAAtC,GACAhN,EAAA0P,GAAAtV,EAAAqV,EAAAD,GAGA,OAFAlB,EAAAW,WAAAhN,KAAAjC,GAEAsO,KAMA,SAAAoB,GAAAtV,EAAAqV,EAAAvV,GAIA,IAAAyV,EAAA,IAAAF,EAFArV,EAAA,GAAAA,EAEAF,GAIA,IAAAyV,EAAApH,QACA,UAAAqE,GAAA+C,EAAA3Y,YAAAgW,KAAA5S,GAIA,IAAA4F,EAAA2P,EAAA9P,SAIAG,EAAAkH,GAAAlH,GAGA,QAAAtI,EAAA,EAAgBA,EAAAsI,EAAArI,OAAoBD,IACpCsI,EAAAtI,GAAAwC,QAAA6M,GAAA7M,EAAA8F,EAAAtI,GAAAwC,SAGA,OAAA8F,EAGA,SAAAmP,KAEA,OAAA5J,GAAA,QACA,UAIAvN,OAAA4X,KAAArK,IAAA,GAoEA,SAAAmJ,GAAAmB,EAAA7U,EAAAd,GACAc,EAAAkM,GAAAlM,GAEA,QAAAtD,EAAA,EAAgBA,EAAAsD,EAAArD,OAAsBD,IACtCsD,EAAAtD,GAAAwC,QAAA6M,GAAA7M,EAAAc,EAAAtD,GAAAwC,SACAqN,GAAAvM,EAAAtD,GAAAwC,SAGAqN,GAAArN,GAGA,IAAA4V,EADAD,EAAA7B,UACA6B,EAAApH,QAAAzN,EAAAd,GACAwU,SAEAmB,EAAA5B,aACA4B,EAAA5B,cA9EAa,GAAA7X,UAAAiD,QAAA,SAAAA,GAEA,OADAC,KAAAqU,SAAAzH,GAAA5M,KAAAqU,SAAAtU,GACAC,MAIA2U,GAAA7X,UAAA8Y,MAAA,SAAAC,GACA,IAAAC,EAAA,IAAA5I,MAAA2I,EAAA,GAAA5P,KAAA,KAEA,OADAjG,KAAA8U,WAAAhN,MAAuBhI,KAAAgW,IACvB9V,MAIA2U,GAAA7X,UAAAiZ,KAAA,WAWA,IAAAC,EATA,GAAAhW,KAAA6U,kBAUA,QAAAtX,KALA2P,MAAAC,QAAAnN,KAAA6U,qBACA7U,KAAA6U,mBAAA7U,KAAA6U,oBAIA7U,KAAA6U,kBAAA,CACAmB,EAAAhW,KAAA6U,kBAAAtX,GACA,IAAAwC,EAAA6M,GAAA5M,KAAAqU,SAAA2B,EAAAjW,SAEA,QAAAA,EAAA+N,SACA/N,EAAA+N,OAAAkH,MAGAhV,KAAA+U,cAAAK,gBAAA,WACA,IAEAvP,EAAA0P,GAFAxV,EAAA7B,MACAkN,GAAArL,EAAA+N,OAAAzN,eACAN,GAEAwU,GAAAyB,EAAAnQ,EAAA9F,OAMA4U,GAAA7X,UAAAyX,OAAA,WACA,IAAAvU,KAAA6U,kBACA,UAAA3B,GAGA,GAAAhG,MAAAC,QAAAnN,KAAA6U,mBACA,QAAAtX,EAAA,EAAiBA,EAAAyC,KAAA6U,kBAAArX,OAAmCD,IACpDgX,GAAAvU,KAAA6U,kBAAAtX,GAAAyC,KAAA8U,WAAA9U,KAAAqU,eAGAE,GAAAvU,KAAA6U,kBAAA7U,KAAA8U,WAAA9U,KAAAqU,UAGA,OAAArU,MAGA2U,GAAA7X,UAAAwX,UAAAzG,GAuBA,oBAAAoI,SACAA,OAAArB,cAKA,oBAAAsB,SACAA,OAAAC,GAAAvB,UAAA,SAAAwB,EAAArW,GACA,IAAAsW,KAIA,OAHAH,OAAAlW,MAAAsW,KAAA,WACAD,EAAAvO,KAAA9H,QAEA4U,GAAAyB,EAAAD,EAAArW,KAIA,IAAAsD,IACAwP,KAAA,UAEAvV,OAKAyC,QAAAlC,OAKA0Y,KACAC,KAAAhV,OACAiV,QAAA,UAMAvY,OACAsY,KAAA,KACAC,QAAA,KAIAlC,OAAA,SAAA7E,GACA,OAAAA,EAAA1P,KAAAuW,IAAAvW,KAAA0W,OAAAD,UAIAE,OAIAzY,MAAA,WACA8B,KAAA4W,YAOA7W,QAAA,WACAC,KAAA4W,aAIAC,SAIAD,SAAA,WACA5W,KAAA8W,KACAlC,GAAA5U,KAAA8W,IAAAtV,OAAAxB,KAAA9B,OAAA8B,KAAAD,WAKAgX,QAAA,WACA/W,KAAA4W,aAIeI,EAAA,yGCj+EfC,EAAAC,EAAA,QAAAD,OACAE,EAAAlB,OAAAmB,SAAAC,KAAAlV,MAAA,KACA,GAAAgV,EAAA3Z,OAAA,EACA,IAAAZ,EAAA0a,KAAAC,MAAAN,EAAAO,OAAAL,EAAA,SACA,CACAva,EAAA,KACAA,GACA6a,GAAA,IACAC,SAAA,gBACAC,QAAA,OACAC,WAAA,QACAC,SAAA,IACAC,aAAA,MACAC,QAAA,MACAC,YAAA,QACAC,OAAA,QAIA,IAAAC,GACArF,KAAA,eACAsF,YACAC,QAAAC,EAAA,GAEAvY,KALA,WAMA,OACAwY,WAAA1b,EACA2b,gBACA3Q,cAAA,EAEAsG,WAAA,OACAE,MAAA,SAAAoK,KACAnS,MAAA,QACAE,OAAA,OACAJ,SAAA,OACA2H,OAAA,UACAR,OAAA,KAWAuJ,SACA4B,QADA,WAEAC,QAAAC,IAAA3Y,KAAA4Y,OAAAC,UAIAC,QAlCA,aAmCA/B,QAnCA,WAoCA2B,QAAAC,IAAA3Y,KAAAsY,cC9EeS,GADExE,OAFjB,WAA0B,IAAAyE,EAAAhZ,KAAaiZ,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,YAAsB,MAAAL,EAAAV,WAAAa,EAAA,OAAAA,EAAA,OAA6CE,YAAA,eAAyBF,EAAA,WAAgBG,OAAOpb,MAAA8a,EAAAV,WAAAZ,SAAA3X,QAAAiZ,EAAAT,eAAAhC,IAAA,UAA0E,GAAAyC,EAAAO,GAAA,KAAAJ,EAAA,KAAAA,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAV,eAAAoB,EAAAO,GAAA,KAAAJ,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAR,mBAAAkB,EAAAO,GAAA,KAAAJ,EAAA,KAAAA,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAP,YAAAiB,EAAAO,GAAA,KAAAJ,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAN,kBAAAgB,EAAAO,GAAA,KAAAJ,EAAA,KAAAA,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAL,WAAAe,EAAAO,GAAA,KAAAJ,EAAA,QAAAH,EAAAO,GAAA,MAAAP,EAAAQ,GAAAR,EAAAV,WAAAT,iBAAAmB,EAAAS,QAEtRC,oBCCjB,IAcAC,EAdyBzC,EAAQ,OAcjC0C,CACE1B,EACAa,GATF,EAVA,SAAAc,GACE3C,EAAQ,SAaV,kBAEA,MAUeF,EAAA,QAAA2C,EAAiB","file":"static/js/2.d63e0143c1ff9fab54b3.js","sourcesContent":["/*!\n * vue-barcode v1.0.0\n * https://xkeshi.github.io/vue-barcode\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T05:51:52.635Z\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Barcode = function Barcode(data, options) {\n\tclassCallCheck(this, Barcode);\n\n\tthis.data = data;\n\tthis.text = options.text || data;\n\tthis.options = options;\n};\n\n// Encoding documentation:\n\nvar CODE39 = function (_Barcode) {\n\tinherits(CODE39, _Barcode);\n\n\tfunction CODE39(data, options) {\n\t\tclassCallCheck(this, CODE39);\n\n\t\tdata = data.toUpperCase();\n\n\t\t// Calculate mod43 checksum if enabled\n\t\tif (options.mod43) {\n\t\t\tdata += getCharacter(mod43checksum(data));\n\t\t}\n\n\t\treturn possibleConstructorReturn(this, (CODE39.__proto__ || Object.getPrototypeOf(CODE39)).call(this, data, options));\n\t}\n\n\tcreateClass(CODE39, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// First character is always a *\n\t\t\tvar result = getEncoding(\"*\");\n\n\t\t\t// Take every character and add the binary representation to the result\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult += getEncoding(this.data[i]) + \"0\";\n\t\t\t}\n\n\t\t\t// Last character is always a *\n\t\t\tresult += getEncoding(\"*\");\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n\t\t}\n\t}]);\n\treturn CODE39;\n}(Barcode);\n\n// All characters. The position in the array is the (checksum) value\n\n\nvar characters = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \".\", \" \", \"$\", \"/\", \"+\", \"%\", \"*\"];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [20957, 29783, 23639, 30485, 20951, 29813, 23669, 20855, 29789, 23645, 29975, 23831, 30533, 22295, 30149, 24005, 21623, 29981, 23837, 22301, 30023, 23879, 30545, 22343, 30161, 24017, 21959, 30065, 23921, 22385, 29015, 18263, 29141, 17879, 29045, 18293, 17783, 29021, 18269, 17477, 17489, 17681, 20753, 35770];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n\treturn getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n\treturn encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n\treturn characters[characterValue];\n}\n\nfunction characterValue(character) {\n\treturn characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n\tvar checksum = 0;\n\tfor (var i = 0; i < data.length; i++) {\n\t\tchecksum += characterValue(data[i]);\n\t}\n\n\tchecksum = checksum % 43;\n\treturn checksum;\n}\n\nvar _SET_BY_CODE;\n\n// constants for internal usage\nvar SET_A = 0;\nvar SET_B = 1;\nvar SET_C = 2;\n\n// Special characters\nvar SHIFT = 98;\nvar START_A = 103;\nvar START_B = 104;\nvar START_C = 105;\nvar MODULO = 103;\nvar STOP = 106;\nvar FNC1 = 207;\n\n// Get set by start code\nvar SET_BY_CODE = (_SET_BY_CODE = {}, defineProperty(_SET_BY_CODE, START_A, SET_A), defineProperty(_SET_BY_CODE, START_B, SET_B), defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE);\n\n// Get next set by code\nvar SWAP = {\n\t101: SET_A,\n\t100: SET_B,\n\t99: SET_C\n};\n\nvar A_START_CHAR = String.fromCharCode(208); // START_A + 105\nvar B_START_CHAR = String.fromCharCode(209); // START_B + 105\nvar C_START_CHAR = String.fromCharCode(210); // START_C + 105\n\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\nvar A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\";\n\n// 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\nvar B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\";\n\n// 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\nvar C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\";\n\n// CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\nvar BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];\n\n// This is the master class,\n// it does require the start code to be included in the string\n\nvar CODE128 = function (_Barcode) {\n\tinherits(CODE128, _Barcode);\n\n\tfunction CODE128(data, options) {\n\t\tclassCallCheck(this, CODE128);\n\n\t\t// Get array of ascii codes from data\n\t\tvar _this = possibleConstructorReturn(this, (CODE128.__proto__ || Object.getPrototypeOf(CODE128)).call(this, data.substring(1), options));\n\n\t\t_this.bytes = data.split('').map(function (char) {\n\t\t\treturn char.charCodeAt(0);\n\t\t});\n\t\treturn _this;\n\t}\n\n\tcreateClass(CODE128, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\t// ASCII value ranges 0-127, 200-211\n\t\t\treturn (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(this.data)\n\t\t\t);\n\t\t}\n\n\t\t// The public encoding function\n\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tvar bytes = this.bytes;\n\t\t\t// Remove the start code from the bytes and set its index\n\t\t\tvar startIndex = bytes.shift() - 105;\n\t\t\t// Get start set by index\n\t\t\tvar startSet = SET_BY_CODE[startIndex];\n\n\t\t\tif (startSet === undefined) {\n\t\t\t\tthrow new RangeError('The encoding does not start with a start character.');\n\t\t\t}\n\n\t\t\tif (this.shouldEncodeAsEan128() === true) {\n\t\t\t\tbytes.unshift(FNC1);\n\t\t\t}\n\n\t\t\t// Start encode with the right type\n\t\t\tvar encodingResult = CODE128.next(bytes, 1, startSet);\n\n\t\t\treturn {\n\t\t\t\ttext: this.text === this.data ? this.text.replace(/[^\\x20-\\x7E]/g, '') : this.text,\n\t\t\t\tdata:\n\t\t\t\t// Add the start bits\n\t\t\t\tCODE128.getBar(startIndex) +\n\t\t\t\t// Add the encoded bits\n\t\t\t\tencodingResult.result +\n\t\t\t\t// Add the checksum\n\t\t\t\tCODE128.getBar((encodingResult.checksum + startIndex) % MODULO) +\n\t\t\t\t// Add the end bits\n\t\t\t\tCODE128.getBar(STOP)\n\t\t\t};\n\t\t}\n\n\t\t// GS1-128/EAN-128\n\n\t}, {\n\t\tkey: 'shouldEncodeAsEan128',\n\t\tvalue: function shouldEncodeAsEan128() {\n\t\t\tvar isEAN128 = this.options.ean128 || false;\n\t\t\tif (typeof isEAN128 === 'string') {\n\t\t\t\tisEAN128 = isEAN128.toLowerCase() === 'true';\n\t\t\t}\n\t\t\treturn isEAN128;\n\t\t}\n\n\t\t// Get a bar symbol by index\n\n\t}], [{\n\t\tkey: 'getBar',\n\t\tvalue: function getBar(index) {\n\t\t\treturn BARS[index] ? BARS[index].toString() : '';\n\t\t}\n\n\t\t// Correct an index by a set and shift it from the bytes array\n\n\t}, {\n\t\tkey: 'correctIndex',\n\t\tvalue: function correctIndex(bytes, set$$1) {\n\t\t\tif (set$$1 === SET_A) {\n\t\t\t\tvar charCode = bytes.shift();\n\t\t\t\treturn charCode < 32 ? charCode + 64 : charCode - 32;\n\t\t\t} else if (set$$1 === SET_B) {\n\t\t\t\treturn bytes.shift() - 32;\n\t\t\t} else {\n\t\t\t\treturn (bytes.shift() - 48) * 10 + bytes.shift() - 48;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next(bytes, pos, set$$1) {\n\t\t\tif (!bytes.length) {\n\t\t\t\treturn { result: '', checksum: 0 };\n\t\t\t}\n\n\t\t\tvar nextCode = void 0,\n\t\t\t    index = void 0;\n\n\t\t\t// Special characters\n\t\t\tif (bytes[0] >= 200) {\n\t\t\t\tindex = bytes.shift() - 105;\n\t\t\t\tvar nextSet = SWAP[index];\n\n\t\t\t\t// Swap to other set\n\t\t\t\tif (nextSet !== undefined) {\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, nextSet);\n\t\t\t\t}\n\t\t\t\t// Continue on current set but encode a special character\n\t\t\t\telse {\n\t\t\t\t\t\t// Shift\n\t\t\t\t\t\tif ((set$$1 === SET_A || set$$1 === SET_B) && index === SHIFT) {\n\t\t\t\t\t\t\t// Convert the next character so that is encoded correctly\n\t\t\t\t\t\t\tbytes[0] = set$$1 === SET_A ? bytes[0] > 95 ? bytes[0] - 96 : bytes[0] : bytes[0] < 32 ? bytes[0] + 96 : bytes[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set$$1);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t// Continue encoding\n\t\t\telse {\n\t\t\t\t\tindex = CODE128.correctIndex(bytes, set$$1);\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set$$1);\n\t\t\t\t}\n\n\t\t\t// Get the correct binary encoding and calculate the weight\n\t\t\tvar enc = CODE128.getBar(index);\n\t\t\tvar weight = index * pos;\n\n\t\t\treturn {\n\t\t\t\tresult: enc + nextCode.result,\n\t\t\t\tchecksum: weight + nextCode.checksum\n\t\t\t};\n\t\t}\n\t}]);\n\treturn CODE128;\n}(Barcode);\n\n// Match Set functions\nvar matchSetALength = function matchSetALength(string) {\n\treturn string.match(new RegExp('^' + A_CHARS + '*'))[0].length;\n};\nvar matchSetBLength = function matchSetBLength(string) {\n\treturn string.match(new RegExp('^' + B_CHARS + '*'))[0].length;\n};\nvar matchSetC = function matchSetC(string) {\n\treturn string.match(new RegExp('^' + C_CHARS + '*'))[0];\n};\n\n// CODE128A or CODE128B\nfunction autoSelectFromAB(string, isA) {\n\tvar ranges = isA ? A_CHARS : B_CHARS;\n\tvar untilC = string.match(new RegExp('^(' + ranges + '+?)(([0-9]{2}){2,})([^0-9]|$)'));\n\n\tif (untilC) {\n\t\treturn untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n\t}\n\n\tvar chars = string.match(new RegExp('^' + ranges + '+'))[0];\n\n\tif (chars.length === string.length) {\n\t\treturn string;\n\t}\n\n\treturn chars + String.fromCharCode(isA ? 205 : 206) + autoSelectFromAB(string.substring(chars.length), !isA);\n}\n\n// CODE128C\nfunction autoSelectFromC(string) {\n\tvar cMatch = matchSetC(string);\n\tvar length = cMatch.length;\n\n\tif (length === string.length) {\n\t\treturn string;\n\t}\n\n\tstring = string.substring(length);\n\n\t// Select A/B depending on the longest match\n\tvar isA = matchSetALength(string) >= matchSetBLength(string);\n\treturn cMatch + String.fromCharCode(isA ? 206 : 205) + autoSelectFromAB(string, isA);\n}\n\n// Detect Code Set (A, B or C) and format the string\nvar autoSelectModes = (function (string) {\n\tvar newString = void 0;\n\tvar cLength = matchSetC(string).length;\n\n\t// Select 128C if the string start with enough digits\n\tif (cLength >= 2) {\n\t\tnewString = C_START_CHAR + autoSelectFromC(string);\n\t} else {\n\t\t// Select A/B depending on the longest match\n\t\tvar isA = matchSetALength(string) > matchSetBLength(string);\n\t\tnewString = (isA ? A_START_CHAR : B_START_CHAR) + autoSelectFromAB(string, isA);\n\t}\n\n\treturn newString.replace(/[\\xCD\\xCE]([^])[\\xCD\\xCE]/, // Any sequence between 205 and 206 characters\n\tfunction (match, char) {\n\t\treturn String.fromCharCode(203) + char;\n\t});\n});\n\nvar CODE128AUTO = function (_CODE) {\n\tinherits(CODE128AUTO, _CODE);\n\n\tfunction CODE128AUTO(data, options) {\n\t\tclassCallCheck(this, CODE128AUTO);\n\n\t\t// ASCII value ranges 0-127, 200-211\n\t\tif (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(data)) {\n\t\t\tvar _this = possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, autoSelectModes(data), options));\n\t\t} else {\n\t\t\tvar _this = possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, data, options));\n\t\t}\n\t\treturn possibleConstructorReturn(_this);\n\t}\n\n\treturn CODE128AUTO;\n}(CODE128);\n\nvar CODE128A = function (_CODE) {\n\tinherits(CODE128A, _CODE);\n\n\tfunction CODE128A(string, options) {\n\t\tclassCallCheck(this, CODE128A);\n\t\treturn possibleConstructorReturn(this, (CODE128A.__proto__ || Object.getPrototypeOf(CODE128A)).call(this, A_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128A, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + A_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128A;\n}(CODE128);\n\nvar CODE128B = function (_CODE) {\n\tinherits(CODE128B, _CODE);\n\n\tfunction CODE128B(string, options) {\n\t\tclassCallCheck(this, CODE128B);\n\t\treturn possibleConstructorReturn(this, (CODE128B.__proto__ || Object.getPrototypeOf(CODE128B)).call(this, B_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128B, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + B_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128B;\n}(CODE128);\n\nvar CODE128C = function (_CODE) {\n\tinherits(CODE128C, _CODE);\n\n\tfunction CODE128C(string, options) {\n\t\tclassCallCheck(this, CODE128C);\n\t\treturn possibleConstructorReturn(this, (CODE128C.__proto__ || Object.getPrototypeOf(CODE128C)).call(this, C_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128C, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + C_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128C;\n}(CODE128);\n\n// Standard start end and middle bits\nvar SIDE_BIN = '101';\nvar MIDDLE_BIN = '01010';\n\nvar BINARIES = {\n\t'L': [// The L (left) type of encoding\n\t'0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n\t'G': [// The G type of encoding\n\t'0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111'],\n\t'R': [// The R (right) type of encoding\n\t'1110010', '1100110', '1101100', '1000010', '1011100', '1001110', '1010000', '1000100', '1001000', '1110100'],\n\t'O': [// The O (odd) encoding for UPC-E\n\t'0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n\t'E': [// The E (even) encoding for UPC-E\n\t'0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111']\n};\n\n// Define the EAN-2 structure\nvar EAN2_STRUCTURE = ['LL', 'LG', 'GL', 'GG'];\n\n// Define the EAN-5 structure\nvar EAN5_STRUCTURE = ['GGLLL', 'GLGLL', 'GLLGL', 'GLLLG', 'LGGLL', 'LLGGL', 'LLLGG', 'LGLGL', 'LGLLG', 'LLGLG'];\n\n// Define the EAN-13 structure\nvar EAN13_STRUCTURE = ['LLLLLL', 'LLGLGG', 'LLGGLG', 'LLGGGL', 'LGLLGG', 'LGGLLG', 'LGGGLL', 'LGLGLG', 'LGLGGL', 'LGGLGL'];\n\n// Encode data string\nvar encode = function encode(data, structure, separator) {\n\tvar encoded = data.split('').map(function (val, idx) {\n\t\treturn BINARIES[structure[idx]];\n\t}).map(function (val, idx) {\n\t\treturn val ? val[data[idx]] : '';\n\t});\n\n\tif (separator) {\n\t\tvar last = data.length - 1;\n\t\tencoded = encoded.map(function (val, idx) {\n\t\t\treturn idx < last ? val + separator : val;\n\t\t});\n\t}\n\n\treturn encoded.join('');\n};\n\n// Base class for EAN8 & EAN13\n\nvar EAN = function (_Barcode) {\n\tinherits(EAN, _Barcode);\n\n\tfunction EAN(data, options) {\n\t\tclassCallCheck(this, EAN);\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tvar _this = possibleConstructorReturn(this, (EAN.__proto__ || Object.getPrototypeOf(EAN)).call(this, data, options));\n\n\t\t_this.fontSize = !options.flat && options.fontSize > options.width * 10 ? options.width * 10 : options.fontSize;\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tcreateClass(EAN, [{\n\t\tkey: 'encode',\n\t\tvalue: function encode$$1() {\n\t\t\treturn this.options.flat ? this.encodeFlat() : this.encodeGuarded();\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText(from, to) {\n\t\t\treturn this.text.substr(from, to);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode(data, structure) {\n\t\t\treturn encode(data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText(from, to) {\n\t\t\treturn this.text.substr(from, to);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode(data, structure) {\n\t\t\treturn encode(data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'encodeGuarded',\n\t\tvalue: function encodeGuarded() {\n\t\t\tvar textOptions = { fontSize: this.fontSize };\n\t\t\tvar guardOptions = { height: this.guardHeight };\n\n\t\t\treturn [{ data: SIDE_BIN, options: guardOptions }, { data: this.leftEncode(), text: this.leftText(), options: textOptions }, { data: MIDDLE_BIN, options: guardOptions }, { data: this.rightEncode(), text: this.rightText(), options: textOptions }, { data: SIDE_BIN, options: guardOptions }];\n\t\t}\n\t}, {\n\t\tkey: 'encodeFlat',\n\t\tvalue: function encodeFlat() {\n\t\t\tvar data = [SIDE_BIN, this.leftEncode(), MIDDLE_BIN, this.rightEncode(), SIDE_BIN];\n\n\t\t\treturn {\n\t\t\t\tdata: data.join(''),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN;\n}(Barcode);\n\n// Encoding documentation:\n\n// Calculate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\nvar checksum = function checksum(number) {\n\tvar res = number.substr(0, 12).split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a * 3 : sum + a;\n\t}, 0);\n\n\treturn (10 - res % 10) % 10;\n};\n\nvar EAN13 = function (_EAN) {\n\tinherits(EAN13, _EAN);\n\n\tfunction EAN13(data, options) {\n\t\tclassCallCheck(this, EAN13);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{12}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\t// Adds a last character to the end of the barcode\n\t\tvar _this = possibleConstructorReturn(this, (EAN13.__proto__ || Object.getPrototypeOf(EAN13)).call(this, data, options));\n\n\t\t_this.lastChar = options.lastChar;\n\t\treturn _this;\n\t}\n\n\tcreateClass(EAN13, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{13}$/) !== -1 && +this.data[12] === checksum(this.data);\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText() {\n\t\t\treturn get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftText', this).call(this, 1, 6);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode() {\n\t\t\tvar data = this.data.substr(1, 6);\n\t\t\tvar structure = EAN13_STRUCTURE[this.data[0]];\n\t\t\treturn get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftEncode', this).call(this, data, structure);\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText() {\n\t\t\treturn get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightText', this).call(this, 7, 6);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode() {\n\t\t\tvar data = this.data.substr(7, 6);\n\t\t\treturn get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightEncode', this).call(this, data, 'RRRRRR');\n\t\t}\n\n\t\t// The \"standard\" way of printing EAN13 barcodes with guard bars\n\n\t}, {\n\t\tkey: 'encodeGuarded',\n\t\tvalue: function encodeGuarded() {\n\t\t\tvar data = get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'encodeGuarded', this).call(this);\n\n\t\t\t// Extend data with left digit & last character\n\t\t\tif (this.options.displayValue) {\n\t\t\t\tdata.unshift({\n\t\t\t\t\tdata: '000000000000',\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: 'left', fontSize: this.fontSize }\n\t\t\t\t});\n\n\t\t\t\tif (this.options.lastChar) {\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tdata: '00'\n\t\t\t\t\t});\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tdata: '00000',\n\t\t\t\t\t\ttext: this.options.lastChar,\n\t\t\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\t}]);\n\treturn EAN13;\n}(EAN);\n\n// Encoding documentation:\n\n// Calculate the checksum digit\nvar checksum$1 = function checksum(number) {\n\tvar res = number.substr(0, 7).split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a : sum + a * 3;\n\t}, 0);\n\n\treturn (10 - res % 10) % 10;\n};\n\nvar EAN8 = function (_EAN) {\n\tinherits(EAN8, _EAN);\n\n\tfunction EAN8(data, options) {\n\t\tclassCallCheck(this, EAN8);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{7}$/) !== -1) {\n\t\t\tdata += checksum$1(data);\n\t\t}\n\n\t\treturn possibleConstructorReturn(this, (EAN8.__proto__ || Object.getPrototypeOf(EAN8)).call(this, data, options));\n\t}\n\n\tcreateClass(EAN8, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{8}$/) !== -1 && +this.data[7] === checksum$1(this.data);\n\t\t}\n\t}, {\n\t\tkey: 'leftText',\n\t\tvalue: function leftText() {\n\t\t\treturn get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftText', this).call(this, 0, 4);\n\t\t}\n\t}, {\n\t\tkey: 'leftEncode',\n\t\tvalue: function leftEncode() {\n\t\t\tvar data = this.data.substr(0, 4);\n\t\t\treturn get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftEncode', this).call(this, data, 'LLLL');\n\t\t}\n\t}, {\n\t\tkey: 'rightText',\n\t\tvalue: function rightText() {\n\t\t\treturn get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightText', this).call(this, 4, 4);\n\t\t}\n\t}, {\n\t\tkey: 'rightEncode',\n\t\tvalue: function rightEncode() {\n\t\t\tvar data = this.data.substr(4, 4);\n\t\t\treturn get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightEncode', this).call(this, data, 'RRRR');\n\t\t}\n\t}]);\n\treturn EAN8;\n}(EAN);\n\n// Encoding documentation:\n\nvar checksum$2 = function checksum(data) {\n\tvar result = data.split('').map(function (n) {\n\t\treturn +n;\n\t}).reduce(function (sum, a, idx) {\n\t\treturn idx % 2 ? sum + a * 9 : sum + a * 3;\n\t}, 0);\n\treturn result % 10;\n};\n\nvar EAN5 = function (_Barcode) {\n\tinherits(EAN5, _Barcode);\n\n\tfunction EAN5(data, options) {\n\t\tclassCallCheck(this, EAN5);\n\t\treturn possibleConstructorReturn(this, (EAN5.__proto__ || Object.getPrototypeOf(EAN5)).call(this, data, options));\n\t}\n\n\tcreateClass(EAN5, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{5}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode$$1() {\n\t\t\tvar structure = EAN5_STRUCTURE[checksum$2(this.data)];\n\t\t\treturn {\n\t\t\t\tdata: '1011' + encode(this.data, structure, '01'),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN5;\n}(Barcode);\n\n// Encoding documentation:\n\nvar EAN2 = function (_Barcode) {\n\tinherits(EAN2, _Barcode);\n\n\tfunction EAN2(data, options) {\n\t\tclassCallCheck(this, EAN2);\n\t\treturn possibleConstructorReturn(this, (EAN2.__proto__ || Object.getPrototypeOf(EAN2)).call(this, data, options));\n\t}\n\n\tcreateClass(EAN2, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{2}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode$$1() {\n\t\t\t// Choose the structure based on the number mod 4\n\t\t\tvar structure = EAN2_STRUCTURE[parseInt(this.data) % 4];\n\t\t\treturn {\n\t\t\t\t// Start bits + Encode the two digits with 01 in between\n\t\t\t\tdata: '1011' + encode(this.data, structure, '01'),\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN2;\n}(Barcode);\n\n// Encoding documentation:\n\nvar UPC = function (_Barcode) {\n\tinherits(UPC, _Barcode);\n\n\tfunction UPC(data, options) {\n\t\tclassCallCheck(this, UPC);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{11}$/) !== -1) {\n\t\t\tdata += checksum$3(data);\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options));\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tcreateClass(UPC, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum$3(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode$$1() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"flatEncoding\",\n\t\tvalue: function flatEncoding() {\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += encode(this.data.substr(0, 6), \"LLLLLL\");\n\t\t\tresult += \"01010\";\n\t\t\tresult += encode(this.data.substr(6, 6), \"RRRRRR\");\n\t\t\tresult += \"101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"guardedEncoding\",\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar result = [];\n\n\t\t\t// Add the first digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\" + encode(this.data[0], \"L\"),\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the left side\n\t\t\tresult.push({\n\t\t\t\tdata: encode(this.data.substr(1, 5), \"LLLLL\"),\n\t\t\t\ttext: this.text.substr(1, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the middle bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"01010\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the right side\n\t\t\tresult.push({\n\t\t\t\tdata: encode(this.data.substr(6, 5), \"RRRRR\"),\n\t\t\t\ttext: this.text.substr(6, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: encode(this.data[11], \"R\") + \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the last digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(11, 1),\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn UPC;\n}(Barcode);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum$3(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 1; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 0; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\n// Encoding documentation:\n\nvar EXPANSIONS = [\"XX00000XXX\", \"XX10000XXX\", \"XX20000XXX\", \"XXX00000XX\", \"XXXX00000X\", \"XXXXX00005\", \"XXXXX00006\", \"XXXXX00007\", \"XXXXX00008\", \"XXXXX00009\"];\n\nvar PARITIES = [[\"EEEOOO\", \"OOOEEE\"], [\"EEOEOO\", \"OOEOEE\"], [\"EEOOEO\", \"OOEEOE\"], [\"EEOOOE\", \"OOEEEO\"], [\"EOEEOO\", \"OEOOEE\"], [\"EOOEEO\", \"OEEOOE\"], [\"EOOOEE\", \"OEEEOO\"], [\"EOEOEO\", \"OEOEOE\"], [\"EOEOOE\", \"OEOEEO\"], [\"EOOEOE\", \"OEEOEO\"]];\n\nvar UPCE = function (_Barcode) {\n\tinherits(UPCE, _Barcode);\n\n\tfunction UPCE(data, options) {\n\t\tclassCallCheck(this, UPCE);\n\n\t\tvar _this = possibleConstructorReturn(this, (UPCE.__proto__ || Object.getPrototypeOf(UPCE)).call(this, data, options));\n\t\t// Code may be 6 or 8 digits;\n\t\t// A 7 digit code is ambiguous as to whether the extra digit\n\t\t// is a UPC-A check or number system digit.\n\n\n\t\t_this.isValid = false;\n\t\tif (data.search(/^[0-9]{6}$/) !== -1) {\n\t\t\t_this.middleDigits = data;\n\t\t\t_this.upcA = expandToUPCA(data, \"0\");\n\t\t\t_this.text = options.text || '' + _this.upcA[0] + data + _this.upcA[_this.upcA.length - 1];\n\t\t\t_this.isValid = true;\n\t\t} else if (data.search(/^[01][0-9]{7}$/) !== -1) {\n\t\t\t_this.middleDigits = data.substring(1, data.length - 1);\n\t\t\t_this.upcA = expandToUPCA(_this.middleDigits, data[0]);\n\n\t\t\tif (_this.upcA[_this.upcA.length - 1] === data[data.length - 1]) {\n\t\t\t\t_this.isValid = true;\n\t\t\t} else {\n\t\t\t\t// checksum mismatch\n\t\t\t\treturn possibleConstructorReturn(_this);\n\t\t\t}\n\t\t} else {\n\t\t\treturn possibleConstructorReturn(_this);\n\t\t}\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tcreateClass(UPCE, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.isValid;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode$$1() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'flatEncoding',\n\t\tvalue: function flatEncoding() {\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += this.encodeMiddleDigits();\n\t\t\tresult += \"010101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'guardedEncoding',\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar result = [];\n\n\t\t\t// Add the UPC-A number system digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[0],\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the 6 UPC-E digits\n\t\t\tresult.push({\n\t\t\t\tdata: this.encodeMiddleDigits(),\n\t\t\t\ttext: this.text.substring(1, 7),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"010101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the UPC-A check digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[7],\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'encodeMiddleDigits',\n\t\tvalue: function encodeMiddleDigits() {\n\t\t\tvar numberSystem = this.upcA[0];\n\t\t\tvar checkDigit = this.upcA[this.upcA.length - 1];\n\t\t\tvar parity = PARITIES[parseInt(checkDigit)][parseInt(numberSystem)];\n\t\t\treturn encode(this.middleDigits, parity);\n\t\t}\n\t}]);\n\treturn UPCE;\n}(Barcode);\n\nfunction expandToUPCA(middleDigits, numberSystem) {\n\tvar lastUpcE = parseInt(middleDigits[middleDigits.length - 1]);\n\tvar expansion = EXPANSIONS[lastUpcE];\n\n\tvar result = \"\";\n\tvar digitIndex = 0;\n\tfor (var i = 0; i < expansion.length; i++) {\n\t\tvar c = expansion[i];\n\t\tif (c === 'X') {\n\t\t\tresult += middleDigits[digitIndex++];\n\t\t} else {\n\t\t\tresult += c;\n\t\t}\n\t}\n\n\tresult = '' + numberSystem + result;\n\treturn '' + result + checksum$3(result);\n}\n\nvar ITF14 = function (_Barcode) {\n\tinherits(ITF14, _Barcode);\n\n\tfunction ITF14(data, options) {\n\t\tclassCallCheck(this, ITF14);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{13}$/) !== -1) {\n\t\t\tdata += checksum$4(data);\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (ITF14.__proto__ || Object.getPrototypeOf(ITF14)).call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tcreateClass(ITF14, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{14}$/) !== -1 && this.data[13] == checksum$4(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar result = \"1010\";\n\n\t\t\t// Calculate all the digit pairs\n\t\t\tfor (var i = 0; i < 14; i += 2) {\n\t\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t\t}\n\n\t\t\t// Always add the same end bits\n\t\t\tresult += \"11101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Calculate the data of a number pair\n\n\t}, {\n\t\tkey: \"calculatePair\",\n\t\tvalue: function calculatePair(numberPair) {\n\t\t\tvar result = \"\";\n\n\t\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t\t// Take every second bit and add to the result\n\t\t\tfor (var i = 0; i < 5; i++) {\n\t\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn ITF14;\n}(Barcode);\n\n// Calulate the checksum digit\n\n\nfunction checksum$4(data) {\n\tvar result = 0;\n\n\tfor (var i = 0; i < 13; i++) {\n\t\tresult += parseInt(data[i]) * (3 - i % 2 * 2);\n\t}\n\n\treturn Math.ceil(result / 10) * 10 - result;\n}\n\nvar ITF = function (_Barcode) {\n\tinherits(ITF, _Barcode);\n\n\tfunction ITF(data, options) {\n\t\tclassCallCheck(this, ITF);\n\n\t\tvar _this = possibleConstructorReturn(this, (ITF.__proto__ || Object.getPrototypeOf(ITF)).call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tcreateClass(ITF, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^([0-9]{2})+$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// Always add the same start bits\n\t\t\tvar result = \"1010\";\n\n\t\t\t// Calculate all the digit pairs\n\t\t\tfor (var i = 0; i < this.data.length; i += 2) {\n\t\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t\t}\n\n\t\t\t// Always add the same end bits\n\t\t\tresult += \"11101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Calculate the data of a number pair\n\n\t}, {\n\t\tkey: \"calculatePair\",\n\t\tvalue: function calculatePair(numberPair) {\n\t\t\tvar result = \"\";\n\n\t\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t\t// Take every second bit and add to the result\n\t\t\tfor (var i = 0; i < 5; i++) {\n\t\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn ITF;\n}(Barcode);\n\n// Encoding documentation\n\nvar MSI = function (_Barcode) {\n\tinherits(MSI, _Barcode);\n\n\tfunction MSI(data, options) {\n\t\tclassCallCheck(this, MSI);\n\t\treturn possibleConstructorReturn(this, (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options));\n\t}\n\n\tcreateClass(MSI, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// Start bits\n\t\t\tvar ret = \"110\";\n\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t// Convert the character to binary (always 4 binary digits)\n\t\t\t\tvar digit = parseInt(this.data[i]);\n\t\t\t\tvar bin = digit.toString(2);\n\t\t\t\tbin = addZeroes(bin, 4 - bin.length);\n\n\t\t\t\t// Add 100 for every zero and 110 for every 1\n\t\t\t\tfor (var b = 0; b < bin.length; b++) {\n\t\t\t\t\tret += bin[b] == \"0\" ? \"100\" : \"110\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// End bits\n\t\t\tret += \"1001\";\n\n\t\t\treturn {\n\t\t\t\tdata: ret,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]+$/) !== -1;\n\t\t}\n\t}]);\n\treturn MSI;\n}(Barcode);\n\nfunction addZeroes(number, n) {\n\tfor (var i = 0; i < n; i++) {\n\t\tnumber = \"0\" + number;\n\t}\n\treturn number;\n}\n\nfunction mod10(number) {\n\tvar sum = 0;\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[i]);\n\t\tif ((i + number.length) % 2 === 0) {\n\t\t\tsum += n;\n\t\t} else {\n\t\t\tsum += n * 2 % 10 + Math.floor(n * 2 / 10);\n\t\t}\n\t}\n\treturn (10 - sum % 10) % 10;\n}\n\nfunction mod11(number) {\n\tvar sum = 0;\n\tvar weights = [2, 3, 4, 5, 6, 7];\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[number.length - 1 - i]);\n\t\tsum += weights[i % weights.length] * n;\n\t}\n\treturn (11 - sum % 11) % 11;\n}\n\nvar MSI10 = function (_MSI) {\n\tinherits(MSI10, _MSI);\n\n\tfunction MSI10(data, options) {\n\t\tclassCallCheck(this, MSI10);\n\t\treturn possibleConstructorReturn(this, (MSI10.__proto__ || Object.getPrototypeOf(MSI10)).call(this, data + mod10(data), options));\n\t}\n\n\treturn MSI10;\n}(MSI);\n\nvar MSI11 = function (_MSI) {\n\tinherits(MSI11, _MSI);\n\n\tfunction MSI11(data, options) {\n\t\tclassCallCheck(this, MSI11);\n\t\treturn possibleConstructorReturn(this, (MSI11.__proto__ || Object.getPrototypeOf(MSI11)).call(this, data + mod11(data), options));\n\t}\n\n\treturn MSI11;\n}(MSI);\n\nvar MSI1010 = function (_MSI) {\n\tinherits(MSI1010, _MSI);\n\n\tfunction MSI1010(data, options) {\n\t\tclassCallCheck(this, MSI1010);\n\n\t\tdata += mod10(data);\n\t\tdata += mod10(data);\n\t\treturn possibleConstructorReturn(this, (MSI1010.__proto__ || Object.getPrototypeOf(MSI1010)).call(this, data, options));\n\t}\n\n\treturn MSI1010;\n}(MSI);\n\nvar MSI1110 = function (_MSI) {\n\tinherits(MSI1110, _MSI);\n\n\tfunction MSI1110(data, options) {\n\t\tclassCallCheck(this, MSI1110);\n\n\t\tdata += mod11(data);\n\t\tdata += mod10(data);\n\t\treturn possibleConstructorReturn(this, (MSI1110.__proto__ || Object.getPrototypeOf(MSI1110)).call(this, data, options));\n\t}\n\n\treturn MSI1110;\n}(MSI);\n\n// Encoding documentation\n\nvar pharmacode = function (_Barcode) {\n\tinherits(pharmacode, _Barcode);\n\n\tfunction pharmacode(data, options) {\n\t\tclassCallCheck(this, pharmacode);\n\n\t\tvar _this = possibleConstructorReturn(this, (pharmacode.__proto__ || Object.getPrototypeOf(pharmacode)).call(this, data, options));\n\n\t\t_this.number = parseInt(data, 10);\n\t\treturn _this;\n\t}\n\n\tcreateClass(pharmacode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar z = this.number;\n\t\t\tvar result = \"\";\n\n\t\t\t// http://i.imgur.com/RMm4UDJ.png\n\t\t\t// (source: http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf, page: 34)\n\t\t\twhile (!isNaN(z) && z != 0) {\n\t\t\t\tif (z % 2 === 0) {\n\t\t\t\t\t// Even\n\t\t\t\t\tresult = \"11100\" + result;\n\t\t\t\t\tz = (z - 2) / 2;\n\t\t\t\t} else {\n\t\t\t\t\t// Odd\n\t\t\t\t\tresult = \"100\" + result;\n\t\t\t\t\tz = (z - 1) / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove the two last zeroes\n\t\t\tresult = result.slice(0, -2);\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.number >= 3 && this.number <= 131070;\n\t\t}\n\t}]);\n\treturn pharmacode;\n}(Barcode);\n\n// Encoding specification:\n\nvar codabar = function (_Barcode) {\n\tinherits(codabar, _Barcode);\n\n\tfunction codabar(data, options) {\n\t\tclassCallCheck(this, codabar);\n\n\t\tif (data.search(/^[0-9\\-\\$\\:\\.\\+\\/]+$/) === 0) {\n\t\t\tdata = \"A\" + data + \"A\";\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (codabar.__proto__ || Object.getPrototypeOf(codabar)).call(this, data.toUpperCase(), options));\n\n\t\t_this.text = _this.options.text || _this.text.replace(/[A-D]/g, '');\n\t\treturn _this;\n\t}\n\n\tcreateClass(codabar, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[A-D][0-9\\-\\$\\:\\.\\+\\/]+[A-D]$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar result = [];\n\t\t\tvar encodings = this.getEncodings();\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult.push(encodings[this.data.charAt(i)]);\n\t\t\t\t// for all characters except the last, append a narrow-space (\"0\")\n\t\t\t\tif (i !== this.data.length - 1) {\n\t\t\t\t\tresult.push(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: this.text,\n\t\t\t\tdata: result.join('')\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"getEncodings\",\n\t\tvalue: function getEncodings() {\n\t\t\treturn {\n\t\t\t\t\"0\": \"101010011\",\n\t\t\t\t\"1\": \"101011001\",\n\t\t\t\t\"2\": \"101001011\",\n\t\t\t\t\"3\": \"110010101\",\n\t\t\t\t\"4\": \"101101001\",\n\t\t\t\t\"5\": \"110101001\",\n\t\t\t\t\"6\": \"100101011\",\n\t\t\t\t\"7\": \"100101101\",\n\t\t\t\t\"8\": \"100110101\",\n\t\t\t\t\"9\": \"110100101\",\n\t\t\t\t\"-\": \"101001101\",\n\t\t\t\t\"$\": \"101100101\",\n\t\t\t\t\":\": \"1101011011\",\n\t\t\t\t\"/\": \"1101101011\",\n\t\t\t\t\".\": \"1101101101\",\n\t\t\t\t\"+\": \"101100110011\",\n\t\t\t\t\"A\": \"1011001001\",\n\t\t\t\t\"B\": \"1001001011\",\n\t\t\t\t\"C\": \"1010010011\",\n\t\t\t\t\"D\": \"1010011001\"\n\t\t\t};\n\t\t}\n\t}]);\n\treturn codabar;\n}(Barcode);\n\nvar GenericBarcode = function (_Barcode) {\n\tinherits(GenericBarcode, _Barcode);\n\n\tfunction GenericBarcode(data, options) {\n\t\tclassCallCheck(this, GenericBarcode);\n\t\treturn possibleConstructorReturn(this, (GenericBarcode.__proto__ || Object.getPrototypeOf(GenericBarcode)).call(this, data, options)); // Sets this.data and this.text\n\t}\n\n\t// Return the corresponding binary numbers for the data provided\n\n\n\tcreateClass(GenericBarcode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\treturn {\n\t\t\t\tdata: \"10101010101010101010101010101010101010101\",\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Resturn true/false if the string provided is valid for this encoder\n\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn true;\n\t\t}\n\t}]);\n\treturn GenericBarcode;\n}(Barcode);\n\nvar barcodes = {\n\tCODE39: CODE39,\n\tCODE128: CODE128AUTO, CODE128A: CODE128A, CODE128B: CODE128B, CODE128C: CODE128C,\n\tEAN13: EAN13, EAN8: EAN8, EAN5: EAN5, EAN2: EAN2, UPC: UPC, UPCE: UPCE,\n\tITF14: ITF14,\n\tITF: ITF,\n\tMSI: MSI, MSI10: MSI10, MSI11: MSI11, MSI1010: MSI1010, MSI1110: MSI1110,\n\tpharmacode: pharmacode,\n\tcodabar: codabar,\n\tGenericBarcode: GenericBarcode\n};\n\nvar merge = (function (old, replaceObj) {\n  return _extends({}, old, replaceObj);\n});\n\n// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n// Convert to [1-1, 1-2, 2, 3-1, 3-2]\nfunction linearizeEncodings(encodings) {\n\tvar linearEncodings = [];\n\tfunction nextLevel(encoded) {\n\t\tif (Array.isArray(encoded)) {\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tnextLevel(encoded[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tencoded.text = encoded.text || \"\";\n\t\t\tencoded.data = encoded.data || \"\";\n\t\t\tlinearEncodings.push(encoded);\n\t\t}\n\t}\n\tnextLevel(encodings);\n\n\treturn linearEncodings;\n}\n\nfunction fixOptions(options) {\n\t// Fix the margins\n\toptions.marginTop = options.marginTop || options.margin;\n\toptions.marginBottom = options.marginBottom || options.margin;\n\toptions.marginRight = options.marginRight || options.margin;\n\toptions.marginLeft = options.marginLeft || options.margin;\n\n\treturn options;\n}\n\n// Convert string to integers/booleans where it should be\nfunction optionsFromStrings(options) {\n\tvar intOptions = [\"width\", \"height\", \"textMargin\", \"fontSize\", \"margin\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\n\n\tfor (var intOption in intOptions) {\n\t\tif (intOptions.hasOwnProperty(intOption)) {\n\t\t\tintOption = intOptions[intOption];\n\t\t\tif (typeof options[intOption] === \"string\") {\n\t\t\t\toptions[intOption] = parseInt(options[intOption], 10);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options[\"displayValue\"] === \"string\") {\n\t\toptions[\"displayValue\"] = options[\"displayValue\"] != \"false\";\n\t}\n\n\treturn options;\n}\n\nvar defaults$1 = {\n\twidth: 2,\n\theight: 100,\n\tformat: \"auto\",\n\tdisplayValue: true,\n\tfontOptions: \"\",\n\tfont: \"monospace\",\n\ttext: undefined,\n\ttextAlign: \"center\",\n\ttextPosition: \"bottom\",\n\ttextMargin: 2,\n\tfontSize: 20,\n\tbackground: \"#ffffff\",\n\tlineColor: \"#000000\",\n\tmargin: 10,\n\tmarginTop: undefined,\n\tmarginBottom: undefined,\n\tmarginLeft: undefined,\n\tmarginRight: undefined,\n\tvalid: function valid() {}\n};\n\nfunction getOptionsFromElement(element) {\n\tvar options = {};\n\tfor (var property in defaults$1) {\n\t\tif (defaults$1.hasOwnProperty(property)) {\n\t\t\t// jsbarcode-*\n\t\t\tif (element.hasAttribute(\"jsbarcode-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"jsbarcode-\" + property.toLowerCase());\n\t\t\t}\n\n\t\t\t// data-*\n\t\t\tif (element.hasAttribute(\"data-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"data-\" + property.toLowerCase());\n\t\t\t}\n\t\t}\n\t}\n\n\toptions[\"value\"] = element.getAttribute(\"jsbarcode-value\") || element.getAttribute(\"data-value\");\n\n\t// Since all atributes are string they need to be converted to integers\n\toptions = optionsFromStrings(options);\n\n\treturn options;\n}\n\nfunction getEncodingHeight(encoding, options) {\n\treturn options.height + (options.displayValue && encoding.text.length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n}\n\nfunction getBarcodePadding(textWidth, barcodeWidth, options) {\n\tif (options.displayValue && barcodeWidth < textWidth) {\n\t\tif (options.textAlign == \"center\") {\n\t\t\treturn Math.floor((textWidth - barcodeWidth) / 2);\n\t\t} else if (options.textAlign == \"left\") {\n\t\t\treturn 0;\n\t\t} else if (options.textAlign == \"right\") {\n\t\t\treturn Math.floor(textWidth - barcodeWidth);\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction calculateEncodingAttributes(encodings, barcodeOptions, context) {\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tvar encoding = encodings[i];\n\t\tvar options = merge(barcodeOptions, encoding.options);\n\n\t\t// Calculate the width of the encoding\n\t\tvar textWidth;\n\t\tif (options.displayValue) {\n\t\t\ttextWidth = messureText(encoding.text, options, context);\n\t\t} else {\n\t\t\ttextWidth = 0;\n\t\t}\n\n\t\tvar barcodeWidth = encoding.data.length * options.width;\n\t\tencoding.width = Math.ceil(Math.max(textWidth, barcodeWidth));\n\n\t\tencoding.height = getEncodingHeight(encoding, options);\n\n\t\tencoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options);\n\t}\n}\n\nfunction getTotalWidthOfEncodings(encodings) {\n\tvar totalWidth = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\ttotalWidth += encodings[i].width;\n\t}\n\treturn totalWidth;\n}\n\nfunction getMaximumHeightOfEncodings(encodings) {\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tif (encodings[i].height > maxHeight) {\n\t\t\tmaxHeight = encodings[i].height;\n\t\t}\n\t}\n\treturn maxHeight;\n}\n\nfunction messureText(string, options, context) {\n\tvar ctx;\n\n\tif (context) {\n\t\tctx = context;\n\t} else if (typeof document !== \"undefined\") {\n\t\tctx = document.createElement(\"canvas\").getContext(\"2d\");\n\t} else {\n\t\t// If the text cannot be messured we will return 0.\n\t\t// This will make some barcode with big text render incorrectly\n\t\treturn 0;\n\t}\n\tctx.font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t// Calculate the width of the encoding\n\tvar size = ctx.measureText(string).width;\n\n\treturn size;\n}\n\nvar CanvasRenderer = function () {\n\tfunction CanvasRenderer(canvas, encodings, options) {\n\t\tclassCallCheck(this, CanvasRenderer);\n\n\t\tthis.canvas = canvas;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tcreateClass(CanvasRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\t// Abort if the browser does not support HTML5 canvas\n\t\t\tif (!this.canvas.getContext) {\n\t\t\t\tthrow new Error('The browser does not support canvas.');\n\t\t\t}\n\n\t\t\tthis.prepareCanvas();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encodingOptions = merge(this.options, this.encodings[i].options);\n\n\t\t\t\tthis.drawCanvasBarcode(encodingOptions, this.encodings[i]);\n\t\t\t\tthis.drawCanvasText(encodingOptions, this.encodings[i]);\n\n\t\t\t\tthis.moveCanvasDrawing(this.encodings[i]);\n\t\t\t}\n\n\t\t\tthis.restoreCanvas();\n\t\t}\n\t}, {\n\t\tkey: \"prepareCanvas\",\n\t\tvalue: function prepareCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.save();\n\n\t\t\tcalculateEncodingAttributes(this.encodings, this.options, ctx);\n\t\t\tvar totalWidth = getTotalWidthOfEncodings(this.encodings);\n\t\t\tvar maxHeight = getMaximumHeightOfEncodings(this.encodings);\n\n\t\t\tthis.canvas.width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\n\t\t\tthis.canvas.height = maxHeight;\n\n\t\t\t// Paint the canvas\n\t\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\tif (this.options.background) {\n\t\t\t\tctx.fillStyle = this.options.background;\n\t\t\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\t}\n\n\t\t\tctx.translate(this.options.marginLeft, 0);\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasBarcode\",\n\t\tvalue: function drawCanvasBarcode(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.marginTop + options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = options.marginTop;\n\t\t\t}\n\n\t\t\tctx.fillStyle = options.lineColor;\n\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tvar x = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height);\n\t\t\t\t} else if (binary[b]) {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height * binary[b]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasText\",\n\t\tvalue: function drawCanvasText(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.marginTop + options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.marginTop + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\tctx.font = font;\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t}\n\n\t\t\t\tctx.fillText(encoding.text, x, y);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"moveCanvasDrawing\",\n\t\tvalue: function moveCanvasDrawing(encoding) {\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.translate(encoding.width, 0);\n\t\t}\n\t}, {\n\t\tkey: \"restoreCanvas\",\n\t\tvalue: function restoreCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.restore();\n\t\t}\n\t}]);\n\treturn CanvasRenderer;\n}();\n\nvar svgns = \"http://www.w3.org/2000/svg\";\n\nvar SVGRenderer = function () {\n\tfunction SVGRenderer(svg, encodings, options) {\n\t\tclassCallCheck(this, SVGRenderer);\n\n\t\tthis.svg = svg;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t\tthis.document = options.xmlDocument || document;\n\t}\n\n\tcreateClass(SVGRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar currentX = this.options.marginLeft;\n\n\t\t\tthis.prepareSVG();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encoding = this.encodings[i];\n\t\t\t\tvar encodingOptions = merge(this.options, encoding.options);\n\n\t\t\t\tvar group = this.createGroup(currentX, encodingOptions.marginTop, this.svg);\n\n\t\t\t\tthis.setGroupOptions(group, encodingOptions);\n\n\t\t\t\tthis.drawSvgBarcode(group, encodingOptions, encoding);\n\t\t\t\tthis.drawSVGText(group, encodingOptions, encoding);\n\n\t\t\t\tcurrentX += encoding.width;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"prepareSVG\",\n\t\tvalue: function prepareSVG() {\n\t\t\t// Clear the SVG\n\t\t\twhile (this.svg.firstChild) {\n\t\t\t\tthis.svg.removeChild(this.svg.firstChild);\n\t\t\t}\n\n\t\t\tcalculateEncodingAttributes(this.encodings, this.options);\n\t\t\tvar totalWidth = getTotalWidthOfEncodings(this.encodings);\n\t\t\tvar maxHeight = getMaximumHeightOfEncodings(this.encodings);\n\n\t\t\tvar width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\t\t\tthis.setSvgAttributes(width, maxHeight);\n\n\t\t\tif (this.options.background) {\n\t\t\t\tthis.drawRect(0, 0, width, maxHeight, this.svg).setAttribute(\"style\", \"fill:\" + this.options.background + \";\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSvgBarcode\",\n\t\tvalue: function drawSvgBarcode(parent, options, encoding) {\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = 0;\n\t\t\t}\n\n\t\t\tvar barWidth = 0;\n\t\t\tvar x = 0;\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tx = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tbarWidth++;\n\t\t\t\t} else if (barWidth > 0) {\n\t\t\t\t\tthis.drawRect(x - options.width * barWidth, yFrom, options.width * barWidth, options.height, parent);\n\t\t\t\t\tbarWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Last draw is needed since the barcode ends with 1\n\t\t\tif (barWidth > 0) {\n\t\t\t\tthis.drawRect(x - options.width * (barWidth - 1), yFrom, options.width * barWidth, options.height, parent);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSVGText\",\n\t\tvalue: function drawSVGText(parent, options, encoding) {\n\t\t\tvar textElem = this.document.createElementNS(svgns, 'text');\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\ttextElem.setAttribute(\"style\", \"font:\" + options.fontOptions + \" \" + options.fontSize + \"px \" + options.font);\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"start\");\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"end\");\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\t\t}\n\n\t\t\t\ttextElem.setAttribute(\"x\", x);\n\t\t\t\ttextElem.setAttribute(\"y\", y);\n\n\t\t\t\ttextElem.appendChild(this.document.createTextNode(encoding.text));\n\n\t\t\t\tparent.appendChild(textElem);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"setSvgAttributes\",\n\t\tvalue: function setSvgAttributes(width, height) {\n\t\t\tvar svg = this.svg;\n\t\t\tsvg.setAttribute(\"width\", width + \"px\");\n\t\t\tsvg.setAttribute(\"height\", height + \"px\");\n\t\t\tsvg.setAttribute(\"x\", \"0px\");\n\t\t\tsvg.setAttribute(\"y\", \"0px\");\n\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n\t\t\tsvg.setAttribute(\"xmlns\", svgns);\n\t\t\tsvg.setAttribute(\"version\", \"1.1\");\n\n\t\t\tsvg.setAttribute(\"style\", \"transform: translate(0,0)\");\n\t\t}\n\t}, {\n\t\tkey: \"createGroup\",\n\t\tvalue: function createGroup(x, y, parent) {\n\t\t\tvar group = this.document.createElementNS(svgns, 'g');\n\t\t\tgroup.setAttribute(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\t\t\tparent.appendChild(group);\n\n\t\t\treturn group;\n\t\t}\n\t}, {\n\t\tkey: \"setGroupOptions\",\n\t\tvalue: function setGroupOptions(group, options) {\n\t\t\tgroup.setAttribute(\"style\", \"fill:\" + options.lineColor + \";\");\n\t\t}\n\t}, {\n\t\tkey: \"drawRect\",\n\t\tvalue: function drawRect(x, y, width, height, parent) {\n\t\t\tvar rect = this.document.createElementNS(svgns, 'rect');\n\n\t\t\trect.setAttribute(\"x\", x);\n\t\t\trect.setAttribute(\"y\", y);\n\t\t\trect.setAttribute(\"width\", width);\n\t\t\trect.setAttribute(\"height\", height);\n\n\t\t\tparent.appendChild(rect);\n\n\t\t\treturn rect;\n\t\t}\n\t}]);\n\treturn SVGRenderer;\n}();\n\nvar ObjectRenderer = function () {\n\tfunction ObjectRenderer(object, encodings, options) {\n\t\tclassCallCheck(this, ObjectRenderer);\n\n\t\tthis.object = object;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tcreateClass(ObjectRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tthis.object.encodings = this.encodings;\n\t\t}\n\t}]);\n\treturn ObjectRenderer;\n}();\n\nvar renderers = { CanvasRenderer: CanvasRenderer, SVGRenderer: SVGRenderer, ObjectRenderer: ObjectRenderer };\n\nvar InvalidInputException = function (_Error) {\n\tinherits(InvalidInputException, _Error);\n\n\tfunction InvalidInputException(symbology, input) {\n\t\tclassCallCheck(this, InvalidInputException);\n\n\t\tvar _this = possibleConstructorReturn(this, (InvalidInputException.__proto__ || Object.getPrototypeOf(InvalidInputException)).call(this));\n\n\t\t_this.name = \"InvalidInputException\";\n\n\t\t_this.symbology = symbology;\n\t\t_this.input = input;\n\n\t\t_this.message = '\"' + _this.input + '\" is not a valid input for ' + _this.symbology;\n\t\treturn _this;\n\t}\n\n\treturn InvalidInputException;\n}(Error);\n\nvar InvalidElementException = function (_Error2) {\n\tinherits(InvalidElementException, _Error2);\n\n\tfunction InvalidElementException() {\n\t\tclassCallCheck(this, InvalidElementException);\n\n\t\tvar _this2 = possibleConstructorReturn(this, (InvalidElementException.__proto__ || Object.getPrototypeOf(InvalidElementException)).call(this));\n\n\t\t_this2.name = \"InvalidElementException\";\n\t\t_this2.message = \"Not supported type to render on\";\n\t\treturn _this2;\n\t}\n\n\treturn InvalidElementException;\n}(Error);\n\nvar NoElementException = function (_Error3) {\n\tinherits(NoElementException, _Error3);\n\n\tfunction NoElementException() {\n\t\tclassCallCheck(this, NoElementException);\n\n\t\tvar _this3 = possibleConstructorReturn(this, (NoElementException.__proto__ || Object.getPrototypeOf(NoElementException)).call(this));\n\n\t\t_this3.name = \"NoElementException\";\n\t\t_this3.message = \"No element to render on.\";\n\t\treturn _this3;\n\t}\n\n\treturn NoElementException;\n}(Error);\n\n/* global HTMLImageElement */\n\n// Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\nfunction getRenderProperties(element) {\n\t// If the element is a string, query select call again\n\tif (typeof element === \"string\") {\n\t\treturn querySelectedRenderProperties(element);\n\t}\n\t// If element is array. Recursivly call with every object in the array\n\telse if (Array.isArray(element)) {\n\t\t\tvar returnArray = [];\n\t\t\tfor (var i = 0; i < element.length; i++) {\n\t\t\t\treturnArray.push(getRenderProperties(element[i]));\n\t\t\t}\n\t\t\treturn returnArray;\n\t\t}\n\t\t// If element, render on canvas and set the uri as src\n\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n\t\t\t\treturn newCanvasRenderProperties(element);\n\t\t\t}\n\t\t\t// If SVG\n\t\t\telse if (element && element.nodeName === 'svg' || typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: element,\n\t\t\t\t\t\toptions: getOptionsFromElement(element),\n\t\t\t\t\t\trenderer: renderers.SVGRenderer\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// If canvas (in browser)\n\t\t\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\toptions: getOptionsFromElement(element),\n\t\t\t\t\t\t\trenderer: renderers.CanvasRenderer\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// If canvas (in node)\n\t\t\t\t\telse if (element && element.getContext) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: renderers.CanvasRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: renderers.ObjectRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new InvalidElementException();\n\t\t\t\t\t\t}\n}\n\nfunction querySelectedRenderProperties(string) {\n\tvar selector = document.querySelectorAll(string);\n\tif (selector.length === 0) {\n\t\treturn undefined;\n\t} else {\n\t\tvar returnArray = [];\n\t\tfor (var i = 0; i < selector.length; i++) {\n\t\t\treturnArray.push(getRenderProperties(selector[i]));\n\t\t}\n\t\treturn returnArray;\n\t}\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n\tvar canvas = document.createElement('canvas');\n\treturn {\n\t\telement: canvas,\n\t\toptions: getOptionsFromElement(imgElement),\n\t\trenderer: renderers.CanvasRenderer,\n\t\tafterRender: function afterRender() {\n\t\t\timgElement.setAttribute(\"src\", canvas.toDataURL());\n\t\t}\n\t};\n}\n\n/*eslint no-console: 0 */\n\nvar ErrorHandler = function () {\n\tfunction ErrorHandler(api) {\n\t\tclassCallCheck(this, ErrorHandler);\n\n\t\tthis.api = api;\n\t}\n\n\tcreateClass(ErrorHandler, [{\n\t\tkey: \"handleCatch\",\n\t\tvalue: function handleCatch(e) {\n\t\t\t// If babel supported extending of Error in a correct way instanceof would be used here\n\t\t\tif (e.name === \"InvalidInputException\") {\n\t\t\t\tif (this.api._options.valid !== this.api._defaults.valid) {\n\t\t\t\t\tthis.api._options.valid(false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e.message;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tthis.api.render = function () {};\n\t\t}\n\t}, {\n\t\tkey: \"wrapBarcodeCall\",\n\t\tvalue: function wrapBarcodeCall(func) {\n\t\t\ttry {\n\t\t\t\tvar result = func.apply(undefined, arguments);\n\t\t\t\tthis.api._options.valid(true);\n\t\t\t\treturn result;\n\t\t\t} catch (e) {\n\t\t\t\tthis.handleCatch(e);\n\n\t\t\t\treturn this.api;\n\t\t\t}\n\t\t}\n\t}]);\n\treturn ErrorHandler;\n}();\n\n// Import all the barcodes\n\n// The protype of the object returned from the JsBarcode() call\nvar API = function API() {};\n\n// The first call of the library API\n// Will return an object with all barcodes calls and the data that is used\n// by the renderers\nvar JsBarcode = function JsBarcode(element, text, options) {\n\tvar api = new API();\n\n\tif (typeof element === \"undefined\") {\n\t\tthrow Error(\"No element to render on was provided.\");\n\t}\n\n\t// Variables that will be pased through the API calls\n\tapi._renderProperties = getRenderProperties(element);\n\tapi._encodings = [];\n\tapi._options = defaults$1;\n\tapi._errorHandler = new ErrorHandler(api);\n\n\t// If text is set, use the simple syntax (render the barcode directly)\n\tif (typeof text !== \"undefined\") {\n\t\toptions = options || {};\n\n\t\tif (!options.format) {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tapi.options(options)[options.format](text, options).render();\n\t}\n\n\treturn api;\n};\n\n// To make tests work TODO: remove\nJsBarcode.getModule = function (name) {\n\treturn barcodes[name];\n};\n\n// Register all barcodes\nfor (var name in barcodes) {\n\tif (barcodes.hasOwnProperty(name)) {\n\t\t// Security check if the propery is a prototype property\n\t\tregisterBarcode(barcodes, name);\n\t}\n}\nfunction registerBarcode(barcodes$$1, name) {\n\tAPI.prototype[name] = API.prototype[name.toUpperCase()] = API.prototype[name.toLowerCase()] = function (text, options) {\n\t\tvar api = this;\n\t\treturn api._errorHandler.wrapBarcodeCall(function () {\n\t\t\t// Ensure text is options.text\n\t\t\toptions.text = typeof options.text === 'undefined' ? undefined : '' + options.text;\n\n\t\t\tvar newOptions = merge(api._options, options);\n\t\t\tnewOptions = optionsFromStrings(newOptions);\n\t\t\tvar Encoder = barcodes$$1[name];\n\t\t\tvar encoded = encode$1(text, Encoder, newOptions);\n\t\t\tapi._encodings.push(encoded);\n\n\t\t\treturn api;\n\t\t});\n\t};\n}\n\n// encode() handles the Encoder call and builds the binary string to be rendered\nfunction encode$1(text, Encoder, options) {\n\t// Ensure that text is a string\n\ttext = \"\" + text;\n\n\tvar encoder = new Encoder(text, options);\n\n\t// If the input is not valid for the encoder, throw error.\n\t// If the valid callback option is set, call it instead of throwing error\n\tif (!encoder.valid()) {\n\t\tthrow new InvalidInputException(encoder.constructor.name, text);\n\t}\n\n\t// Make a request for the binary data (and other infromation) that should be rendered\n\tvar encoded = encoder.encode();\n\n\t// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n\t// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\tencoded = linearizeEncodings(encoded);\n\n\t// Merge\n\tfor (var i = 0; i < encoded.length; i++) {\n\t\tencoded[i].options = merge(options, encoded[i].options);\n\t}\n\n\treturn encoded;\n}\n\nfunction autoSelectBarcode() {\n\t// If CODE128 exists. Use it\n\tif (barcodes[\"CODE128\"]) {\n\t\treturn \"CODE128\";\n\t}\n\n\t// Else, take the first (probably only) barcode\n\treturn Object.keys(barcodes)[0];\n}\n\n// Sets global encoder options\n// Added to the api by the JsBarcode function\nAPI.prototype.options = function (options) {\n\tthis._options = merge(this._options, options);\n\treturn this;\n};\n\n// Will create a blank space (usually in between barcodes)\nAPI.prototype.blank = function (size) {\n\tvar zeroes = new Array(size + 1).join(\"0\");\n\tthis._encodings.push({ data: zeroes });\n\treturn this;\n};\n\n// Initialize JsBarcode on all HTML elements defined.\nAPI.prototype.init = function () {\n\t// Should do nothing if no elements where found\n\tif (!this._renderProperties) {\n\t\treturn;\n\t}\n\n\t// Make sure renderProperies is an array\n\tif (!Array.isArray(this._renderProperties)) {\n\t\tthis._renderProperties = [this._renderProperties];\n\t}\n\n\tvar renderProperty;\n\tfor (var i in this._renderProperties) {\n\t\trenderProperty = this._renderProperties[i];\n\t\tvar options = merge(this._options, renderProperty.options);\n\n\t\tif (options.format == \"auto\") {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tthis._errorHandler.wrapBarcodeCall(function () {\n\t\t\tvar text = options.value;\n\t\t\tvar Encoder = barcodes[options.format.toUpperCase()];\n\t\t\tvar encoded = encode$1(text, Encoder, options);\n\n\t\t\trender(renderProperty, encoded, options);\n\t\t});\n\t}\n};\n\n// The render API call. Calls the real render function.\nAPI.prototype.render = function () {\n\tif (!this._renderProperties) {\n\t\tthrow new NoElementException();\n\t}\n\n\tif (Array.isArray(this._renderProperties)) {\n\t\tfor (var i = 0; i < this._renderProperties.length; i++) {\n\t\t\trender(this._renderProperties[i], this._encodings, this._options);\n\t\t}\n\t} else {\n\t\trender(this._renderProperties, this._encodings, this._options);\n\t}\n\n\treturn this;\n};\n\nAPI.prototype._defaults = defaults$1;\n\n// Prepares the encodings and calls the renderer\nfunction render(renderProperties, encodings, options) {\n\tencodings = linearizeEncodings(encodings);\n\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tencodings[i].options = merge(options, encodings[i].options);\n\t\tfixOptions(encodings[i].options);\n\t}\n\n\tfixOptions(options);\n\n\tvar Renderer = renderProperties.renderer;\n\tvar renderer = new Renderer(renderProperties.element, encodings, options);\n\trenderer.render();\n\n\tif (renderProperties.afterRender) {\n\t\trenderProperties.afterRender();\n\t}\n}\n\n// Export to browser\nif (typeof window !== \"undefined\") {\n\twindow.JsBarcode = JsBarcode;\n}\n\n// Export to jQuery\n/*global jQuery */\nif (typeof jQuery !== 'undefined') {\n\tjQuery.fn.JsBarcode = function (content, options) {\n\t\tvar elementArray = [];\n\t\tjQuery(this).each(function () {\n\t\t\telementArray.push(this);\n\t\t});\n\t\treturn JsBarcode(elementArray, content, options);\n\t};\n}\n\nvar index = {\n  name: 'barcode',\n\n  props: {\n    /**\n     * The options for the bar code generator.\n     * {@link https://github.com/lindell/JsBarcode#options}\n     */\n    options: Object,\n\n    /**\n     * The tag of the component root element.\n     */\n    tag: {\n      type: String,\n      default: 'canvas'\n    },\n\n    /**\n     * The value of the bar code.\n     */\n    value: {\n      type: null,\n      default: ''\n    }\n  },\n\n  render: function render(createElement) {\n    return createElement(this.tag, this.$slots.default);\n  },\n\n\n  watch: {\n    /**\n     * Update bar code when value change.\n     */\n    value: function value() {\n      this.generate();\n    },\n\n\n    /**\n     * Update bar code when options change.\n     */\n    options: function options() {\n      this.generate();\n    }\n  },\n\n  methods: {\n    /**\n     * Generate bar code.\n     */\n    generate: function generate() {\n      if (this.$el) {\n        JsBarcode(this.$el, String(this.value), this.options);\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.generate();\n  }\n};\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@xkeshi/vue-barcode/dist/vue-barcode.esm.js\n// module id = j1bm\n// module chunks = 2 15","<template>\r\n  <div class=\"product\">\r\n    <div v-if=\"print_data!=null\">\r\n      <div class=\"barcodebox\">\r\n        <barcode :value=\"print_data.inputsID\" :options=\"barcode_option\" tag=\"svg\"></barcode>\r\n        <!-- <p>{{print_data.ProductID}}</p> -->\r\n      </div>\r\n      <!-- <p>产品编号:{{print_data.ProductID}}</p> -->\r\n      <p>\r\n        <span>型号:{{print_data.PartNumber}}</span>\r\n        <span>品牌:{{print_data.Manufacturer}}</span>\r\n      </p>\r\n      <p>\r\n        <span>包装:{{print_data.Packing}}</span>\r\n        <span>封装:{{print_data.PackageCase}}</span>\r\n      </p>\r\n      <p>\r\n        <span>产地:{{print_data.origin}}</span>\r\n        <span>数量:{{print_data.Quantity}}</span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//import { PageEvent } from \"@/js/browser.js\"\r\nimport VueBarcode from \"@xkeshi/vue-barcode\"; //导入条形码插件\r\nlet Base64 = require(\"js-base64\").Base64;\r\nvar ps = window.location.href.split(\"?\");\r\nif (ps.length > 1) {\r\n  var obj = JSON.parse(Base64.decode(ps[1]));\r\n} else {\r\n  var obj = null;\r\n  obj={\r\n    ID:111,\r\n    inputsID:869769579657597,//产品ID\r\n    Catalog:111111,//品名\r\n    PartNumber:1111111,//型号\r\n    Quantity:200,//数量\r\n    Manufacturer:11111,//品牌\r\n    Packing:11111,//包装\r\n    PackageCase:1111111,//封装\r\n    origin:111111,//产地\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: \"productlabel\",\r\n  components: {\r\n    barcode: VueBarcode\r\n  },\r\n  data() {\r\n    return {\r\n      print_data: obj,\r\n      barcode_option: {\r\n        displayValue: false, //是否默认显示条形码数据\r\n        //textPosition  :'top', //条形码数据显示的位置\r\n        background: \"#fff\", //条形码背景颜色\r\n        valid: function(valid) {},\r\n        width: \"1.7px\", //单个条形码的宽度\r\n        height: \"40px\",\r\n        fontSize: \"16px\", //字体大小\r\n        format: \"CODE128\", //选择要使用的条形码类型\r\n        margin: 2\r\n      }\r\n    };\r\n  },\r\n  //computed:{\r\n  //    print_data(){\r\n\r\n  //        return pobj;\r\n\r\n  //    }\r\n  //},\r\n  methods: {\r\n    getdata() {\r\n      console.log(this.$route.params);\r\n      // PageEvent(\"{\\\"Name\\\":\\\"printingpostback\\\"}\");\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    console.log(this.print_data);\r\n    //this.print_data = Obj;\r\n    // alert(this.print_data.name)\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.product {\r\n  width: 8cm;\r\n  height: 6cm;\r\n  overflow: hidden;\r\n  /* border: 1px solid #ddd; */\r\n}\r\n.boxprint {\r\n  margin: 0;\r\n  padding: 10px;\r\n}\r\np {\r\n  font-size: 16px;\r\n  /* line-height: 32px; */\r\n  padding: 10px;\r\n  display: flex;\r\n  /* display: flex;\r\n     justify-content: space-between; */\r\n}\r\np span {\r\n  text-align: left;\r\n  width: 50%;\r\n}\r\n.barcodebox {\r\n  padding: 10px;\r\n  padding-bottom: 0px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/Pages/PrintPage/productlabel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"product\"},[(_vm.print_data!=null)?_c('div',[_c('div',{staticClass:\"barcodebox\"},[_c('barcode',{attrs:{\"value\":_vm.print_data.inputsID,\"options\":_vm.barcode_option,\"tag\":\"svg\"}})],1),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"型号:\"+_vm._s(_vm.print_data.PartNumber))]),_vm._v(\" \"),_c('span',[_vm._v(\"品牌:\"+_vm._s(_vm.print_data.Manufacturer))])]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"包装:\"+_vm._s(_vm.print_data.Packing))]),_vm._v(\" \"),_c('span',[_vm._v(\"封装:\"+_vm._s(_vm.print_data.PackageCase))])]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"产地:\"+_vm._s(_vm.print_data.origin))]),_vm._v(\" \"),_c('span',[_vm._v(\"数量:\"+_vm._s(_vm.print_data.Quantity))])])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1f5f54d0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Pages/PrintPage/productlabel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1f5f54d0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./productlabel.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productlabel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productlabel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1f5f54d0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./productlabel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1f5f54d0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Pages/PrintPage/productlabel.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}